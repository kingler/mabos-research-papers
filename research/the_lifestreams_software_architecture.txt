AbstractThe Lifestreams Soft w are Arc hitectureEric Thomas F reemanY ale Univ ersit yMa y /1/9/9/7/#5CT ypical/" computer users struggle to organize and /#0Cnd their o wn electronic do cu/-men ts/, manage their sc hedules and corresp ondence/, and /#0Clter an ev er increasing delugeof information/. The pro cess is made w orse as users are forced to com bine the disparatefeatures of man y applications to ac hiev e these tasks/. These problems suggest thatour curren t soft w are systems are ill/-equipp ed to handle the demands of the t ypicalcomputer user/. Researc h has sho wn that common desktop en vironmen ts /#28suc ha st h eMacin tosh /#5Cdesktop/"/#29 are often badly /#0Ctted to users/' needs/.In an attempt to do b etter w eh a v e reduced /#5Cinformation managemen t/" to a fewsimple and unifying concepts and created /#5CLifestreams/./" Lifestreams is a soft w are ar/-c hitecture based on a simple data structure/, a time/-or der e d str e am of do cumen ts/, thatcan b e manipulated with a small n um b e ro fp o w erful op erators to lo cate/, organize/,summarize and monitor information/.In this dissertation w e /#0Crst pro vide motiv ation for Lifestreams/. W e then presen tthe mo del and discuss the dev elopmen t of our researc h protot yp e/. Our protot yp e re/-alizes man y of the system/'s de/#0Cning features and has allo w ed us to exp erimen t withthe mo del/'s k ey ideas with actual users /#28of di/#0Bering lev els of computer exp erience/#29o v er the course of its dev elopmen t/. Results from its use suggest that Lifestreams isan e/#0Bectiv e soft w are arc hitecture for managing common computer tasks/; its simpleorganizational storage system /#28the stream/#29 com bined with a small n um be r o f po w/-erful op erators pro vides a uni/#0Ced framew ork that subsumes man y separate desktopapplications to accomplish and handle the most common p ersonal comm unication/, re/-minding/, and storage and retriev al tasks/. In addition/, Lifestreams suggests v aluablenew capabilities for electronic systems/.
The Lifestreams Soft w are Arc hitectureA DissertationPresen ted to the F acult y of the Graduate Sc ho olofY ale Univ ersit yin Candidacy for the Degree ofDo ctor of Philosoph yb yEric Thomas F reemanMa y /1/9/9/7
Cop yrigh t
c/#0D /1/9/9/7 b y Eric Thomas F reemanAll Rights Reser ved
iiiAc kno wledgemen tsThis dissertation could not ha v e b een completed without the supp ort and con tri/-butions of m y colleagues and friends/. First and foremost I o w e thanks to m y thesiscommittee/: m y advisor/, Da vid Gelern ter/, pro vided inspiration/, endless ideas and en/-couragemen t throughout m y graduate career/. Nic k Carriero acted as a co/-advisor andthrough tec hnical discussions and his careful reading of the dissertation greatly im/-pro v ed the qualit y of the /#0Cnal w ork/. Ben Bederson/, m y external reader/, pro videdoutside encouragemen t and criticism and w as particularly helpful with his guidance inthe ev aluation asp ects of this dissertation/. Last/, Martin Sc h ultz w as supp ortiv e andin terested in the pro ject throughout/.I also o w e sincere gratitude to Scott F ertig who acted as a men tor and made man ycon tributions to the w ork /#28as w ell as b eing a go o d friend/#29/. My wife/, Elisab eth/, not onlypro vided lo v e and supp ort/, but also endured using the early Lifestreams systems andw as alw a ys the /#0Crst to read rough dissertation drafts/. Da vid Kaminsky in terested mein coming to Y ale and acted as a men tor early on/. Susanne Hupfer and Rob Bjornsonw ere friends and colleagues and /#0Clled man yd a ys with in teresting discussion/.
Con ten ts/1 In tro duction /1/1/./1 Problems with Curren t Soft w are Systems /: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /2/1/./1/./1 Finding and Filing /: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /2/1/./1/./2 Reminding /:/:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /4/1/./1/./3 Arc hiving /: /:/:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /5/1/./1/./4 Summarizing Information /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /6/1/./1/./5 Incompatible and Disparate Applications /:/:/: /:/: /:/:/: /:/:/: /:/: /6/1/./2 T ypical Users and Common T asks /:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /7/1/./3 New Directions for Soft w are Systems /: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /8/1/./4 Outline /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/0/2 The Mo del /1/2/2/./1 The Concept /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/2/2/./1/./1 What is a lifestream/? /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/4/2/./1/./2 Do cumen t Creation and Storage /:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/4/2/./1/./3 /#5COn Demand/" Organization /:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/6/2/./1/./4 Ov erviews /: /:/:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/6/2/./1/./5 Agen ts /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/6/2/./1/./6 Chronology as a Storage Mo del /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/7/2/./2 The F ormal Mo del /:/:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/7/2/./2/./1 The Linda Co ordination Language /: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/8/2/./2/./2 Do cumen ts and A ttributes /:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/9/2/./2/./3 Streams and Substreams /: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /2/1/2/./2/./4 Lifestreams Re/#0Cnemen t /: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /2/6/2/./2/./5 Constructing a /#5CUser In terface/" /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /3/2/2/./3 Summary /:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /3/9/3 The Implemen tation /4/0/3/./1 General Arc hitecture /:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /4/0/3/./2 Serv er Infrastructure /:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /4/1/3/./2/./1 Do cumen t Collection Subsystem /:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /4/1iv
CONTENTS v/3/./2/./2 Indexing Subsystem /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /4/2/3/./2/./3 Substreams Storage Subsystem /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /4/7/3/./2/./4 Putting it All T ogether /: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /4/9/3/./2/./5 Realit y Chec k /:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /5/3/3/./3 Clien t Infrastructure /:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /5/4/3/./3/./1 Our Do cumen t Mo del /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /5/4/3/./3/./2 Comm unication /: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /5/5/3/./4 Em b edded Computation /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /5/7/3/./4/./1 The Agen t Language /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /5/7/3/./4/./2 Implemen ting Em b edded Pro cesses /: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /5/9/3/./5 The /#5CSummarize/" Arc hitecture /: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /6/0/3/./6 Summary /:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /6/2/4 The In terface /6/3/4/./1 In terface Design /:/: /:/:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /6/3/4/./2 The X Windo ws In terface /: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /6/4/4/./2/./1 Na vigating through Time /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /6/6/4/./2/./2 Basic Op erations /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /6/7/4/./2/./3 Color and Animation /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /6/9/4/./2/./4 F uture Time /:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /7/0/4/./2/./5 Op ening/, Viewing and Editing Do cumen ts /:/:/: /:/: /:/:/: /:/:/: /:/: /7/2/4/./3 The Command/-line In terface /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /8/1/4/./3/./1 Viewing/#2FEditing Do cumen ts /: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /8/1/4/./3/./2 Substreams /:/:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /8/1/4/./3/./3 Time /: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /8/3/4/./3/./4 New/, Clone and T ransfer /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /8/3/4/./3/./5 Summaries and P ersonal Agen ts /:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /8/3/4/./4 The PD A Clien t /: /:/:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /8/6/4/./4/./1 Comm unication /: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /8/7/4/./4/./2 The Newton In terface /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /8/7/4/./5 Summary /:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /9/2/5 Common T asks /9/4/5/./1 Finding and Filing Practices /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /9/4/5/./2 Electronic Mail /:/: /:/:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /9/6/5/./3 Con tact Managemen t /:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /9/7/5/./4 Managing Bo okmarks /: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/0/1/5/./5 Calendar Applications /: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/0/2/5/./6 P ersonal Finances /:/:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/0/7/5/./7 Summary /:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/0/9
CONTENTS vi/6 Ev aluation /1/1/1/6/./1 Scop e and Metho dology /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/1/1/6/./2 Sub jects /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/1/3/6/./3 Pro cedure /:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/1/4/6/./3/./1 In tro duction and T raining /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/1/4/6/./3/./2 Ev aluation /:/:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/1/4/6/./4 Ov erall Sub jectiv e Reaction /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/1/5/6/./4/./1 Reaction to c hronology /: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/1/6/6/./4/./2 Understanding the /#5Cmetaphor/" /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/1/7/6/./4/./3 Ho w do es it compare to other systems/#2Fmetaphors/? /:/:/: /:/:/: /:/: /1/1/7/6/./5 Learning /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/1/8/6/./6 In terface La y out and Design /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/1/9/6/./7 System Capabilities and P erformance /: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/2/0/6/./7/./1 Ov erview of System Use /: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/2/0/6/./7/./2 Use of Substreams /: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/2/2/6/./7/./3 Substream Accuracy /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/2/4/6/./7/./4 Substream Size /: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/2/5/6/./7/./5 Substream Resp onse Time /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/2/5/6/./7/./6 Substream Managemen tS t yles /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/2/6/6/./8 Summary /:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/2/7/7 Information Managemen t Revisited /1/2/9/7/./1 Information /#5CT yp es/" /:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/2/9/7/./2 Malone Revisited /: /:/:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/3/1/7/./2/./1 Finding /:/: /:/:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/3/1/7/./2/./2 Reminding /:/:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/3/2/7/./3 T ask Analysis /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/3/2/7/./3/./1 Whittak er and Sidner /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/3/2/7/./3/./2 Eric kson /:/: /:/:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/3/4/7/./3/./3 T asks from the Kno wledge Na vigator /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/3/6/7/./4 Lansdale Revisited /:/:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/3/6/7/./5 Summary /:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/3/9/8 Related W ork /1/4/0/8/./1 Information Retriev al Systems /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/4/0/8/./1/./1 W AIS /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/4/0/8/./1/./2 T ap estry /:/: /:/:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/4/1/8/./1/./3 MIT Seman tic File System /:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/4/1/8/./1/./4 Glimpse /:/: /:/:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/4/2/8/./1/./5 Apple Find /:/:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/4/3/8/./2 Database Managemen t Systems /: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/4/3/8/./3 P ersonal Information Managers /: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/4/3
CONTENTS vii/8/./3/./1 T oDo List Managers /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/4/4/8/./3/./2 Con tact Managers and Time T rac k ers /:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/4/4/8/./3/./3 The Newton /:/:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/4/4/8/./3/./4 Guy F rida y /:/:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/4/5/8/./4 Sc hedulers and Meeting Mak ers /: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/4/6/8/./5 Corp orate Do cumen t Systems /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/4/6/8/./5/./1 Do cumen t Systems/: Lotus Notes /:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/4/6/8/./5/./2 W ork/#0Do w Systems /: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/4/7/8/./6 New P aradigms /:/: /:/:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/4/7/8/./6/./1 Memoirs /:/: /:/:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/4/7/8/./6/./2 Dynamic Queries /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/4/8/8/./6/./3 LifeLines /: /:/:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/4/8/8/./7 Summary /| Surv eying the Landscap e /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/4/9/9 Conclusions /1/5/3A Lifestreams Primitiv es /1/6/1B User Questionnaire /1/6/4
List of Figures/2/./1 The Basic Lifestreams Op erations/. /:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/5/2/./2 The de/#0Cnition of extract/. /: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /2/0/2/./3 The de/#0Cnition of replace/. /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /2/1/2/./4 The de/#0Cnition of freeze/. /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /2/1/2/./5 Lifestreams T uple Space/. /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /2/3/2/./6 The de/#0Cnition of app end/. /: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /2/4/2/./7 The de/#0Cnition of read/. /: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /2/4/2/./8 The de/#0Cnition of write/. /: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /2/5/2/./9 The de/#0Cnition of /#0Clter/. /: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /2/6/2/./1/0 The de/#0Cnition of retriev e/. /: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /2/7/2/./1/1 The de/#0Cnition of incremen tal /#0Clter/. /:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /2/7/2/./1/2 The de/#0Cnition of incremen tal retriev e/. /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /2/8/2/./1/3 The /#28time/-a w are/#29 de/#0Cnition of app end/. /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /3/0/2/./1/4 The /#28time/-a w are/#29 de/#0Cnition of write/. /: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /3/1/2/./1/5 The de/#0Cnition of add agen t/. /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /3/1/2/./1/6 The de/#0Cnition of app end with agen ts/. /: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /3/2/2/./1/7 Expression of Lifestreams user in terface in terms of the primitiv es/. /:/: /: /3/4/2/./1/8 Expression of Lifestreams user in terface in terms of the primitiv es /#28con t/#29/. /3/5/2/./1/9 The simple summary /. /:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /3/6/2/./2/0 The de/#0Cnition of apply /. /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /3/6/2/./2/1 The de/#0Cnition of substream cop y /. /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /3/7/2/./2/2 The de/#0Cnition of a receipt agen t/. /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /3/8/2/./2/3 The de/#0Cnition of a subscription agen t/. /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /3/9/3/./1 The Do cumen t Storage Subsystem/. /:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /4/2/3/./2 The Indexing Subsystem/. /: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /4/3/3/./3 In searc h/: computing a substream/. /:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /4/6/3/./4 The Substream Data Structure/. /: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /4/8/3/./5 In matc h/: computing a do cumen ts mem b ership in a substream/. /:/:/: /:/: /4/9/3/./6 De/#0Cnition of the Serv er Read and W rite Routines/. /:/: /:/: /:/:/: /:/:/: /:/: /5/0/3/./7 De/#0Cnition of the Serv er App end Routine/. /: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /5/1/3/./8 De/#0Cnition of the Serv er Filter Routine/. /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /5/2viii
LIST OF FIGURES ix/3/./9 De/#0Cnition of the Serv er Retriev e Routine/. /: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /5/3/3/./1/0 An example MIME/-enco de Lifestreams do cumen t/. /:/: /:/: /:/:/: /:/:/: /:/: /5/8/3/./1/1 Em b edded Pro cess Arc hitecture/. /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /6/0/4/./1 The X Windo ws In terface/. /: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /6/5/4/./2 Bro wsing Bac k in Time/. /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /6/6/4/./3 Bro wsing Bac k in Time with a Substream/. /: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /6/8/4/./4 T ransferring a Do cumen t/. /: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /6/9/4/./5 Using Find/. /: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /6/9/4/./6 Selecting a Substream/. /: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /7/0/4/./7 Use of Animation within X Windo ws In terface/. /: /:/:/: /:/: /:/:/: /:/:/: /:/: /7/1/4/./8 Sp ecifying Time/. /: /:/:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /7/2/4/./9 The Calendar Dialog Bo x/. /: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /7/3/4/./1/0 F uture Do cumen ts on Stream/. /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /7/4/4/./1/1 An Example Mailcap File/. /: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /7/5/4/./1/2 The X Windo ws In terface Handles MIME/-t yp ed Do cumen ts/. /: /:/:/: /:/: /7/7/4/./1/3 Editing Do cumen tA ttributes/. /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /7/8/4/./1/4 Cho osing a Mime T yp e/. /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /7/9/4/./1/5 Editing an Agen t/. /: /:/:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /7/9/4/./1/6 The Command/-line In terface/. /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /8/2/4/./1/7 Substreams in the CLI /. /: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /8/4/4/./1/8 Time in the CLI /. /: /:/:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /8/5/4/./1/9 Reminder p ersonal agen t in the command/-line clien t/. /: /:/: /:/:/: /:/:/: /:/: /8/6/4/./2/0 The Newton In terface/. /: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /8/8/4/./2/1 Do cumen ts in a stream are displa y ed as an o v erview/. /: /:/: /:/:/: /:/:/: /:/: /8/9/4/./2/2 Substreams are displa y ed in place of folders/. /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /9/0/4/./2/3 The clo c k glance has b een replaced b y a date/#2Ftime editor/. /:/:/: /:/:/: /:/: /9/1/4/./2/4 The T ransfer dialog/. /:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /9/2/4/./2/5 The Find dialog/. /: /:/:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /9/2/5/./1 A Summary of Email/. /: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /9/8/5/./2 A Businesscard Do cumen t/. /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /9/9/5/./3 A Phonecall Do cumen t/. /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /9/9/5/./4 The Phone Call P ersonal Agen t/. /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/0/0/5/./5 A Summary of Phone Calls/. /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/0/1/5/./6 A Summary of Bo okmarks/. /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/0/3/5/./7 Da y at a Glance Summarizer/. /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/0/4/5/./8 W eek at a Glance Summarizer/. /: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/0/5/5/./9 The X Windo ws Calendar In terface/. /: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/0/6/5/./1/0 Meeting Mak er Requesting Recipien ts/. /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/0/7/5/./1/1 Meeting Mak er Sc heduler/. /: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/0/7/5/./1/2 Meeting Mak er Do cumen t Agen t/. /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/0/8
LIST OF FIGURES x/5/./1/3 A Summary of Sto c kP erformance/. /:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/0/9/6/./1 Size of substreams returned from FINDs/. /: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/2/3/6/./2 Av erage time to compute and displa y a substream/. /:/: /:/: /:/:/: /:/:/: /:/: /1/2/6/7/./1 Dialog from Apple/'s /#5CKno wledge Na vigator/"/. /:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/3/7A/./1 The complete stream primitiv es/. /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/6/1A/./2 The complete stream primitiv es /#28con t/#29/. /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/6/2A/./3 The complete stream primitiv es /#28con t/#29/. /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/6/3
List of T ables/2/./1 The do cumen t attributes along with their t yp e and function/. /: /:/:/: /:/: /2/0/3/./1 Comparison of W AIS and Lifestreams indexing/. /:/:/: /:/: /:/:/: /:/:/: /:/: /5/4/6/./1 Sub jects/' o v erall reactions to Lifestreams/. /: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/1/5/6/./2 Sub jects/' reactions to learning in Lifestreams/. /: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/1/8/6/./3 Sub jects/' reactions to screen la y out and design/. /:/:/: /:/: /:/:/: /:/:/: /:/: /1/1/9/6/./4 Sub jects/' reactions to system capabilities/. /: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/2/1/6/./5 Use of Lifestreams op erations/. /: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/2/2/6/./6 Query use o v er testing p erio d/. /: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/2/3/6/./7 Size of Substreams/. /:/: /:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/2/6/6/./8 Lo cating information through p ersisten t substreams/. /:/: /:/:/: /:/:/: /:/: /1/2/7/8/./1 Comparison features o v er landscap e of systems/. /: /:/:/: /:/: /:/:/: /:/:/: /:/: /1/5/2xi
Chapter /1In tro ductionDespite rapid adv ances in man y areas of computer science /#28user in terfaces/, comm u/-nications tec hnologies/, ob ject/-orien ted systems/#29 o v er the last sev eral decades/, com/-puters are widely ac kno wledged to b e harder to use than they could or should b e/#5BKap/9/1 /, MH/9/2 /, Hil/9/5 /, Cor/9/6 /#5D/. T ypical computer users struggle to organize and /#0Cndtheir electronic do cumen ts/, manage their sc hedules and corresp ondence and /#0Clter anev er increasing deluge of data from the In ternet/. Matters get w orse when users areforced to dra w on the disparate features of man y applications to ac hiev e these tasks/.These problems suggest that our curren t /#5Cop erating system in terfaces/" are ill/-equipp ed to handle the demands of the /#5Ct ypical/" computer user/. By op erating systemin terface w e are referring to the predominan t computer in terfaces and systems usedb yt ypical computer users/; namely /, those based on the desktop metaphor/. Through/-out the dissertation w e will refer to these systems generically as /#5Ccurren t soft w aresystems/,/" /#5Cdesktop systems/" and /#5Cop erating system in terfaces/./" W e will also de/#0Cne/#5Ct ypical users/" later in this c hapter/.The Lifestreams soft w are arc hitecture is an attempt to do b etter than curren t sys/-tems/. Lifestreams is a new soft w are arc hitecture for managing p ersonal electronic in/-formation based on a simple data structure /| a time/-or der e d str e am of do cumen ts /|com bined with a small n um be r o f po w erful op erators for lo cating/, organizing/, summa/-rizing and monitoring information/. Our protot yp e implemen tation /#28whic hw e presen tas a /#5Cpro of of concept/"/#29 realizes man y of the system/'s de/#0Cning features and has allo w edus to exp erimen t with the mo del/'s k ey ideas/.This dissertation giv es motiv ation for Lifestreams/, presen ts a formal Lifestreamsmo del/, and rep orts on the dev elopmen t of /#28and our practical exp eriences with/#29 theresearc h protot yp e/. Our results sho w that Lifestreams is an e/#0Bectiv e soft w are arc hitec/-ture for managing common computer tasks/; its simple organizational storage system/#28the stream/#29 and p o w erful op erators pro vide a uni/#0Ced framew ork that subsumes man yseparate desktop applications to accomplish and handle the most common p ersonal/1
Chapter /1/. In tro duction /2comm unication/, reminding/, and storage and retriev al tasks/.
/1/1/./1 Problems with Curren t Soft w are SystemsT od a y computer users predominan tly use soft w are systems based on the /#5Cdesktopmetaphor/,/" whic h attempts to simplify common /#0Cle op erations b y presen ting themin the familiar language of the pap er/-based w orld /#28pap er do cumen ts as /#0Cles/, folders asdirectories/, the trashcan for deletion/#29/. While this metaphor has b een successful to ap oin t /#28gran ted one usually has to explain to a new user ho w the computer desktop islik e a real desktop/#29/, as w e shall see/, the pap er/-based mo del is a rather p o or basis formanaging electronic information/.Previous w ork has considered the w a ys p eople use information and electronic sys/-tems and iden ti/#0Ced a n um b er of problems /#5BMal/8/3 /, Lan/8/8b/, Car/8/2 /, Co o/9/5 /, DL/8/3 /, JD/8/3 /,Col/8/2 /, MSW/9/2 /, Nel/9/0/, BN/9/5/, Eri/9/6/, WS/9/6 /,P em/9/6 /,K a y/9/0 /#5D/. Users ha v e trouble /#0Cling/,/#0Cnding and organizing information/; incorp orating /#5Creminding/" in to their electronic en/-vironmen t/; arc hiving and making use of arc hiv ed information/; obtaining /#5Co v erviews/"or summaries of information/; managing man y separate/, incompatible applications anddata formats needed to ac hiev e common/, ev eryda y tasks/. These problems p oin t outwhere desktop systems fall short of user/'s needs and suggest directions for impro vingthem/. Let/'s examine eac h p oin t/./1/./1/./1 Finding and FilingLansdale /#5BLan/8/8b /#5D has studied the pro cesses of recall/, recognition and categorization inan attempt to prop ose soft w are framew orks that ha v e a basis in psyc hological theory /.He describ es information categorization as the problem that lies in /#5Cdeciding whic hcategorizations to use/, and in remem b ering later exactly what lab el w as assigned toa categorization/./" Muc h of Lansdale/'s w ork builds on T om Malone/'s seminal study ofthe w a y p eople use information/: How Do Pe ople Or ganize Their Desks/? Implic ationsfor the Design of O/#0Ec e Information Systems /#5BMal/8/3 /#5D/. In his study Malone aimed toobtain a /#5Csystematic understanding of ho w p eople actually use their desks and ho w theyorganize their p ersonal information en vironmen ts/" in an attempt to impro v e electronicsystems/. Malone/'s w ork suggested that categorizing information is p erhaps the mostdi/#0Ecult information managemen t task p eople encoun ter/.What mak es categorizing information so hard and wh y is information so hard to/#0Cnd after it is categorized/? Lansdale found that /#5Cquite simply /, information do es notfall in to neat categorizations that can b e implemen ted on a system b y using simplelab els/./" The w ork of Dumais and Landauer /#5BDL/8/3 /#5D iden ti/#0Ced t w o sp eci/#0Cc reasons/: /#28/1/#29information falls in to o v erlapping and fuzzy categories and /#28/2/#29 it is imp ossible for usersto generate categories that remain unam biguous o v er time/. Both of these reasons are/1The Thesis /.
Chapter /1/. In tro duction /3problematic for electronic /#0Cle and folder systems b ecause they cannot represen t thetrue relationships b et w een the information they store/. Hierarc hies organize do cumen tsin to strict relationships/, but most do cumen ts are related to other do cumen ts in /#0Duid/,m ulti/-dimensional w a ys/. The follo wing examples are suggestiv e /#28from /#5BLan/8/8b/#5D/#29/:/#5CMy b oss w an ts to see all the pro ject reviews I ha v e carried out o v er thelast six mon ths/. The trouble is/, they are /#0Cled under eac h of the individualpro jects/. It will tak e me ages to w ork through and dig them all out/./"/#5CY es I remem b er that pap er/. It came at the same time as the pro ductaudit/. I can/'t remem b er what happ ened to it/, though/./"Whittak er and Sidner /#5BWS/9/6 /#5D giv e more examples from user in terviews/:/#5CI don/'t kno w where to put it/. And/./. b y making the wrong decision/, I couldreally forget ab out it/./"/#5CI wish I view ed creating a category as a ligh t w eigh t activit y /. And for somereason I don/'t /././. it seems lik e/, y ou kno w the more of them I create/, theharder it is to /#0Cnd an y of them that are there/./"/#5Can y piece of information longer than /#0Cv e lines has at least sev eral axesalong whic hy ou migh tw an t to lo ok it up and it really dep ends on ho wy ou/'re coming at it and what y ou/'re thinking ab out at the time/. /#5BFiling/#5Disn/'t reliable/./"These examples suggest that users often /#0Cle information in a manner that is unhelpfulwhen it needs to b e retriev ed/. The problem o ccurs b ecause/, o v er time/, the w a yw euse information c hanges/. W e often w an t to retriev e information in a con text that isdi/#0Beren t from the one in whic hi tw as created/.Retrieving information within a traditional /#0Cle system amoun ts to remem b ering thecon text of use at the time of creation
/2/. This approac h scales badly /. Once the n um be rof /#0Cles within a p ersonal /#0Cle space approac hes on the order of a few h undred/, the usercan no longer remem b er /#0Cle lo cations and is forced to use a /#5C/#0Cnd/" application /#28if oneexists/#29 to searc h for information/. Whittak er and Sidner pro vide another go o d examplefrom a user in terview/:/#5CSo what happ ened w as that size of c h unks asso ciated with the categoriesgot large/. So no w one k ey strok ew ould get me to a h undred things/. So Ireally w as no b etter o/#0B /#28/#0Cling information/#29/./"/2This approac h has b een called /#5Clo cation/-based /#0Cnding/" since it in v olv es remem b ering the /#5Cplace/"in the desktop /#0Cle system where the information w as stored /#5BBN/9/5/#5D/.
Chapter /1/. In tro duction /4The di/#0Ecult y of main taining information o v er time has bad consequences/: users of/-ten thro wa w a y old information as a coping strategy or/, as Lansdale observ ed/, sp endlittle time /#0Cling information b ecause there is no immediate pa y/-bac k/. In either case/,information is either /#5Clost/" b ecause it w as thro wn a w a y or di/#0Ecult to /#0Cnd in an unor/-ganized clutter/. On the whole there is a /#5Cnegativ e feedbac k lo op/:/" users ha v e di/#0Ecult ycategorizing information whic h/, in turn/, defeats retriev al/. Lik ewise/, electronic desktopsystems do not aid in retriev al so users are not lik ely to main tain discipli ned /#0Cling/.Users are also forced to categorize information in another subtle w a y/: b y meansof /#0Clenames/. Lansdale/'s w ork has sho wn that names are an ine/#0Bectiv e means of cat/-egorizing information/. While names act as a mnemonic device/, o v er time their v aluedeca ys/. Carroll /#5BCar/8/2 /#5D has studied the use of naming and found that within a smallp erio d of time/, p eople/'s use of /#0Cle names results in inconsisten t patterns whic h lead toretriev al di/#0Eculties/.The di/#0Ecult y of categorizing information and the lac k of rew ards for doing sot ypically leads users /#28as Malone disco v ered/#29 not to /#0Cle information at all
/3in order too v ercome /#5Cthe di/#0Ecult y of making a decision b et w een a n um b er of evils/, and a v oidthe consequences of ha ving made it/./"
/4Lansdale also p oin ts out /#28based on empiricalevidence/#29 that /#5Ch umans are not go o d at categorizing information/" and that requiringusers to do so is a /#5C/#0Da w ed psyc hological pro cess/./" Whittak er and Sidner found that/#5Cfolders ma y b e of little use for retriev al/./" Cole /#5BCol/8/2/#5D found that /#5Cusers prefer tosp end as little time as p ossible actually /#0Cling/" and concludes that /#5Cthe less time sp en t/#0Cling the b etter/./"/1/./1/./2 RemindingElectronic /#5Creminding/" is the use of the computer to aid a user in remem b ering tasksor ev en ts/. In the real w orld w e u s eav ariet y of artifacts /| calendars/, P ostIt
TMnotes/,da y planners /| help us remem b er/. In /1/9/8/3 Malone p oin ted out the imp ortance ofreminding in our pap er/-based o/#0Ece systems and suggests their inclusion in computer/-based systems /#5BMal/8/3 /#5D/. Y et desktop systems still pro vide little supp ort for reminding/;while a n um b er of time managemen t/, sc heduling/, and /#5Cto do/" list applications ha v ecome to mark et/, they don/'t represen t a general solution to pro vide users with thisbasic capabilit y /.In more recen tw ork/, Barreau and Nardi /#5BBN/9/5 /#5D observ ed that desktop computerusers often use a /#0Cle/'s lo cation on the desktop as a critical reminding function/. F orinstance/, at the end of the da y a Macin tosh user ma y lea v e /#0Cles on his desktop as areminder of w ork to b e done the next morning/. Other users lea v e electronic mail mes/-sages in their in/-b o xes /#5BWS/9/6 /#5D/. Lansdale found this b eha vior /#5Clargely idiosyncratic/"/; w e/#0Cnd the use of lo cation/-based storage unsatisfying and an easily undermined metho d of/3Rather than categorizing and /#0Cling the information they often prefer to place all /#0Cles in to a /#5Ctop/-lev el/" directory /, main tain them within mail applicatio ns or to delete them/./4This is Lansdale/'s paraphrase /#5BLan/8/8b /#5D of Malone/.
Chapter /1/. In tro duction /5creating reminders/. The desktop metaphor has no seman tic notion of reminding/; suc huse b y users amoun ts to a coping strategy for lac ko fa n ything b etter/. Lo cation/-basedreminding is an ad ho c user con v en tion and its problems are ob vious/: there is no w a yt oinsure that a reminder actually reminds y ou/. Whittak er and Sidner also suggest thatthe need for reminding is another deterren t to /#0Cling/, as /#5C/#0Cling information means it isless a v ailable to r emind users ab out that topic/" /#28their emphasis/#29/. Malone suggested in/1/9/8/3 that electronic systems should help in reminding and impro v eo v er ph ysical/-w orldsystems/: /#5CF ailing to supp ort /#5Breminding/#5D ma y seriously impair the usefulness of elec/-tronic o/#0Ece systems and explicitly facilitating it ma y pro vide an imp ortan t adv an tagefor automated o/#0Ece systems o v er their non/-automated predecessors/./"/1/./1/./3 Arc hivingOld information is gener al ly less v aluable than new/, but regularly situations o ccur inwhic h old information is essen tial/. Ev ery one can recall times when he needed infor/-mation he threw a w a y a mon th ago/. Unfortunately curren t soft w are systems do notmak e it easy to arc hiv e p ersonal information/. They giv e the users no go o d means ofstoring old information and no con v enien t metho d for retrieving information/. As aresult/, users are left to in v en t their o wn sc hemes or use third/-part y applications/, b othof whic h still fall short with resp ect to retriev al/. Whittak er and Sidner /#5BWS/9/6 /#5D quoteone user describing his di/#0Eculties/:/#5CI/'m reluctan t to arc hiv e junk /././. I kno w that the consequence of arc hivingjunk is to mak e it that m uc h harder to /#0Cnd go o d stu/#0B /././.The problem is that it is di/#0Ecult to decide what the /#5Cgo o d stu/#0B/" is a priori /. Theunderlying problem with curren t soft w are systems is that lo cation/-based storage andarc hiving are con/#0Dicting goals/. Lo cation/-based storage assumes a small informationcollection /#28basically what the user can remem b er/#29 and do es not scale to large collec/-tions of information/, as Jones and Dumais /#5BJD/8/3 /#5D found in their study of the spatialmetaphor/. They concluded that a /#5Cstrictly spatially/-based information retriev al systemwill b e particularly vulnerable to increases in the size of database/./" In fact/, they foundthat sub ject recall o v er time w as esp ecially p o or and indicated that the lo cation/-basedapproac h /#5Cis simply more vulnerable to general factors of deca y asso ciated with thepassage of time/" than other sym b olic means of retriev al/. Lo cation/-based storage isparticularly ill/-suited to retriev al b ecause /#28as w eh a v e discussed/#29 information is notalw a ys needed in the same w a yi t w as originally /.As w eh a v e seen/, in the end most users remo v e old information rather than b e forcedto deal with the implications of storing it or in v en ting arc hiving sc hemes /#5BEri/9/1 /, BN/9/5/#5D/.In a study of the practices of sev eral groups of /#5Cinformation users/,/" Eric kson foundthat users often /#5Cdiscarded all but the most imp ortan t information/; space constrain ts/,as w ell as the di/#0Ecult y of deciding whic h /#0Cle folder w as most appropriate/, deterred
Chapter /1/. In tro duction /6them from sa ving more/./" He also found that there w as a general feeling among usersthat the /#5Cfew er items sa v ed/, the easier it w as to relo cate them/./" This is unfortunateb ecause users thro wa w a y information that ma y pro v e useful /#28or ev en critical /#5BCo o/9/5 /#5D/#29b ecause of /#0Da ws in soft w are tec hnology /| when memory capacit y of storage devicesis gro wing/. W eiser /#5BW ei/9/1/#5D has suggested that o v er the next decade the gro wth ofstorage tec hnology will mak e /#5Cdeleting old /#0Cles virtually unnecessary/" and should allo w/#5Cradically di/#0Beren t strategies of information managemen t/./"/1/./1/./4 Summarizing InformationSummarizing is a vital information pro cessing task/. Summaries function as an ab/-breviated form of a do cumen t or collection of do cumen ts and reduce the amoun to finformation a user m ust pro cess /#5BKM/9/6 /#5D/. They allo w users to /#5Cgain access to andcon trol the /#0Do o d of information/" and in the end /#5Csummaries sa v e time/" /#5BHut/9/5 /#5D/.Summarizing information is nothing new /| y et to da y there are few electronic sys/-tems that supp ort automatic summarization/. Curren t desktop systems pro vide no gen/-eral purp ose supp ort for summaries/; they lea v e the job to sp ecial purp ose applications/.W e b eliev e this lac k of supp ort has o ccurred/, in part/, b ecause of the curren t/, narro wapplication/-cen tric view of desktop computing/|w ork has fo cused on dev eloping to olswithin applications rather than on /#5Cglobally/" impro ving users access to information ata systems lev el/.Summaries are a v ailable to users through sp ecial purp ose pro ducts suc ha sI n tuit/'sQuic k en/, whic h allo ws the creation of o v erviews for /#0Cnancial information/. But usersneed summaries for more routine purp oses to o/. P em b erton/, as the c hairman of arecen tA CM w orkshop on the future of electronic mail /#5BP em/9/6 /#5D/, cited the need forsummarization in electronic mail systems/.In order to manage large collections of p ersonal information/, users need quic k andsimple metho ds of distilling them in to summaries or o v erviews/. Summarizing is im/-p ortan t in man y con texts and is cen tral to all comm unication /#5BHut/9/5 /#5D/. Building a/#5C/#0Dexible summarizing capabilit yi n to our systems for these purp oses will enhance theirp erformance/" /#5BOv e/9/5 /#5D/./1/./1/./5 Incompatible and Disparate ApplicationsComputer users m ust deal with a far greater quan tit y and range of electronic ob jectsin their w ork and p ersonal liv es than ev er b efore/. Doing so requires an ev er increasingn um b er of separate applications/, ev en for the most common computer tasks/. Nelson/#5BNel/9/0/#5D has called this task of making com binations of programs /#0Ct together /#5Chop elesslyarcane/" and sa ys that it results in users /#5Cha ving to o man y separate/, unrelated thingsto kno w and understand/./"Consider a user who manages his email/, sc hedule/, con tact list and daily writings ona computer/. He ma yh a v e to use four separate applications as w ell as the underlying
Chapter /1/. In tro duction /7desktop /#0Cle and folder system/. Pro ducts suc h as Claris W orks and Microsoft O/#0Eceaim to impro v e the situation/, ho w ev er/, on closer examination/, these pro ducts do littleto unify the user/'s electronic en vironmen t b ecause they simply bundle /#28t ypically four/#29applications in to a common pac k age/. While the user can usually cut and paste b e/-t w een applications/, these pac k ages still rely on the underlying /#0Cle system and do notpro vide true in tegration/. Systems suc h as the Newton are a step in the righ t direction/,pro viding a common store and th us impro v ed /#5Ccompatibilit y/" among applications/, y etthe residen t applications are still remnan ts of the desktop systems /#28see Chapter /8/#29/./1/./2 T ypical Users and Comm on T asksBefore suggesting new directions for soft w are systems it is imp ortan t to kno w for whomthese systems are in tended and what kinds of tasks these users undertak e/. Th us far w eha v e lo osely used the terms /#5Ct ypical users/" and /#5Ccommon tasks/./" What do they mean/?Ed Hilp ert/, in a recen t IBM P ersonal Systems article /#5BHil/9/5/#5D/, has suggested that b e/-fore computers can b ecome a /#5Cubiquitous consumer/-lev el pro duct/,/" they m ust b e made/#5Ceasier for the broad range of consumers/" who use them/. According to Hilp ert/, thisgroup includes a large group of users who ha v e no computer training/, who are p ossiblyafraid of computers and who are not inclined to read man uals or attend training classes/.F or the purp oses of this dissertation/, w e de/#0Cne /#5Ct ypical/" or /#5Ccommon/" computer usersthe same w a y as Hilp ert/; in general/, w e b eliev e this class of users includes p eople whoha v e little or no tec hnical computer training and y et use a computer regularly /.T od a ythis segmen t represen ts the ma jorit y of computer users/, y et soft w are systems fail topro vide them e/#0Bectiv e information en vironmen ts/. Lifestreams is designed to addressthe needs of these users/. W e also b eliev e the utilit y of Lifestreams extends furtherthan this particular class of users/. Our long/-term goal is to impro v e /#5Ccomputing/" andinformation managemen t for nearly all users/, trained or un trained/.By /#5Ccommon tasks/" w e are referring to the ev eryda y activities of the t ypical user/.T o amass a broad collection of common tasks w e turned to three sources/: previous w orkin the information managemen t comm unit y that has classi/#0Ced tasks and informationusage patterns /#5BWS/9/6 /, Eri/9/6/, Eri/9/1/, Mal/8/3 /, Lan/8/8b/, Col/8/2/, BN/9/5/, P em/9/6 /, Hal /#5D/, relatedsystems that target the same class of users /#28man y are describ ed in Chapter /8/#29/, and ourexp erience and that of our colleagues/. While this latter source of tasks is somewhatbiased giv en that w e are adv anced computer users /#28not represen tativ e of the norm/#29/,w e broaden the scop e of study b y including it/. Let us brie/#0Dy lo ok at these three/.First/, the information managemen t comm unit y has analyzed and pro duced classi/-/#0Ccations for the tasks that t ypical users p erform and the t yp es of information userspro cess/. These classi/#0Ccations are helpful b ecause they condense /#5Cinformation manage/-men t/" in to a few primary functions and /#5Cinformation/" in to a few primary t yp es/. W ewill co v er these classi/#0Ccations in depth in Chapter /7/. Ho w ev er/, to summarize brie/#0Dy/:Users b y and large p erform the follo wing tasks/: /#5Cw orking tasks/,/" whic h include /#0Cling
Chapter /1/. In tro duction /8and /#0Cnding/, task managemen t /#28suc h as to do lists/#29 and reminding/; /#5Cp ersonal arc hiving/,/"whic h includes organization and categorization of long/-term information/; and /#5Ccom/-m unication/,/" whic h includes in teraction b et w een users o v er space and time and ma yb e/#5Cone/-shot/" or an ongoing con v ersational thread/. In addition/, users sp end a great dealof time pro cessing do cumen ts /| creating new do cumen ts that are stored in a w orkarea/, creating do cumen ts based on existing do cumen ts/, or creating do cumen ts basedon m ultiple sources of information /#28as in Lansdale/'s m ulti/-pro ject example/#29/.Second/, w e tak ei n to accoun t the tasks pro vided b y related systems/. F or instance/,Microsoft/'s /#5CBob/" w as created with the in ten tion of making computing /#5Ceasy/" /#5BAza/9/5 /#5Dand includes sev en common functions/|a letter writer/, a calendar/, an email application/,an alarm clo c k/, and address b o ok/, a c hec kb o ok and a game/.
/5Moreo v er/, w e incorp oratethe man y tasks pro vided b y systems co v ered in Chapter /8 suc h as p ersonal to do/-listmanagers/, con tact managers/, p ersonal digital assistan ts /#28suc h as the Newton/#29/, hotlistmanagers/, and calendar applications/. W e also include the tasks suggested b y protot yp essuc h as Apple/'s /#5CKno wledge Na vigator/,/" whic h presen ts a soft w are protot yp e thatsupp orts a /#5Cnatural st yle/" of computing/.Last/, w e include tasks from our lo cal computing en vironmen t/. W e p erform man yof the same tasks as t ypical users/. W e will p oin t out some of the di/#0Berences b et w eenour use and that of no vice users and presen t anecdotes from our lo cal system use inChapter /5/.No w that w eh a v e a basis for the users and tasks w e wish to supp ort w e pro ceed tosuggest new directions for soft w are systems/./1/./3 New Directions for Soft w are SystemsMan y of the problems highligh ted in Section /1/./1 p oin t to areas where desktop systemsdon/'t matc h the /#0Dexibilit y of pap er/-based systems /#28naming/#29/. Others suggest areaswhere our soft w are systems can do b etter /#28reminding/#29/. In either case/, w e need newsystems that impro v e the user/'s information handling metho ds/. Our prop osal is tolea v e the pap er/-based mo dels b ehind and in v en t new ones/. W e are not the /#0Crst tosuggest this approac h/. Early on/, Cole /#5BCol/8/2 /#5D suggested that /#5Cw em ust not simplyautomate existing o/#0Ece practices /| in some cases this will p erp etuate an existingmess/./" Lansdale has made a more in triguing argumen t /| although the ob jectiv es oft w o systems ma y b e iden tical /#28e/.g/./, information storage and retriev al/#29/, the strategiesused within one tec hnology aren/'t necessarily appropriate for a di/#0Beren t tec hnology /.Jones and Dumais applied this philosoph y to desktop systems suggesting that theelectronic systems of tomorro w should not b e /#5Cb ound b y the same constrain ts w e facein retrieving the tangible ob jects in our w orld/./" In an y case/, these studies in p ersonalinformation managemen t pro vide insigh ti n to the w a ys p eople manage their electronic/5Since games ha v e little to do with p ersonal information managemen tw e ignore its inclusion inBob/.
Chapter /1/. In tro duction /9en vironmen ts and information/, and clues as to what p eople are go o d and bad at/.Our goal with Lifestreams is to reduce the time users sp end managing informationwhile increasing their abilit y to /#0Cnd and mak e use of their do cumen ts and electronicev en ts/. W e hop e to create a soft w are en vironmen t that more naturally supp orts thew a ys p eople w ork with electronic information and simpli/#0Ces their electronic in terac/-tions/.Based on the results of the studies w eh a v e visited in this c hapter/, w eh a v e concludedthat the follo wing are essen tial/:/#0F Stor age should b et r ansp ar ent/./#5CNaming/" a /#0Cle as it is created and c ho osing a lo cation are unnecessary o v erhead/.When someone starts writing on a piece of pap er he do esn/'t ha v et og i v e it a nameand c ho ose a folder to store it in/. Filenames are sometimes p oin tless and o v ertime often b ecome useless for retriev al purp oses/; names should only b e requiredwhen a user explicitly w an ts one/. Lik ewise/, storage lo cations /#28in the sense offolders/#29 are e/#0Bectiv e only as long as the user remem b ers them/; the details ofstorage should b e handled automatically b y the system/.T ransparen t storage also applies to the net w ork/; data should b e accessible ev/-erywhere/, regardless of the viewing device/. Users should b e able to access theirp ersonal information from an ya v ailable platform/|from a Unix mac hine at w ork/,a Mac or PC at home/, a PD A on the road/, ev en a set/-top b o x via cable/./#0F Conventional dir e ctories ar e inade quate as an or ganizing devic e/, informationshould b eo r ganize d on demand/.Common /#0Cle systems are to o faithful to the pap er/-based w orld/; pap er can/'t b ein more than one place/, but electronic do cumen ts can /#28or can b eha v e that w a y/#29/.Desktop systems force users to store new information in /#0Cxed categories /#28namely /,directories/#29/. But information should b e organized as needed/, not once and for allwhen created/. Directories should b e created on demand /, and do cumen ts shouldb elong to as man y of them as seems reasonable/, or to none/. Directories shouldb e created based on the /#5Cseman tic/" information in the do cumen t/. This seman ticinformation pro vides a ric her space for users to explore than is pro vided b y the/2D /#28or /3D/#29 space in most desktop systems/, esp ecially o v er time /#5BDum/9/6 /#5D/./#0F Computers should make /#5Cr eminding/" c onvenient and e/#0Be ctive/.Studies con/#0Crms that reminding is a critical function of computer/-based systems/,y et desktop systems supply little or no supp ort for it/. Users are forced eitherto use lo cation on their graphical desktops as reminding cues or to use add/-on
applications suc h as calendar managers/. W eh a v e argued that the former is amere coping strategy /#28for lac k of a b etter metho d/#29/, while the latter could clearlyb e impro v ed if soft w are systems pro vided built/-in natural supp ort for reminding/.
Chapter /1/. In tro duction /1/0/#0F /#5CA r chiving/" should b e automatic/.Often/, users thro w out old data rather than undertaking the task of arc hiving it/.In the pro cess they thro w out p oten tially v aluable information/. Soft w are systemsshould /#5Cautomate/" arc hiving/, mo ving old data out of the foreground as it ages/,y et k eeping it readily a v ailable for retriev al/./#0F Softwar e systems should b e able to summarize a set of do cuments/, yielding ac oncise overview quickly/.With the rapid gro wth in online electronic data w em ust all deal with a greateramoun t of information ev ery da y /,y et p eople can/'t read or pro cess informationan y faster than they could b efore /#5BHut/9/5 /#5D/. The /#5Cfull text rev olution
/6/" implies a/#5Cpressing need for automatic summarizing/" /#5BJon/#5D/, y et con v en tional user systemsdo not supp ort a general mec hanism for summaries/. It is vital that soft w are sys/-tems allo w users to summarize or compress a large group of related do cumen tsin to a concise o v erview quic kly/; soft w are systems should pro vide a general pur/-p ose facilit y for summarizing do cumen ts/, giving users b etter con trol o v er theirinformation collections/./#0F Softwar e systems should simplify the user/'s c omputer inter actions/, not c omplic atethem/.P erforming common computer tasks requires to o man y separate applications andformat translations/. Systems should pro vide an in tegrated en vironmen t for p er/-sonal data that simpli/#0Ces and subsumes man y applications and the need forexplicit imp orting/, exp orting or format translation of data/.W e add one additional c haracteristic based on previous w ork in computer science/#5Csystems/" researc h/:/#0F Softwar e systems should pr ovide the c ap ability for users to customize and cr e atetheir own extensions/.While there is a long tradition of pro viding extensible systems in the computerscience comm unit y /#28UNIX to ols/, emacs/, etc/./#29/, h uman/-computer in teraction re/-searc hers suc h as Eric kson /#5BEri/9/6 /#5Dh a v e also discussed the need for /#0Dexible en vi/-ronmen ts that can b e customized and extended to meet the user/'s needs/./1/./4 OutlineThe remainder of this dissertation pro ceeds as follo ws/: in Chapter /2 w e pro vide a for/-mal description of Lifestreams/, whic h acts as a foundation for the dev elopmen t of our/6The phrase /#5Cfull text rev olution/" is used b y the text summarization comm unit y to describ e thetrend from main taining only abstracts and k eyw ords /#28t ypically in information retriev al systems/#29 ofdo cumen ts online to storing the en tire text of the do cumen t/.
Chapter /1/. In tro duction /1/1researc h protot yp e/. The researc h protot yp e is describ ed o v er t w oc hapters/: Chapter /3describ es the Lifestreams infrastructure and serv er/, including a discussion of the prag/-matic issues in v olv ed in adapting our mo del for /#5Creal/-w orld/" use/; Chapter /4 describ esthree user in terfaces to the Lifestreams system including an X Windo ws based UNIXw orkstation clien t/, a command/-line in terface and an in terface that runs on a Newtonp ersonal digital assistan t/. Chapter /5 presen ts Lifestreams in con text/, describing ho wcommon tasks are accomplished and then demonstrating ho w Lifestreams is easily ex/-tended to supp ort new b eha viors/. W e then presen t the ev aluation of our protot yp e inChapter /6/. In Chapter /7 w e revisit the w ork of Malone/, Lansdale and others from theinformation managemen t comm unit y and examine Lifestreams in the con text of theirw ork/. Chapter /8 surv eys the landscap e of related systems and applications/, compar/-ing and con trasting eac h with Lifestreams/. Finally c hapter /9 presen ts conclusions andsuggests directions for future w ork/.
Chapter /2The Mo delIn this section w e presen t the Lifestreams mo del/. W e b egin with a conceptual descrip/-tion and then describ e the mo del informally in ligh t of the op erational c haracteristicsthat w e determined necessary for suc h systems in Chapter /1/. W e then pro vide a formaldescription of Lifestreams/. The reader ma y skip the formal section without loss ofcon tin uit y /, but it is recommended for readers who care ab out implemen tation details/./2/./1 The ConceptLifestreams ha v e their b eginnings in the /#5Cc hronical streams/" of Gelern ter in /#5BGel/9/1 /#5Dand w ere /#0Crst describ ed as a structure for managing p ersonal electronic informationin /#5BGel/9/4/#5D/. This dissertation is the /#0Crst e/#0Bort to de/#0Cne Lifestreams in concrete termsand to demonstrate its usefulness via a w orking protot yp e/. In the spirit of the initialwritings ab out Lifestreams/, let us /#0Crst examine Lifestreams as it migh t lo ok in /1/9/9/9/#28adapted from /#5BCFF G/9/6 /#5D/#29/:Here/'s y our compute/-en vironmen t circa /1/9/9/9/: ev ery do cumen ty ou/'v ee v ercreated or receiv ed stretc hes b efore y ou in a time/-ordered stream/, reac hingfrom righ tn o w bac kw ards to the date y ou w ere b orn/. Y ou can sit bac kand w atc h new do cumen ts arriv e/: they/'re plunk ed do wn at the head of thestream/. Y ou bro wse the stream b y running y our cursor do wn it/|touc hado cumen t in the displa y and it p ops out far enough for y ou to glance at itscon ten ts/. Y ou can go bac k in time/, or go to the future and see what y ou/'resupp osed to b e doing next w eek or next decade/.Ev ery c h unk of information /#28ev ery do cumen t/, email message/, applicationtranscript/, rolo dex card/, app oin tmen t/-calendar item/./././#29 is stored in a singletime/-ordered stream/. When y ou tune in/, y ou see a stream of do cumen tsreceding in to the distance/; farther a w a y in imaginary space means fartherbac k in time/. T o create a new do cumen t/, y ou can press the /#5Cnew/" button/1/2
Chapter /2/. The Mo del /1/3and get an empt yb o x ready to /#0Cll/, or clone an old do cumen t and get a newcop y to alter as y ou c ho ose/. Y ou don/'t need to name do cumen ts /#28althoughy ou can/#29/; do cumen ts are lo cated b y attribute and c hronology /. When y ouw an t to create a new do cumen t/, y ou sp end zero time deciding where to putit and what to name it/.Y ou migh t b e in danger of b eing o v erwhelmed b y all the do cumen ts ony our screen/|but y ou use /#5Csubstreaming/" b y pressing /#5C/#0Cnd/" and describingthe do cumen ts y ou w an t/, and ev erything else /#28temp orarily/#29 disapp ears/.A substream p ersists un til y ou kill it/. A newly/-arriving do cumen t getsdump ed in the main stream and also app ears on ev ery substream where it/#0Cts/.When y ou press the /#5Csquish/" button y ou get a summary of a substream/.The t yp e of summary dep ends on the t yp e of information in the substream/|textual for plain do cumen ts/, graphs or pictures or animations for the appro/-priate more/-sp ecialized t yp es/. The /#5Csquish/" button automatically in v ok esan appropriate squish for this substream /#28or o/#0Bers y o uac hoice of reason/-able squishers/#29/. In some cases/, highly complex and sophisticated squisherswill b e desirable/. The lifestream system/'s con tribution isn/'t to sa yh o wthese squishers should b e built/|rather to suggest that they b e built/, andto pro vide a uniform framew ork in whic h they can b e installed/.The stream has a future as w ell as a past/. App oin tmen ts and calendar itemsare stored in the future/, and b ecome visible when their creation/-times rollaround or when y ou go to the future on purp ose to lo ok around/.Do cumen ts in the /#5Cpresen t/" are writable/. F arther bac k/, in the /#5Cpast/,/" theyha v e frozen in to history and b ecome read/-only /. Eac h user decides whenthe presen t ends and the past b egins/|at what p oin t/, in other w ords/, do c/-umen ts freeze/. One p ossibilit y /#28and the system default/#29 is to freeze to da y/'sdo cumen ts at the start of tomorro w/. In that case y ou can w ork on a do c/-umen t all da y /, but to con tin ue the next da yy ou need to use /#5Cclone/" tocreate a new cop y on the streamhead/. Or a user migh t p ostp one freezingfor a w eek/, or forev er/. The far/-tail of the stream/|for example/, do cumen tsthat are more than t w oy ears old/|ma y disapp ear at the implemen tation/'sdiscretion in to arc hiv al storage/. The user sp eci/#0Ces where the /#5Cfar tail/" b e/-gins/, but the Lifestreams/-pro vider will presumably set c harges that dep endon a user/'s willingness to ha v e old material dump ed in to data w arehouses/.Agen ts can troll do wn lifestreams/; an agen t can cruise to the head of astream for example and go to sleep after p osting instructions that it b e
a w ak ened whenev er a do cumen t arriv es/. Agen ts are imp ortan tt om a n yasp ects of the system/; custom agen ts are the main w a ys in whic h the systemis designed to accommo date extensions and re/#0Cnemen ts/.
Chapter /2/. The Mo del /1/4No w that w eh a v e presen ted the concept of Lifestreams /#5Cin the large/,/" w e presen tthe mo del more concretely /.W e do so in terms of its storage paradigm and its basicop erations/. In the pro cess w e suggest ho w Lifestreams pro vides transparen t storage/,organization through on/-demand directories/, and the abilit y to create o v erviews/. W ethen examine the underlying time/-based storage mo del and/, in the pro cess/, sho wh o wLifestreams accomplishes arc hiving and reminding in a natural w a y /.W e should b e clear at the onset that the protot yp e implemen ts the ideas needed topro v e the thesis/. It is not a complete em b o dimen t of the ideas/./2/./1/./1 What is a lifestream/?A lifestr e am is a time/-ordered stream of do cumen ts that functions as a diary of y ourelectronic life/; ev ery do cumen ty ou create or other p eople send y ou is stored in y ourlifestream/. The tail of y our stream con tains do cumen ts from the past /#28starting withy our electronic birth certi/#0Ccate/, p erhaps/#29/. Mo ving a w a y from the tail and to w ard thepresen t/, y our stream con tains more recen t do cumen ts /| pap ers in progress or newelectronic mail/; other do cumen ts /#28pictures/, corresp ondence/, bills/, mo vies/, v oice mail/,soft w are/#29 are stored in b et w een/. Mo ving b ey ond the presen t and in to the future/, thestream con tains do cumen ts y ou wil l need/: reminders/, calendar items/, to/-do lists/.Users in teract with Lifestreams via /#0Cv e op erations/: new /, clone /, transfer /, findand summarize depicted in Figure /2/./1/. W e will examine eac h op eration/./2/./1/./2 Do cumen t Creation and StorageUsers create do cumen ts b y means of new and clone /. New creates a new/, empt y do cu/-men t /#28ready for editing/#29 and adds it to y our stream/; the user ma y b e giv en the c hoicebe t w een a selection of do cumen tt yp es and/#2For templates /#28dep ending on the do cumen tmo del/#29/. The user do es not explicitly manage the do cumen t/'s storage /#28in terms of itslo cation/#29 /| do cumen ts are alw a ys added to the head of the stream and don/'t requirenames unless the user so desires/. Eac h do cumen t comes with a n um b er of attributes/#28suc h as its creation date and time/#29/, most of whic h are inferred b y the system/. Otherattributes /#28suc h as a do cumen t/'s con ten tt yp e/#29 can b e c hanged b y the user if need b e/.The clone op eration creates a duplicate of an existing do cumen t/, ready for editing/,and adds it to the head of y our stream/. As with new /, storage is implicit b ecause theduplicate is added to a default /#5Clo cation/" /#28the head of the stream/#29 and naming isnot necessary /. The do cumen t/'s attributes are inherited from the original do cumen t/.In man y systems/, the information in one do cumen t often b ecomes the basis for thecreation of another /#5BHal/#5D/. The clone op eration pro vides a means of creating a neweditable v ersion of an existing frozen do cumen t in Lifestreams/.The transfer op eration creates a cop y of an existing do cumen t on another lifestream/.The do cumen t is added to the head of the stream /#28b y default/#29 in a frozen state /#28to
Chapter /2/. The Mo del /1/5
NEW CLONE
TRANSFER
FIND SUMMARIZEFigure /2/./1/: The Basic Lifestreams Op erations/.
Chapter /2/. The Mo del /1/6preserv e the metho d in whic h the do cumen tw as created/#29 and up dated to re/#0Dect thesender and receiv er of the do cumen t/./2/./1/./3 /#5COn Demand/" OrganizationLifestreams are organized on demand with the find op eration/. Find prompts for asearc h query /, suc h as /#5Call do cumen ts that men tion T oaster Ov ens/,/" /#5Call letters toSc h w artz/,/" /#5Cm yw eb b o okmarks/,/" applies the query to the user/'s stream and builds asubstr e am that con tains only the do cumen ts that matc h the searc h query /.Substreams/, lik e virtual directories /#5BGJSO/9/1 /, MW/9/3 /#5D/, presen t the user with a/#5Cview/" of a do cumen t collection/. The view con tains all do cumen ts that are relev an tt othe searc h query /. Substreams di/#0Ber from con v en tional directory systems in that/, ratherthan placing do cumen ts in to /#0Cxed/, rigid directory structures/, they create virtual groupsof do cumen ts/. Do cumen ts aren/'t ph ysically stored in them/; a substream is a temp o/-rary collection of do cumen ts that already exist on the main stream/. Substreams ma yo v erlap and can b e created and destro y ed on the /#0Dy without a/#0Becting the main streamor other substreams/.Substreams are dynamic/. If y ou allo w one to p ersist/, it will collect new do cumen tsthat matc hy our searc h criteria as they arriv e from the outside or as y ou create them/.The result is a natural w a y of monitoring information/| the substream acts not onlyas an organizational device/, but as a /#0Clter for incoming information/. F or example/,a substream created with the query /#5C/#0Cnd email/" w ould subsume y our mailb o x /#28b othy our in bo x and outb o x/#29 and automatically collect mail as it arriv es/./2/./1/./4 Ov erviewsThe last op eration/, summarize /, compresses a substream in to an o v erview do cumen tthat is added to the user/'s stream/. The con ten t of the o v erview do cumen t dep ends onthe t yp e of do cumen ts in the substream/. F or instance/, if the substream con tains thedaily closing prices of all the sto c ks and m utual funds in y our in v estmen t p ortfolio/,the o v erview do cumen tm a yb e a c hart displa ying the historical p erformance of y oursecurities and y our net w orth/. If the substream con tains a list of tasks y ou need tocomplete/, the o v erview do cumen t migh t displa y a prioritized /#5Cto/-do/" list/. No matterho w man y do cumen ts fall in to a giv en category Lifestreams will summarize them in to asingle do cumen t/. Summaries are mean t to b e a /#0Dexible part of the Lifestreams systemthat can b e extended b y adv anced users to create their o wn summary t yp es and sharewith other users/./2/./1/./5 Agen tsAgen ts are also an in tegral part of the system/. Agen ts can b e attac hed to do cumen ts/,streams or the user in terface to automate tasks or extend the b eha vior of Lifestreams/.These agen ts act as /#5Cem b edded computations/" that are executed on v arious ev en ts/,
Chapter /2/. The Mo del /1/7suc h as the arriv al of a new do cumen t on a stream/. A n um b er of agen ts come with an yLifestreams system/; agen ts can also b e created b y adv anced users/./2/./1/./6 Chronology as a Storage Mo delW e use c hronology as a storage mo del for one reason/: time is a natural guide to ex/-p erience/. It is the attribute that comes closest to a univ ersal /#5Croad map/" for storedexp erience/. Previous studies supp ort this view/. Malone suggested the utilit y of time/-based organization in his early studies/. Lansdale conducted exp erimen ts whic h sho w edthat /#5Cp eople remem be r c hronological information ab out information/" and that c hronol/-ogy is a p o w erful memory cue for information retriev al/. Eric kson /#5BEri/9/1 /#5D found thatusers often remem b er the appro ximate dates of information/.The c hronological stream adds historical con text to a do cumen t collection/; all do c/-umen ts ev en tually b ecome read/-only /#28frozen in the past/, set in stone for history/#29/, andthe stream preserv es the order and metho d /#28e/.g/./, who created the do cumen t/, if it w astransferred to the stream/#29 of their creation/. F reezing a do cumen t /#28that is/, making itread/-only/#29 can b e done man ually b y the user or automatically b y the system /#28e/.g/./, thesystem freezes all do cumen ts at /3/:/0/0 am ev ery nigh t or all do cumen ts that ha v en/'tb een c hanged in t w ow eeks/#29/. Lik e a diary /, a stream records w ork/, corresp ondenceand transactions/. Allen /#5BAll/8/3 /#5D observ ed that in some applications /#28suc h as medicalrecords/#29 the /#5Ccourse of ev en ts b ecomes a critical part of the data/./" A historical recordcan also b e crucial in organizational settings/. Co ok /#5BCo o/9/5 /#5D has studied the long term/#5Cinstitutional memories/" within organizations and found that man y of the assumptionsinheren t in our pap er/-based systems /#28e/.g/, when a user lea v es a job his /#5C/#0Cles/" are notlik ely to lea v e with him/#29 ha v e not b een translated to our electronic systems/. Electronicdo cumen ts/, for instance/, are easily deleted or misplaced/. When an emplo y ee lea v es thejob/, his en tire data collection ma y disapp ear/. This problem has pro v ed to b e critical inan um b e ro fe n vironmen ts/. Co ok states that the k ey to main taining critical electronicinformation /#5Clies in b eing able to determine/, sometimes long after the fact/, not only thecon ten t but also the con text of a record in question/./" In essence/, this amoun ts to notonly ha ving the data at hand but kno wing the lifetime of a piece of data/, the /#5Cwhen/,b y whom/, where/, ho w /././. o v er time/" of the data/.Chronology also pro vides a p o w erful and natural metho d of adding /#5Creminding/" toelectronic systems/. In reminding/, the user relies on some future ev en t to remind himof some task/. The future of the stream can b e used to store reminders /| b y placing ado cumen t in the future part of the stream/, the system can alert the user at the precise/#5Ctime/" of the reminder/. W e will see in Chapters /4 and /5 some uses of this capabilit y /./2/./2 The F ormal Mo delW en o w presen t our formal description of Lifestreams/. W e do so in an incremen tal fash/-ion/, /#0Crst supplying a mo del that supp orts a general do cumen t collection with dynamic
Chapter /2/. The Mo del /1/8/#0Clters/. W e then re/#0Cne the mo del to pro vide the complete seman tics of Lifestreams/;namely a system that supp orts time/-based ordering/, dynamic incremen tal /#0Clters/, andan extendable comm unication system via agen ts/. Throughout the description w e mak euse of the Linda co ordination language /#5BCG/8/9 /#5D as a means of pro viding a /#5Cconcurrencyseman tics/" for Lifestreams/./2/./2/./1 The Linda Co ordination LanguageLinda is a co ordination language dev elop ed b y Nic holas Carriero and Da vid Gelern ter/#5BCG/8/9 /#5D that complimen ts /#5Ctraditional/" languages for computation /#28C/, F ortran/, Ada/,etc/./#29/. Merging Linda with these computation languages pro duces dialects that can b eused to write parallel and distributed programs/. Linda is also useful in the sp eci/#0Ccation
of distributed systems as it pro vides an underlying co ordination seman tics/.Linda/'s co ordination mo del is a simple one/: a small n um b er of op erations are usedto read/, write and erase a /#28logically/#29 shared/, sync hronizing/, asso ciativ e memory /. Thismemory /, called a tuple space/, stores tuples that are simply lists of t yp ed /#0Celds /#28wherethe t yp es come from the base language/#29/. Linda/'s op erations fall in to t w o groups/, thosethat generate new information to b e put in to tuple space /#28 ev al and out /#29 and thosethat extract data from tuple space /#28 in and rd /#29/.More sp eci/#0Ccally /, out con v erts its argumen t list in to a tuple and puts that tuplein to tuple space/. Ev al spa wns a separate thread of con trol to ev aluate eac h argumen t/.When all threads complete/, this /#5Cliv e/" tuple resolv es in to a normal tuple/. The inop eration con v erts its argumen t list in to a template and then searc hes tuple space fora matc hing tuple/. If one or more matc hing tuples exists then in remo v es and returnsthe /#0Crst tuple found/. Otherwise in blo c ks un til a matc hing tuple is added to the tuplespace/. The rd op eration w orks lik e in /, except that it do es not remo v e the matc hingtuple/, rather it returns a cop y of it/.The matc hing rules for tuples and templates are fairly in tuitiv e/:/1/. The tuple and template m ust ha v e the same n um b er of /#0Celds/./2/. Corresp onding /#0Celds of the tuple and template m ust ha v e the same t yp e/./3/. Corresp onding /#0Celds that con tain data m ust b e equal/./4/. Tw o corresp onding /#0Celds cannot b oth b e place holders/.W e will no w de/#0Cne the Lifestreams mo del using a tuple space to store b oth streamsand do cumen ts/. In more detail/, w e represen t eac h do cumen t with a tuple and eac hstream b y three t yp es of tuples/: one tuple that main tains a coun t of the n um be r o fdo cumen ts in the stream/, a tuple for eac h do cumen t in the stream /#28that is a referenceto a do cumen t tuple/#29/, and a tuple for eac h substream/.
Chapter /2/. The Mo del /1/9/2/./2/./2 Do cumen ts and A ttributesA do cument is the primitiv e data t yp e in the Lifestreams mo del/. While an implemen/-tation of Lifestreams ma y assume a sp eci/#0Cc do cumen t mo del/, the Lifestreams mo deltreats the data making up a do cumen t as a /#0Cnite arra y of bits/. This arra y of bits ma yrepresen t a text do cumen t/, an image/, a mo vie/, a fax/, an application/, or an ything elsethat is represen table b y bits/. Note that w e could ha v e de/#0Cned the most primitiv e datat yp e with a smaller gran ularit y than a do cumen t /#28suc h as a section or paragraph/#29 butthat w ould ha v e implied a more sp eci/#0Cc do cumen t mo del and in tro duced additionalcomplexit y /#28though suc h re/#0Cnemen t could b e added to our mo del if needed/#29/.Eac h do cumen t is represen ted as a collection of descriptiv e adjectiv es in the formof attributes/#2Fv alue pairs/. Eac h pair describ es some asp ect of the do cumen t /| thecreated attribute describ es the date and time a do cumen tw as created/, the creatorattribute describ es the user who created a do cumen t/, and the type attribute describ esa do cumen t/'s con ten tt yp e/. The arra y of bits making up the con ten t of the do cumen tis stored in an attribute called data /. The mo del do es not fully sp ecify a set of suc hattributes for ev ery Lifestreams implemen tation b ecause di/#0Beren t attribute sets ma yb e appropriate for di/#0Beren t domains/. T ak e for example the medical domain/, whic hma y need a set of sp ecialized attributes for k eeping trac k of patien t records/. Ho w ev er/,a minim um set of attributes are necessary in all instan tiations of the mo del as theyare crucial to the primitiv e op erations/. Tw o examples are the state attribute/, whic hdescrib es whether or not a do cumen ti sm utable/, and a created attribute/, whic hi sused in the ordering of do cumen ts as previously describ ed/. In general/, the v alues ofman y attributes can b e inferred automatically b y Lifestreams/, although some v aluescan b e user sp eci/#0Ced/. F or instance/, the user ma yw an t to pro vide a list of k eyw ordsthat ma y help iden tify a do cumen t more readily in the future/. Throughout the c hapterw e mak e use of the attributes in T able /2/./1/, whic h are listed along with their t yp e andfunctionalit y in the mo del/. W e will discuss the attributes used in our implemen tationin Chapter /3/.W e formally de/#0Cne a do cumen t as a tuple of the form/#28/"document/"/, docid/, DS/#29where docid is an in teger that uniquely iden ti/#0Ces the do cumen t and DS is a do cumen tstructure in the form of a record with one /#0Celd p er attribute/. W e de/#0Cne t w o pro ceduresthat act on do cumen t tuples/: extr act and r epl ace /. Giv en a do cumen t the extract/#28replace/#29 pro cedure is used to access /#28alter/#29 the v alues of its attributes/.More formally /, the pro cedure extr act /#28Figure /2/./2/#29 tak es a do cumen t iden ti/#0Cer/,docid /, and an attribute descriptor/, attr /, and returns the v alue of the attribute/. T oobtain the v alue/, extr act /#0Crst reads the /"document/" tuple that matc hes docid fromtuple space and binds DS to its do cumen t record/. The pro cedure ds extr act is then
Chapter /2/. The Mo del /2/0A ttribute T yp e F unctioncreated time Date and time of creationstate b o olean T rue if do cumen t is writabledata arra y Con ten t of do cumen ttype string Con ten tt yp e of do cumen tT able /2/./1/: The do cumen t attributes along with their t yp e and function/.used to extract the attribute/, attr /, from the do cumen t record/.
/1The pro cedure r epl ace/#28Figure /2/./3/#29 tak es a docid /, an attribute descriptor/, attr /,a n dav alue/, val /#28 r epl aceis a p olymorphic pro cedure accepting val s of di/#0Beren tt yp es/#29/, and alters the v alue ofthe resp ectiv e attribute in DS /. This is accomplished b y in ing the do cumen t tuple fromtuple space/, replacing the attribute attr in the do cumen t record with the v alue valand then out ing the tuple bac ki n to tuple space/.pro c extr act /#28 in t docid /, c har attr /#29b egindo cumen t DS /;rd /#28/"document/"/, docid/, /? DS/#29 /;return ds extr act /#28DS/, attr/#29 /;endFigure /2/./2/: The de/#0Cnition of extract/.Other pro cedures can b e implemen ted on top of these basic op erations/, for instance/,the f r eez e pro cedure /#28Figure /2/./4/#29 can b e used to mak e a do cumen t read only /. F r eez etak es a do cumen t iden ti/#0Cer and calls r epl ace to set the v alue of its state attribute tofalse /#28read/-only/#29/.The do cumen ts of all streams /#28w e will de/#0Cne streams in the next section/#29 are main/-tained in the same tuple space/. Do cumen t iden ti/#0Cers in this space range from zero /#28the/#0Crst do cumen t created/#29 to n /, /1/, where n is the n um b er of do cumen ts in tuple space/.The v alue of the next a v ailable do cumen t iden ti/#0Cer is main tained in a tuple of the form/#28/"documenthead/"/, count/#29/1The pro cedure ds extr act /#28 ds r epl ace /#29 is a simple macro that extracts an attribute from a do cu/-men t record /#28replaces the v alue of an attribute in the do cumen t record/#29/.
Chapter /2/. The Mo del /2/1pro c r epl ace /#28 in t docid /, c har attr /, p oly val /#29b egindo cumen t DS /;in /#28/"document/"/, docid/, /? DS/#29 /;ds r epl ace /#28DS/, attr/, val/#29 /;out /#28/"document/"/, docid/, DS/#29 /;endFigure /2/./3/: The de/#0Cnition of replace/.pro c f r eez e /#28 in t docid /#29b eginr epl ace /#28 docid/, state/, false /#29/;endFigure /2/./4/: The de/#0Cnition of freeze/.where count is an in teger v alue that is incremen ted eac h time a do cumen t is added toa stream/./2/./2/./3 Streams and SubstreamsA str e am i sac hronologically ordered collection of do cumen ts that acts as the underlyingstorage framew ork for Lifestreams/. W e de/#0Cne a stream as a collection of tuples alongwith /#0Cv e pro cedures app end /, r e ad /, write /, r etrieve /, and /#0Clter /. Conceptually /, app end addsa new do cumen t D to the head of the stream/, r e ad returns a cop y of a do cumen t froma stream/, write replaces a do cumen t D with a new v ersion D
/0/, r etrieve retriev es the listof do cumen ts in a stream or substream/, and /#0Clter creates a new grouping of do cumen ts/#28a substream/#29 based on a searc h query /.F ormally /, a stream consists of a collection of three t yp es of tuples/:/#28/"stream/"/, sid/, dochead/, subhead/#29/#28/"streamdoc/"/, sid/, docindex/, docid/#29/#28/"substream/"/, sid/, subid/, query/#29One /"stream/" tuple exists for eac h stream/. This tuple con tains an in teger streamiden ti/#0Cer/, sid /, and main tains t w oi n teger v alues/: dochead and subhead /. Docheadis used to main tain the n um b er of do cumen ts within the stream/. Subhead is used
Chapter /2/. The Mo del /2/2to main tain the n um b er of substreams in the stream/. One /"streamdoc/" tuple existsfor eac h do cumen t in the stream/. This tuple t yp e con tains a stream iden ti/#0Cer/, sid /,ado cumen t index/, docindex /#28a unique v alue b et w een /0 and n /, /1/, where n is the n um be rof do cumen ts in the stream/#29/, and the docid of the /"document/" tuple that con tains thedo cumen t/. The /"substream/" tuple main tains the searc h queries of substreams/. Onetuple exists for eac h substream/. The substream tuple con tains a stream iden ti/#0Cer/, anin teger substream id/, and a searc h query in the form of a c haracter string/.An example tuple space is sho wn in Figure /2/./5/; this tuple space con tains t w o life/-streams /#28with iden ti/#0Cers /0 and /1/#29/. Lifestream /0 has three do cumen ts with do cumen tindexes of /0/, /1 and /2/, whic h corresp ond to the /"document/" tuples /1/, /3 and /4/. Lifestream/0 also has one substream with a searc h query of /#5Ctoasters and /1/9/3/0/"/. Note that the/"stream/" tuple for lifestream /0 con tains a coun t of the n um b er of do cumen ts and then um b er of substreams/. Lik ewise/, lifestream /1 has t w o do cumen ts that are main tainedin /"document/" tuples /0 and /2 and t w o substreams/.Append /#28Figure /2/./6/#29 tak es a stream iden ti/#0Cer and a do cumen t record DS /, whic h con/-tains the attributes of the do cumen t to b e app ended/. T o app end a do cumen t/, appendm ust create a /"document/" tuple that con tains the do cumen t and a /"streamdoc/" tu/-ple that designates the do cumen t as b elonging to the stream and /#5Cp oin ts/" to the/"document/" tuple/. Before creating the /"document/" tuple/, append /#0Crst in s the do c/-umen t head tuple/, binding docid to its second /#0Celd /#28whic h will b e used as the newdo cumen t/'s id/#29/. Append then returns the tuple to tuple space/, incremen ting the do c/-umen t coun t/. Next append in s the /"stream/" tuple that matc hes the stream iden ti/#0Cersid /. The v alue of the stream head is b ound to docindex and will b e used as thedo cumen t/'s index within the stream/. Append then returns the /"stream/" tuple to tuplespace with the stream head incremen ted b y one/.No w append can create the /"document and /"streamdoc/" tuples/; append /#0Crst out sa /"document/" tuple con taining docid and the structure DS /. Append then out sa/"streamdoc/" tuple that con tains the stream id/, the do cumen t index/, and a /#5Cp oin ter/"/#28in the form of docid /#29t ot h e /"document/" tuple/. Last/, append returns the v alue of thedo cumen t index/.The r e ad primitiv e /#28Figure /2/./7/#29 tak es a stream id/, sid /, a do cumen t index/, docindex /,and a do cumen t record/, DS /, and returns the do cumen t/'s attributes via the do cumen trecord/. Read /#0Crst rd sa /"streamdoc/" tuple /#28that matc hes sid and docindex /#29t oretriev e the v alue of its corresp onding docid /. Read then rd s the /"document/" tuplematc hing docid and binds its do cumen t record to DS /. The do cumen t structure DS isthen returned/.The write primitiv e /#28Figure /2/./8/#29 /#28lik e r e ad /#29 tak es a stream id/, a do cumen t indexand a do cumen t record and writes the do cumen t record bac k to tuple space /#28in e/#0Bect/,replacing a do cumen t with a new one/#29/. Lik e the r ead primitiv e/, w r ite /#0Crst readsa /"streamdoc/" tuple to retriev e the v alue of its corresp onding docid /. W r ite thenextracts the v alue of the do cumen t/'s state attribute to ensure that it is a writabledo cumen t/. If so/, then w r ite in s the /"document/" tuple matc hing docid and then out s
Chapter /2/. The Mo del /2/3("streamdoc", 1, 1, 2)("stream", 1, 2, 2)
("substream", 1, 0, "from schwartz")
("documenthead", N)("substream", 1, 1, "meetings")
("document", 3, DS3)("document", 2, DS2)("document", 0, DS0)
("document", 4, DS4)
DS0.created = "5/7/94"
DS0.state = "true"DS0.data = "Now is the..."("document", 1, DS1)("streamdoc", 1, 0, 0)
DS0.type = "text"Lifestreams Tuple Space
Document Tuples("stream", 0, 3, 1)
("streamdoc", 0, 0, 1)
("streamdoc", 0, 1, 3)("streamdoc", 0, 2, 4)
("substream", 0, 0, "toaster and 1930")Lifestream 0 TuplesLifestream 1 TuplesFigure /2/./5/: Lifestreams T uple Space/.
Chapter /2/. The Mo del /2/4pro c append /#28 in t sid /, do cumen t DS /#29b eginin t docid /, docindex /;in /#28 /"documenthead/" /,/? docid /#29/;out /#28 /"documenthead/" /, docid /+ /1 /#29/;in /#28 /"stream/" /, sid /,/? docindex /,/? subhead /#29/;out /#28 /"stream/" /, sid /, docindex /+ /1 /, subhead /#29/;out /#28 /"document/" /, docid /, DS /#29/;out /#28 /"streamdoc/" /, sid /, docindex /, docid /#29/;return docindex /;endFigure /2/./6/: The de/#0Cnition of app end/.pro c r ead /#28 in t sid /, in t docindex /, do cumen t DS /#29b eginin t docid /;rd /#28 /"streamdoc/" /, sid /, docindex /,/? docid /#29/;rd /#28 /"document/" /, docid /,/? DS /#29/;return DS /;endFigure /2/./7/: The de/#0Cnition of read/.the same tuple/, replacing the old do cumen t structure with DS /.The /#0Clter primitiv e /#28Figure /2/./9/#29 tak es a stream id/, sid /, and a c haracter stringsearc h query /, query /, and creates a substream/. F il ter /#0Crst in s the /"stream/" tuple toobtain the v alue of the substream head /#28b ound here to subnum /#29/. The tuple is thenreturned to tuple space with the v alue of the substream head incremen ted b y one/.F il ter then out s a new /"substream/" tuple con taining the stream id/, a substream id/,and the searc h query /. This tuple asso ciates the new substream with the stream/. Last/,f il ter returns the substream iden ti/#0Cer of the newly created substream/. The reader willnote that w e do nothing to actually generate the substream in the /#0Clter primitiv e/, w emerely stash a w a y the searc h query itself for later use/. W e will see ho w searc h queriesare applied shortly /.The r etrieve primitiv e in Figure /2/./1/0/, tak es a stream id/, sid /, and a substream id/,
Chapter /2/. The Mo del /2/5pro c w r ite /#28 in t sid /, in t docindex /, do cumen t DS /#29b egindo cumen t oldDS/;in t valid/;rd /#28 /"streamdoc/" /, sid /, docindex /,/? docid /#29/;valid /:/= /#28 extr act /#28 sid /, docid /, /"state/" /#29/= writable /#29if /#28 valid /#29 thenb eginin /#28 /"document/" /, docid /,/? oldDS /#29/;out /#28 /"document/" /, docid /, DS /#29/;end /;endFigure /2/./8/: The de/#0Cnition of write/.subid /, and returns a list of do cumen ts /#28the substream/#29/. T o create this list/, r etr iev e/#0Crst rd s the /"substream/" tuple and retriev es the query /. Retr iev e then reads the/"stream/" tuple /#28of the substream/#29 to obtain the do cumen t coun t /#28b ound to docnum /#29of the en tire stream/. Next/, r etr iev e creates a list of the do cumen t ids in the streamb y calling iota
/2with the n um b er of do cumen ts in the stream/. Retr iev e then stepsthrough eac h do cumen t in the list and calls match with its stream id/, do cumen ti dand the query /. If the do cumen t is a /#5Cmatc h/" then it is cons/'d on to the substream list/.Last/, r etr iev e sorts the resulting list b y the creation of the do cumen ts and returns thelist/. W e lea v e b oth sor t and match unde/#0Cned
/3/.As w e men tioned our mo del generates substreams from queries when r etrieve iscalled rather than when the substream is created/. F or the purp oses of our mo del thisgiv es us a clean w a y of expressing the dynamic nature of substreams/. Substreamsare dynamic in the sense that they con tin ue to collect do cumen ts as new do cumen tsare added to the stream collection/. A substream created from a query that matc hes/#5Call do cumen ts ab out X/" will con tin ue to collect do cumen ts referring to X as they areadded to the stream after the substream/'s creation /#28b ecause the query is applied eac htime a substream is retriev ed/#29/.While this pro vides a clean mo del w e will see that in implemen ting Lifestreamsw e need to tak e an incremen tal approac h to creating substreams/. This approac hi sconsisten t with our seman tics/, y et still satis/#0Ces our real/-w orld need for e/#0Eciency /.W e/2Giv en an in teger n /, iota generates a list /#28/0/, /1/, /2/, /./././, n /, /1/#29/./3V arious do cumen t and retriev al mo dels will call for di/#0Beren t de/#0Cnitions/, but the in tended useshould b e ob vious/.
Chapter /2/. The Mo del /2/6pro c f il ter /#28 in t sid /, c har query /#29b eginin t docnum/, subnum /;in /#28 /"stream/" /, sid /,/? docnum /,/? subnum /#29/;out /#28 /"stream/" /, sid /, docnum /, subnum /+ /1 /#29/;out /#28 /"substream/" /, sid /, subnum/, query /#29/;return subnum /;endFigure /2/./9/: The de/#0Cnition of /#0Clter/.will return to this p oin t in the next c hapter/./2/./2/./4 Lifestreams Re/#0Cnemen tW eh a v en o w de/#0Cned a general do cumen t mo del that de/#0Cnes the basic functionalit yneeded for Lifestreams/, namely the abilit y to app end do cumen ts to a stream/, read andm utate do cumen ts/, and to create substreams through /#0Clters/. W e are still missing ameans of creating a c hronologically/-ordered default stream/, the abilit y to incremen tallycreate substreams/, and the abilit y to extend the system via agen ts/. W en o w furtherre/#0Cne the mo del to include these capabilities/.Incremen tal SubstreamsSubstreaming /#28through f il ter and r etr iev e /#29 can only b e applied to the stream itself/;that is/, substreams are generated b y /#0Cltering the en tire collection of do cumen ts in astream and cannot b e created b y /#0Cltering another substream/. It w ould b e con v enien tand useful to b e able to apply queries to substreams/. This allo ws for an incremen talapproac h to creating substreams/: for instance/, one migh t create a substream to /#0Clterall do cumen ts ab out /#5Cin v estmen ts/" and then create another substream from the in/-v estmen t substream that /#0Clters out do cumen ts ab out /#5Cm utal funds/./" This approac hhas some nice prop erties with resp ect to the implemen tation as w e will see in c hap/-ter /3/. It also allo ws for the organization of substreams in to hierarc hies of sorts /#28noteho w ev er that this is not a true hierarc h y/|substreams can con tain o v erlapping sets ofdo cumen ts/#29/.W en o w extend our de/#0Cnition of /#0Clter /, r etrieve and the /"substream/" tuple t yp eto supp ort incremen tal substreams/. The transformation is straigh tforw ard/: to f il ter/#28Figure /2/./1/1/#29 w e /#0Crst add an extra parameter/: the /#5Cparen t/" substream id/, pid /,o ft h esource substream/. W e then alter the out on the /"substream/" tuple so that it also
Chapter /2/. The Mo del /2/7pro c r etr iev e /#28 in t sid /, in t subid /#29b eginstring query /;in t docnum/, subnum/, doc /;list docs /, substream /:/= /#28/#29 /;rd /#28 /"substream/" /, sid /, subid /,/? query /#29/;rd /#28 /"stream/" /, sid /,/? docnum /,/? subnum /#29/;docs /:/= iota /#28 docnum /#29/;foreac h doc in docsif /#28 match /#28 sid /, doc /, query /#29/#29substream /:/= cons /#28 doc/, substream /#29/;return sort /#28 sid /, substream /, /"created/" /#29/;endFigure /2/./1/0/: The de/#0Cnition of retriev e/.con tains an additional /#0Celd /#28the paren t substream id/#29/.T o r etr iev e /#28Figure /2/./1/2/#29 w e /#0Crst up date the initial rd to matc h on the extra pid/#0Celd in the /"substream/" tuple/. W e then alter the manner in whic hw e create the list ofdo cumen ts for match to iterate through /| if the paren t substream of this substreamis /0 then w e iterate through all do cumen ts in the lifestream as b efore b y using iotato en umerate all do cumen ts b et w een /0 and docnum /- /1 /. Otherwise w e recursiv ely callr etr iev e to create the list b y retrieving the paren t substream/. In this w a y a substreamis generated b y /#0Crst applying the query of the /#5Cparen t/" substream /#28and an y queries itrelies on/#29 and then applying the curren t query /.pro c f il ter /#28 in t sid /, in t pid /, c har query /#29b eginin t docnum/, subnum /;in /#28 /"stream/" /, sid /,/? docnum /,/? subnum /#29/;out /#28 /"stream/" /, sid /, docnum /, subnum /+ /1 /#29/;out /#28 /"substream/" /, sid /, subnum /, pid /, query /#29/;return subnum /;endFigure /2/./1/1/: The de/#0Cnition of incremen tal /#0Clter/.
Chapter /2/. The Mo del /2/8pro c r etr iev e /#28 in t sid /, in t subid /#29b eginc har query /;in t docnum/, subnum/, doc/, pid /;list docs /, substream /:/= /#28/#29 /;rd /#28 /"substream/" /, sid /, subid /,/? pid /,/? query /#29/;rd /#28 /"stream/" /, sid /,/? docnum /,/? subnum /#29/;if /#28 pid /=/= /0 /#29docs /:/= iota /#28 docnum /#29/;elsedocs /:/= r etr iev e /#28 sid /, pid /#29/;foreac h doc in docsif /#28 match /#28 sid /, doc /, query /#29/#29substream /:/= cons /#28 substream/, doc /#29/;return sort /#28 sid /, substream /, /"created/" /#29/;endFigure /2/./1/2/: The de/#0Cnition of incremen tal retriev e/.The Default Chronological StreamOur mo del no w giv es us a general framew ork for describing a collection of do cumen tsand an arbitrary n um be r o f c hronologically/-ordered subsets of those do cumen ts /#28theyare c hronological b ecause w e alw a ys sort them b y their creation date/#29/. In Lifestreamsw ew ould lik e to further re/#0Cne the mo del to include a default substream /#28the lifestream/#29that con tains all do cumen ts within the do cumen t collection/. W e sp ecify the defaultsubstream /#28for the sid /= /0/#29 as/:lifestreams /:/= f il ter /#28 /0 /, /0 /, /"/*/" /#29/;where /"/*/" is a wildcard that matc hes an y do cumen t in the collection/. W e will describ eour sp eci/#0Cc /#0Cltering mec hanism in Chapter /3/.Handling Time CorrectlyWhen r etr iev e is called/, it orders the resulting substream based on its created at/-tribute/. The append primitiv e do es not set the v alue of the created attribute when itadds a new do cumen t to a stream /#28the user ma yh a v ew an ted the do cumen tt o h a v ea future time/#29/; in other w ords append /#5Ctrusts/" that the v alue has b een set correctlyb y the creator of the do cumen t/. The implication of these t w o observ ations is that the
Chapter /2/. The Mo del /2/9creator of the do cumen t is in con trol of where in the default substream the do cumen tis placed/. Before w e further explore this topic/, let/'s /#0Crst discuss the in tended role oftime/, and the created attribute in Lifestreams/.Lifestreams treats do cumen ts di/#0Beren tly dep ending on their creation time/: do cu/-men ts in the past are considered /#5Cfrozen/" and /#28lik e history/#29 unc hangeable/. Do cumen tsin the presen t and future are m utable and can b e altered/. The same is true of do cu/-men t creation/: it is forbidden in the past /#28to allo w this w ould undermine the historicalcon text of the stream as the past could alw a ys b e altered/#29 and allo w ed in the presen tand future/. The state of a do cumen t /| that is/, whether it is read/-only or writable /|is a related issue/. Eac h do cumen t in a stream is either writable or read/-only as de/#0Cnedb y its state /.W e mak e no sp eci/#0Cc rules in the mo del to enforce this b eha vior/, but w eassume that all instan tiations of the mo del will adopt some p olicy suc h that o v er timeall do cumen ts ev en tually b ecome read/-only /#28or rather/, mo v e from the presen t to thepast/#29/.Giv en these seman tics t w o alterations are needed to correctly supp ort time/: oneto app end and one to write /. In the case of app end /#28Figure /2/./1/3/#29 w en o w only app enda do cumen t if its creation date is greater than or equal to now
/4/.W e de/#0Cne now to b ethe curren t clo c k time
/5/, and do not further sp ecify ho w this v alue is obtained in themo del/. In the case of write /#28Figure /2/./1/4/#29 w eh a v e to ensure that the created attributeis not c hanged after the do cumen t is created/. W e do this b y cop ying the createdattribute from the most recen tv ersion of the do cumen t oldDS to the new v ersion ofthe do cumen t DS b efore /#5Cwriting/" to bac k to tuple space/.Em b edded Pro cesses/: Agen tsW en o w incorp orate arbitrary pro cesses in to the mo del that can b e used to expand itsfunctionalit y /.W e use the term /#5Cagen t/" to describ e these pro cesses/. W ee n vision threeagen tt yp es in Lifestreams/: stream agen ts/, do cumen t agen ts and p ersonal agen ts/.Stream agen ts liv e on streams and b ecome activ e when certain ev en ts o ccur /#28suc has the arriv al of a new do cumen t/#29/. Do cumen t agen ts are /#5Cattac hed/" to do cumen tsvia an agen t attribute and also b ecome activ e when particular ev en ts o ccur /#28suc ha sthe user reading the do cumen t for the /#0Crst time/#29/. P ersonal agen ts t ypically executeas part of the user/'s Lifestreams in terface and automate user tasks or assist the user/.P ersonal agen ts are imp ortan t and w e will discuss them in coming c hapters/, ho w ev er inthis section w e will concern ourselv es with extending the Lifestreams mo del to supp ortstream and do cumen t agen ts/.T o add agen ts w e build on the w ork of Borenstein and Rose /#5BBR/9/3/#5D/. They dev elop eda mo del called enabled mailed on top of MIME that allo ws segmen ts of executablecon ten t to b e added to standard mail messages /#28via the m ultipart and executable/4In practice if a do cumen t has a creation date and time earlier than now w e up date the date andtime to now /./5In practice w e mak e some allo w ance for clo c k drift/.
Chapter /2/. The Mo del /3/0pro c append /#28 in t sid /, do cumen t DS /#29b eginin t docid /, docindex /, filterindex /, valid /;valid /:/= /#28 extr act /#28 sid /, docid /, /"created/" /#29 /#3E /= now /#29if /#28 valid /#29 thenb eginin /#28 /"documenthead/" /,/? docid /#29/;out /#28 /"documenthead/" /, docid /+ /1 /#29/;in /#28 /"stream/" /, sid /,/? docindex /,/? subhead /#29/;out /#28 /"stream/" /, sid /, docindex /+ /1 /, subhead /#29/;out /#28 /"document/" /, docid /, DS /#29/;out /#28 /"streamdoc/" /, sid /, docindex /, docid /#29/;return docindex /;endendFigure /2/./1/3/: The /#28time/-a w are/#29 de/#0Cnition of app end/.con ten tt yp es/#29/. Eac h segmen ti s t yp ed with an ev en tt yp e and/, when that ev en tt yp eo ccurs/, the segmen t is executed/. Ev en tt yp es are based on sev eral k ey states that o ccuras mail is in transit to a recipien t /#28e/.g/./, the mail arriv es at the mail serv er/, the mail isdeliv ered to the mailb o x/, the mail is read b y the recipien t/#29/.Similarly w en o w de/#0Cne sev eral ev en ts in the Lifestreams system/. While there arean arbitrary n um b er of suc he v en ts that could b e de/#0Cned/, for the purp oses of thisdissertation w e discuss only the follo wing ev en ts as they are all that is necessary todemonstrate some in teresting system extensions/. The STREAM APPEND ev en t o ccursan y time a do cumen t is app ended to a stream and all stream agen ts receiv e the ev en talong with the do cumen t id that w as app ended/. The ev en t DOCUMENT READ o ccurswhenev er a do cumen t is read/. If the do cumen t is b eing read for the /#0Crst time then theDOCUMENT OPEN ev en t also o ccurs/.T o supp ort stream agen ts w e add an agen t head /#0Celd to the /"stream/" tuple/, anadditional primitiv e/, A dd agent /, a new /"agent/" tuple t yp e and mak ec hanges to theapp end primitiv e/. A dd agent /#28Figure /2/./1/5/#29 is a simple primitiv e that when passed astream iden ti/#0Cer and an agen t /#28co de in c haracter string form/#29 adds an /"agent/" tupleto the stream/.The append primitiv e /#28Figure /2/./1/6/#29 no w tak es the v alue of the agen t head /#28b oundto agentnum /#29 and steps through eac h agen tb y in ing its /"agent/" tuple /#28to extract theagen t/'s co de/#29 and then applying the agen t /#28through ev al /#29 to the new do cumen t/.
Chapter /2/. The Mo del /3/1pro c w r ite /#28 in t sid /, in t docid /, do cumen t DS /#29b egindo cumen t oldDS /;in t created /;rd /#28 /"streamdoc/" /, sid /, docindex /,/? docid /#29/;in /#28 /"document/" /, docid /,/? oldDS /#29/;created /:/= ds extr act /#28 oldDS /, /"created/" /#29/;ds r epl ace /#28 DS /, /"created/" /, created /#29/;out /#28 /"document/" /, docid /,/? DS /#29/;endFigure /2/./1/4/: The /#28time/-a w are/#29 de/#0Cnition of write/.pro c add ag ent /#28 in t sid /, c har agent /#29b eginin t dochead /, subhead /, agentid /;in /#28 /"stream/" /, sid /,/? dochead /,/? subhead /,/? agentid /#29/;out /#28 /"stream/" /, sid /, dochead /, subhead /, agentid /+ /1 /#29/;out /#28 /"agent/" /, sid /, agentid /, agent /#29/;return agentid /;endFigure /2/./1/5/: The de/#0Cnition of add agen t/.T o supp ort do cumen t agen ts w e need to mak e additions to the do cumen t datastructure and to the r ead primitiv e/. T o the data structure w e add four attributes/:stream append agent /, document open agent /, document read agent /, and lastread /.The /#0Crst three are attributes for holding the executable con ten t of the agen ts themselv es/|one for eac he v en tt yp e/. The last attribute/, lastread /, holds the access time of the lasttime the do cumen tw as read/. This allo ws us to kno w when the DOCUMENT OPEN ev en to ccurs b y comparing the v alue of lastread against the v alue of created /. Note thatno /#5Cadd do cumen t agen t/" pro cedure is needed b ecause an agen t can b e added throughthe r epl ace pro cedure/.
/6No ww e only need to mak e a few additions to the r ead primitiv e/. W e will presen t/6The agen t can b e added via r epl ace /#28 docid /, document open agent /, agentcode /#29 /.
Chapter /2/. The Mo del /3/2pro c append /#28 in t sid /, do cumen t DS /#29b eginin t docid /, docindex /, filterindex /, valid /;in t agentnum /, i /;c har agentcode /;valid /:/= /#28 extr act /#28 sid /, docid /, /"created/" /#29 /#3E /= now /#29if /#28 valid /#29 thenb eginin /#28 /"documenthead/" /,/? docid /#29/;out /#28 /"documenthead/" /, docid /+ /1 /#29/;in /#28 /"stream/" /, sid /,/? docindex /,/? subhead /,/? agentnum /#29/;out /#28 /"stream/" /, sid /, docindex /+ /1 /, subhead /, agentnum /#29/;out /#28 /"document/" /, docid /, DS /#29/;out /#28 /"streamdoc/" /, sid /, docindex /, docid /#29/;for /#28i /:/= /0/; i /#3C agentnum/; i/+/+/#29b eginrd /#28 /"agent/" /, i /,/? agentcode /#29/;ev al /#28 agentcode /#28 sid /, docindex /#29/#29/;endreturn docindex /;endendFigure /2/./1/6/: The de/#0Cnition of app end with agen ts/.these c hanges in the next section when w e create a /#5Cuser in terface/" to our Lifestreamsmo del/./2/./2/./5 Constructing a /#5CUser In terface/"In this section w e sho wh o w the stream and do cumen t primitiv es can b e used to imple/-men t a /#5Cuser in terface/" of sorts for the Lifestreams mo del/. F or the reader/'s con v eniencew e repro duce the Lifestreams primitiv es in App endix A/.As w e men tioned earlier in this c hapter/, a user/'s view of Lifestreams can b e de/#0Cnedb y the op erations New/, Clone/, T ransfer/, Find/, and Summarize/. T o review/, New createsa new writable do cumen t on the stream/. Clone tak es an existing do cumen t and createsa cop y on the stream/. T r ansfer copies an existing do cumen t from one stream to another/.Find tak es a /#0Clter and returns a substream based on the /#0Clter/. Summarize tak es asubstream and a function/, and compresses the substream in to a summary do cumen t
Chapter /2/. The Mo del /3/3and app ends the do cumen t to the stream/. In addition/, implicit in the mo del is theabilit y to read and write do cumen ts/; this functionalit y already exists in our primitiv esr e ad and write /, although r ead still needs to b e extended to handle do cumen t agen ts/.W en o w presen t eac h op eration and its de/#0Cnition /#28Figure /2/./1/7/#29/.New tak es one argumen t/, a stream id/, sid /. New /#0Crst creates a new do cumen t record/,DS /, and then replaces its created attribute with now and its lastread attribute withnow /, /1/. Setting lastread in this matter ensures that the last access time is less thatthe creation time /#28for the purp oses of detecting the DOCUMENT OPEN ev en t/#29/; althoughw e don/'t sp ecify the details/, New also sets an y other default attributes that ma y needto b e initialized /. Last/, New app ends the do cumen t record to the stream sid andreturns its do cumen t index/. Clone op erates similarly /. Clone tak es a stream sid and ado cumen t index docindex and uses r ead to retriev e the do cumen t record/. C l one thenalters the do cumen t record to mak e it writable/, up dates b oth of its time attributes andthen app ends it to the stream sid /. Last/, it returns the do cumen t index/. T r ansf ertak es t w o stream ids/, a source stream/, sid /, and a target stream/, sid/2 /, and a do cumen tindex/, docindex /. T r ansf er reads the do cumen t from the source stream/, up dates itstime attributes/, and then app ends the do cumen t record to the target stream/.F ind tak es a stream iden ti/#0Cer/, sid /, and a substream iden ti/#0Cer/, pid /, /#28the /#5Cparen t/"substream that the /#0Cnd is p erformed on/#29 and a query /. F ind /#0Crst calls /#0Clter to createa substream/. It then returns the list of do cumen ts b elonging to that substream b ycalling r etrieve /.S ummar iz e tak es a stream id/, sid /, and substream/, subid /, along with a summaryfunction f /. S ummar iz e /#0Crst calls r etr iev e to obtain the substream and then appliesf to the stream id/, the substream/, and a do cumen t record/. The in ten t is for f to/#5Csquish/" the substream in to one do cumen t and store it in the do cumen t record/. LastS ummar iz e app ends the do cumen t record to the stream and returns the newly createddo cumen t/'s index/. As an example consider a simple summary that coun ts the n um be rof do cumen ts with document open agen ts on a substream/. W e de/#0Cne suc h a summaryin Figure /2/./1/9/.Last w e de/#0Cne the user in terface v ersions of write and r e ad /. Write can b e writtenb y using the write pro cedure that w eh a v e already de/#0Cned/. In the case of R e ad w e stillneed to add the co de to enable do cumen t agen ts/.First R e ad grabs the do cumen t and tests to see if the condition of the DOCUMENT OPENev en t holds /#28that is/, whether the created time is greater than the lastread time/#29/,if so the valid /#0Dag is set/. W e up date the lastread attribute to disable futureDOCUMENT OPEN ev en ts/. The do cumen t is then returned to tuple space/. Next if thevalid /#0Dag is set then the document open agent is extracted and applied to the do cu/-men t/. Next/, the document read agent is extracted and applied to the do cumen t /#28sinceit is applied an y time the do cumen t is read/#29
/7/./7W e de/#0Cne an /#5Cempt y agen t/" /#0Celd to b e /#15sd/:d /.
Chapter /2/. The Mo del /3/4pro c Ne w /#28 in t sid /#29b egindo cumen t DS /;ds r epl ace /#28 DS /, /"created/" /, now /#29ds r epl ace /#28 DS /, /"lastread/" /, now /, /1/#29/./. /#2F/* fill in default attributes /*/#2F/.return append /#28 sid /, DS /#29/;endpro c C l one /#28 in t sid /, in t docindex /#29b egindo cumen t DS /;r ead /#28 sid /, docindex /, DS /#29/;ds r epl ace /#28 DS /, /"created/" /, now /#29/;ds r epl ace /#28 DS /, /"lastread/" /, now /, /1/#29/;ds r epl ace /#28 DS /, /"state/" /, true /#29/;return append /#28 sid /, DS /#29/;endpro c T r ansf er /#28 in t sid /, in t sid/2 /, in t docindex /#29b egindo cumen t DS /;r ead /#28 sid /, docindex /, DS /#29/;ds r epl ace /#28 DS /, /"created/" /, now /#29/;ds r epl ace /#28 DS /, /"lastread/" /, now /, /1/#29/;append /#28 sid/2 /, DS /#29/;endpro c F ind /#28 in t sid /, in t pid /, c har query /#29b eginin t subid /;subid /:/= f il ter /#28 sid /, pid /, query /#29/;return r etr iev e /#28 sid /, subid /#29/;endFigure /2/./1/7/: Expression of Lifestreams user in terface in terms of the primitiv es/.
Chapter /2/. The Mo del /3/5pro c S ummar iz e /#28 in t sid /, in t subid /, func f /#29b eginlist substream /;do cumen t DS /;substream /:/= r etr iev e /#28 sid /, subid /#29/;f /#28 sid /, substream /, DS /#29/;return append /#28 sid /, DS /#29/;endpro c W r ite /#28 in t sid /, in t docid /, do cumen t DS /#29b eginw r ite /#28 sid /, docid /, DS /#29/;endpro c Read /#28 in t sid /, in t docindex /, do cumen t DS /#29b eginin t docid /, valid /;rd /#28 /"streamdoc/" /, sid /, docindex /,/? docid /#29/;in /#28 /"document/" /, docid /,/? DS /#29/;if /#28 ds extr act /#28 DS /, /"created/" /#29 /#3Ed s extr act /#28 DS /, /"lastread/" /#29/#29valid /:/= true /;ds r epl ace /#28 DS /, /"lastread/" /, now /#29/;out /#28 /"document/" /, docid /, DS /#29/;if /#28 valid /#29ev al /#28 ds extr act /#28 DS /, document open agent /#29/#28 sid /, docindex /#29/#29/;ev al /#28 ds extr act /#28 DS /, document read agent /#29/#28 sid /, docindex /#29/#29/;endFigure /2/./1/8/: Expression of Lifestreams user in terface in terms of the primitiv es /#28con t/#29/.
Chapter /2/. The Mo del /3/6pro c ag ent summar y /#28 in t sid /, list substream /, do cumen t DS /#29b eginin t count /:/= /0 /, doc /, docid /;foreac h doc in substreamb eginrd /#28/"streamdoc/"/, doc/, /? docid/#29 /;if /#28 extr act /#28 sid /, docid /, /"document open agent/" /#29 /6/= /"/" /#29count /:/= count /+ /1 /;endds r epl ace /#28DS/, /"data/"/,/"There are /" /+ count /+ /"documents with open agents/" /#29/;endFigure /2/./1/9/: The simple summary /.Extending the User In terfaceW en o w dev elop sev eral pro cedures using the do cumen t and stream primitiv es as w ell asthe /#5Cuser in terface/" pro cedures/. W e start with the apply pro cedure in /2/./2/0/, whic h tak esa stream id/, sid /, a substream id/, subid /, and a function f /, and applies the functionsuccessiv ely to eac h do cumen t in the substream/. Apply do es this b y /#0Crst generating thesubstream /#28b y calling r etrieve /#29 and then applying f to eac h do cumen t in the substream/.pro c appl y /#28 in t sid /, in t subid /, func f /#29b eginlist substream /;in t docid /;substream /:/= r etr iev e /#28 sid /, subid /#29/;foreac h docid in substreamf /#28 sid /, docid /#29/;endFigure /2/./2/0/: The de/#0Cnition of apply /.Com bining the apply pro cedure with T r ansfer w e can de/#0Cne substr e am c opy /#28Fig/-ure /2/./2/1/#29/, whic h copies all the do cumen ts in one substream to another stream/. Sub/-str e am c opy tak es three parameters /| a source stream iden ti/#0Cer/, sid /, a target streamiden ti/#0Cer/, sid/2 /, and a substream iden ti/#0Cer/, subid /| and creates a function/, f /, that
Chapter /2/. The Mo del /3/7tak es a stream id/, s /, and a do cumen t/, d /, as parameters and copies the do cumen t viaT r ansfer from the source stream to the target stream/. Next/, substr e am c opy calls applywith sid /#28the source stream/#29/, the substream subid /, and the newly created f /, whic hresults in eac h do cumen t in the substream subid b eing copied to sid/2 /.pro c substr eam copy /#28 in t sid /, in t sid/2 /, in t subid /#29b eginfunc f /:/= /#15s d/:T r ansf er /#28 s /, sid/2 /, d /#29/;appl y /#28 sid /, subid /, f /#29/;endFigure /2/./2/1/: The de/#0Cnition of substream cop y /.Extending LifestreamsW eh a v e prop osed that agen ts can b e used to extend the functionalit y of Lifestreams/;in this section w e sho wh o w this can b e done b y dev eloping sev eral simple agen ts interms of the Lifestream primitiv es/. In Chapter /5 w e will sho w actual agen ts that extendthe functionalit y of our protot yp e system/.Return Receipt/. A term /#5Creturn receipt/,/" an idea b orro w ed from the p ostal system/,is a mec hanism that enables the sender of a message to receiv e a return piece of mailthat sp eci/#0Ces the time a piece of mail w as receiv ed b y the recipien t/. In the con text ofLifestreams w e de/#0Cne /#5Creceiv ed/" to b e the time the recipien t reads the message at the/#5Cuser in terface/" not the time it is app ended to his stream/. Sev eral commercial electronicmail systems pro vide this functionalit y /. Here w e demonstrate ho w this b eha vior is easilyadded to Lifestreams b y means of a do cumen t agen t/. Note that w e are using sev eralattributes that w eh a v e not previously de/#0Cned/, suc ha s from /. These attributes are allb orro w ed from mail systems and their meanings are ob vious /#28e/.g/./, the from attributeholds the sender of a message/, the to attribute holds the recipien t/, and so on/./#29/.Our do cumen t agen t/, of ev en tt yp e DOCUMENT OPEN /, is giv en in Figure /2/./2/2/. Whenthe DOCUMENT OPEN ev en t o ccurs /#28as the recipien t reads the do cumen t/#29 the agen ti sapplied to the do cumen t and its stream/. The receipt agen t /#0Crst creates a new do cu/-men t called r eceipt /, and then extracts the fr o m and to attributes of the do cumen t/.The agen t then creates a message /#28a c haracter arra y/#29 that includes the text /#5CMessageread on /#28date and time/#29 b y /#28recipien t/#29/,/" using the to /#0Celd to obtain the recipien t/. Thedata p ortion of the do cumen t r eceipt is then c hanged to b e the c haracter arra y mes/-sage/. Finally /, the agen t app ends the new do cumen to n to the stream of the message/'soriginator /#28con tained in the fr o m /#0Celd/#29/.
Chapter /2/. The Mo del /3/8pro c r eceipt ag ent /#28 in t sid /, in t docid /#29b egindo cumen t message /, receipt /;string body /;in t from /, to /;read /#28 sid /, docid /, message /#29/;from /:/= ds extr act /#28 message /, from /#29/;to /:/= ds extr act /#28 message /, to /#29/;body /:/= /#5CMessage read at/" /+ now /+/#5Cb y/"/+ to /;ds r epl ace /#28 receipt /, data /, body /#29/;ds r epl ace /#28 receipt /, created /, now /#29/;ds r epl ace /#28 receipt /, lastread /, now /- /1 /#29/;ds r epl ace /#28 receipt /, state /, false /#29/;app end /#28 from /, receipt /#29/;endFigure /2/./2/2/: The de/#0Cnition of a receipt agen t/.Subscriptions As an example of a stream/-based agen tw e implemen t a /#5Csubscriptionagen t/./" A subscription agen t sits on a stream and copies ev ery new do cumen t to anotherstream/. This could b e used/, for example/, to automate an electronic subscription servicefor an online newsletter or magazine/.W e implemen t subscriptions b y reusing the function f that w e de/#0Cned in sub/-str e am c opy /:func f /:/= /#15s d/:T r ansf er /#28 s /, sid/2 /, d /#29/;As y ou will recall/, f tak es a stream and a do cumen t index a copies the do cumen tt osid/2 /. Here w e de/#0Cne a simple pro cedure substream me that tak es a source streamiden ti/#0Cer /#28the stream w ew an t to subscrib e to/#29 and a target stream iden ti/#0Cer /#28wherew ew an t to receiv e the subscription/#29 and installs a stream agen t/.When this pro cedure is in v ok ed/, a stream agen t is added to the stream source /;eac h time an app end o ccurs the agen ti s e v aluated and the new do cumen t is passed tothe subscrib er /#28the target stream/#29/.
Chapter /2/. The Mo del /3/9pro c subscr ibe me /#28 in t source /, in t target /#29b eginfunc f /:/= /#15s d/:T r ansf er /#28 s /, target /, d /#29/;add agent /#28 source /, f /#29/;endFigure /2/./2/3/: The de/#0Cnition of a subscription agen t/./2/./3 Summa ryW eh a v en o w sp eci/#0Ced a mo del for Lifestreams that is capable of supp orting a do cumen tcollection that is c hronologically ordered along with dynamic /#0Clters that partition thedo cumen ts in to virtual collections/. W eh a v e presen ted this mo del in terms of an /#5Cab/-stract data t yp e/" /#28sp eci/#0Ced using the Linda co ordination language/#29 and implemen teda /#5Cuser in terface/" on top of the mo del/. In addition/, w eh a v e pro vided a means ofextending and automating tasks in the mo del through agen ts/.In the next c hapter w e use this mo del as a starting p oin t for a researc h protot yp e/.In the pro cess w e will tak e the mo del from a formal description to a real system thatsatis/#0Ces man y of our real/-w orld needs/, suc h as e/#0Eciency and compatibilit y with existingto ols/.
Chapter /3The Implemen tationOur mo del in Chapter /2 pro vides a seman tic foundation on whic h to build a Lifestreamsprotot yp e/, but it lea v es man y /#5Csystems/" issues unde/#0Cned/. Consider for example ourde/#0Cnition of substreaming/. While it pro vides a clean seman tics that describ es theinformation retriev al and /#0Cltering asp ects of the substream construct/, the de/#0Cnitiondo esn/'t address the question of ho w substreams can b e implemen ted e/#0Ecien tly /.Ov er the next t w oc hapters w e will discuss these issues and describ e our e/#0Bortsdesigning and implemen ting a /#5Cpro of of concept/" for the Lifestreams mo del/. Our e/#0Bortsha v e pro ceeded on man y fron ts/, including user in terface design/, system in tegration/,indexing and retriev al/, m ulti/-platform supp ort/, agen t tec hnologies/, univ ersal access/,securit y and p erformance/. The result is a system that is robust enough to see daily usefor the last y ear/; nev ertheless the system is not a commercial/-grade application/. W eb eliev e it is a go o d starting p oin t for further researc h and dev elopmen t /#28suc h directionsare suggested in Chapter /9/#29/.In this c hapter w e describ e the /#5Cb ehind the scenes/" infrastructure that is needed tosupp ort Lifestreams/. W e b egin b y describing the general arc hitecture and then mo v eon to the v arious mo dules in the system/. In the next c hapter w e describ e the systemfrom the p ersp ectiv e of the user in terface/./3/./1 General Arc hitectureLifestreams is a net w ork/-based system that allo ws access to a lifestream from an ya v ailable net w ork/-connected clien t/. As suc h/, the Lifestreams arc hitecture is split in toclien t and serv er parts/.The Lifestreams serv er is primarily a /#5Cstorage system/" that main tains the streams/,substreams and do cumen ts of one or more users/. This storage system can b e conceptu/-ally divided in to three comp onen ts/: the do cumen t collection/, a do cumen t con ten t index/,and the substreams/. Our implemen tation mirrors these comp onen ts/. The serv er is asingle/-threaded system that is capable of supp orting a n um b e ro fs i m ultaneous clien ts/4/0
Chapter /3/. The Implemen tation /4/1that comm unicate through a remote pro cedure call in terface /#28ONR RPC/#29 written ontop of TCP/#2FIP /. Data is exc hanged and stored in a mac hine/-indep en den t format basedon the external data represen tation /#28XDR/#29 dev elop ed b y Sun Microsystems /#5BSte/9/1 /#5D/.This has allo w ed us to supp ort serv ers and clien ts on sev eral platforms /#28Solaris/, SunOS/, and AIX/#29/.Lifestreams clien ts include user in terfaces/, agen ts and daemons pro cesses that in/-teract with the serv er/. The in terfaces pro vide a w a y for users to in teract with a stream/.Agen ts often in teract with a stream to automate tasks/. Daemon clien ts p erform mon/-itoring and gatew a y functions within Lifestreams/; for instance a daemon ma y pro videa gatew a y to and from the In ternet mail system/. W ec o v er in terfaces in detail in thenext c hapter and w e will brie/#0Dy return to daemons later in this c hapter/./3/./2 Serv er InfrastructureW en o w describ e the serv er/'s three storage systems/: the basic /#5Cdo cumen t collection/"mo dule that main tains and pro vides access to the do cumen ts/, the indexing system thatsupp orts e/#0Ecien t con ten t/-based searc h/, and the substreams mec hanism/./3/./2/./1 Do cumen t Collection SubsystemThe do cumen t collection is the simplest subsystem within the serv er/; it main tainsan addressable set of do cumen ts and implemen ts do cumen t access functions/. Eac hdo cumen t/'s attributes are group ed in to a record with one /#0Celd p er attribute /#28recallthat do cumen ts are represen ted b y attribute/#2Fv alue pairs/#29/. These records are storedin a dynamic arra y that w e call the /#5Csk eleton/" /#28Figure /3/./1/#29/. Eac h /#0Celd stores thev alue of its attribute /#28e/.g/./, the state /#0Celd records a b o olean v alue/#29 with one exception/.The data attribute/, whic h represen ts the actual con ten t of the do cumen t/, stores a/#5Cp oin ter/" to its v alue rather than the v alue itself/. Giv en that the do cumen t con ten tma y b e quite large /#28p ossibly megab ytes/#29/, sw apping the sk eleton in and out of mainmemory is prohibitiv ei fi t c o n tains the con ten ts of all do cumen ts/. Instead w e store thedo cumen t con ten t on disk and its /#0Cle path in the data attribute and sw ap the con ten tsin only when needed/. The sk eleton itself is also sw app ed in and out of core accordingto the serv er/'s needs/. W e curren tly sw ap the en tire stream in toto /; in order to supp ortlarge lifestreams /#28h undreds of thousands of do cumen ts/#29 the serv er will need to emplo ya paging sc heme/.The do cumen t subsystem pro vides three p oin ts of access to the do cumen ts/: dc read /,dc write and dc append /. These functions pro vide the functionalit y describ ed in Chap/-ter /2/: dc read retriev es a sp eci/#0Cc do cumen tb y its index in the sk eleton/, dc write re/-places a do cumen t in the sk eleton /#28assuming it is writable/#29/, and dc append adds a newdo cumen t to the sk eleton b y dynamically extending the arra yb y one and adding thedo cumen t to the end slot/. W e will see ho w the c hronological stream and substreamsin teract with the sk eleton shortly /.
Chapter /3/. The Implemen tation /4/2
State:
Creator:
Created:
Lastread:
Content-type:
Permissions:
To:
From:
Cc:
Bcc:
.
.
.
Size:
Data:0
gelernter
838135580
838135601
test/plain
644
efreeman
gelernter
nick
.
.
.
1048
/scratch/lifestreams/Defreeman/LSDOC.14901State:
Creator:
Created:
Lastread:
Content-type:
Permissions:
To:
From:
Cc:
Bcc:
.
.
.
Size:
Data:0
gelernter
838135580
838135601
test/plain
644
efreeman
gelernter
nick
.
.
.
1048
/scratch/lifestreams/Defreeman/LSDOC.14901State:
Creator:
Created:
Lastread:
Content-type:
Permissions:
To:
From:
Cc:
Bcc:
.
.
.
Size:
Data:0
gelernter
838135580
838135601
test/plain
644
efreeman
gelernter
nick
.
.
.
1048
/scratch/lifestreams/Defreeman/LSDOC.14901State:
Creator:
Created:
Lastread:
Content-type:
Permissions:
To:
From:
Cc:
Bcc:
.
.
.
Size:
Data:0
gelernter
838135580
838135601
test/plain
644
efreeman
gelernter
nick
.
.
.
1048
/scratch/lifestreams/Defreeman/LSDOC.14901State:
Creator:
Created:
Lastread:
Content-type:
Permissions:
To:
From:
Cc:
Bcc:
.
.
.
Size:
Data:0
gelernter
838135580
838135601
test/plain
644
efreeman
gelernter
nick
.
.
.
1048
/scratch/lifestreams/Defreeman/LSDOC.14901State:
Creator:
Created:
Lastread:
Content-type:
Permissions:
To:
From:
Cc:
Bcc:
.
.
.
Size:
Data:0
gelernter
838135580
838135601
test/plain
644
efreeman
gelernter
nick
.
.
.
1048
/scratch/lifestreams/Defreeman/LSDOC.14901State:
Creator:
Created:
Lastread:
Content-type:
Permissions:
To:
From:
Cc:
Bcc:
.
.
.
Size:
Data:0
gelernter
838135580
838135601
test/plain
644
efreeman
gelernter
nick
.
.
.
1048
/scratch/lifestreams/Defreeman/LSDOC.14901State:
Creator:
Created:
Lastread:
Content-type:
Permissions:
To:
From:
Cc:
Bcc:
.
.
.
Size:
Data:0
gelernter
838135580
838135601
test/plain
644
efreeman
gelernter
nick
.
.
.
1048
/scratch/lifestreams/Defreeman/LSDOC.14901State:
Creator:
Created:
Lastread:
Content-type:
Permissions:
To:
From:
Cc:
Bcc:
.
.
.
Size:
Data:0
gelernter
838135580
838135601
test/plain
644
efreeman
gelernter
nick
.
.
.
1048
/scratch/lifestreams/Defreeman/LSDOC.14901State:
Creator:
Created:
Lastread:
Content-type:
Permissions:
To:
From:
Cc:
Bcc:
.
.
.
Size:
Data:0
gelernter
838135580
838135601
test/plain
644
efreeman
gelernter
nick
.
.
.
1048
/scratch/lifestreams/Defreeman/LSDOC.14901State:
Creator:
Created:
Lastread:
Content-type:
Permissions:
To:
From:
Cc:
Bcc:
.
.
.
Size:
Data:0
gelernter
838135580
838135601
test/plain
644
efreeman
gelernter
nick
.
.
.
1048
/scratch/lifestreams/Defreeman/LSDOC.14901State:
Creator:
Created:
Lastread:
Content-type:
Permissions:
To:
From:
Cc:
Bcc:
.
.
.
Size:
Data:0
gelernter
838135580
838135601
test/plain
644
efreeman
gelernter
nick
.
.
.
1048
/scratch/lifestreams/Defreeman/LSDOC.14901State:
Creator:
Created:
Lastread:
Content-type:
Permissions:
To:
From:
Cc:
Bcc:
.
.
.
Size:
Data:0
gelernter
838135580
838135601
test/plain
644
efreeman
gelernter
nick
.
.
.
1048
/scratch/lifestreams/Defreeman/LSDOC.14901State:
Creator:
Created:
Lastread:
Content-type:
Permissions:
To:
From:
Cc:
Bcc:
.
.
.
Size:
Data:0
gelernter
838135580
838135601
test/plain
644
efreeman
gelernter
nick
.
.
.
1048
/scratch/lifestreams/Defreeman/LSDOC.14901
State:
Creator:
Created:
Lastread:
Content-type:
Permissions:
To:
From:
Cc:
Bcc:
.
.
.
Size:
Data:0
gelernter
838135580
838135601
test/plain
644
efreeman
gelernter
nick
.
.
.
1048
/scratch/lifestreams/Defreeman/LSDOC.14901State:
Creator:
Created:
Lastread:
Content-type:
Permissions:
To:
From:
Cc:
Bcc:
.
.
.
Size:
Data:0
gelernter
838135580
838135601
test/plain
644
efreeman
gelernter
nick
.
.
.
1048
/scratch/lifestreams/Defreeman/LSDOC.14901State:
Creator:
Created:
Lastread:
Content-type:
Permissions:
To:
From:
Cc:
Bcc:
.
.
.
Size:
Data:0
gelernter
838135580
838135601
test/plain
644
efreeman
gelernter
nick
.
.
.
1048
/scratch/lifestreams/Defreeman/LSDOC.14901State:
Creator:
Created:
Lastread:
Content-type:
Permissions:
To:
From:
Cc:
Bcc:
.
.
.
Size:
Data:0
gelernter
838135580
838135601
test/plain
644
efreeman
gelernter
nick
.
.
.
1048
/scratch/lifestreams/Defreeman/LSDOC.14901State:
Creator:
Created:
Lastread:
Content-type:
Permissions:
To:
From:
Cc:
Bcc:
.
.
.
Size:
Data:0
gelernter
838135580
838135601
test/plain
644
efreeman
gelernter
nick
.
.
.
1048
/scratch/lifestreams/Defreeman/LSDOC.14901State:
Creator:
Created:
Lastread:
Content-type:
Permissions:
To:
From:
Cc:
Bcc:
.
.
.
Size:
Data:0
gelernter
838135580
838135601
test/plain
644
efreeman
gelernter
nick
.
.
.
1048
/scratch/lifestreams/Defreeman/LSDOC.14901State:
Creator:
Created:
Lastread:
Content-type:
Permissions:
To:
From:
Cc:
Bcc:
.
.
.
Size:
Data:0
gelernter
838135580
838135601
test/plain
644
efreeman
gelernter
nick
.
.
.
1048
/scratch/lifestreams/Defreeman/LSDOC.14901State:
Creator:
Created:
Lastread:
Content-type:
Permissions:
To:
From:
Cc:
Bcc:
.
.
.
Size:
Data:0
gelernter
838135580
838135601
test/plain
644
efreeman
gelernter
nick
.
.
.
1048
/scratch/lifestreams/Defreeman/LSDOC.14901State:
Creator:
Created:
Lastread:
Content-type:
Permissions:
To:
From:
Cc:
Bcc:
.
.
.
Size:
Data:0
gelernter
838135580
838135601
test/plain
644
efreeman
gelernter
nick
.
.
.
1048
/scratch/lifestreams/Defreeman/LSDOC.14901State:
Creator:
Created:
Lastread:
Content-type:
Permissions:
To:
From:
Cc:
Bcc:
.
.
.
Size:
Data:0
gelernter
838135580
838135601
test/plain
644
efreeman
gelernter
nick
.
.
.
1048
/scratch/lifestreams/Defreeman/LSDOC.14901State:
Creator:
Created:
Lastread:
Content-type:
Permissions:
To:
From:
Cc:
Bcc:
.
.
.
Size:
Data:0
gelernter
838135580
838135601
test/plain
644
efreeman
gelernter
nick
.
.
.
1048
/scratch/lifestreams/Defreeman/LSDOC.14901State:
Creator:
Created:
Lastread:
Content-type:
Permissions:
To:
From:
Cc:
Bcc:
.
.
.
Size:
Data:0
gelernter
838135580
838135601
test/plain
644
efreeman
gelernter
nick
.
.
.
1048
/scratch/lifestreams/Defreeman/LSDOC.14901State:
Creator:
Created:
Lastread:
Content-type:
Permissions:
To:
From:
Cc:
Bcc:
.
.
.
Size:
Data:0
gelernter
838135580
838135601
test/plain
644
efreeman
gelernter
nick
.
.
.
1048
/scratch/lifestreams/Defreeman/LSDOC.14901State:
Creator:
Created:
Lastread:
Content-type:
Permissions:
To:
From:
Cc:
Bcc:
.
.
.
Size:
Data:0
gelernter
838135580
838135601
test/plain
644
efreeman
gelernter
nick
.
.
.
1048
/scratch/lifestreams/Defreeman/LSDOC.14901...
The SkeletonState:
Creator:
Created:
Lastread:
Content-type:
Permissions:
To:
From:
Cc:
Bcc:
...
Id:
Data:0
gelernter838135580838135601test/plain644efreemangelernternick
.
..14901/scratch/lifestreams/Defreeman/LSDOC.14901
A Document RecordDisk Storage
TimeFigure /3/./1/: The Do cumen t Storage Subsystem/.Eac h of these functions requires a securit yc hec k/. Our curren t securit y mo del islo osely based on the UNIX securit y mec hanism/. Eac h do cumen t record con tains a/#0Celd called permissions that is represen ted b y a bit/#0Celd and describ es who ma y readand write the do cumen t/. As in UNIX/, the gran ularit yo fc o n trol is o wner/, group/, andw orld/. Eac h Lifestreams request is accompanied b y a /#5Ccreden tial/" that describ es therequester/; this is compared against the v alues in the bit/#0Celd b efore access is allo w ed/./3/./2/./2 Indexing SubsystemE/#0Ecien t and accurate computation of substreams is crucial to the success of Life/-streams/. W eh a v e already argued that naming and static directories are sub/-optimalmeans of organizing information/. W e can deriv e a more e/#0Bectiv e means of retriev alfrom the information already inheren t and readily a v ailable in a do cumen t collection/#28as sho wn in /#5BGJSO/9/1/#5D/#29/, namely the do cumen t/'s con ten t/.Ho wd o w ea c hiev e con ten t/-based retriev al with reasonable p erformance/? Bruteforce sequen tial searc h is not su/#0Ecien t giv en the time it requires/. F or example/, a one/-k eyw ord searc ho v er text do cumen ts on a Sun Sparc /1/0 tak es on the order of one secondp er megab yte/. Giv en a lifestream of fort y megab ytes /#28arguably a small stream/#29 a findop eration w ould k eep the user w aiting fort y seconds/. This is for one k eyw ord/; w e oftenw an t to searc h for more complex queries /#28e/.g/./, /#5Cda vid and lifestreams and /#28not scott/#29/"/#29/.Suc h a query could tak e min utes using brute force metho ds/.Information retriev al strategies for large static do cumen t collections ha v e b een un/-der dev elopmen t for the last decade or so/. In general these systems ha v e traded space
Chapter /3/. The Implemen tation /4/3and storage time for faster p erformance at retriev al time/. Most mo dern systems usesome form of in v erse index /#5BFE/9/2 /#5D/. In v erse indices or in v erse /#0Cles map from searc hterms to do cumen ts/. F or example/, in the in v erse index depicted b elo w/, eac hw ordmaps to a set of do cumen t iden ti/#0Cers/.
apple 11019275561
fertig 1799 114210
computer 4095
yoyo 3710175187.
.....
...Keyw ord lo okups are p erformed b y retrieving the list of do cumen ts that matc h thek eyw ord via the in v erted /#0Cle/. By main taining an in v erted /#0Cle of a do cumen t collec/-tion w e can p erform con ten t/-based retriev al in time prop ortional to the n um b er of thek eyw ords in the query
/1/. Finding the k eyw ord en try in the in v erted /#0Cle is usually ac/-complished through a hash table or B/-tree /#5BFE/9/2 /#5D/. Complex queries/, suc h as b o oleanexpressions/, are accomplished b y taking the in tersection/, union and di/#0Berence b et w eendo cumen t lists retriev ed from the in v erted /#0Cle/.
Inverse IndexIndexingLexerSort
StemmerStopList/Dups
IDFigure /3/./2/: The Indexing Subsystem/.The Lifestreams/' serv er main tains an in v erted /#0Cle for eac h lifestream and indexesa do cumen t through the in index pro cedure/. Figure /3/./2 sho ws a conceptual pictureof the indexing system/. New do cumen ts are parsed and their con ten ts are added to/1With the implemen tation tec hniques discussed later in this section/, query computation has anexp ected running time of O /#28 N /#29 p er b o olean op eration/, where N is the n um b er of do cumen ts in thecollection/.
Chapter /3/. The Implemen tation /4/4the in v erted /#0Cle /#28w e will describ e the pro cess shortly/#29/. The curren t protot yp e indexesEnglish ASCI I text /#0Cles/. F or non/-text do cumen ts w e still index /#5Cheader/" informationand user supplied attributes/. Other w ork in the /#0Celd of information retriev al is ex/-ploring m ulti/-lingual and image/-based indexing metho ds /#5BFlu/, BFJ
/+/9/5/#5D/. Our indexingmetho ds are curren tly of the most basic sort/, but w e b eliev e that if Lifestreams is use/-ful/, ev en using limited tec hniques/, it can only pro v e more useful with more p o w erfulindexing tec hnologies/. Moreo v er/, giv en that w eh a v e designed Lifestreams as three/#5Cmo dular/" subsystems/, more adv anced indexing tec hnologies can easily b e added/. W eno w describ e our indexing pro cedure in detail/.Lexing/, Stop w ords and StemmingP arsing a text /#0Cle for inclusion in the in v erted /#0Cle is a m ulti/-step pro cess/. T o create thein v erse index of a text do cumen tw e /#0Crst break the text in to tok ens/. In the Lifestreamsserv er w e do this b y treating all punctuation and whitespace c haracters as delimiters/.An y delimited piece of text is treated as a tok en/.W e then con v ert tok ens in to canonical form b y applying the P orter algorithm/#5BP or/8/0 /#5D for su/#0Ex stripping/. This algorithm is one of a class of algorithms for strip/-ping the su/#0Exes /#28and p ossibly pre/#0Cxes/#29 from a w ord/, lea ving a stem/. F or instance/,stemming the w ords /#5Crunner/,/" /#5Crunning/,/" and /#5Crun/" all result in a stem of /#5Crun/./"There are t w o b ene/#0Cts to stemming w ords/: /#0Crst/, the o v erall size of the index can b edecreased substan tially /#28on the order of /3/0/#25 /#5BFE/9/2 /#5D/#29/. Second/, retriev al can b e moree/#0Bectiv e as do cumen ts that con tain w ords with common stems will satisfy the samesearc h query /. The disadv an tages are that retriev al is not as precise /#28although/, in someresp ects this is b ene/#0Ccial/, as noted ab o v e/#29 and indexing in general is not easily amenableto more /#0Dexible /#5Cwildcard/" searc hing /| suc h as using regular expressions as k eyw ordsor allo wing for missp ellings/. Ongoing w ork /#28in the information retriev al comm unit y/#29is ho w ev er making progress in these areas b y com bining fast /#28Bo y er/-Mo ore/#29 searc hingwith course/-grained indexing /#5BWM/9/4 /, MW/9/3 /#5D/.W e then sort the list of tok ens and remo v ea n y duplicate tok ens/. Duplicates ma yo ccur in the do cumen to r m a y result from the stemming pro cess /#28where w ords withdi/#0Beren t su/#0Exes ma y result in the same w ord after stemming/#29/.The next step in the indexing pro cess is to remo v e noise/. T ext con tains a largeprop ortion of w ords that o ccur to o frequen tly to b e of use for retriev al purp oses/. Be/-cause the w ords app ear in a large p ercen tage of do cumen ts/, their use as searc h termsis non/-discriminating/. Remo ving these w ords b efore indexing signi/#0Ccan tly reduces thetotal amoun to fw ords that need to b e indexed and the o v erall space requiremen ts forthe disk index /#5BFE/9/2 /#5D/. Examples of stop w ords are/:a although become co enough fourabout always been could etc fromabove amongst before couldn/'t even further
Chapter /3/. The Implemen tation /4/5according an beforehand d ever gacross another begin did every hactually any behind didn/'t everyone hadadj anyone below do everything hasn/'tafter anything beside does everywhere haveafterwards anywhere between doesn/'t except haven/'tagain are beyond down f heagainst aren/'t billion during few henceall around both e fifty heralmost as but each first herealone at by eight five hereafteralong b c either for herebyalready be can else formerly hereinalso became cannot elsewhere forty herselfat because caption ending found him /././.These w ords are mainly common v erbs/, pronouns and prep ositions/. Lifestreams main/-tains a system/-de/#0Cned /#5Cnegativ e dictionary/" or /#5Cstoplist/" of these w ords /#28our stoplistw as tak en from the w ords in the W AIS stoplist /#5BKah/9/1 /#5D/#29 and in the lexing pro cess com/-pares eac h tok en against the stop w ords/. This stoplist resides in a hash table /#28i/.e/./, eac hstop w ord is a hash table k ey/#29 and a lo okup is p erformed on eac h tok en/. If the tok en isfound in the hash table then it is discarded/. Otherwise it is added to the in v erse index/#28as describ ed b elo w/#29/. One system/-wide stoplist is curren tly main tained b y the serv erand so the same negativ e dictionary is applied to all users/. F uture systems should b eable to emplo y custom dictionaries for eac h user/.Last/, our indexing system allo ws k eyw ords to b e tagge d /.F or instance/, a k eyw ordapp earing in the title of a do cumen tw ould b e tagged as a /#5Ctitle/" k eyw ord/. This tagcan then b e used in searc h queries to iden tify do cumen ts with a sp eci/#0Cc k eyw ord intheir title/. Lifestreams automatically p erforms tagging based on sev eral attributes/,suc h as the con ten tt yp e /#28image/, text/, audio/, etc/./#29 and mail/-related attributes /#28to/,from/, sub ject/#29/.Pro cessing Do cumen tsT o summarize/; to index a do cumen t id w e/:/1/. Lex the do cumen ti n to a list T of tok ens/./2/. Stem all t /2T /./3/. Sort T and remo v ea n y duplicates/./4/. Giv en a stoplist S /,w e let T /= T/, S /./5/. Add id to the do cumen t list of eac h t /2T in the in v erted index/.
Chapter /3/. The Implemen tation /4/6Computing Searc h QueriesWhen a find op eration is initiated b y a Lifestreams user/, the serv er p erforms a searc h/.W en o w brie/#0Dy describ e the general task of computing a list of do cumen ts from asearc h query /. Lifestreams curren tly supp orts general k eyw ord searc hes and searc hes viab o olean queries /#28k eyw ords comp osed with and /, or and not /#29/. There are other mo delsfor pro viding a searc h capabilit y in Lifestreams/, suc h as database query languages /#28to ocomplex and cum b ersome for the a v erage user/#29 and Shneiderman/'s dynamic queries/#5BShn/9/4/#5D/. Shneiderman/'s w ork suggests an in teresting metho d of searc hing o v er a streamvia slider bars/, but the idea still needs w ork to scale b ey ond small databases /#28curren tlyon the order of /1/0/0/0 records or less/#29/.
Ids from Set
Parse TreeSet Merge
Create Sets
INVERSE INDEX3, 24, 907, 2002, ...
DOCUMENT IDS
from:gelernter and lifestreamsFigure /3/./3/: In searc h/: computing a substream/.Lifestreams/' index subsystem pro vides computation of searc h queries through thefunction in search /, whic h tak es a b o olean searc h query and a stream and returnsa set of do cumen ts that satisfy the query /#28Figure /3/./3/#29/. The in search function isimplemen ted as follo ws/: First/, eac h query is parsed in to a parse tree/. F or eac h leafno de /#28k eyw ord/#29 a set data structure is created
/2/. Sets are implemen ted with hash tables/#28a common tec hnique in information retriev al systems/#29/. F or eac h set a hash table iscreated and is /#5Ck ey ed/" with ev ery do cumen t iden ti/#0Cer con tained in the in v erse /#0Clefor the corresp onding k eyw ord/. By /#5Ck ey ed/" w e mean that eac h do cumen t iden ti/#0Ceris added as a k ey to the hash table/. Hash tables as an implemen tation strategy ha v ethe adv an tage that they are more e/#0Ecien t in their use of space than other approac hes/2This could also b e accomplished /#28p erhaps more e/#0Ecien tly/#29 b y searc hing through the do cumen tdirectory /.
Chapter /3/. The Implemen tation /4/7/#28suc h as bit/-v ectors/#29/, do not limit the maxim um size of the do cumen t collection andha v e go o d exp ected running time c haracteristics /#28see /#5BFE/9/2 /#5D/#29/.Once w eh a v e created a set for eac hk eyw ord in the searc h query /, the op eratorsare applied depth/-/#0Crst/: and is accomplished b y taking the in tersection of t w o sets /, orb y the union/, and not b y subtracting the set from a set that con tains all do cumen tsin the collection/. The result is one set whic h con tains the do cumen ts that satisfy thesearc h criteria
/3/. A similar tec hnique is used when /#0Cltering do cumen ts in to existingsubstreams /#28discussed b elo w/#29/.W e will presen t data on searc h times in Chapter /6/./3/./2/./3 Substreams Storage SubsystemThe substream subsystem manages the substreams of a stream/, pro viding supp ort forthe creation of virtual do cumen t collections and con tin ual information /#0Cltering viap ersisten t substreams/. Here w e follo w the mo del in Chapter /2 b y treating the mainstream /#28all do cumen ts in the lifestream/#29 as just another substream/. Note that thesk eleton is not a go o d candidate for the main c hronologically/-ordered stream b ecauseit is ordered b y eac h do cumen ts /#5Creal/" creation time/, not its time within the Lifestreamssystem/. In Lifestreams w e can reset the time of the system to the future and createdo cumen ts there/. The sk eleton orders do cumen ts b yp h ysical creation time/; w e need adata structure for the c hronological stream that orders do cumen ts b y virtual time/.F or this data structure w e use a dynamic arra y of indices that p oin t bac k to thedo cumen ts k eleton/. The substream data structure holds this arra y /, a cop y of the searc hquery and a paren t substream iden ti/#0Cer /#28w e will see ho w the searc h query and paren tiden ti/#0Cer are used in the next section/#29/. In Figure /3/./4 w e sho w three substreams/: themain substream /#28substream /0/#29 has a paren t iden ti/#0Cer of /0/, a searc h query of /"/*/" /#28recallthe F/0
substream from Chapter /2/#29 and an arra y that con tains a do cumen t index forev ery do cumen t in the collection/. The other t w o substreams are represen ted in a similarmanner/, although they ma y con tain only a subset of the do cumen ts in the collection/.Note that substream /1 has a paren t iden ti/#0Cer of /0 /#28the main stream/#29/, while substream/2 has a paren t iden ti/#0Cer of /1 /#28as it w as created incremen tally from substream /1/#29/. Allthe do cumen t indices in eac h substream are sorted b y the /#5Cvirtual/" creation time ofeac h do cumen t in the sk eleton/.A substream is created b y calling in search with the searc h query /. The /#28p ossiblyempt y/#29 list of do cumen ts returned from in search is then installed /#28sorted b y creationtime/#29 as a new substream along with the searc h query and paren t iden ti/#0Cer/./3Later in this c hapter w e will see that in search /, in order to ac hiev e incremen tal substreaming/,also tak es a paren t substream id and AND s the results with the paren t substream b efore returning theset of do cumen ts/.
Chapter /3/. The Implemen tation /4/8
0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
17291.
..“*”Pid: 0
2010
2154
5091
7861
9540
10380
14581
16751“gelernter and 
lifestreams”Pid: 0
14581
16751“defense”Pid: 1Substream 0 Substream 1 Substream 2Figure /3/./4/: The Substream Data Structure/.
Chapter /3/. The Implemen tation /4/9Filtering New Do cumen tsWhen a new do cumen t arriv es or is created/, it is added to the do cumen t collectionvia dc append /. Next/, in index is called and the do cumen t is prop erly indexed/. Lastss process substreams is called and/, for eac h substream/, the corresp onding searc hquery is applied to the new do cumen t/. If the do cumen t passes the searc h query /, thenit is added to the end of the substream/.
Boolean from Set
Parse TreeBoolean Merge
Create Sets
INVERSE INDEXTrue
BOOLEAN VALUE
“from:gelernter and lifestreams”, 127Figure /3/./5/: In matc h/: computing a do cumen ts mem b ership in a substream/.T o apply a searc h query to a do cumen t /#28rather than a do cumen t collection/#29 w e callin match /#28see Figure /3/./5/#29/. This function op erates analogously to in search /: First/,eac h query is parsed in to a parse tree/. F or eac h leaf no de /#28k eyw ord/#29 w e retriev e thedo cumen t list/. If our new do cumen t exists in that do cumen t list/, w e replace the leafno de with a b o olean true /, otherwise with a false /. The b o olean op erations on thein terior no des are then pro cessed/, resulting in a b o olean v alue/. If the resulting v alueis true /, the new do cumen t is added to the substream/./3/./2/./4 Putting it All T ogetherW en o w presen t the serv er as a whole b y describing ho w the subsystems w ork together/.W ed o s ob y supplying the implemen tation details for the stream primitiv es /#28 r e ad /, write /,app end /, r etrieve and /#0Clter /#29 that w e dev elop ed in Chapter /2/. Eac h of these pro ceduresare implemen ted as remote pro cedure calls that can b e in v ok ed from a clien t/.
Chapter /3/. The Implemen tation /5/0struct document /*Read/#28int sid/, int docid/#29 /#7Breturn dc/_read/#28sid/, docid/#29/;/#7Dvoid Write/#28int sid/, int docid/, struct document /*doc/#29 /#7Bdc/_write/#28sid/, docid/, doc/#29/;/#7DFigure /3/./6/: De/#0Cnition of the Serv er Read and W rite Routines/.Read/#2FW riteRead /#28Figure /3/./6/#29 is implemen ted directly through the do cumen t storage subsystem/.Read tak es a stream iden ti/#0Cer and a do cumen t iden ti/#0Cer and calls dc read /, returningits result/. Similarly /, W rite /#28also Figure /3/./6/#29 tak es a stream iden ti/#0Cer/, a do cumen tiden ti/#0Cer and a do cumen t record and calls dc write /.App endOur de/#0Cnition of app end in Chapter /2 adds a do cumen t to a stream/.
/4In our proto/-t yp e/, app end /#28Figure /3/./7/#29 tak es a stream iden ti/#0Cer and a do cumen t record and callsdc append /. Recall that dc append extends the sk eleton /#28the do cumen t collection/, notthe main stream/#29 b y one and adds the do cumen t record/. The data /#0Celd of the do cumen tis sw app ed out to disk in the pro cess /#28to reduce core memory usage/#29/. App end m ustalso tak e care of substream and in v erse index housek eeping/: app end calls in index /,whic h adds the do cumen t con ten ts to the in v erse index/. App end then iterates o v er theall existing substreams and calls in match for eac h one/. F or the calls of in match thatreturn true /, the do cumen t id is added to the appropriate substream/. Note that theone exception is substream /0 /#28the main stream/#29/, whic h alw a ys passes the conditional/.Last/, app end returns the do cumen t id /.FilterFilter tak es a stream iden ti/#0Cer/, a paren t substream iden ti/#0Cer and a searc h query andcreates a new substream/. Filter /#28Figure /3/./8/#29 /#0Crst creates a structure and an arra yto hold the new substream/. The structure holds the arra y /, the searc h query and theparen t substream iden ti/#0Cer/. Filter then calls in search with the searc h query andadds all do cumen t returned to the substream/'s arra y /. Last/, it returns a new iden ti/#0Cerfor the substream/. If the reader returns to the de/#0Cnition of app end ab o v e it shouldb ecome apparen th o w the substream is built o v er time as new do cumen ts arriv e/./4It also supp orts stream agen ts/, whic h our researc h protot yp e do es not directly supp ort/.
Chapter /3/. The Implemen tation /5/1int Append/#28int sid/, struct document /*doc/#29 /#7Bint docid/, len/, i/;docid /= dc/_append/#28sid/, doc/#29/;in/_index/#28docid/, doc/#29/;for/#28i/=/0/;i/#3C skeleton/#5Bsid/#5D/.subnums/; i/+/+/#29 /#7Bif /#28i /=/= /0 /|/| in/_match/#28sid/, docid/, i/#29/#29 /#7B/#2F/* dynamically extends by one document /*/#2F
len /= skeleton/#5Bsid/#5D/.substream/#5B/0/#5D/.le n/+/+/;skeleton/#5Bsid/#5D/.substream/#5Bi/#5D/.d ocs /=realloc/#28skeleton/#5Bsid/#5D/.su bstream /#5Bi/#5D/.doc s/,len /* sizeof/#28int/#29/#29/;skeleton/#5Bsid/#5D/.substream/#5Bi/#5D/.d ocs/#5Blen /-/1/#5D /= docid/;/#7D/#7Dreturn docid/;/#7DFigure /3/./7/: De/#0Cnition of the Serv er App end Routine/.
Chapter /3/. The Implemen tation /5/2int Filter/#28int sid/, int pid/, char /*sq/#29 /#7Bint subid/, len/, /*docs/;len /= in/_search/#28sid/, pid/, sq/, docs/#29/;subid /= skeleton/#5Bsid/#5D/.subnums/+/+/;skeleton/#5Bsid/#5D/.substream /=realloc/#28skeleton/#5Bsid/#5D/.substr eam/,subid/*sizeof/#28struct substream/#29/#29/;skeleton/#5Bsid/#5D/.substream/#5Bsubid /#5D/.len /= len/;skeleton/#5Bsid/#5D/.substream/#5Bsubid /-/1/#5D/.sq /= strdup/#28sq/#29/;skeleton/#5Bsid/#5D/.substream/#5Bsubid /-/1/#5D/.pid /= pid/;skeleton/#5Bsid/#5D/.substream/#5Bsubid /-/1/#5D/.doc s/=malloc/#28sizeof/#28int/#29 /* len/#29/;for/#28i/=/0/;i/#3Clen/;i/+/+/#29 /#7Bskeleton/#5Bsid/#5D/.substream/#5Bs ubid/#5D/.d ocs/#5Bi/#5D /= docs/#5Bi/#5D/;/#7Dreturn subid/;/#7DFigure /3/./8/: De/#0Cnition of the Serv er Filter Routine/.
Chapter /3/. The Implemen tation /5/3int /*Retrieve/#28int sid/, int subid/#29 /#7Bint len/, i/;int /*docs/;len /= skeleton/#5Bsid/#5D/.substream /#5Bsubid/#5D /.len/;docs /= /#28int /*/#29 malloc/#28len /* sizeof/#28int/#29/#29/;for/#28i/=/0/;i/#3Clen/;i/+/+/#29 /#7Bdocs/#5Bi/#5D /= skeleton/#5Bsid/#5D/.substream/#5Bsubid /#5D/.docs/#5B i/#5D/;/#7Dreturn docs/;/#7DFigure /3/./9/: De/#0Cnition of the Serv er Retriev e Routine/.Retriev eRetriev e /#28Figure /3/./8/#29 is a simple pro cedure/: it tak es a stream iden ti/#0Cer and a sub/-stream id /#28returned from the call to /#0Clter /#29 and returns the do cumen t iden ti/#0Cersp oin ted to b y the arra y of the corresp onding substream/.W es p e n t a go o d deal of time in Chapter /2 describing ho w substreams can b eincremen tally created from other substreams/. The reader ma y ask ho w this w orks inour researc h protot yp e/. It is implemen ted as follo ws/: the substream data structuremain tains a list of substreams and their /#5Cparen t/" substreams/. When in search andin match are called/, they AND the result with the paren t substream/. The result isincremen tal substreaming/./3/./2/./5 Realit y Chec kThe e/#0Eciency of our indexing co de is imp ortan t to the success of our protot yp e andw ew ould lik e to b e in the /#5Cballpark/" when compared to existing commercial indexingsystems/. Here w e pro vide a comparison with the W AIS indexing system /#5BKah/9/1/#5D /#28no wcalled Isearc h/#29 whic h has b een widely used for commercial and academic informationretriev al/. Although it is a more adv anced indexing system/, W AIS is similar to oursystem/.F or our tests w e indexed a /2/1/./8 megab yte collection of newsgroup articles from thesoc newsgroup hierarc h y using W AIS and the Lifestreams serv er/. The results /#28gatheredon an unloaded Sun Sparc /1/0/#29 are pro vided in T able /3/./1/. W e see that while Lifestreamsw as roughly /2/5/#25 faster indexing the collection it used ab out /6/0/#25 more space/. This isto b e exp ected giv en some of the di/#0Berences b et w een the t w o systems/. With resp ect toindexing time/, W AIS collects more information while indexing /#28w ord adjacency /,n um be rof o ccurrences p er do cumen t/, etc/./#29/, whic h increases the time to parse and index the
Chapter /3/. The Implemen tation /5/4Lifestreams W AISIndexing Time /#28seconds/#29 /1/5/6/2 /2/0/2/5Indexing Sp eed /#28MB/#2Fmin/#29 /./8/3/6 /./6/4/5Index Size /1/7/./1MB /1/0MB/#25 of Collection /7/8/./5/#25 /4/6/./3/#25T able /3/./1/: Comparison of W AIS and Lifestreams indexing/.do cumen ts/. With resp ect to index size/, W AIS and Lifestreams op erate in t w o di/#0Beren tmanners/. W AIS op erates in a batc h/-lik e mo de and precomputes the en tire index touse space e/#0Ecien tly /, while Lifestreams incremen tally builds up its index as do cumen tsare added and m ust set aside extra space for future use/. In an y case/, Lifestreams/'indexing time is sligh tly faster than W AIS /#28although the index times w ould b e closer ifw e added some of W AIS/'s more adv anced parsing/#29 and its use of space /#28ab out /8/0/#25 ofthe collection/#29 is w ell within the norm for information retriev al systems /#28whic h rangefrom /5/0/#25 to /3/0/0/#25 of the information collection /#5BFE/9/2 /#5D/#29/./3/./3 Clien t InfrastructureOur clien t arc hitecture relies on a sp eci/#0Cc do cumen t mo del/, metho d of transferringdo cumen ts and /#5Cem b edded computation/" tec hnology /. In this section w e /#0Crst in tro duceour do cumen t mo del/. W e then describ e ho w the Lifestreams clien t implemen ts thetransfer op eration/. Next w e presen t our curren t agen t mo del and describ e ho we m b ed/-ded computations are accomplished/. Last/, w e describ e the /#5Cplug/-in/" arc hitecture ofthe summarize op eration /#28also an em b edded computation/#29/./3/./3/./1 Our Do cumen t Mo delEarly on/, w e implemen ted a Lifestreams system that relied on the Andrew T o olkit/'sbuilt/-in editor and m ultimedia do cumen t standard /#28A TK/#29 /#5BBor/#5D/. While the A TKpro vided an in teresting initial en vironmen t in whic h to explore Lifestreams/, it madeuser migration to the system di/#0Ecult/. Users relied on sp eci/#0Cc do cumen tt yp es /#28text/,P ostScript/, D VI/, GIF/, etc/./#29 and they found it incon v enien t to create these do cumen tsusing the Andrew T o olkit/'s builtin editor rather than with con v en tional applications/.Our curren t system is based on the /#5Ch yp erto ol mo del/" /#5BOus/9/4 /#5D and MIME t yp es/#5BBF/9/2 /#5D/. The h yp erto ol mo del is a metho d for building complex systems out of smallerreusable applications/. W e use existing editor and view er to ols in concert with the Life/-streams system so that users can con tin ue to use the applications they are accustomedto/. MIME is a do cumen tt yping standard that grew out of w ork on Multipurp ose
Chapter /3/. The Implemen tation /5/5In ternet Mail Extensions /#28MIME/#29 /#5BBF/9/2 /#5D/. The MIME standard describ es extensionsto con v en tional mail systems that allo w message con ten t other than /7/-bit ASCI I to b etransmitted through mail messages/. This is accomplished b y adding a con ten t/-t yp eheader /#0Celd to mail messages along with an enco ding standard that represen ts arbi/-trary binary /#0Cles as /7/-bit ASCI I/. In addition/, MIME pro vides con v en tions for addingnew t yp es/. A MIME t yp e is sp eci/#0Ced as a con ten tt yp e and subt yp e/; some of the morecommon MIME/-t yp es are plain text /#28text/#2Fplain/#29/, GIF images /#28image/#2Fgif /#29/, and Quic k/-time video /#28video/#2Fquic ktime/#29/. W e mak e use of MIME to supp ort m ultiple do cumen tt yp es within Lifestreams b y adding a content/-type attribute to eac h do cumen t/. Themapping from t yp es to applications is user de/#0Cned/. W e will describ e this mapping andother details of the h yp erto ols mo del in the next c hapter/./3/./3/./2 Comm unicationThe transfer op eration pro vides a means of sending a do cumen t from one streamto another/. This includes the capabilit y of transferring non/-ASCI I con ten t /#28images/,sounds/, mo vies/#29/, attac hed do cumen t agen ts/, and /#5Cfuture/" do cumen ts/. T o b e usefulas a general comm unications to ol/, transfer m ust also b e able to in terop erate with thenon/-Lifestreams w orld and b e capable of sending do cumen ts as con v en tional electronicmail messages/.The implemen tation of transfer has ev olv ed o v er the course of system dev elopmen t/.Initially /, transfer w as implemen ted b y calling app end on the target stream/. Thereare three problems with this approac h/: /#0Crst/, it do esn/'t satisfy our in terop erabilit y re/-quiremen ts /#28b ecause it do esn/'t w ork with con v en tional electronic mail/#29/; second/, thesystem did not implemen t a true /#5Cstore and forw ard/" comm unications system
/5so theclien t exp ected the target serv er to alw a ys b e a v ailable /#28something w e cannot guar/-an tee with the curren t system and something few soft w are systems and net w orks canguaran tee/#29/. The third problem w as tec hnological and so ciological/: users w ere forcedto main tain t w o name spaces/, one for Lifestreams and one for con v en tional mail /#28forexample the author/'s email address is freeman/-eric/@cs/.y ale/.edu while his Lifestreams/'address is efreeman/@p ythagoras/.cs/.y ale/.edu/#29/; that is/, the user had to remem b er whic haddresses designate con v en tional mail addresses and whic h addresses designate Life/-streams addresses and sp ecify transfer op erations accordingly /. This causes a relatedproblem/: when the user of a con v en tional mail system replies to all the senders of amessage con taining a Lifestreams address/, his mailer w on/'t ha v e the necessary proto/-col to talk directly with a Lifestreams address/. In a future Lifestreams utopia suc hproblems migh t not arise/, but in accommo dating our lo cal users it had to b e solv ed/.Our second /#28and /#0Cnal/#29 implemen tation uses con v en tional mail proto cols to trans/-p ort b oth Lifestreams do cumen ts and In ternet/-b ound mail/. This approac h solv es ourin terop erabilit y requiremen ts/, uni/#0Ces the email/#2FLifestreams namespace and pro vides a/5It has b een argued that no mail system is usable in the real w orld without a store and forw ardcapabilit y /.
Chapter /3/. The Implemen tation /5/6robust store and forw ard comm unications infrastructure/. Let us see ho w it is imple/-men ted/.Comm unications Implemen tationWhen a transfer op eration is executed the clien t /#0Crst con v erts the Lifestreams do cumen t/#28the attribute/#2Fv alue record/#29 in to a form that can b e shipp ed within the SMTP mailproto col/. This is accomplished b y creating a serialization of the do cumen t /#28completewith its data /#0Celd/#29 in to XDR form/. Once the do cumen t is serialized w e can con v ertit in to a base/-/6/4 represen tation that con tains only ASCI I c haracters and th us can b eshipp ed o v er con v en tional SMTP c hannels/. The base/-/6/4 represen tation en tails a /3/3/#25increase in the space requiremen ts for the do cumen t/.The clien t then creates a mail message bu/#0Ber that is t yp ed as a mixed and multipartMIME message/. This t yp e tells a MIME reader that the message con tains m ultipleparts that are of di/#0Beren tt yp es/. If p ossible/, the clien t /#0Crst pro vides a readable form ofthe message for non/-Lifestreams readers/.
/6The clien t then adds the base/-/6/4 represen ta/-tion and t yp es it application/#2Fx/-lifestream s and the /#0Cle is handed to sendmail fordeliv ery /. Figure /3/./1/0 displa ys one suc h message/. This message con tains a text/#2FplainMIME t yp e/, the con ten ts of whic h can b e seen in the /#0Crst part of the message/. Thisdo cumen tw as created /#5Cin the future/" and so needed to b e enco ded so that it is placedin the future of the recipien t/'s stream/. The base/-/6/4 enco ded v ersion is seen in thesecond part of the MIME message/.W e also need one additional piece of soft w are/: a standalone piece of co de thatin tercepts a user/'s In ternet mail/, con v erts it to a Lifestreams do cumen t and forw ards itto his lifestream/. The con v ersion program w orks as follo ws/: when the program receiv esa mail message/, if it con tains a /#5Capplications/#2Fx/-lifestreams/" part/, then that part isunpac k ed and forw arded to the appropriate Lifestreams serv er through app end /.I nthis w a yw e still rely on app end to place the do cumen t on the target lifestream/,ho w ev er w e /#5Cpiggy bac k/" on top of the In ternet mail system to actually deliv er thedo cumen t/. If the do cumen t do es not con tain a /#5Capplications/#2Fx/-lifestreams/" part thenw e add it to the stream as a text do cumen t /#28parsing it /#0Crst to extract attributes/#29/. T othe Lifestreams user the en tire pro cess is in visible/.The adv an tage of this approac h is that w e can use a long/-tested/, robust deliv erysystem for transferring Lifestream do cumen ts/. In addition/, comm unication o v er thesec hannels is transparen t /#28to the user/#29 and the user only needs to manage one namespace/.The disadv an tage is that our system is less in tegrated from the standp oin t of soft w aredesign /#28the transfer capabilit y is no longer implemen ted purely as a Lifestreams RPCcalls/#29 and harder to main tain from the p ersp ectiv e of system administration /#28w eh a v e/6In the case where the message is purely text and there is no Lifestreams sp eci/#0Cc con ten t /#28e/.g/./,agen ts/, the do cumen t is a future do cumen t/, etc/./#29 the enco ding pro cess is skipp ed and the mail is sen tout as a con v en tional ASCI I mail message/.
Chapter /3/. The Implemen tation /5/7to manage t w o additional pieces of soft w are/: sendmail and the soft w are that unpac ksLifestreams mail message/#29/./3/./4 Em b edded ComputationLifestreams uses /#5Cem b edded computation/" as an implemen tation strategy for sev eralparts of the system/: do cumen t agen ts/, p ersonal agen ts and our summarize arc hitecture/.While em b edded computations could also b e used for stream agen ts/, our implemen/-tation do esn/'t y et supp ort them /#28although w e will suggest ho w it could later in thissection/#29/.Em b edded computations are /#28t ypically/#29 small pieces of co de that are loaded and ex/-ecuted within a running program/. In the case of a do cumen t agen t the co de is extractedfrom the appropriate do cumen t attribute and executed within the user in terface/. Ap ersonal agen t is loaded in to the user in terface at /#5Cstartup/" time and executed whenthe user indicates he w an ts the agen t to run /#28w e will see sp eci/#0Ccally ho w this is donein the next c hapter/#29/. Finally /, the summarize functionalit y /, lik e the p ersonal agen ts/, isloaded in to the clien t at startup time/.In this section w e /#0Crst in tro duce our c hoice of a language for writing agen ts andsummarizers /#28from here on w e will call this the /#5Cagen t/" language/#29/. W e b egin b ydescribing our requiremen ts and the reasons for c ho osing an existing scripting language/.W e then describ e ho we m b edded pro cesses are supp orted in the Lifestreams clien t/./3/./4/./1 The Agen t LanguageAgen ts are generally describ ed through a programming language/, or through a userin terface that translates graphical descriptions in to an underlying language/. In Chap/-t e r/2w e used an Algol v arian t to describ e agen ts/. While in theory an y programminglanguage w ould do/, there are a few real w orld requiremen ts that w ew ould lik e ourlanguage to meet giv en that agen ts are executed in an em b edded en vironmen t/./1/. Heterogeneit y/: The agen t language should b e p ortable and e/#0Ecien tly exe/-cutable on virtually computer system/. This requiremen t is necessary so thatLifestreams clien ts on di/#0Beren t platforms can send and receiv e agen ts/./2/. Extensibilit y/: The agen t language should b e extensible so that w e can addLifestreams functions to the language/./3/. Dynamic binding/: The agen t language should b e able to dynamically bindLifestream functions so that an agen t can b e loaded in place and executed usinglo cal v ersions of Lifestreams functions/. This reduces the size of the agen t itself/#28it do es not ha v e to carry around Lifestreams libraries with it/#29 and allo ws theend user to use his o wn implemen tations of the Lifestreams functions/.
Chapter /3/. The Implemen tation /5/8From freeman/-elisabeth Mon Mar /2/5 /1/2/:/2/6 EST /1/9/9/6Date/: Mon/, /2/5 Mar /1/9/9/6 /1/2/:/2/6/:/0/2 /-/0/5/0/0 /#28EST/#29From/: freeman/-elisabethMessage/-Id/: /#3C/1/9/9/6/0/3/2/5/1/7/2/6/.MAA/0/5/4/9/0/@TEDD Y/.SYSTE MSY/.CS/.Y ALE/.EDU /#3ESubject/: /#28Fwd/#29 hotelTo/: freeman/-ericX/-Mailer/: Lifestreams /1/./1a/1 /#28Yale/#29
Content/-Type/: multipart/#2Fmixed/; boundary/=/"/-/"Content/-Length/: /1/0/0/2This message originated from a Lifestreams client/, which hastaken care to provide a text readable version/. Also included inthis message is a MIME/-encoded version of the Lifestreams document/. Toproperly view it use your favorite Lifestreams/' client/./-/-/-Remember to check on hotels near Seattle airport for CHI trip/-/-/-Content/-Type/: application/#2Fx/-lifestreamsAAAAAG/1iZXIAAAJYMWKScAAA AAAxYpJv AAAACnR leHQvcG xhaW/4AAA AAAAEAA AAAAAAA PlJlbWVtYmVyIHRvIGNoZWNrIG/9u IGhvdGVs cyBuZWF yIFNlYX R/0bGUgYW lycG/9yd CBmb/3Ig Q/0hJIHRyaXAKAAAAAAAZZnJlZW/1h bi/1lcmlj QGNzLnl hbGUuZW R/1IAAAAA AAAAhiZ nJlZW/1h bgAAAAAAAAAAAAAACyhGd/2QpIGhv dGVsAAAA AAAAAAA /#2FAAAAUg AAAGUAAA BtAAAAZ QAAAG/0A AABiAAAAZQAAAHIAAAAgAAAAdAAA AG/8AAAAg AAAAYwA AAGgAAA BlAAAAYw AAAGsAA AAgAAAA bwAAAG/4AAAAgAAAAaAAAAG/8AAAB/0 AAAAZQAA AGwAAAB zAAAAIA AAAG/4AAA BlAAAAY QAAAHIA AAAgAAAAUwAAAGUAAABhAAAAdAAA AHQAAABs AAAAZQA AACAAAA BhAAAAaQ AAAHIAA ABwAAAA bwAAAHIAAAB/0AAAAIAAAAGYAAABv AAAAcgAA ACAAAAB DAAAASA AAAEkAAA AgAAAAd AAAAHIA AABpAAAAcAAAAAoAAAAA/-/-/-/-/-Figure /3/./1/0/: An example MIME/-enco de Lifestreams do cumen t/.
Chapter /3/. The Implemen tation /5/9/4/. Safet y/: Agen ts ha v e b een called /#5Cgo o d viruses/" /#5BW a y/9/5 /#5D/. As with an y virus/,there is also p oten tial for harm/, esp ecially when the creator of an agen t is malev/-olen t/. W e will not presen t a solution to safet y p er se in this dissertation/, as thereare already a n um b er of go o d solutions to this problem/.This list is not exhaustiv e/; there are other issues to consider /| metho ds of agen tv eri/#0Ccation/, p erformance/, the dev elopmen te n vironmen t/, and the t yp e of nativ ec o d eused in the underlying system/. W eh a v e tried to c ho ose the most imp ortan t issues toconsider/, at least within the scop e of our protot yp e system/.A few y ears ago one migh th a v e created a sp ecial purp ose agen t language fromscratc h/, but to da y there are a n um b er of existing and emerging languages that areappropriate as agen t languages and that meet our requiremen ts/: Sun/'s Ja v a/, v arian tsof Sc heme/, T elescript/, and Tcl/-Tk /#5BOus/9/4/#5D are some of the prominen t examples/. Eac hhas its o wn adv an tages and disadv an tages/; w eh a v ec hosen Tcl/-Tk as an initial agen tlanguage for the follo wing reasons/:/1/. Tcl is an ASCI I/-based/, in terpreted language that runs on most platforms/./2/. Tcl is easily extended via the C programming language /#28used for the core Life/-streams comm unication routines/#29/./3/. Tcl can b e loaded in place and dynamically b ound/./4/. Our user in terface is co ded in Tcl/-Tk/./5/. Tk pro vides a easy metho d of implemen ting user in terfaces within a Tcl script/./6/. Tcl pro vides a facilit y for em b edding Tcl in terpreters in C co de/./7/. W ork has already b een done on a /#5Csafe/" v ersion of Tcl for agen ts /#5BBor/9/3b /#5D/./8/. Tcl/#2FTk is freely a v ailable/.While Tcl meets our needs for the purp oses of this protot yp e/, there is nothing toprev en t an alternativ e agen ts language from b eing used in the future/./3/./4/./2 Impleme n ting Em b edded Pro cessesF rom an arc hitecture p ersp ectiv e/, em b edding pro cesses w orks as follo ws/: referring toFigure /3/./1/1/, the clien ti n terface relies on an underlying Lifestreams library that con/-tains a n um b er of comm unication primitiv es as w ell as primitiv es for creating/, altering/,and viewing do cumen ts/. A Tcl/-Tk in terpreter/, whic h runs in the clien ti n terface/'s ad/-dress space/, is used to ev aluate all agen t scripts and/, through the Lifestreams library /,has access to the comm unication and do cumen t sp eci/#0Cc primitiv es/. Note that our clien tis itself written in Tcl/, so the agen t can b e ev aluated directly within the user in terface/.
Chapter /3/. The Implemen tation /6/0
Tcl-tk
InterpreterClient Interface
Lifestreams  LibraryFigure /3/./1/1/: Em b edded Pro cess Arc hitecture/.As w eh a v e men tioned/, eac h do cumen t and p ersonal agen t is stored in a datastructure /#28e/.g/./, in the attribute of a do cumen t/, or attac hed to the user in terface/#29/.Do cumen t agen ts are ev aluated when a sp eci/#0Cc ev en t o ccurs/, /#28Chapter /2/#29/. P ersonalagen ts are attac hed to the user in terface and ev aluated whenev er the user selects theagen t/. These agen ts run within the clien t/'s address space/.Do cumen t agen ts can b e attac hed to an y do cumen tb y supplying one or morescripts in the appropriate attribute/. When a do cumen t is /#0Crst op ened /#28when the v alueof the lastread attribute is greater than the v alue of the created attribute/#29/, thedocument open agent attribute is c hec k ed for scripts/. If they exist they are executedin an arbitrary sequen tial order/. After the op en scripts ha v e b een executed/, or if thedo cumen t has b een op ened previously /, the document read agent attribute is c hec k edfor scripts/. If they exist they are executed in the same manner as the op en scripts/.P ersonal agen ts are attac hed to the user in terface when the Lifestreams clien t startsup/. Curren tly a list of these agen ts is k ept in a startup /#0Cle /#28although it could b e mo v edto the stream itself /#29/. F or eac h agen t a men u item is created under the PersonalAgents men u /#28see Chapter /4/#29 and its co de is loaded in to the clien t for later execution/.Although w e don/'t curren tly supp ort serv er agen ts/, it is useful to consider ho wthey will b e supp orted in future v ersions/. The serv er is written en tirely in C co de/. T orun an agen ti t w ould need to create a Tcl in terpreter and run the agen t within thein terpreter/. This has the added adv an tage of encapsulation/; that is/, if the agen t haltsin some violen tw a y /, the serv er w ould b e una/#0Bected/. F uture v ersions of Lifestreamswill include m ulti/-threaded serv ers that could run agen ts in ligh t w eigh t pro cesses/./3/./5 The /#5CSumma rize/" Arc hitectureRecall from Chapter /2 that the /#5Csummarize/" op eration allo ws users to distill informa/-tion from a large n um b er of do cumen ts b y compressing a substream in to an o v erviewdo cumen t/. The con ten t of the o v erview dep ends on the t yp e of do cumen ts in the sub/-
Chapter /3/. The Implemen tation /6/1stream/. While w e will pro vide some examples of preliminary summarizers /#28Chapter /5/#29the tec hniques used to distill this information in to something meaningful are b ey ond thescop e of this dissertation and b elong to suc h /#0Celds as natural language pro cessing /#5BJon/#5Dand data mining /#5BHS/9/4/#5D/. In this dissertation w e pro vide a storage system and generalpurp ose /#5Csummarize/" arc hitecture that encourages the dev elopmen t of summarizers/.Eac h summarizer is a soft w are mo dule that is added to the clien t through a /#5Cplug/-in/" arc hitecture/. Lik e agen ts/, they are em b edded computations/. Unlik e agen ts /#28sp ecif/-ically p ersonal agen ts/#29 they pro vide a sp eci/#0Cc functionalit y/: a b o olean tester functionand a summarize function that returns a do cumen t to b e added to the Lifestream/. Sev/-eral summarizers come pre/-installed in our soft w are clien t/, while new summarizers canb e added via the plugin arc hitecture b y adv anced users/. Eac h summarizer is written inTcl/#2FTk/, loaded in to the clien t at startup/, and follo ws the con v en tions of the follo wingplugin API/: Eac h summarizer consist of t w o pro cedures/, test and summarize /. Thetest pro cedure tak es a substream as an argumen t and returns a b o olean v alue indicat/-ing whether or not the summarizer is appropriate for the substream/. The API do es notsp ecify what the con ten ts of the test pro cedure m ust b e/, but it will usually con taina heuristic for deciding if the summarizer is appropriate for the substream/. The testpro cedure should ha v e a short running time /#28less than a second
/7/#29/, although no limit isenforced in the curren t implemen tation/. The summarize pro cedure tak es a substreamas an argumen t and returns a /#28p ossibly empt y/#29 do cumen t/.Both pro cedures are installed in to the clien tb y InstallSubstreamSummary /. Thiscall tak es four argumen ts/: a name and description of the summarizer/, a test pro cedureand a summarize pro cedure/.Giv en that one or more summarizer ma y b e appropriate for a giv en substream/, ho wdo es the Lifestreams clien t decide whic h one is appropriate/? W e use a /#5Cdelegation/" pro/-cedure/: when a user sp eci/#0Ces that he w an ts to summarize a substream /#28see Chapter /4/#29/,the clien t iterates o v er the summarizers and calls eac h test pro cedure/; for eac h testthat returns true/, a p oin ter to its summarize pro cedure is added to an arra y
/8/. Aftercompleting this iteration/, if the arra y is empt y a default system summarizer is appliedto the substream/. If the size of the arra y is one /#28meaning that exactly one summarizeris appropriate/#29/, that summarizer is applied/. If the size of the arra y is greater than one/,the user is ask ed to c ho ose the summarizer he w an ts /#28via a list of descriptions/#29/. If thedo cumen t returned from the summarizer is non/-empt y then it is added to the streamand displa y ed for the user/./7F uture v ersions ma y ease this restriction b y allo wing summarizers to precompute their test in thebac kground/./8This information ma yb ec a c hed for future summarize op erations on unmo di/#0Ced substreams/.
Chapter /3/. The Implemen tation /6/2/3/./6 Summa ryLifestreams is up and running on our lo cal computing en vironmen t /| a collection ofSunOS/, Solaris/, and AIX w orkstations/. Our initial implemen tation e/#0Borts ha v e fo cusedon pro viding a /#5Cpro of of concept/" of the Lifestreams mo del/. The serv er is limited inthat it is single/-threaded /#28and th us has a single access p oin t/#29/. While the serv er hasb een reasonable for a small n um b er of users/, clearly a m ulti/-serv er and m ulti/-threadedapproac hw ould b e more scalable/. T oo v ercome an y curren t scalabilit y problems w edistribute our user/'s streams o v er sev eral serv ers/, placing t w o to three streams on eac hserv er/. In this con/#0Cguration there ha v e b een no ma jor p erformance complain ts fromusers /#28see Chapter /6/#29/; o v er the last t w elv e mon ths of the pro ject the system has b eenresp onsiv e and robust/, b eing resp onsible for only three do wn in terv als/.There is still w ork to b e done to mak e Lifestreams scalable/; results from the infor/-mation retriev al and database comm unities are encouraging/. Lifestreams incorp oratesideas from b oth disciplines /#28lik e database managemen t systems/, Lifestreams manages adatabase of records /#28do cumen ts/#29/, lik e information retriev al systems/, Lifestreams allo wsaccess to those records via con ten t/-based retriev al/#29/. W e/'v e seen no real p erformanceproblems with resp ect to retriev al and/, giv en the v ery large indices that are b eingused in systems lik e Nexis/#2FLexis and In ternet searc h engines/, w e b eliev e our retriev alsc heme should scale to large do cumen t collections/. These system t ypically con tain tensof millions of index do cumen ts and are able to compute user queries within seconds/.Both clien t and serv er store the records of the en tire do cumen t collection when auser views his Lifestream/; w e need to b orro w database tec hnology for large collections/.There are /#5Ch uman/-computer in teraction/" problems to solv e to o/. Since no user can lo okat /1/0/,/0/0/0 do cumen ts at once and discern an y usable information/,
/9it do esn/'t mak e senseto giv e users an en tire do cumen t collection at once/. A more reasonable approac hw ouldb e to use /#5Ccursors/" to allo w the user to view segmen ts of the do cumen t collection andto load in more segmen ts as needed/. In this w a y the displa y of do cumen ts w ould b edemand/-driv en in that a query ma y only initially return a fraction of the do cumen tsin a query /, while allo wing the user to request more as needed/./9Although recen tw ork b y Shneiderman /#5BShn/9/4 /#5D suggests ho w one migh t/, in principle/, do so/. Buthis tec hniques still need w ork to scale b ey ond small databases/.
Chapter /4The In terfaceIn this c hapter w e explore three Lifestreams in terfaces dev elop ed for the protot yp e/. W e/#0Crst describ e our X Windo ws clien t
/1/, whic h pro vides a ric hi n terface to the Lifestreamssystem/. W e then describ e a command line in terface that is suitable for the /#5Clo w estcommon denominator/" of computer displa ys/: dum b terminals/. Last w e presen ta nin terface for the Apple Newton PD A/, whic h pro vides Lifestreams access via minimal/#28p ossibly mobile/#29 comm unication c hannels/.W e b egin this c hapter b y brie/#0Dy discussing the philosoph y b ehind our in terfacedesign and then mo v e on to describ e ho w eac hi n terface pro vides v arious Lifestreamscapabilities/. In the next c hapter w e describ e ho w the X Windo ws in terface is usedto accomplish common user tasks/. Last w e explore directions for future in terfacedev elopmen t/./4/./1 In terface DesignLifestreams clien ts ma y exist ev en tually on a wide range of computational devices fromhigh/-end net w ork ed w orkstations to minimal p ersonal digital assistan ts/, TV set/-topbo xes and cell phones/. A state of the art Silicon Graphics w orkstation migh t pro videa ric h three/-dimensional in terface to a lifestream/, allo wing the user to /#0Dy through ado cumen t collection/; a cell phone migh t pro vide a v oice/-activ ated in terface/. In thisdissertation w el a yd o wn no p olicy concerning the /#5Clo ok and feel/" of a Lifestreamsclien t/, but eac hi n terface should pro vide a means of using the basic op erations/. Ov ertime/, incremen tal design and ev aluation will result in the dev elopmen t of impro v edin terfaces/.This c hapter concen trates on our X Windo ws clien t and our attempts to create ane/#0Bectiv e and satisfying in terface for users /#28see Chapter /6 for more on users/' sub jec/-tiv e reaction to the in terface/#29/. While con v en tional graphical comp onen ts /#28suc h as list/1W e b eliev e this platform to b e represen tativ e /#28with resp ect to /#5Cwindo w ed user in terfaces/"/#29 ofto da y/'s desktop systems suc h as the Macin tosh and Microsoft Windo ws/./6/3
Chapter /4/. The In terface /6/4widgets and scrollbars/#29 ma yh a v e pro vided the basic functionalit y needed to access alifestream/, w eh a v e tried to supp ort a /#5Creceding stream/" visual represen tation in thespirit of Shneiderman/'s dir e ct manipulation /#5BShn/9/2/#5D and Nelson/'s principle of virtuality/#5BNel/9/0/#5D/.Direct manipulation in v olv es creating a visual represen tation of a /#5Cw orld of action/./"Shneiderman describ es direct manipulation as a primary in teraction st yle that presen tstask concepts visually /. By using a visual represen tation of ob jects and allo wing usersto carry out action b y p oin ting and clic king/, the user can carry out tasks quic kly andobserv e results immediately /. Direct manipulation is go o d insofar as it is app ealingto no vices and easy to remem b er for in termitten t users/, encourages exploration/, andp ermits high sub jectiv e satisfaction /#28users enjo y using it/#29/#5BShn/9/2/#5D/.Nelson/'s concept of /#5Cvirtualit y/" is opp osed to the usual /#5Cmetaphorics/" /#5BNel/9/0/#5D ap/-proac h/. Metaphorics is a metho d of building soft w are based on an implicit comparisonto ob jects or mac hines in the real w orld /#28e/.g/./, the desktop metaphor/#29/. Metaphors areuseful to a p oin t/, but they constrain design in the sense that once the metaphor /#5Chasb een instituted/,/" ev ery related part of the system has to b ecome part of the metaphor/.When designers are forced to add non/-ob vious functions to the metaphor /#28e/.g/./, toeject a disk/, drag it in to the trashcan/#29 users get confused/. Nelson argues that /#5Csla vishadherence to a metaphor prev en ts the emergence of things that are gen uinely new/./"In con trast/, virtualit y is the construction of unifying ideas that can b e em b o diedin a ric h graphic expression that is no mere metaphor for a some pre/-existing ph ysicalsystem/, but rather/, as Nelson argues/, leads to new conceptual organizations that ha v enot previously existed/. This has b een our approac h designing Lifestreams/: to pro vide asimple and uni/#0Ced system that is easily grasp ed b y users and not constrained b y a real/-w orld metaphor/. W en o w describ e the X Windo ws clien t and highligh t our attemptsto incorp orate direct manipulation and virtualit yi n to our in terface/./4/./2 The X Windo ws In terfaceThe X Windo w/'s Lifestreams in terface presen ts the stream as a receding set of do cu/-men ts /#28Figure /4/./1/#29/. Eac h do cumen ti ss h o wn as a rectangular region annotated withsev eral text /#0Celds/: the sub ject or topic of the do cumen t/, the creator of the message/, and/| if the message is a mail message /| the sender of the message/. Do cumen t annota/-tions allo w the user to bro wse the stream and lo cate sp eci/#0Cc do cumen ts quic kly /.F uturein terfaces can do b etter b y presen ting actual th um bnail depictions of eac h do cumen tand its con ten ts/.The user can slide the mouse p oin ter o v er the stream to /#5Cglance/" at eac h do cumen t/.Figure /4/./1 sho ws a highligh ted do cumen t and its /#5Cglance view/./" The glance view dis/-pla ys a condensed summary of the do cumen t /#28not to b e confused with the summarizeop eration/#29/; in this example the glance view displa ys the date and time the do cumen tw as created along with its sub ject/, an y mail headers /#28from/, cc/#29/, the /#0Crst couple of lines
Chapter /4/. The In terface /6/5
Figure /4/./1/: The X Windo ws In terface/.
Chapter /4/. The In terface /6/6of the do cumen t/'s con ten ts /#28this last feature is curren tly supp orted only for text do c/-umen ts/#29/, and an icon that signi/#0Ces a do cumen t agen t if one is attac hed/. Glance viewshelp the user bro wse a stream of do cumen ts or read short messages quic kly withoutactually /#5Cop ening/" an y do cumen ts/./4/./2/./1 Na vigating through TimeThe in terface displa ys a /#5Cslice/" of the stream/; on a con v en tional w orkstation monitorthis slice amoun ts to roughly fort y do cumen ts/. The creation dates of the do cumen tsare displa y ed alongside the stream/. Rather than displa ying the creation date of eac hdo cumen t/, w e only displa y the dates for the /#0Crst do cumen t created eac hd a y /. Thissubstan tially reduces the visual complexit y of the displa y /#28in the spirit of T ufte /#5BT uf/9/0/#5D/#29and mak es it easy to group do cumen ts in to /#5Cda ys of creation/./" As w eh a v e seen previousw ork has sho wn that c hronological cues are a natural and p o w erful metho d of organizinginformation /#5BMal/8/3 /, Lan/8/8b/#5D/.Users can na vigate through the past via the horizon tal scrollbar at the b ottomleft/-hand corner of the in terface /#28enlarged in Figure /4/./2/#29/. Along the b ottom of thescrollbar are the b eginning and ending dates of the curren t stream/. In this case thestream includes do cumen ts from the end of July /1/9/9/1 to the end of Octob er /1/9/9/6/.W e can see from the displa y just ab o v e the scrollbar that this includes ab out /1/7/,/0/0/0do cumen ts from efreeman/'s main stream /#28i/.e/./, his lifestream/, not a substream/#29/. Alongthe top of the scrollbar w e displa y the inclusiv e dates of the slice of do cumen ts visiblewithin the displa y /. Clic king and dragging the scrollbar slider results in an up date ofthis in terv al/, allo wing the user to na vigate to a precise time within the stream /#28w e willdiscuss na vigating to the future shortly/#29/. The size of the slider is also imp ortan t/. Its sizewithin the scrollbar trough graphically represen ts the p ercen tage of total do cumen ts/#28within a stream or substream/#29 that are visible/.
Figure /4/./2/: Bro wsing Bac k in Time/.W en o w consider Figure /4/./3/. The stream is still efreeman/'s/, but here w e are fo cusedon the substream /#5Candrew and lifestreams/" that con tains /1/0/2 do cumen ts/. The scrollbar
Chapter /4/. The In terface /6/7date endp oin ts ha v ec hanged/; the slider no w represen ts a greater p ercen tage of the totaldo cumen ts /#28fort y of /1/0/2/#29/. W e also see that the date and time stamps are group ed moreclosely together b ecause the substream con tains only a few do cumen ts from an y giv enda y /./4/./2/./2 Basic Op erationsThe basic Lifestreams op erations /| new /, clone /, transfer /, find and summarize /| arepro vided through buttons and a text/-en try b o x/. Clic king on new adds a new do cumen tto the stream/. T o clone a do cumen t/, the user selects a do cumen t/, and then pressesthe clone button and a cop y of the selected do cumen t is added to the stream/. T oselect a do cumen t/, the user presses the second mouse button while the mouse p oin teris p ositioned o v er the do cumen t/. Doing so highligh ts the do cumen t and mak es theclone and xfer buttons activ e/. Pressing xfer causes a prompt for recipien t addresses/#28see /#0Cgure /4/./4/#29 and then transfers the selected do cumen t/.Pressing the summarize button applies an appropriate summary to the curren tsubstream/. As the user creates substreams and /#5Cvisits/" existing substreams the clien titerates through a v ailable summarizers and ev aluates their test functions/. If onlyone summarizer can b e applied to the stream then the summarize button is c hangedto re/#0Dect the a v ailable summarizers /#28w e will see an example shortly/#29/. If more thanone summarizer is appropriate then the clien t prompts the user when he presses thesummarize button/. Eac h summarizer results in a do cumen t b eing added to the mainstream /#28and an y appropriate substreams/#29/. W e giv e examples of summarizers in Chap/-ter /5/.The user can create a substream b yt yping a searc h query in to the find text/-en trybo x and pressing return/, as seen in Figure /4/./5/. The radio b o xes b elo w the text/-en trybo x allo w the user to select b et w een input metho ds/: k eyw ords and b o olean queries/.In k eyw ord mo de the user en ters searc h terms /#28suc h as /#5Clifestreams da vid/"/#29 and thesystem treats them as a series of terms connected with b o olean AND /#28/#5Clifestreams da vid/"b ecomes /#5Clifestreams AND da vid/"/#29/. In b o olean query mo de the user is free to en terarbitrary b o olean expressions con taining searc h terms along with AND /, OR /, and NOT /.When the user presses return the substream is computed and the curren t stream /#28orsubstream/#29 is quic kly /#28on the order of one second/#29 replaced b y the do cumen ts thatmatc h the searc h query /.A ta n y time the user can refo cus the displa y on the main stream or an y existingsubstream/. Users can also create substreams in an incremen tal fashion b y using thefind op eration on substreams/. A list of substreams and op erations is main tained inthe Substreams men u /#28Figure /4/./6/#29/. The /#0Crst men u option Remove deletes a substreamand an y of its c hildren/. Next/, the Your Lifestream option fo cuses the in terface bac kon the en tire do cumen t collection/. Last/, the men u con tains a list of all substreams/,whic h are lab eled with their searc h queries /#28k eyw ords p ossibly connected with b o oleanop erations/#29/. Selecting a substream fo cuses the in terface on that substream/. Nested
Chapter /4/. The In terface /6/8
Figure /4/./3/: Bro wsing Bac k in Time with a Substream/.
Chapter /4/. The In terface /6/9
Figure /4/./4/: T ransferring a Do cumen t/.
Figure /4/./5/: Using Find/.men u items represen t substreams that w ere created incremen tally /. In this example/, thesubstream /#5Cfertig/" w as created from the substream /#5Cscenarios/,/" whic hw as created fromthe substream /#5Clifestreams and da vid/,/" whic hw as created from the en tire lifestream/.It is imp ortan t to note that these substreams represen t not a hierarc h y of information/,but a paren t/#2Fc hild relationship among substreams/. A c hild substream is a subset of itsparen t stream/, but sibling substreams can o v erlap in arbitrary w a ys/./4/./2/./3 Color and AnimationW e use animation to sho w imp ortan te v en ts and pro vide a more con vincing /#5Cw orld ofaction/" in Lifestreams/. Do cumen ts app ended to the stream/| incoming In ternet email/,reminders or do cumen ts added to a stream b y another Lifestreams user/|slide in fromthe left/. In the pro cess/, the stream is pushed bac kw ards b y one do cumen ti n to thepast/. Newly created do cumen ts slide do wn from the top and assume the fron t/-mostp osition on the stream/. T ransferred do cumen ts slide out to the left/. Figure /4/./7 sho wsthese actions/. The in terface allo ws users to add a sound to eac h action/. Curren t usersuse a /#5Csw o osh/" sound to signify do cumen ts arriving on the stream/.Imp ortan t do cumen t states are sho wn graphically/: the b orders of unread do cumen tsare colored red/, while the b orders of writable do cumen ts are made thic k er/. Op endo cumen ts are o/#0Bset to the side to sho w that they are b eing view ed or edited/.
Chapter /4/. The In terface /7/0
Figure /4/./6/: Selecting a Substream/./4/./2/./4 F uture TimeBy default the Lifestreams in terface presen ts the user with a view of the stream fromthe presen t momen t receding in to the past/. As w eh a v e discussed/, a lifestream also hasa future/, whic h /#28with the X Windo ws in terface/#29 is accessible but usually hidden/. Theuser accesses time/-related features of Lifestreams through the clo c k in the upp er righ thand corner of the in terface/. The clo c kt ypically displa ys the curren t time/; it also actsas a men u /#28Figure /4/./8/#29/, whic h allo ws the in terface time to b e temp orarily reset so theuser can observ e the future part of the stream/. The user can either c ho ose to set thetime ahead some predetermined in terv al /#28a da y /,a w eek/, t w ow eeks/, etc/./#29 or to set thetime ahead in a precise w a y /#28via the Set Time to the Future or Past men u option/#29with the calendar dialog b o x displa y ed in Figure /4/./9/. Sp ecifying a future time/, either b ythe calendar of predetermined in terv als /#5Crefo cuses/" the in terface to include an y futuredo cumen ts that ha v e creation dates b efore the sp eci/#0Ced time/. In Figure /4/./1/0/, time w asset to the future date of No v em b er /3/0th /#28one mon th ahead/#29/, and as a result nine newdo cumen ts app eared on the stream/. The division b et w een future and past is mark edb y the now arro w/. Also note that the summarize button has c hanged to re/#0Dect thefact that a future summarizer can b e applied to the stream /#28w e will explore the futuresummarizer in Chapter /5/#29/.While visiting the future users can dep osit reminder notes or transfer do cumen tsto other users /#28whic h b ecome future do cumen ts on their streams/#29 or can p erform an y
Chapter /4/. The In terface /7/1
Figure /4/./7/: Use of Animation within X Windo ws In terface/.
Chapter /4/. The In terface /7/2
Figure /4/./8/: Sp ecifying Time/.other op eration that is allo w ed in the presen t/. When the clo c k is reset to the presen tthese do cumen ts disapp ear/, but they arriv e on the stream at the appropriate time/#28when their creation dates roll around/#29/.The user can also sp ecify a past time with the dialog b o x/; this has the e/#0Bect ofscrolling the stream bac k to that date/./4/./2/./5 Op ening/, Viewing and Editing Do cumen tsT o see a whole do cumen t or edit it the user m ust /#0Crst op en it/. Users op en do cumen tsb y clic king on them with the left mouse button/. The do cumen t slides to one side tosho w that it is b eing view ed or edited/. The w a y in whic h do cumen ts are view ed oredited is largely determined b y the c hoice of a do cumen t mo del/.As w e describ ed in Chapter /3/, our curren t system uses the /#5Ch yp erto ol mo del/"/:rather than construct large monolithic applications w e build systems out of man ysmall reusable comp onen ts/. This approac h has sev eral adv an tages for Lifestreams/.Most imp ortan tly /,w e did not ha v e to reimplemen t the man y existing editors/, view ersand other applications our users already accustomed to/; they can con tin ue to b e usedwithin Lifestreams as help er applications/. Help er applications are used as follo ws/:when a Lifestreams clien t is ask ed to op en a do cumen t/, it /#0Cnds an external applicationthat can view or edit the do cumen tt yp e and spa wns the application to do the job/.xv /, for example/, is a common application used to view images/; when Lifestreamsencoun ters a do cumen t with t yp e /#5Cimage/#2Fjp eg/,/" Lifestreams spa wns xv to displa y the
Chapter /4/. The In terface /7/3
Figure /4/./9/: The Calendar Dialog Bo x/.do cumen t/. This mo del is used b y man y existing w eb bro wsers to pro vide a means ofviewing w eb/-con ten t that is not supp orted in ternally within the bro wser/.The mapping from t yp es to applications is user/-de/#0Cned/. Lifestreams k eeps an in ter/-nal list of user/-de/#0Cned applications that are deriv ed from a /#5Cmailcap/" /#0Cle/. A mailcap/#0Cle is a /#0Cle format standard that w as dev elop ed for sp ecifying lo cally/-install ed facilitiesfor m ultiple mail formats suc h as MIME /#5BBor/9/3a /#5D/. T od a y /, mailcap /#0Cles are used inman ym ultimedia applications/, suc ha sw eb bro wsers/.
/2Figure /4/./1/1 sho ws a mailcap /#0Cle/. Eac he n try sp eci/#0Ces a MIME con ten t/-t yp e/#2Fsubt yp e
/3/,or a con ten t/-t yp e and a wildcard /#5C/*/" that sp eci/#0Ces all subt yp es b elonging to that t yp e/,and then a help er application that can b e used to pro cess the MIME do cumen t/.Lifestreams as a Windo w ManagerFigure /4/./1/2 sho ws a user op ening sev eral do cumen ts sim ultaneously in Lifestreams/.Eac h op en do cumen t is o/#0Bset to the righ t
/4as an indication that it is b eing handledb y a help er application/. The user has op ened do cumen ts of sev eral di/#0Beren tt yp es andcorresp onding applications ha v e b een in v ok ed to displa y them/: a w eb url /#28 netscape /#29/,an image /#0Cle /#28 xv /#29/, and an audio /#0Cle /#28 audiotool /#29/. When the user closes the application/,the resp ectiv e do cumen t slides bac ki n to p osition/.Lifestreams also acts as a windo w manager/: clic king on an op en do cumen t withinthe in terface causes the corresp onding help er application to come to the foreground/.This allo ws the user to main tain a n um b er of op en do cumen ts and to /#0Cnd do cumen ts/2Applications on the Mac and PC often pro vide a user in terface for editing the mailcap /#0Cle/./3These t yp es are usually de/#0Cned in a system/-wide /#0Cle called /.mime/.ty pes /, whic h lists all a v ailableMIME t yp es/./4This o/#0Bset is user/-de/#0Cned and can b e up/, do wn/, left or righ t/.
Chapter /4/. The In terface /7/4
Figure /4/./1/0/: F uture Do cumen ts on Stream/.
Chapter /4/. The In terface /7/5/#23/#23 This is a simple example mailcap file/./#23/#23 Lines starting with /'/#23/' are comments/./#23/#23/#23 This maps all types of audio data /#28audio/#2Fbasic/, audio/#2Fx/-aiff/,/#23/#23 etc/./#29 to the viewer /'audiotool/'/. Note that /'/#25s/' means put the/#23/#23 datafile name here when the viewer is executed/.audio/#2F/*/; audiotool /#25s/#23/#23 This maps all types of images /#28image/#2Fgif/, image/#2Fjpeg/, etc/./#29/#23/#23 to the viewer /'xv/'/.image/#2F/*/; xv /#25s/#23/#23 This maps MPEG video data to the viewer /'mpeg/_play/'/.video/#2Fmpeg/; mpeg/_play /#25s/#23/#23 This maps all types of video /*other than MPEG/* to the viewer/#23/#23 /'xanim/'/.video/#2F/*/; xanim /#25s/#23/#23 This maps all postscript to ghostview and dvi files to xdvi/#23/#23 and all man pages to nroffapplication/#2Fpostscript/; ghostview /#25s/; needsterminal
application/#2Fx/-dvi/; xdvi /#25sapplication/#2Fx/-troff/-man/; nroff /-man /#25s/#23/#23 This maps all PDF documents to acroreadapplication/#2Fpdf/; acroread /#25s/#23/#23 This maps all tcl scripts to the shell /#28which will exec them in tclsh/#29application/#2Fx/-tcl/; /#25sFigure /4/./1/1/: An Example Mailcap File/.
Chapter /4/. The In terface /7/6quic kly /. If a user creates a substream /#28or views an existing one/#29 that con tains an op endo cumen t the do cumen t will b e o/#0Bset in the substream/, and clic king on it will mo v eits help er application to the foreground/.In order to write bac kc hanges to the serv er/, Lifestreams trac ks op en do cumen ts/.When the Lifestreams clien t spa wns /#28via fork/#2Fexec/#29 a help er application to edit ado cumen t it adds its pro cess iden ti/#0Cer to an in ternal pro cess table along with the nameof a temp orary /#0Cle that is passed to the help er application/. When a c hild pro cess of theclien t dies /#28p ossibly as the result of a user that is /#0Cnished with the help er application/#29/,the clien t receiv es a SIGCHLD signal and lo oks for a matc hing pro cess in its in ternalpro cess table/. If the matc h is found and the do cumen t is writable then the con ten tsof the temp orary /#0Cle are written bac k to the serv er/. While our curren t approac his to p erform one writebac k p er user session/, the clien t can b e extended to supp ortincremen tal writebac ks b y spa wning an additional pro cess that comm unicates with thehelp er application and p erforms m ultiple writebac ks directly to the serv er/.A ttributes and EditingLifestreams allo ws users to edit do cumen t attributes/. Figure /4/./1/3 sho ws the do cumen tattribute dialog b o x/. This dialog b o x is op ened when the user selects a do cumen t andthen clic ks on the third /#28righ t/-most/#29 mouse button/. Through the dialog b o x users canedit common attributes suc h as the do cumen t/'s p ermissions/. The user can also assignadditional k eyw ords to a do cumen t for retriev al purp oses/. These k eyw ords are addedto the do cumen t/'s index at the serv er/./. W e will explore their use further in Chapter /5/.Adv anced users can also edit the do cumen t/'s MIME t yp e and its attac hed agen ts/.Figure /4/./1/4 sho ws the dialog b o x that is displa y ed when the user clic ks on the MimeType button in the attribute dialog b o x/. The MIME dialog b o x allo ws the user to set thedo cumen t/'s MIME t y p et oa n yt yp e de/#0Cned in the user/'s /.mime/-types /#0Cle/. Wh yw ouldusers w an tt oc hange a MIME t yp e/? Tw o examples/: when a new do cumen t is createdthe user ma yw an tc hange it to a particular t yp e/, or ma yw an t to switc hb e t w een t w ot yp es when editing t w ot yp es that ha v e the same represen tation but di/#0Beren t displa ymetho ds/. F or instance the user ma yw an t to create an HTML do cumen t /#28or in generalan y do cumen t that is sp eci/#0Ced in a markup language/#29 b y editing a plain text do cumen tand then c hanging the t yp e to HTML to render the do cumen t/. Suc h op erations areusually for adv anced users /#28as is the attribute editing dialog b o x/#29/.Adv anced users ma y also access do cumen t agen ts through the Agent button/. Clic k/-ing it yields the agen t dialog b o x sho wn in Figure /4/./1/5/. The agen t dialog b o x allo ws theuser to add new agen ts/, to edit /#28view/#29 the agen ts of writable /#28read/-only/#29 do cumen ts/, toread a description of the agen t/, and to remo v e agen ts from writable do cumen ts/. Editingan agen t/#28 b y selecting an agen t and clic king on the Edit button/#29 brings up a editor forthat agen t/. The editor en vironmen t for agen ts is curren tly primitiv e but usable/. In theediting windo w the user edits four /#5C/#0Celds/" of text/: its name/, its description/, it t yp e/,and /#0Cnally the source co de for the agen t/. Using this editor the user can iterativ ely
Chapter /4/. The In terface /7/7
Figure /4/./1/2/: The X Windo ws In terface Handles MIME/-t yp ed Do cumen ts/.
Chapter /4/. The In terface /7/8
Figure /4/./1/3/: Editing Do cumen tA ttributes/.
Chapter /4/. The In terface /7/9
Figure /4/./1/4/: Cho osing a Mime T yp e/.
Figure /4/./1/5/: Editing an Agen t/.
Chapter /4/. The In terface /8/0write agen t co de and test it within the system /#28b y op ening the do cumen t whic h causesthe ev aluation of the agen t/#29/.
Chapter /4/. The In terface /8/1/4/./3 The Comm and/-line In terfaceOur w ork on the command/-line clien tw as driv en b y user demand/. While the initialuser group w as con ten t using Lifestreams on w orkstations at the o/#0Ece/, w e so on foundit frustrating not to b e able to access our streams from home/. There w as additionalmotiv ation to do so/, as some users prefer a command line in terface/: witness the n um be rof users who use vi o v er graphical w ord pro cessors/, or who use command line mailprograms rather than graphical mail programs suc ha s xmail /. Man y of us commonlyuse the UC Berk eley mail in terface and it seemed a go o d base for building a commandline in terface /#28CLI/#29 to Lifestreams/.The Lifestreams CLI /#28Figure /4/./1/6/#29 lo oks lik e the UCB mail application/, ho w ev er ituses a /#5Clifestream/" as a basis for storage rather than a sp o ol /#0Cle/. Here/, the user hasask ed the CLI to displa y the last t w en t y do cumen ts in his stream/. Eac h do cumen ti slisted b y a do cumen t iden ti/#0Cer/, whic hm a y b e preceded b ya n um b er of one/-c haracterdescriptors /#28e/.g/./, W /= writable /, N /= new /, U /= unr e ad /, A /= agent attache d /#29/. Next/, thesender of the do cumen t is displa y ed/, follo w ed b y the date and time the do cumen tw ascreated or added to the stream/, and a sub ject /#28if one exists/#29/. Do cumen ts with a blanksender /#0Celd w ere created b y the o wner of the lifestream/. Also note that while this sliceof the stream con tains mostly electronic mail
/5/, there is also a TR draft and a URLcreated b y an agen t on the stream/./4/./3/./1 Viewing/#2FEditing Do cumen tsLik e the X Windo ws clien t/, the CLI supp orts help er applications
/6/. If the CLI is b eingused from an X Windo ws console then the appropriate help er application is launc hedto view or edit a do cumen t/. If/, on the other hand/, the CLI is running from an ASCI Iterminal/, an error is rep orted that the help er application can/'t b e op ened or/, in somecases/, an alternativ e help er application is used/. F or example/, when a do cumen to ft yp eapplication/#2Fx/-url is op ened/, the CLI either executes an X Windo ws w eb bro wser/#28usually Netscap e/#29/, or/, if the user is using an ASCI I terminal/, executes lynx /, thetext/-based w eb bro wser/./4/./3/./2 SubstreamsLsmail pro vides direct supp ort for substreams through find and four additional com/-mands for na vigation /#28as pro vided b y men us in the graphical in terface/#29/: substreams /,substream /, remove /, and up /. The inc command /#28whic h/, in UCB mail/, includes newdo cumen ts that ha v e arriv ed since the user last c hec k ed/#29 has also b een implemen ted inthe CLI to pro vide the same functionalit y /./5And if fact most streams do b ecause w e tend to generate more electronic mail do cumen ts than an yother t yp e/./6The UCB mail program only supp orts text mail messages/, whic h are commonly displa y ed with themore program
Chapter /4/. The In terface /8/2Lifestreams /#28YALE/#29 version /0/./9/2/2 beta Type /? for help/.Eric/_Freeman/@pyt hagor as /#28your lifestream/#29/: /4/5/0/7 documents /5/0 unread/&h /$/4/4/8/6 hupfer/-susanne/@cs Wed Apr /1/9 /1/7/:/5/5 /9/5 No Subject/4/4/8/7 sullivan/@fa/.disne Wed Apr /1/9 /1/9/:/2/2 /9/5 weights/, /#23/1/0/1/3/4/4/8/8 sholden/@cod/.nosc/. Thu Apr /2/0 /0/7/:/3/9 /9/5 Newton/_User/_Groups/_ v/1/./1/1/4/4/8/9 fertig/@cs/.yale/.ed Thu Apr /2/0 /1/2/:/2/1 /9/5 Size of key/?/4/4/9/0 fertig/@cs/.yale/.ed Thu Apr /2/0 /1/2/:/4/4 /9/5 Public key on casper/4/4/9/1 fertig/@cs/.yale/.ed Thu Apr /2/0 /1/2/:/5/4 /9/5 Re/: testing/4/4/9/2 fertig/@cs/.yale/.ed Thu Apr /2/0 /1/2/:/5/4 /9/5 Re/: testing/4/4/9/3 hupfer/-susanne/@cs Thu Apr /2/0 /1/3/:/1/2 /9/5 No Subject/4/4/9/4 Netscape Agent Thu Apr /2/0 /1/3/:/1/3 /9/5 http/:/#2F/#2Fwww/.voyagerc o/.com/4/4/9/5 eperry/@SUNED/.ZOO/. Thu Apr /2/0 /1/5/:/0/3 /9/5 progress/4/4/9/6 eperry/@SUNED/.ZOO/. Thu Apr /2/0 /1/5/:/4/6 /9/5 Re/: progressW /4/4/9/7 Thu Apr /2/0 /1/6/:/0/2 /9/5 TR draft/4/4/9/8 eperry/@SUNED/.ZOO/. Thu Apr /2/0 /1/6/:/0/7 /9/5 Re/: progress/4/4/9/9 eperry/@SUNED/.ZOO/. Thu Apr /2/0 /1/6/:/2/4 /9/5 Re/: progress/4/5/0/0 eperry/@SUNED/.ZOO/. Thu Apr /2/0 /1/6/:/3/3 /9/5 Re/: progress/4/5/0/1 Quote/-O/-matic Thu Apr /2/0 /1/7/:/0/0 /9/5 Portfolio for /4/#2F/2/0/#2F/9/5/4/5/0/2 PIESYSOP/@AppleLin Thu Apr /2/0 /1/7/:/2/1 /9/5 Re/: Signature Register/4/5/0/3 hupfer/-susanne/@cs Thu Apr /2/0 /1/7/:/2/1 /9/5 No Subject/4/5/0/4 sullivan/@fa/.disne Thu Apr /2/0 /1/9/:/0/7 /9/5 weights/, /#23/1/0/1/4N /4/5/0/5 fertig/@cs/.yale/.ed Fri Apr /2/1 /1/0/:/4/3 /9/5 Re/: PGPN /4/5/0/6 fertig/@cs/.yale/.ed Fri Apr /2/1 /1/0/:/5/3 /9/5 No SubjectFigure /4/./1/6/: The Command/-line In terface/.
Chapter /4/. The In terface /8/3In Figure /4/./1/7/, w e presen t a user session that includes these commands/. Thetranscript b egins as a user is viewing his main stream /#28all /4/5/0/0 do cumen ts/#29/. The userthen issues the command/:find lifestreams and dissertation
This results in the creation of a substream con taining sixteen do cumen ts from theen tire stream/. The user then lists the do cumen ts with the /#5C h/$ /" command/. F or allpractical purp oses the user can treat the substream as if it w ere a general mail sp o ol/.The user then issues the substreams command/, whic h displa ys all existing substreams/.Incremen tally created substreams are indicated through inden tation and the curren tstream is preceded with a /* /. The user then remo v es the substream with the removecommand/. The remove command defaults to the curren t substream/, but can alsob e giv en an argumen t to explicitly remo v e another substream/. After remo ving thesubstream the remove command returns the user to the paren t substream/, in this casethe main stream/. The user then issues the substream command/, mo ving the user tothe /#5Cshneiderman/" stream/. Issuing the up command mo v es the user to the paren tsubstream without remo ving the c hild/. Last/, the user issues the inc command/, whic hc hec ks the curren t stream or substream for new do cumen ts /#28in this case there w as oneadditional do cumen t app ended to the stream/#29/./4/./3/./3 TimeThe command/-line clien t time can b e set via the settime command/. This commandrequests the time from the user/. Users are allo w ed to en ter dates via a /#0Dexible formatbased on the getdate parser dev elop ed b y Stev en M/. Bello vin/. As an example/, Fig/-ure /4/./1/8 sho ws a user setting the time to next T uesda y at /8am/. Note that the /#5C h/$ /"command no w displa ys a n um b er of future do cumen ts/.The user can reset the time to the presen t with settime now /./4/./3/./4 New/, Clone and T ransferThe command/-line clien t supp orts new /, clone and transfer /. It also allo ws the userto t yp e mail along with a recipien t list/, whic h automates new and transfer for theuser/. As with the X Windo ws in terface all of these commands can b e carried out infuture time/./4/./3/./5 Summaries and P ersonal Agen tsThe command/-line clien t supp orts b oth summaries and p ersonal agen ts/, ho w ev er morew ork needs to b e done to pro vide compatibilit y with the X Windo ws clien t/. P ortinga summarizer or p ersonal agen t from the X v ersion curren tly requires c hanges to theclien t/'s source co de /#28rather than just a c hange to a /#5Cdefaults/" /#0Cle as in the X v ersion/#29
Chapter /4/. The In terface /8/4/& find lifestreams and dissertationEric/_Freeman/@pyt hagor as /#28lifestreams and dissertation/#29/: /1/6 documents /1 unread/&h /$/0 fertig Fri Nov /0/3 /1/5/:/2/8 /9/5 Re/: Hiding documents in Life/1 Eric/_Freeman Mon Nov /1/3 /1/6/:/2/4 /9/5 LS evaluation/2 David Kaminsky Tue Nov /1/4 /0/9/:/1/4 /9/5 lifestreams /#28LS/#29/3 Eric/_Freeman Tue Nov /1/4 /1/0/:/5/1 /9/5 Re/: lifestreams /#28LS/#29/4 David Kaminsky Tue Nov /1/4 /1/2/:/2/8 /9/5 lifestreams /#28LS/#29/5 Eric/_Freeman Tue Nov /1/4 /1/3/:/1/2 /9/5 more from Kaminsky/6 ben/@cs/.UMD/.EDU Wed Nov /1/5 /1/0/:/4/0 /9/5 Re/: Committee/7 Eric/_Freeman Wed Nov /1/5 /1/0/:/5/4 /9/5 from ben/8 ben/@cs/.UMD/.EDU Wed Nov /1/5 /1/1/:/0/5 /9/5 Re/: Committee/9 Eric/_Freeman Sun Dec /0/3 /1/6/:/2/9 /9/5 draft of letter to Franklin/1/0 fertig Sun Dec /0/3 /1/6/:/3/9 /9/5 Re/: draft of letter to Frank/1/1 Eric/_Freeman Sun Dec /0/3 /1/6/:/4/6 /9/5 Re/: SIGMOD/1/2 Eric/_Freeman Sun Dec /0/3 /1/6/:/5/3 /9/5 Re/: SIGMOD/1/3 franklin/@cs/.UMD/.E Mon Dec /0/4 /1/0/:/2/7 /9/5 Re/: SIGMODN/1 /4 Eric/_Freeman Mon Dec /0/4 /1/0/:/3/0 /9/5 Re/: SIGMOD/1/5 Eric/_Freeman Tue Dec /0/5 /1/9/:/1/4 /9/5 Re/: Lifestreams evaluation/&/& substreams/0/. All documents in your lifestream/1/. franklin
/2/. shneiderman
/3/. ben
/4/. netscape and bookmark and hotlist/5/. sigmod/6/. franklin
/7/. hcil/8/. stock and service and gvil
/9/. chi/1/0/. paul/1/1/. Gianattasio/1/2/. ethan and lifestreams
/1/3/. Mikrotec/*/1/4/. lifestreams and dissertation/& removeEric/_Freeman/@pyt hagor as /#28your lifestream/#29/: /4/5/0/9 documents /5/1 unread/& sub /2
Eric/_Freeman/@pyt hagor as /#28shneiderman/#29/: /2/7 documents /0 unread/&u p
Eric/_Freeman/@pyt hagor as /#28your lifestream/#29/: /4/5/0/9 documents /5/1 unread/& incEric/_Freeman/@pyt hagor as /#28your lifestream/#29/: /4/5/1/0 documents /5/2 unread/&Figure /4/./1/7/: Substreams in the CLI /.
Chapter /4/. The In terface /8/5/& settimeEnter a time /#5B/? for help/#5D/: next tuesday /8am
Set time to Tue Jun /2/5 /0/8/:/0/0/:/0/0 /1/9/9/6/? ySetting time to Tue Jun /2/5 /0/8/:/0/0/:/0/0 /1/9/9/6/.efreeman/@pythago ras /#28your lifestream/#29/: /1/3/5/8/0 documents /2/8 unread/&h /$/1/3/5/5/9 Jon Bennett /#3Cjonb Thu Jun /1/3 /1/6/:/3/4 /9/6 Re/: Eric Freeman/'s Home Pag/1/3/5/6/0 support/@devtools/. Thu Jun /1/3 /1/6/:/4/0 /9/6 Re/: Cafe Studio/?/1/3/5/6/1 efreeman Thu Jun /1/3 /1/8/:/0/4 /9/6 Re/: Eric Freeman/'s Home Pag/1/3/5/6/2 efreeman Thu Jun /1/3 /1/8/:/0/6 /9/6 Re/: Cafe Studio/?/1/3/5/6/3 hupfer/-susanne Thu Jun /1/3 /2/0/:/1/1 /9/6 raccoons/1/3/5/6/4 PRICES /#3Cprices/@Bo Thu Jun /1/3 /2/0/:/1/8 /9/6 Market Close /0/6/#2F/1/3/#2F/9/6/1/3/5/6/5 The c/|net newslet Thu Jun /1/3 /2/3/:/0/0 /9/6 c/|net Digital Dispatch Vol/.N /1/3/5/6/6 sullivan/@huey/.dis Fri Jun /1/4 /0/0/:/1/8 /9/6 weights/, /#23/1/2/5/2/1/3/5/6/7 freeman/-elisabeth Fri Jun /1/4 /0/9/:/2/0 /9/6 msg/1/3/5/6/8 freeman/-eric Fri Jun /1/4 /0/9/:/2/7 /9/6 editor saved /`/`processmail/'N /1/3/5/6/9 freeman/-eric Fri Jun /1/4 /0/9/:/2/7 /9/6 editor saved /`/`/#2Ftmp/#2FlstrMBA/1/3/5/7/0 Fri Jun /1/4 /0/9/:/4/4 /9/6 Yale Club/1/3/5/7/1 efreeman Fri Jun /1/4 /0/9/:/5/0 /9/6 Como/1/3/5/7/2 efreeman Fri Jun /1/4 /1/0/:/3/0 /9/6 Re/: HelloF /1/3/5/7/3 efreeman Fri Jun /1/4 /1/4/:/0/0 /9/6 Jones/#2FMcRae meetingF /1/3/5/7/4 efreeman Sun Jun /1/6 /0/8/:/0/0 /9/6 Father/'s DayF /1/3/5/7/5 efreeman Mon Jun /1/7 /0/8/:/0/0 /9/6 Dermatology AppointmentF /1/3/5/7/6 bfreeman Mon Jun /1/7 /0/9/:/2/8 /9/6 Reminder/: Saturn Car ClinicF /1/3/5/7/7 efreeman Mon Jun /1/7 /1/9/:/0/0 /9/6 Saturn New Car ClinicF /1/3/5/7/8 efreeman Sat Jun /2/2 /1/3/:/0/0 /9/6 Beth/#2FSusanne talk at SCSUF /1/3/5/7/9 efreeman Mon Jun /2/4 /0/8/:/0/0 /9/6 Deposit refund due/& settime now
Setting time back to/`/`now/./"
efreeman/@pythago ras /#28your lifestream/#29/: /1/3/5/7/3 documents /2/1 unread/&Figure /4/./1/8/: Time in the CLI /.
Chapter /4/. The In terface /8/6/& remindEnter a time for the reminder /#5B/? for help/#5D/: next wednesday /1/0amCreate reminder on Wed Jun /2/6 /1/0/:/0/0/:/0/0 /1/9/9/6/? ySubject/: meeting with David
Meet with David about the dissertation/.
/.
creating reminder on Wed Jun /2/6 /1/0/:/0/0/:/0/0 /1/9/9/6/././.done/.Figure /4/./1/9/: Reminder p ersonal agen t in the command/-line clien t/.and also to the agen t if it mak es use of the Tk graphics libraries /#28b ecause w en olonger ha v e a windo w displa y/#29/. One p ersonal agen t supp orted is the /#5Creminder/" agen t/#28Figure /4/./1/9/#29/. Lik e the X v ersion it /#0Crst prompts for a date/#2Ftime and then for amessage/, whic h is then added to the future/. The user can sp ecify other recipien ts forthe reminder and a xfer is automatically done to their streams/.A couple of the summarizers are also supplied /#28the default summarizer and theL
ATE
X summarizer/#29/. These are accessed b yt yping /"summarize/" at the command line/./4/./4 The PD A Clien tW eh a v e also implemen ted Lifestreams on the Apple Newton /#5BCom/9/3 /#5D/. This w ork w as/#0Crst describ ed in /#5BF re/9/5 /#5D/. The Newton presen ts an in teresting set of constrain ts fordev eloping a clien t/. It has a small /#28/2/4/0x/3/6/0/#29 mono c hrome graphics displa y /, limitedmemory /#28/1/6/0K of free heap and /2M of /#0Dash card storage/#29/, limited comm unicationsbandwidth /#28/2/4/0/0 baud/#29/, and p en/-based input/.
/7Certainly w e could not dev elop a full/-blo wn v ersion of the X Windo ws clien t/; ho w ev er our initial though ts w ere to dev elopa scaled/-do wn v ersion/. On closer examination/, the Newton suggests in triguing im/-plemen tation strategies b ecause of sev eral similarities b et w een the Newton op eratingsystem and Lifestreams/. Lik e Lifestreams/, the Newton/:/#0F Do es not use a traditional hierarc h y for managing information/. Instead it uses asimple folder/-based sc heme along with/./././#0F A con ten t/-based FIND capabilit y as its primary metho d of lo cating information/./#0F Replaces the traditional /#0Clesystem with a p ersisten t storage mo del/.Rather than attempting to in tegrate Lifestreams in to the existing Newton framew ork/|that is/, replacing the Newton/'s static folders with substreams/, rew orking the built in/7These are the sp eci/#0Ccations for Newton devices at the time of writing
Chapter /4/. The In terface /8/7notepad to load its notes from the Lifestreams serv er rather than the residen t /#5Cnotessystem soup/,/" o v erriding the Newton FIND function to create true substreams/, etc/./|w e/'v e dev elop ed the Lifestreams clien t as a standalone Newton application/, while inthe pro cess attempting to en vision the lo ok and feel of an in tegrated v ersion/. T o thatend/, w e/'v e tak en some lib erties and o v erridden some of the Newton/'s default b eha viors/./4/./4/./1 Comm unicationW e/'v e dev elop ed a pro xy application to sit in b et w een the clien t and the serv er b ecauseneither the RPC nor the TCP comm unication proto cols are supp orted in the Newtonop erating system/. The pro xy tak es requests via ASCI I commands from the Newton/.The pro xy then p erforms these requests b y making RPC calls to the serv er and re/-turning the results to the Newton in mixed ASCI I and binary formats/. The Newtonaccesses the pro xy b y either dialing in to a terminal serv er via mo dem or through atethered connection to a w orkstation/. After connecting/, the Newton then connects/#28via telnet/#29 to a sp eci/#0Cc p ort on a pro xy host and b egins comm unicating with thepro xy /. This indirect sc heme of telneting to a pro xy host allo ws the user to access hislifestream an ywhere on the net w ork/, as long as he has access to a lo cal mac hine thatsupp orts TCP and the telnet proto col/./4/./4/./2 The Newton In terfaceFigure /4/./2/0 displa ys the Newton in terface/. The user is initially greeted with a con/-nection dialog that allo ws him to sp ecify the name of his stream/, the name of hisLifestreams serv er /#28whic h in this case is actually the pro xy /, not the serv er/#29/, and theconnection metho d/: mo dem/, a direct tether connected to a UNIX w orkstation/, or awireless connection /#28not curren tly supp orted/#29/. Lik e most Newton applications/, Life/-streams con tains a folder icon at the top of the in terface/. The folder normally con tainsa set of prede/#0Cned categories for /#0Cling/. W eh a v eo v erwritten this b eha vior and replacedthe standard folder name with the user/'s stream name/. W e will see ho w the folder func/-tions shortly /. A clo c k in the form of a small circle at the b ottom of the in terface is alsoa standard feature of Newton applications/. Its default b eha vior is to displa y the dateand time when tapp ed on/; w e will see ho w it is used with Lifestreams shortly /. Alsoincluded in the in terface is an information button /#28that displa ys information ab outthe application and its author/#29 and the essen tial Lifestreams buttons/: NEW/, CLONE/,XFER and FIND
/8/, follo w ed b y the application/'s /#5Cclose/" button /#28the button with anX/#29/.T o access a lifestream the user taps on the Connect button and the Newton attemptsto connect/. The application then uses a built/-in con/#0Cguration script to attac ht ot h ew orkstation or terminal serv er and issue a telnet command to connect to the pro xy /./8Because the Newton in terface w as implemen ted early on in the Lifestreams w ork /#28and not main/-tained o v er the course of the pro ject/#29 the summarize function w as not included/.
Chapter /4/. The In terface /8/8
Figure /4/./2/0/: The Newton In terface/.After successfully making con tact with the pro xy /, the pro xy retriev es an up dated listof stream do cumen ts and sends this list to the Newton/. The clien t then in teracts withthe serv er b y issuing ASCI I commands and receiving data bac k/. The issuing of thesecommands is usually user/-driv en/: the user in teracts with the in terface/, and b ehind thescenes the application issues commands to the pro xy to satisfy requests/.Figure /4/./2/1 sho ws the in terface just after the Newton has successfully connected toa stream/. As y ou can see/, w e displa y the list of stream do cumen ts in an /#5Co v erview/./" Onthe Newton an o v erview can b e obtained b y pressing the o v erview button /#28a part of theNewton form factor/, not visible in screenshots/#29/. The o v erview lists all the do cumen tswithin the curren t application/. As with an y Newton o v erview the user can scroll do wnto see more do cumen ts /#28older ones/, in this case/#29 or tap a particular en try to retriev ethe corresp onding do cumen t/.Figure /4/./2/2 displa ys a do cumen t that has b een retriev ed from the Lifestreams serv er/.Once a do cumen t is displa y ed the user can scroll through it with the Newton/'s built/-in up and do wn arro ws/. If the do cumen t is writable the user can use the Newton/'shand recognition input to alter the do cumen t/. T apping the o v erview button redispla ysthe list of do cumen ts in the stream/. Our implemen tation falls short of true Newton
Chapter /4/. The In terface /8/9
Figure /4/./2/1/: Do cumen ts in a stream are displa y ed as an o v erview/.functionalit y here/, as the up and do wn arro ws only scroll within the do cumen t/. T ob econsisten t/, the clien t should b e able to scroll to the next or previous do cumen ta si nthe built/-in Newton notes application/. Notes/#29/.Also in Figure /4/./2/2 w e see ho w the folder button has b een replaced b y our o wn/#0Da v or of folders /#28substreams/#29/. Our folder button activ ates a p opup list that con tainsthe name of the curren t stream and its asso ciated substreams/. Cho osing a substreamloads the do cumen t list asso ciated with the substream /#28usually a m uc h shorter list ofdo cumen ts than app ear in the stream/#29 and displa ys them in the o v erview/. The lab elof the folder button is also up dated to displa y the name of the substream/. By usingthe /#5Cremo v e substream/" option/, the curren t substream can b e remo v ed at an y time/.W eh a v e also c hanged the b eha vior of the clo c k button in the status bar /#28see Figure/4/./2/3/#29/; when it is tapp ed a date/#2Ftime pic k er op ens instead of the normal time glance/.As in the X Windo ws in terface/, the clien t application main tains its o wn /#5Csystem time/"and allo ws the user to alter this time b y dialing to the future or the past /#28and bac kto the presen t/#29/. In an y case/, the clien t sets its clo c k to the user sp eci/#0Ced time/. The/#5Csystem time/" is then used when the clien t issues commands to the pro xy/#2Fserv er/.The op eration of NEW and CLONE is straigh tforw ard/: NEW replaces the curren tly
Chapter /4/. The In terface /9/0
Figure /4/./2/2/: Substreams are displa y ed in place of folders/.displa y ed do cumen t with a clean slate/. CLONE duplicates the curren t do cumen t andallo ws the user to b egin editing the new cop y /. In either case/, when the user /#0Cnishesediting the do cumen t /#28e/.g/./, when another do cumen t is retriev ed or the user exits fromthe CLI/#29/, Lifestreams /#0Crst stashes a w a y the latest c hanges b ys a ving the do cumen tbac k to the serv er/. In this w a y /, storage is transparen tly handled/.XFER displa ys a list of stream addresses from y our curren t serv er /#28Figure /4/./2/4/#29/.By tapping on the name of a stream the curren t do cumen t is then transferred to thatstream/.
/9Similarly /, FIND is supp orted in a simple form on the Newton/. T apping the FINDbutton displa ys a dialog that prompts for a b o olean query /#28Figure /4/./2/5/#29/. Clic kingon Find issues a request to the serv er to create the substream/. On the Newton thesubstream is added to the list of substreams/, the do cumen t list is loaded/, and a newo v erview is displa y ed/.While the Newton clien t is functional and useful/, there is still m uc h that can b e/9The implemen tation of the Newton clien t at the time of writing lags b ehind the X Windo wsimplemen tation/, whic h builds its transfer op eration on top of SMTP /. The Newton clien t still uses aearlier in tra/-serv er comm unication proto col/.
Chapter /4/. The In terface /9/1
Figure /4/./2/3/: The clo c k glance has b een replaced b y a date/#2Ftime editor/.done to impro v e it/. W e/'v e already men tioned the lac k of supp ort for summaries andthe activ e up date of liv e substreams/. There are other asp ects of Lifestreams thatare not supp orted in the Newton/. F or instance/, the lac k of supp ort for MIME/-t yp eddo cumen ts/. The Newton clien t curren tly handles only one do cumen tt yp e/, that of plaintext/, the most common t yp e/. There is no reason that the curren t Newton v ersion couldnot handle a v ariet y of text/, image/, and audio t yp es/. By de/#0Cning a MIME t yp e forthe Newton/'s in ternal do cumen tt yp e w e could also store/, searc h/, and transfer Newtonnotes/, business cards/, and sc hedules within Lifestreams/.One last asp ect of Lifestreams not represen ted in the Newton is the use of agen ts/.Curren tly Tcl/#2FTk has not b een p orted to the Newton/, and doing so w ould requiresigni/#0Ccan t resources/. Giv en this lac k of supp ort there is no clear path to supp ortingagen ts directly on the Newton in the near future/, although it is p ossible the pro xycould b e extended to help with agen t functions/.With substan tial e/#0Bort it is conceiv able that Lifestreams could b e in tegrated in to theNewton in a practically seamless fashion/. Changes to the Newton based on Lifestreamsw ould also b e in teresting and w ould unify man y of the disparate asp ects of Newtonapplications/. F or instance/, there w ere criticisms when the Newton w as /#0Crst released
Chapter /4/. The In terface /9/2
Figure /4/./2/4/: The T ransfer dialog/.
Figure /4/./2/5/: The Find dialog/.that no hierarc hical metho d of data storage w as a v ailable/. Adding substreams w ouldprobably b e a more satisfying approac h/. The adoption of our /#0Dexible time sc hemew ould also b e in teresting/, as the m ultistep pro cess of going to the dates applicationon the Newton w ould disapp ear/. F or those who prefer the nativ e Newton calendarin terface/, there is no reason this can not b e used as an alternate view of a stream/./4/./5 Summa ryW eh a v e presen ted three Lifestreams clien ts running on platforms with di/#0Beren t capa/-bilities/. The Newton clien t is a pro of of concept/. The X and CLI clien ts ha v e b een w ellused/, main tained and ha v e pla y ed a v aluable part in the incremen tal design and ev al/-uation of the protot yp e/. W e will presen t our ev aluation of the in terface in Chapter /6/;ho w ev er w e brie/#0Dy p oin t out directions for future w ork here/.As w e stated in the b eginning of this c hapter w e consider our in terface design the/#0Crst of a series of Lifestreams in terfaces/. F uture in terface w ork m ust explore impro ving
Chapter /4/. The In terface /9/3the information densit y of the in terface/, handling large do cumen t collections /#28morethan /5/0/,/0/0/0 do cumen ts/#29/, a b etter metho d for managing substreams/, and con tin ue toexplore alternativ e metho ds for displa ying streams/.Information densit y can p ossibly b e impro v ed in sev eral w a ys/. One metho d ma yb e to foreshorten the displa y of the stream so that less screen space is tak en up /#28andw asted/#29 b y the stream displa y /.I t w ould also b e useful to allo w the displa y of moreman y substreams at once/. A zo oming in terface /#28suc ha s P ad/+/+ /#5BBH/9/4 /#5D/#29 could alsoallo w the user to zo om in and out or ev en /#0Dy o v er the stream/.W eh a v e also suggested /#28in Chapter /3/#29 handling large collections of do cumen tsthrough tec hniques similar to database cursors/. Other tec hniques suc h as Shneider/-man/'s star/#0Celd displa y /#5BShn/9/2 /#5D use /#5Csliders/" to narro w a large n um b er of do cumen tsdo wn to a few/.Substreams can most lik ely b e impro v ed b y displa ying them graphically rather thanstoring them in a men u/. Since users t ypically remo v e all but a few substreams/, a least/-recen tly/-used p olicy ma y b e used to automatically remo v e substreams/. In addition/, ametho d has b een suggested that w ould place a /#5Ccalling card/" for eac h substream onthe stream so that they are can b e found via find /#5BCFF G/9/6 /#5D/.W e will explore a few calendar/-lik e metho ds of displa ying a stream in the next c hap/-ter/. F uture w ork should con tin ue to explore alternativ e views of the stream includingstream access through non/-con v en tional devices suc h as telephones and TV displa ys/.
Chapter /5Common T asksW en o w examine Lifestreams in the con text of its use and describ e ho w common usertasks are accomplished within the protot yp e/. Our in ten tion here is to surv ey thelandscap e of tasks men tioned in Chapter /1 and con v ey a sense of ho w they are accom/-plished using Lifestreams/. In the next c hapter w e will tak e a more analytical lo ok atthe protot yp e and presen t qualitativ e and quan titativ e data from its actual use/.W e b egin b y /#0Crst examining the common /#0Cling and /#0Cnding practices of Lifestreamsusers/. W e then examine more sp eci/#0Cc tasks includin g con tact managemen t/, calendarapplications/, and w eb b o okmark managemen t/. W e tak e most of our examples from thepractices of actual users/; ho w ev er in a few examples w e will suggest ho w Lifestreamscould conceiv ably b e used in other con texts /#28suc h as in the /#0Cnancial domain where ex/-p ecting users to use a protot yp e system for their /#0Cnances w as unreasonable/#29/. Along thew a yw e will also describ e task automation and system extensions that w ere dev elop edvia agen ts/./5/./1 Finding and Filing PracticesRather than using /#0Clenames and folders/, Lifestreams users rely on attribute and con ten t/-based /#5Csubstreaming/" to accomplish the tasks of organization and retriev al /#28or /#5C/#0Clingand /#0Cnding/" as it is called in the desktop w orld/#29/. Users tend to organize informationwithin Lifestreams in three di/#0Beren tw a ys that all en tail the use of find and substreams/.The most common use of the /#0Cnd op eration is to create a temp orary do cumen tcollection that can b e bro wsed for a piece of relev an t information/. A go o d example ofthis is searc hing for a do cumen t on a particular topic/, for instance the /#5Clast draft of theLifestreams SIGMOD pap er/./" Suc h queries are t ypically accomplished b y p erforminga find SIGMOD and Lifestreams that results in a substream with small n um be r o fdo cumen ts
/1/. These substreams can b e visually bro wsed for the in tended do cumen t/1Our user testing sho w ed that o v er half of the /#0Cnd op erations resulted in substreams with less than/2/5 do cumen ts /#28see Chapter /6/#29/./9/4
Chapter /5/. Common T asks /9/5or/, if the n um b er of do cumen ts is large/, further searc hed to lo cate the do cumen t /#28theuser ma y also mak e use of c hronology to lo cate the do cumen t/, ev en if the substreamis large/#29/.In this w a y Lifestreams allo ws bro wsing and searc hing to b e in tert wined/: the user/#0Clters his /#28p ossibly large/#29 information collection do wn in to a narro w con text in whic hto searc h for sp eci/#0Cc do cumen ts/. F rom there the user ma y further narro w the searc hagain b y using /#0Cnd /#28and so on/#29/. W ork b y Gopal et al /#5BGKM/9/5 /#5Dh a v e noted that theset w o paradigms /#28bro wsing and searc hing/#29 ha v e b een supp orted separately b y previousinformation systems and ha v e argued that b y allo wing access to the t w o capabilities al lthe time /, users are giv en a more p o w erful to ol for /#0Cnding information/. Substreamingsupp orts this com bined paradigm naturally/: the user can bro wse his curren t streamor substream/, searc h/, bro wse again/, further re/#0Cne his searc h /#28through incremen talsubstreams/#29/, bro wse again/, bac k up/, searc h again/, and so on/.When users create substreams in this manner they t ypically destro y them afterthey/'v e lo cated /#28and p ossibly cloned or xfer/'d/#29 the do cumen t/. Our ev aluation in thenext c hapter will examine this topic further/.Another w a y users commonly use substreams is to main tain p ersisten t collectionsof do cumen ts/. F or instance if the ab o v e SIGMOD draft w as dev elop ed o v er the long/-term/, the user migh t allo w the /#5CSIGMOD and Lifestreams/" substream to p ersist /#28ratherthan immediately remo ving it/#29 so that it con tin ues to collect new do cumen ts as theyare added to the stream/. This st yle of organization directly mirrors what Barreau andNardi /#5BBN/9/5/#5D call /#5Cw orking/" information /| information that is t ypically relev an tt oan ongoing pro ject or task and is imp ortan t to the user o v er a time p erio d of w eeksor mon ths /#28w e will explore these classi/#0Ccations further in Chapter /7/#29/. In this case thesubstream of /#5Cw orking/" information for the SIGMOD pap er migh t include drafts ofthe pap er as w ell as email exc hanges b et w een the author and editors/. Barreau andNardi found that users often prefer to k eep w orking information in an easily accessi/-ble /#5Clo cation/./" Here Lifestreams sho ws a bit of the /#0Da v or of a lo cation/-based system/,but with a few di/#0Berences/: First/, information in p ersisten t substreams still remainsaccessible to other substreams/. Lik ewise/, at an y time the /#5CSIGMOD and Lifestreams/"substream can b e further re/#0Cned b y creating an incremen tal substream /#28sa yb y find/"comments or feedback/" /#29/. Last/, substreams automatically capture new informationas it is added to the stream /#28so the user do esn/'t ha v e to explicitly /#0Cle new do cumen ts asthey are created/#29/. These same tec hniques can b e used to main tain an ongoing threadof con v ersation/. W e will further explore this topic in the next section/.The last st yle of organization/, whic h is seldom used but needed in some circum/-stances/, is the creation of explicit substreams/. These substreams are similar to di/-rectories b ecause the user decides what go es in to eac h one/. Users create them b yassigning a unique k eyw ord
/2to eac h do cumen t in the substream /#28suc h as the k eyw ord/2This is curren t done explicitl y as describ ed in Chapter /4 but could b e implemen ted through a/#5Cstamping/" or drag/-and/-drop mec hanism/.
Chapter /5/. Common T asks /9/6mydissertation /#29 and then creating a substream based on that k eyw ord/. This formof substreaming can b e used to mirror an en tire /#0Cle system/. F or example/, if w ew an tto place the directory /#2Fetc in a lifestream w e can tag all of its /#0Cles with the k eyw ord/#2Fetc /, and so on recursiv ely for the en tire directory structure/. A /#0Cnd on /"/#2Fetc/" w ouldthen retriev e the /#0Cles in that directory /. A t the same time the /#0Cles in /#2Fetc remaina v ailable to b e found b y other /#0Cnd op erations/./5/./2 Electronic MailElectronic mail is the most prev alen t application used b y computer users and /#0Cllsav ariet y of roles b ey ond information transfer b et w een individuals /#5BWS/9/6 /#5D/. Sendingand receiving electronic mail in Lifestreams is similar to what the user is alreadyaccustomed to/: to send a do cumen t the user creates a new do cumen t and uses thetransfer op eration/. Similarly /, existing do cumen ts are easily forw arded to other users/,and do cumen ts can b e cloned and replied to/. Incoming email is automatically app endedto the stream/.While users normally handle /#5Cone/-shot/" comm unication on the main stream /#28e/.g/./, anew message arriv es and the user reads it and p ossibly resp onds/#29/, p ersisten t substreamscan b e used to monitor an ongoing thread of con v ersation and switc h bac k and forthbe t w een m ultiple con v ersational threads/. One of our lo cal users main tains an ongoingcon v ersational thread with her external thesis reader b y creating a substream withthe searc h query /"to/:suresh or from/:suresh/" /#28 to and from are tags as describ edin Chapter /3/#29/. This query uniquely captures all her mail to and from the reader/. Sheoften uses this substream as the basis for /#0Cnding more sp eci/#0Cc messages from theircon v ersation /#28suc ha s find semantics or find visit /#29/.All mail messages /#28incoming and outgoing/#29 are in termixed with other do cumen ts inthe main stream/; ho w ev er the user can easily create a mailb o xb y substreaming/. In ourprotot yp e all transferred do cumen ts are automatically tagged as email /, so the mailb o xcan b e created through find type/:email /. By incremen tally substreaming from themailb o x substream the user can create con v en tional mailb o x /#5Cfolders/./" These foldersmigh t con tain all mail from a particular user /#28or group of p eople/#29/, all mail ab out aparticular topic area/, or the mail a user has not resp onded to/. Because these foldersare substreams they also act as /#0Clters and con tin ue to collect new mail as it arriv es/.The user can also /#5Cremo v e/" email from a substream /#28or the main stream/#29 b y /#0Cnding/"not type/:email/" /. This will create a substream con taining all the do cumen ts thatare not email/. This also has the e/#0Bect of /#0Cltering out incoming email
/3/. When theuser no longer needs email to b e disabled/, he can remo v e the incremen tally createdsubstream and return to the original substream/./3As the protot yp e is curren tly implemen ted the user can/'t /#0Clter out incoming email without also/#0Cltering out old email messages that b elong to a substream/. With the addition of time quali/#0Cers on
searc hes /#28e/.g/./, not /:email after /3pm /#29 this shortcoming can b e alleviated/.
Chapter /5/. Common T asks /9/7W eh a v e already men tioned ho w users can dial to the future and dep osit do cumen tsthat act as reminders/. A user can also send mail that will arriv e in the future if he/#5Cdials/" to the future b efore sending a message/. When the message is transferred itwill app ear in the future of the recipien t/'s stream and /#28lik e a reminder/#29 only b e visibleto the recipien t when he dials to the future or when its creation time arriv es/. W e usethis abilit y to send mail to the future to p ost reminders to others ab out imp ortan tmeetings/, departmen t talks/, etc/.Last/, a user can summarize a substream of email with the default summarizer asseen in Figure /5/./1/. Here the user has summarized all the email from a particularuser/. F or eac h email message in the substream the default summarizer strips o/#0B itsheader/, displa ys the sub ject along with the creator of the message and then the /#0Crstn c haracters of the message /#28here n /= /8/0/#29/. While there is nothing computationally/#5Cclev er/" ab out the default summarizer/, the o v erviews it generates can nev ertheless b euseful/. This v ersion of the summarizer only creates a text v ersion of the summary /.F uture v ersions could w ork in more of a h yp ertext manner/, allo wing the user to clic kon a summary /, whic hw ould op en the do cumen t within Lifestreams/./5/./3 Con tact Manageme n tThere are a n um b er of con tact managers on the mark et that store electronic businesscards/, the date and time of con tacts/, and time sp en t on tasks for billing purp oses/.Lifestreams supp orts t w o MIME do cumen tt yp es that can b e used for con tactmanagemen t/: a business card and a phone call do cumen t/. The business card /#28sho wnin Figure /5/./2/#29 is a do cumen t that con tains the information y ou w ould exp ect/: name/,title/, compan y /, address/, phone n um b ers and email address/. The phone call record storesinformation ab out a particular phone call /#28as most con tact managers do/#29/: time of call/,whom w as called/, phone n um b er/, and notes ab out the call /#28as seen in Figure /5/./3/#29/. Notethat the user could also just t yp e con tact information in to text do cumen ts/.T o add a new business card or a phone call do cumen t/, one clic ks on the New buttonand then c hanges the t yp e of the do cumen tt o businesscard or phonecall /#28via theattribute dialog b o xa ss h o wn in Chapter /4/#29/. In the case of a businesscard/, users ma yxfer cards to eac h other /#28rather than ha ving to en ter eac h card in to their lifestream/#29/.F or phone call records/, the user often needs to refer to a business card to obtain a phonen um b er/. This can b e ac hiev ed b y substreaming on the name of the callee/, selectingtheir phone n um b er and creating a new phone call record/, pasting in the informationrequired/. Since this requires a few /#5Cmouse clic ks/" w eh a v e automated m uc h of the taskof creating a phone call record with a p ersonal agen t/. This agen t is included with ourstandard Lifestreams system and is lo cated in the /#5Cautomated tasks/" men u/. When theuser w an ts to mak e a call they c ho ose /#5CMak e Phonecall/" from the men u and the agen tis spa wned and displa ys the dialog b o x in Figure /5/./4/. While the agen tw as createdb ya na d v anced user/, the agen t co de size is roughly /1/5/0 lines/, only /2/0 of whic h are
Chapter /5/. Common T asks /9/8DOCUMENT SUMMARYevaluation chapter /#3CBenjamin B/. Bederson/#3EHi Eric/, Good news/. I read your chapter/, and have no comments/. Iam happy with the new version/. I think the info from your logging
was really useful in supporting the results of QUIS/, and I will
insist on logging for futureRe/: WIRED/#2Fevaluation /#3CBenjamin B/. Bederson/#3EI got the new chapter/, and will try and read it this week/. I wasactually pretty happy with the CyberTimes article/. Considering how
bad reporters usually do/, I felt that he actually had some idea
about why Pad/+/+ and Lifestreams are interesting/. And/, I thoughthis criticisms wereRe/: Thesis comments /#3CBenjamin B/. Bederson/#3EI would be happy to come/, but unfortunately/, I have just beentraveling /#28and missed too many classes/#29 this semester/. Go aheadand hold the defense whenever is convenient/, and I/'ll plan on
coming for a visit either over x/-mas break or early during the
Spring semester/. Will you still be around/?Thesis comments /#3CBenjamin B/. Bederson/#3EEric/, Well/, I finally managed to make time to read your thesis/. Iapologize for the delay and hope my comments can still help you/.
It might be a good idea to show these comments to David /- but I
couldn/'t find his emailRe/: Questionnaire /#3CBenjamin B/. Bederson/#3EAll sounds good/. I don/'t think having short/-term users will giveyou much useful data/. My recent experience with testing Pad/+/+ wasthat Pad/+/+ novices didn/'t do that well/, even after a specifictraining period/. It seems that it really takes people a while to
learn new systems /- not too surprising/././.dissertation /#3CBenjamin B/. Bederson/#3EI/, unfortunately/, am behind/. I read the first two chapters and wasvery happy with your organization/, and motivation/. I have some
small comments/, but I was going to wait and collect them/. I/'ll try
to read through the rest by early next week/. We got the CHI papers
out/, but now I have an ONR proposal due on Monday/././././.
/.Figure /5/./1/: A Summary of Email/.
Chapter /5/. Common T asks /9/9
Figure /5/./2/: A Businesscard Do cumen t/.
Figure /5/./3/: A Phonecall Do cumen t/.
Chapter /5/. Common T asks /1/0/0
Figure /5/./4/: The Phone Call P ersonal Agen t/.Lifestreams/-sp eci/#0Cc co de/.Once the dialog b o x app ears/, the user t yp es in the name of the callee/. The agen tthen searc hes the curren t stream for a business card with that name and/, if found/,creates a new do cumen t /#28with a MIME t yp e of a phone/-call record/#29 and /#0Clls in theappropriate en tries /#28Figure /5/./3/#29/. This functionalit y is similar to the use of the p ersonalassistan t on the Newton platform/. In the ev en t that sev eral records are found the useris giv en a c hoice/. Note that there is an adv an tage to the c hronological order in this case/| as p eople up date their business cards w e can alw a ys get their most recen t card b yits p osition in the stream /#28the most recen t app ears closest to the head of the stream/#29/.Substreaming can b e useful in other w a ys in this con text/. F or instance a user canbro wse though his /#5Crolo dex/" b y substreaming on find type/:businesscard /. Or he canre/#0Cne his rolo dex b y incremen tally substreaming to lo ok at/, for example/, all con tactsfrom /"find ibm/" /. The user can do the same with his phone calls/, lo oking at a list ofall phone calls or selectiv e phone calls/.The user can also summarize phone calls in to a summary /#28sho wn in Figure /5/./5/#29/.Phone call information could also b e used to generate billing information for consul/-tan ts /#28although w eh a v en/'t y et dev elop ed a summarizer to do this/#29/. While a businesscard summarizer do esn/'t exist/, an electronic rolo dex w ould b e a suitable form for thesummary /.Lifestreams could also b e extended to subsume the functionalit y of a time manager/.Time managers generally trac k the billable hours a professional sp ends on one or morepro jects/. In Lifestreams this is easily accomplished b y creating a timecard that marksthe starting and ending time of eac h task /#28these timecards are just thro wn on to thestream as they are used/#29/. Then/, b efore eac h billing p erio d/, the stream is summarizedb y the timecards/, resulting in a detailed billing statemen t for eac h con tract/.
Chapter /5/. Common T asks /1/0/1WHO ON AT ABOUT/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/- /-/-/-/-/- /-/-/-/-/- /-/-/-/-/- /-/-/-/-/- /-/-/-/- /-/-/-/-/- /-/-/-/-/- /-/-/-/-/- /-/-/-/-/- /-/-/-/-/- /-/-/-/- /-/-/-/-/- /-/-/-/-/-Ward Mullins Thu Oct /3/1 /1/1/:/5/0 EDT /1/9/9/6 /4/1/5 /2/2/4/-/1/9/1/2 Tcl/#2FJava discussionScott Fertig Wed Oct /3/0 /1/2/:/0/5 EDT /1/9/9/6 /4/3/2/-/6/4/3/3 Beth/'s BirthdaySusanne Hupfer Mon Oct /2/8 /1/0/:/0/6 EDT /1/9/9/6 /2/0/3/-/4/3/3/-/1/2/1/1 Java Book/#2FClassLorraine Tue Sep /1/7 /1/:/0/0 EDT /1/9/9/6 /4/8/8/-/1/2/3/4 Crown Tower DepositSusanne Hupfer Mon Sep /0/2 /1/4/:/2/3 EDT /1/9/9/6 /2/0/3/-/4/3/3/-/1/2/1/1 Cat/.
/.
/.Figure /5/./5/: A Summary of Phone Calls/./5/./4 Managing Bo okmarksMan y commercial to ols ha v e b een created to help users manage w eb b o okmarks/. In ourlo cal researc h group w eh a v e found it di/#0Ecult to k eep trac k of our o wn w eb b o okmarksand incon v enien t to pass in teresting b o okmarks to one another/.In Lifestreams w eh a v e dev elop ed a system similar to /#5Cw arm lists/" /#5BKM/9/5 /#5D/, whereb ya daemon w atc hes the user/'s b o okmark /#0Cle/, and eac h time a new b o okmark is addedthe same b o okmark is added to Lifestreams as a new /#5CURL do cumen t/./" This URLdo cumen t con tains t w o pieces of information/: the URL needed to connect to the remotesite and the text of the page at the remote site/. When a URL do cumen t is op enedin Lifestreams the w eb bro wser comes to the foreground and displa ys the page b yconnecting to the URL/.Displa ying a b o okmarks list in Lifestreams is accomplished b y substreaming ondo cumen ts of t yp e URL /. In this w a yw e can use Lifestreams to create a b o okmarksubstream while at the same time making the data in the b o okmarks readily a v ailableto an y other searc hes w e migh t mak e on our stream/. This has an adv an tage o v erw eb bro wser b o okmarks in that w e can searc ho v er the text of eac hw eb page in ourLifestreams b o okmarks /#28although this functionalit y has recen tly b ecome a v ailable incommercial b o okmark managemen t applications/#29/. Moreo v er the b o okmark substreamitself can b e incremen tally searc hed for v arious t yp es of b o okmarks/.P assing URLs around to other users is also impro v ed/. Before Lifestreams/, w eusually traded URLs b y cop ying an URL from a w eb bro wser to an email message/,whic h the recipien tw ould cop y from email bac k to their o wn bro wser and add as ab o okmark/. With Lifestreams/, passing URLs around is trivial/. W e xfer the URLdo cumen t to another user/'s stream /#28a one/-step pro cess/#29 and the URL is automaticallyincluded in their b o okmarks substream/.W e can recreate a b o okmark /#5Cw eb page/" b y summarizing the b o okmarks substream
Chapter /5/. Common T asks /1/0/2/#28or an y substream incremen tally created from it/#29 as sho wn in Figure /5/./6/. F or eac h URLdo cumen t in the substream the summary con tains its title as a h yp erlink /#28the user canclic k on the link and b e connected to the page/#29 as w ell as a description of the pagethat is created b y parsing the con ten t of the page/'s HTML and displa ying the /#0Crst /8/0c haracters/./5/./5 Calendar ApplicationsLifestreams pro vides a natural data structure for the construction of man y to do lists/,calendar and sc heduling applications/. In the course of this dissertation w eh a v e onlyscratc hed the surface of suc h use/, but our w ork suggests future directions/.Users of the curren t system ha v e devised sev eral w a ys of managing to do list itemsand calendaring/,
/4some of whic hi n v olv e extensions to the system via summarizers/. W eb egin with the simplest metho ds of managing to do lists/. In all cases the users t ypicallystore one to do item p er do cumen t/. In the simplest case the user adds to do items to thestream on the date of its deadline/. The user can then tra v el to the future and examinethe list/. If the user is using plain text /#0Cles for to do items/, then the w ord /#5Cto do/" canb e added to the text if the user w an ts to substream while in the future to retriev e onlyto do items /#28as opp osed to sc heduling information/#29/. When the deadline of the itemarriv es the user is alerted and can deal with the task immediately or clone it /#5Cbac kt othe future/" to put the task o/#0B /#28sev eral users ha v e requested a more automated w a yt o/#5Cput o/#0B/" to do items/#29/.The user can also summarize to do lists/. While the default summarizer w ould do/,the author and another user w ork ed together to create a summarizer for the future thatrepresen ts the future of the substream as a w eekly or daily planner/. The summarizerdecides whic h of the t w o is appropriate b y the amoun t of time the user has tra v eled in tothe future /| if the user tra v els one da yi n to the future then a da y planner is displa y ed/#28Figure /5/./7/#29/, otherwise a w eek planner is displa y ed /#28Figure /5/./8/#29/. F uture w ork couldalso include longer/-term views suc ha s w eeks and mon ths/.Another clev er /#28if less elegan t/#29 metho d is to tag to do do cumen ts as they are createdor arriv e from other users via xfer /#28or external email/#29/. F or instance/, one user tags to dolist do cumen ts with the explicit k eyw ord todo /. When the tasks are completed she thentags then with the explicit k eyw ord done /. When she w an ts to examine her to do list shecreates a substream b y /"find todo and not done/" /. While this metho d has some ofthe /#0Da v or of a lo cation/-based system/, it nev ertheless main tains adv an tages o v er thosesystems /#28e/.g/./, these do cumen ts remain accessible b y other searc hes/, etc/./#29/.Andrew Larratt/-Smith/, a Y ale undergraduate/, dev elop ed a complete calendar in ter/-face /#28not as a summarizer but as an alternativ ei n terface/#29 to Lifestreams for his seniorpro ject /#5BLS/9/6/#5D/. The calendar is fully in tegrated in to the X Windo ws in terface and the/4These metho ds seem to b e indicativ e of cognitiv es t yles of using the system/. W e lea v e suc h analysisfor others to explore/.
Chapter /5/. Common T asks /1/0/3
Figure /5/./6/: A Summary of Bo okmarks/.
Chapter /5/. Common T asks /1/0/4
Figure /5/./7/: Da y at a Glance Summarizer/.user can switc hb e t w een the t w o using the Display men u/. His in terface is sho wn inFigure /5/./9/.This in terface is particularly useful when viewing the future p ortion of the streamallo wing app oin tmen ts/, reminders and sc heduling items on the stream to b e displa y edin a format that is familiar to users/. Note that the in terface/, despite its departure fromthe stream view/, still con tains the Lifestreams /#5Cdash b oard/,/" that is/, all the Lifestreamsop erations/. The in terface also pro vides some no v el features/. The user can select a da y /,clic k the new button /, and create a do cumen t in the future b y sp ecifying a time/. Theuser can also select a da y in the past or future/, double clic k and he is returned to thestream view fo cused on the appropriate time within the stream/.W eh a v e already discussed in the previous section on electronic mail ho w com/-m unication and future do cumen ts can b e used to allo w reminding of others/. Thesetec hniques can b e com bined with p ersonal and do cumen t agen ts to implemen ta n um/-b er of group w are applications on top of Lifestreams/. As a demonstration w e pro videone application here/: a meeting mak er/.T o use the meeting mak er the user /#0Crst selects Schedule a meeting from theautomated tasks men u/. This spa wns a p ersonal agen t that prompts the user for thenames of the attendees /#28Figure /5/./1/0/#29/. After en tering the names the user is then pro videdwith an o v erview of the w eek /#28Figure /5/./1/1
/5/#29 with con/#0Dicting meeting slots alreadyblo c k ed out/. These dates are determined b y examining the streams of all the attendees/.Once the user selects a meeting time a do cumen t is sen t to eac h p oten tial attendee/.This do cumen t includes a do cumen t agen t/. When the user reads the message/, the/5The in terface co de w as originall y written b y Susanne Hupfer as a T uringw are meeting mak er/#5BHup/9/6/#5D and mo di/#0Ced to w ork for Lifestreams/.
Chapter /5/. Common T asks /1/0/5
Figure /5/./8/: W eek at a Glance Summarizer/.
Chapter /5/. Common T asks /1/0/6
Figure /5/./9/: The X Windo ws Calendar In terface/.
Chapter /5/. Common T asks /1/0/7
Figure /5/./1/0/: Meeting Mak er Requesting Recipien ts/.
Figure /5/./1/1/: Meeting Mak er Sc heduler/.agen t asks the user if he can attend or not /#28Figure /5/./1/2/#29 and a message is returned tothe initiator/'s stream/.The p ersonal agen t on the initiator/'s stream w aits in the bac kground un til all re/-sp onses are collected/. If all users ok a y the meeting then a future do cumen t is placedin eac h attendee/'s stream/. Otherwise/, a do cumen t is placed on the initiator/'s streamto indicate the sc heduling failed/.While there are man yo b vious enhancemen ts w e could mak e /#28automated retries offailed meetings/, /#0Cner gran ularit y of meeting times/, etc/./#29/, w e o/#0Ber the meeting mak eras an example of a straigh tforw ard extension of the system that automates a pro cessfor the users and mak es use of the time/-ordered nature of the stream/./5/./6 P ersonal FinancesW eh a v e just b egun to explore using Lifestreams to manage p ersonal /#0Cnances/. Whilew eh a v e exp erimen ted with using Lifestreams to trac k sto c k p ortfolios/, pro viding other/#0Cnancial services within Lifestreams w ould require us to sim ulate electronic bankingor to w ork closely with an existing service /| b oth of whic h are b ey ond our curren tresources/. W e will/, ho w ev er/, suggest the w a ys Lifestreams can b e used in p ersonal
Chapter /5/. Common T asks /1/0/8
Figure /5/./1/2/: Meeting Mak er Do cumen t Agen t/./#0Cnance/.Millions of t ypical users already trac k their c hec king accoun ts/, sa vings/, in v estmen ts/,and budgets on their computers with applications suc h as Quic k en/. The t yp es ofrecords and do cumen ts used in applications suc h as Quic k en /| electronic c hec ks/, de/-p osits/, securities transactions/, rep orts /| can b e con v enien tly stored and generated b yLifestreams/. A user could easily migrate his c hec king accoun t to Lifestreams so thateac hc hec k written creates a record on his stream/. Some of these c hec ks w ould b eelectronic c hec ks sen t to companies with an online presence/; others transcrib ed fromwritten c hec ks /#28just as man y p eople already do with Quic k en/#29/. A substream w ouldrecall all electronic transactions/, all c hec ks/, or all bills/. The user could then emplo yasummarizer to help balance his c hec kb o ok/. A ty ear/'s end summarizers could b e used tohelp a user prepare his taxes /#28whic h could then b e shipp ed electronically to the IRS/#29/.Lifestreams could also help with budgeting/, trac king exp enditures/, etc/. Of course/,man y of these capabilities are already a v ailable in pro ducts lik e Quic k en/; but it isw orth p oin ting out that Lifestreams con tains everything a p erson deals with in hiselectronic life/. Rather than storing /#0Cnancial records in a monolithic /#0Cle/, eac h could b estored separately in Lifestreams and made use of b y man y p ossible applications /#28e/.g/./,summarizers/, agen ts/, etc/./#29F or managing p ortfolios man y services that forw ard daily closing v alues of securitiesvia electronic mail already exist/. The b o dy of an email message from one suc h serviceis sho wn b elo w /#28from Net Pro/#0Ct/, Inc/./#29/:DJIA/: DOWN /5/./5/5 to /5/6/7/4/./2/8 NYSE/: DOWN /1/./0/6 to /3/5/2/./8/1S/&P/5/0/0/: DOWN /2/./2/6 to /6/6/0/./2/3 AMEX/: DOWN /0/./3/8 to /5/4/8/./5/9RUS/2/0/0/0/: UP /0/./3/3 to /3/2/4/./7/4 NASDAQ/: DOWN /4/./3/9 to /1/1/2/0/./5/3Shares Today/'s Today/'s Total TotalSymbol Owned Close Change Value Change/-/-/-/-/-/-/-/- /-/-/-/-/-/-/-/-/-/- /-/-/-/-/-/-/-/-/-/- /-/-/-/-/-/-/-/-/- /-/-/-/-/-/-/-/-/-/-/-/-/- /-/-/-/-/-/-/-/-/-/-
Chapter /5/. Common T asks /1/0/9
Figure /5/./1/3/: A Summary of Sto c kP erformance/.GVIL /3/5/0/./0/0/0 /7/./0/0/0 /-/0/./1/2/5 /2/,/4/5/0/./0/0 /-/4/3/./7/5ODWA /4/0/0/./0/0/0 /1/8/./7/5/0 /-/0/./5/0/0 /7/,/5/0/0/./0/0 /-/2/0/0/./0/0SPLS /1/1/2/./5/0/0 /1/7/./2/5/0 /-/0/./1/2/5 /1/,/9/4/0/./6/2 /-/1/4/./0/6TSA /1/0/0/./0/0/0 /1/9/./0/0/0 /0/./1/2/5 /1/,/9/0/0/./0/0 /1/2/./5/0TSSW /6/0/0/./0/0/0 /3/./0/0/0 /0/./0/0/0 /1/,/8/0/0/./0/0 /0/./0/0/-/-/-/-/-/-/-/-/-/-/-/-/- /-/-/-/-/-/-/-/-/-/-/1/5/,/5/9/0/./6/2 /-/2/4/5/./3/1Users can easily access all suc h records in their lifestreams via substreaming /#28inthis case /"find from/:netprofit/" uniquely captures the stream/#29/. The user can thenbro wse o v er eac hd a y/'s records/. T o view the historical p erformance o v er time the usercan mak e use of summarize as sho wn in Figure /5/./1/3/. This summarizer collects thehistory of the p ortfolio o v er time and pro vides a c hart sho wing p erformance/./5/./7 Summa ryThe domain/-sp eci/#0Cc examples w eh a v e examined in this section illustrate the unifyinge/#0Bect that Lifestreams has o v er data and applications/. In Lifestreams the same op era/-
Chapter /5/. Common T asks /1/1/0tion that creates a generic do cumen t/#28 new /#29 also creates an email message/, a reminder/,a business card and /#28indirectly/#29 a w eb b o okmark/. Lik ewise/, the same op eration thatcreates a /#5Cw orking directory/" also creates an electronic mailb o x/, a /#5Chotlist/"/, and acon tact list/. Bro wsing a /#5Cdirectory/" in searc h of a /#0Cle/, a mail b o x in searc h of a mailmessage/, a con tact list in searc h of a con tact/, and an app oin tmen ts c hedule in searc ho fan app oin tmen t are all the same op eration/. Moreo v er/, if y ou kno wh o w to use find tolo cate a do cumen t/, y ou also kno wh o w to set up an /#5Cagen t/" to /#0Clter y our email /#28via ap ersisten t substream/#29/. In ev ery case/, summarize giv es y ou a synopsis /| a summary of/#0Cles/, a summary of b o okmarks/, a list of con tacts/, a summary of mail/, or y our sc heduleat a glance/.
Chapter /6Ev aluationTh us far w eh a v e motiv ated Lifestreams/, presen ted a mo del for the system/, describ ed aninstan tiation of the mo del /#28the researc h protot yp e/#29/, and lo ok ed at the protot yp e in thecon text of common user tasks/. In this c hapter w ee v aluate the researc h protot yp e/; ourgoal in doing so is to supp ort the thesis/, to supp ort or dispro v ea n yi n tuition w eh a v eab out the mo del/, to shed ligh t on the strengths and w eaknesses of the curren t mo deland system/, and to driv e the dev elopmen t of next generation Lifestreams systems/./6/./1 Scop e and Metho dologyThe creation of exp erimen tal computer systems is an incremen tal pursuit/. While thegoal is to pro vide no v el to ols that impro v e the utilit y of the computer/, the resultingsystem is often the result of incremen tally building protot yp es/, eac h based on what w aslearned in the previous generation/. Early computer systems w ere designed and used b ytec hnical p eople/. T od a y/'s systems ha v e to b e functional o v er a wide range of users /#28orat least Lifestreams aims to b e so/#29/. Shneiderman has claimed that the programmer/'sin tuition is no longer go o d enough/, systems ha v et ob e v alidated through protot yp e/,usabilit y and acceptance testing /#5BShn/9/2/#5D/.In this dissertation w e describ e the /#0Crst steps to w ard this ev aluation/. Our study ofLifestreams is based on o v er /2/4 mon ths of user feedbac k from six users /#28sev en/, includingthe author/#29/. In the pro cess three generations of user in terfaces w ere incremen tally builtand n umerous c hanges w ere made to the seman tics of the underlying system/.W e are in terested in ev aluating t w ok ey asp ects of the system/: usabilit y and utilit y /.Usabilit y addresses the question /#5Cw as the user in terface /#28and in our case also the/#5Cmetaphor/"/#29 acceptable to the user/?/" This acceptabilit y can b e ev aluated b y measuringsev eral asp ects of the in terface /#5BNie/9/3/#5D/: Ho w easy is it to learn/? Ho w easy is it to use/?Is it sub jectiv ely pleasing to the user/? Utilit y is a measure of the o v erall e/#0Eciencyand e/#0Bectiv eness of the system/. While usabilit yi st ypically a sub jectiv e measure andutilit y a quan titativ e one/, w e will see that the t w o can b e used together to obtain more/1/1/1
Chapter /6/. Ev aluation /1/1/2meaningful analysis than using either measure alone/.In general/, our e/#0Borts can b e describ ed as a small/-scale /#0Celd study /#28in v olving nocon trol/#29 with sub jects who ha v e used the system extensiv ely /.T o this study w e applythe b est a v ailable tec hniques for ev aluating user satisfaction/, and the usabilit y andutilit y of the system/. T o measure user satisfaction w e rely on the Questionnair e forUser Satisfaction /#28QUIS/#29/, a standardized usabilit y testing to ol a v ailable for licenseduse from the Univ ersit y of Maryland/. The QUIS to ol w as dev elop ed b y Shneidermanand Norman /#5BShn/9/2 /#5D at the Univ ersit y of Maryland and attempts to capture the o v erallsub jectiv e satisfaction with an electronic system/. Sub jectiv e satisfaction is imp ortan tin that it is a crucial measure of an electronic system /#5BHN/9/3 /#5D /| although a systemma yb e e v aluated fa v orably on p erformance measures/, it ma y not b e used b ecause ofuser dissatisfaction/. Using a standardized to ol a v oids man y of the problems of self/-dev elop ed questionnaires /#28question bias/, v ariabilit y /, reliabilit y/#29/. QUIS is curren tly themost thoroughly dev elop ed testing to ol a v ailable/, ha ving b een widely used in industryand academia/, and exp erimen tally sho wn to ha v e high reliabilit y and lo wv ariabilit ywhen measuring sub jectiv e satisfaction /#5BCDN/8/8 /#5D/. Bey ond measuring user satisfaction/,QUIS can also b e used to diagnose the strengths and w eaknesses of a system and toassess p oten tial areas for system impro v emen t /#28as w e shall see/#29 /#5BNor/9/0 /#5D/.Our second to ol for ev aluation is the use of program instrumen tation to collect dataon the utilit y of the Lifestreams system/. W e do so using con v en tional/, w ell/-establishedtec hniques for monitoring system usage /#5BP er/9/6 /#5D/: k eeping a time/-stamp ed sequence ofuser commands along with an y imp ortan t system v ariables /#28suc h as the k eyw ords usedin a searc h query/#29 in a log /#0Cle/. The log /#0Cle can then b e used to determine whic h partsof the system w ere used and not used /#28un used features often turn out to b e hard touse or not useful/#29/, to examine di/#0Bering usage patterns b et w een users and to pro videdata on system sp eed and accuracy /.W e supplemen t b oth of these measures with a user surv ey consisting of sp eci/#0Ccquestions ab out v arious asp ects of the Lifestreams/. While data from QUIS and instru/-men tation logs can pro vide sp eci/#0Cc measures/, in man y cases they don/'t pro vide enoughsp eci/#0Cc information to determine wh y users resp onded as they did or ho w a utilit ymeasure migh th a v e a/#0Bected the user/'s exp erience with the protot yp e/. F or example/,w e can determine the success rate of substreaming from the instrumen tation data butw eh a v en ow a yo fk n o wing ho w that rate a/#0Bects the user/. Without the users feedbac kw e migh t /#0Cnd it hard to determine if a sp eci/#0Cc success rate /#28sa y /9/0/#25/#29 w as either accept/-able or frustrating to the user/. W e also use this surv ey to gain additional acceptabilit ydata from the user/. F or example/, w ew ould lik e to kno w not only the o v erall satisfac/-tion /#28on whic h QUIS pro vides data/#29 but also the user/'s reaction to sp eci/#0Cc asp ects ofLifestreams/, suc ha sc hronology and on/-demand organization/.Finally /,w e also mak e limited use of the feedbac k from one additional source/: /#5Cob/-serv ers/" of the system/. Ov er the course of the protot yp e dev elopmen t observ ers readpap ers ab out the system /#28that included pictures of the in terface/#29/, view ed an A CMvideo that includes a demonstration of Lifestreams/, and sa w liv e demonstrations/. Life/-
Chapter /6/. Ev aluation /1/1/3streams w as /#0Crst demonstrated to roughly /2/0 individuals at MIT in the fall of /1/9/9/5/.Since then o v er t w o dozen p eople ha v e view ed in/-depth demonstrations of Lifestreamsat Y ale mostly in a one/-on/-one setting/. These p eople ha v e come from man y di/#0Beren tdisciplines/: writers/, en trepreneurs and computer scien tists/.In summary /,w e will use data from three sp eci/#0Cc to ols to ev aluate Lifestreams/:QUIS/, protot yp e instrumen tation and a user resp onse surv ey /. Eac ht o o lp r o vides apiece of the complete ev aluation/; QUIS pro vides a reliable and rep eatable measure ofsub jectiv e user satisfaction but o/#0Bers little information ab out wh y the user w as satis/#0Ced/#28or not/#29/. The quan titativ e data from instrumen tation pro vides us with a sense of ho wsub jects actually used Lifestreams and data on the success rate of certain op erations/#28substreaming/#29 but do es not tell us if these rates w ere acceptable to users/. Last/,the user resp onse surv ey brings the t w o measures together b y gathering more sp eci/#0Ccinformation ab out the sub ject/'s reactions to the features/, op erations and functionalit yof Lifestreams/.W en o wl a y out the sp eci/#0Ccs of our study b y describing our sub jects and the pro/-cedures used to in tro duce them to the system and collect data/. W e then b egin ourev aluation b y using QUIS and the user surv ey to examine the users/' sub jectiv e reac/-tions along sev eral v ariables/: the o v erall system/, the /#5Cmetaphor/,/" its learning curv eand the in terface/. Next/, w e examine the users/' sub jectiv e reactions to the system/'sp erformance and capabilities /#28again through QUIS/#29 and then mo v e on to analyze theinstrumen tation data/, bringing in resp onses from the surv ey as needed/.Before mo ving on w e wish to p oin t out that/, in general/, the small sub ject size of ourstudy prohibits us from sho wing an yt yp e of /#5Cstatistical signi/#0Ccance/" but w e b eliev eour metho ds pro vide more general utilit y than a larger study of more narro w scop e/.Nev ertheless/, our w ork is limited and further analysis w ork remains/./6/./2 Sub jectsA total of six users participated in our study /#28sev en including the author/#29/. Thisgroup consisted of t w oY ale undergraduate studen ts/, t w oY ale computer science grad/-uate studen ts/, and t w oY ale sta/#0B mem b ers/. The sta/#0B mem b er/'s jobs w ere of a cleri/-cal/#2Fadministrativ e nature/. Tw o of the group mem b ers w ere female and four w ere male/#28mean age /= /3/4/./3 y ears/#29/. Eac h mem b er of the group used Lifestreams for a minim umof one mon th /#28mean time /= /8/./2 mon ths/#29/. Three of the users rep orted that they usedthe system ten or more hours a w eek/, t w o of the users rep orted they used the systembe t w een four and ten hours a w eek and one user b et w een one and four hours a w eek/.The t w o graduate studen ts had adv anced computer skills/, the t w o undergraduates hadin termediate skills and the t w o sta/#0B mem b ers w ere no vice users/.
Chapter /6/. Ev aluation /1/1/4/6/./3 Pro cedure/6/./3/./1 In tro duction and T rainingSub jects w ere pro vided with the Lifestreams X Windo ws clien t running on their w ork/-station/. F or eac h user w e /#5Cb o otstrapp ed/" their lifestream with old mail sp o ols/, the/#0Cles in their directories and their w eb b o okmarks /#28eac h sub ject w as ask ed what sp e/-ci/#0Cc mail messages/, /#0Cles and b o okmarks they w an ted to put on their lifestream/#29/. Eac hclien t included p ersonal agen ts /#28reminder/, freeze all/, mark all read/, phone call/#29 andsummary t yp es /#28default/, b o okmarks/, L
ATE
X/, future/#29/. Sub jects w ere sho wn the basicsof using the system /#28/#0Cv e to ten min utes of demonstration/#29 and then left to explore iton their o wn /#28although sub jects w ere allo w ed to ask for help at an y time/#29/. No sub jects/#28including the t w o sta/#0B mem b ers/#29 w ere giv en /#5Cout/-of/-band/" time to use and exploreLifestreams/; rather they w ere ask ed to try to incorp orate it in to their daily activities/./6/./3/./2 Ev aluationIn Octob er of /1/9/9/6 the sub jects w ere giv en a questionnaire con taining t w o parts/: a setof questions from the QUIS usabilit y testing to ol and the Lifestreams/-sp eci/#0Cc surv ey /.The QUIS questionnaire con tains a demographic set of questions /#28age/, sex/, etc/./#29 anda set of questions that measure o v erall system satisfaction/. Eac h question measures theusers/' o v erall satisfaction on a /9/-p oin t scale /#28/1 to /9/#29
/1that is anc hored at the endp oin tswith /#5Cseman tic di/#0Beren tials/" /#28di/#0Ecult v ersus easy /, terrible v ersus w onderful/, nev erv ersus alw a ys/#29/. One is alw a ys the bad score and nine the go o d score/. An examplequestion is/6/./1 Learning to operate the system wasdifficult easy/1 /2 /3 /4 /5 /6 /7 /8 /9 NAQuestions are group ed in to categories/, suc ha s o v erall reaction/, learning/, and systemp erformance/. The standard questionnaire con tains /3/2 questions and administrators areencouraged to tailor the questions to their needs /#28b y p ossibly remo ving questions thatare not relev an t/#29/. Our questionnaire con tains /2/2 questions from four categories/.A ttac hed to the questionnaire the users w ere giv en a surv ey with /2/4 questions to b eansw ered in essa y form/. Our in ten tion w as to gather more sp eci/#0Cc information ab outtheir reactions to v arious asp ects of Lifestreams/. The questionnaire and surv ey can b efound in App endix B/.F or a thirt yd a y p erio d w e also collected data from four users b y instrumen tingthe Lifestreams clien t to log system use/. This data w as collected near the end of/1A /1/-/1/0 scale in tro duces a bias when the questionnaire is administered electronicall y as t yping /#5C/1/0/"requires t w ok eystrok es/. Lik ewise/, zero is not used b ecause it is used to enco de N/#2FA in the electronicv ersion/.
Chapter /6/. Ev aluation /1/1/5Ov erall User Reaction to SystemQuestion Av erage Score/#28terrible/#2Fw onderful/#29 /8/./5/#28frustrating/#2Fsatisfying/#29 /8/./3/#28dull/#2Fstim ulating/#29 /8/#28di/#0Ecult/#2Feasy/#29 /8/./5/#28inadequate/#2Fp o w erful/#29 /7/./5/#28rigid/#2F/#0Dexible/#29 /7/./8T able /6/./1/: Sub jects/' o v erall reactions to Lifestreams/.the dissertation w ork /#28b et w een Septem b er and Octob er /1/9/9/6/#29 when the system w asmature and most reliabilit y problems had b een addressed/. The sub ject group forthese tests consisted of the t w o clerical w ork ers and t w o graduate studen ts
/2/. Thet w o undergraduate studen ts w ere no longer a v ailable for testing/. Eac h op eration thesub jects p erformed w as recorded to a log /#0Cle/. Logging w as p erformed in a nonin v asiv ew a y and w as in visible to the user/. Users w ere told that their op erations w ere b einglogged but assured that they w ere not b eing /#5Ctested/./"/6/./4 Ov erall Sub jectiv e ReactionQUIS con tains an initial set of six questions that attempt to measure the o v erall sub/-jectiv e reaction of users to a computer system/. When answ ering these questions /#28T a/-ble /6/./1/#29 sub jects rep orted a high o v erall sub jectiv e reaction to Lifestreams /#28the meanscore w as /8/./1 out of /9 o v er all six questions/#29/. Av erage scores w ere v ery p ositiv eo nthe ratings of easy /, satisfying and stim ulating/, while only sligh tly lo w er on p o w er and/#0Dexibilit y/#28 w e will discuss user commen ts on p o w er and /#0Dexibilit y in more detail laterin this c hapter/#29/.These /#0Cndings are consisten t with the reactions rep orted b y users on the surv ey /#28asc haracterized b y this resp onse/#29/:The c onc ept /#28of Lifestr e ams/#29 app e ale d to me imme diately on two levels/.First/, b e c ause I know myself that I natur al ly or der and r e c al l events inmy life ac c or ding to time cues/, that /#5Cmemories/" b e c ome less imp ortant tomy daily activities the further in the p ast they r e c e de /#28yet r etain punchand applic ability at discr ete moments when r e c al le db e c ause of similarity to/2One of the t w o graduate studen ts left the study b efore the logging p erio d/. The author/'s loggingdata w as used in its place/.
Chapter /6/. Ev aluation /1/1/6curr ent events/#29/, and that I /#0Cnd it so incr e dibly annoying not to b e able tor e c al l something that might b e applic able b e c ause the /#5Cindex/" to that memoryhas b e en lost/, or that a r elevant do cument is no longer available b e c ause ithas b e en thr own away /#28just we eks b efor et o r emove /#5Cclutter/" or save sp ac e/#29/.These /#0Cndings are also consisten t with the reactions of observ ers /#28although w ecan only /#5Cmeasure/" the satisfaction of actual users/#29 during the course of dev elopingthe protot yp e/. Observ ers t ypically had a strong reaction when viewing an in/-depthdemonstration/. It w as also common for observ ers to send mail of the follo wing nature/#28in this case after seeing a demonstration the da y b efore/#29/:/././.the time I now sp end on this system of mine has r e al ly change d/. I hatehunting thr ough this /#5CT r e e/"/. It is cumb ersome at b est and annoying at le ast/.I have se e nab etter way/. I didn /'t r e alize how much time I sp end se ar chingfor do cuments/.Ev en without a demonstration most p eople reacted en th usiastically to the conceptafter reading a description or viewing a video/. The follo wing email commen t from anobserv er c haracterizes these resp onses/:I have so much stu/#0B c oming in my /#5CInBox/" daily/, whether it/'s inc ominge/-mail/, snailmail/, phone messages/, articles/, or what/-have/-you/; that ther e/'snot r e al ly time to or ganize it al l/. R ather/, as you quite c onvincingly p ointout/, I/'d r ather just STORE it al l /#28sinc e stor age is che ap/!/#29 and ac c ess onlywhat I want when I want to ac c ess it/.Bey ond the QUIS questions w ew ere also in terested in ho w p eople reacted to theno v el asp ects of Lifestreams /| did c hronology mak e sense as metho d of storing data/?did they understand the /#5Cstream metaphor/?/" ho w did the system compare to theirprevious en vironmen ts/? /| and w e ask ed man y questions in the surv ey to determinetheir reactions/./6/./4/./1 Reaction to c hronologyMost users and observ ers immediately /#5Cgot/" the idea of the c hronological storage sys/-tem/. W e found that at least one user w as comfortable with the c hronology/-basedstorage b ecause he commen ted that the /#5Cw a y I /#0Cle ev erything in Unix is on the toplev el/./" This com bined with listing a directory b y time /#28e/.g/./, ls /-t /#29g a v e him somethingsimilar to Lifestreams storage/.Users also easily understo o d the /#5Cw orking/" v ersus /#5Carc hiv al/" asp ects of the stream/:The majority of my job is made up of c onstant little emer gency items/. Thisdep ends not only on curr ent messages/, but issues that may have c ome upas far b ack as when we c ame to this building /#28building r ep airs/, furnitur e/,etc/./#29 Up until now I/'ve only had p ap er to dep end on/.
Chapter /6/. Ev aluation /1/1/7Other commen ts from users ab out the time/-based storage w ere less insigh tful but en/-couraging/. One user simply resp onded /#5Cso far /#5Bc hronology/#5D has b een great for me/./"Only one user found the concept of time/-based storage strange at /#0Crst but resp ondedon the questionnaire that it w as /#5Chard to b eliev e/#5B c hronology/#5D is as easy to get used toas it is/./"Ask ed ab out the use of c hronology as a storage sc heme/, users commen ted that/#5Cc hronology should de/#0Cnitely b e the default/./" Another user commen ted that she w ouldlik e to b e able to order do cumen ts b y creator and t yp e/, ho w ev er she w ould not /#5Cprefer ito v er c hronology but rather as an alternativ e view/" /#28underline in original resp onse/#29/. An/-other user suggested that Lifestreams ha v e buttons that w ould let her /#5Cswitc hs c hemesas y ou w ould a sto v e /#28broil/, bak e/, preheat/#29/./"Users also app eared to easily understand the use of the future p ortion of the stream/.One of the clerical w ork ers w as able to extrap olate and suggest its use within herw orkgroup/:/././.my ar e a/, the Business O/#0Ec e/, /././. would gr e atly appr e ciate the /#5Cfutur e/"email messages to themselves and others for c ountless de ad lines that theynow must use c alendars and daytimers for/./6/./4/./2 Understanding the /#5Cmetaphor/"Fiv e of the six sub jects said that the /#5Cmetaphor/" made sense to them /#28the sixth wrotethat he didn/'t understand the question/#29/. Sub jects w ere also ask ed if an y asp ect ofLifestreams w as confusing to them/. F our sub jects answ ered no/. The /#0Cfth sub ject re/-p orted that the only confusing thing /#28/#5Cat /#0Crst glance/"/#29 w as the lac k of directories/. Theremaining sub ject rep orted that he found the distinction b et w een frozen and unfrozendo cumen ts confusing/. This commen t deserv es future study as it ma y b e that no viceusers are not used to thinking of computer data as read/-only or writable/./6/./4/./3 Ho w do es it compare to other systems/#2Fme taphors/?When ask ed in the surv ey to compare Lifestreams to their previous /#5Ccomputing en vi/-ronmen ts/" users had a v ariet y of commen ts/:Easy to use and intuitiveEasy to get /#28an/#29 overview fe el of informationThe structur e is dynamic and /#0Duid /| the data/, not just the /#0Clename/, is onthe scr e enEasy to /#0Cnd do cuments of di/#0Ber ent typ esSe ar ching/! It/'s gr e at to b e able to se ar ch over everything in my str e am/.
Chapter /6/. Ev aluation /1/1/8Question Av erage ScoreLearning to op erate the system /#28di/#0Ecult/#2Feasy/#29 /8/./8Getting started /#28di/#0Ecult/#2Feasy/#29 /8/./8Learning adv anced features /#28di/#0Ecult/#2Feasy/#29 /8/./2Time to learn to use the system /#28slo w/#2Ffast/#29 /9T able /6/./2/: Sub jects/' reactions to learning in Lifestreams/.In a related question/, sub jects w ere ask ed ho w Lifestreams migh th a v ec hanged thew a y they think ab out using a computer or ab out managing information/. Resp onsesincluded /#5Ca di/#0Beren t and easier w a y to /#0Cle/"/, /#5Cit made me think of information in termsof time rather than lo cations/, as a /#0Do w rather than distinct slots/"/, /#5C/#0Cles c hronologicallyclose in time are more lik ely to b e related/; easy to gain a historical p ersp ectiv eo n a n ytopic/"/, /#5Cabsolutely /, /#28I/#29 think/, w ork with/, and /#0Cnd m y do cumen ts /#28i/.e/. con ten t/#29 withoutregard to creating application or storage lo cation/"/, /#5CI used to b e v ery concerned withstoring/#2Fmanaging/#2Ftrying to remem b er/./"/6/./5 LearningLearning receiv ed the highest user satisfaction rating of all the QUIS questionnairecategories /| with a mean score of /8/./7 out of /9 o v er all four questions /#28T able /6/./2/#29/.Sub jects resp onded with an a v erage score of /8/./8/, /8/./8 and /9 resp ectiv ely on questionsof learning to op erate the system /#28di/#0Ecult/#2Feasy/#29/, getting started /#28slo w/#2Ffast/#29 and theamoun t of time it tak es to learn the system /#28slo w/#2Ffast/#29/. The written resp onse of oneuser is a go o d example of a user/'s sub jectiv e reaction to the Lifestreams/' learning/:The time at which I starte d using Lifestr e ams was at the b e ginning of thesemester/, my busiest time /././. A l l this c onsider e d/, I was stil l b ow le d over byal l of the ways it c ould/, and did/, make my job e asier in a very short p erio dof time/. /#28underline from original resp onse/#29The QUIS question on learning adv anced features receiv ed the lo w est score in thegroup /#28an /8/./2/#29/. This is consisten t with questions that w ere ask ed b y users o v er thecourse of the study /. Most of these in v olv ed ho w to clone or transfer future do cumen tsor the sp eci/#0Ccs of ho w summarize w ork ed/. Man y of these problems could probablyha v e b een a v oided if w e/'d set aside time for a training session rather than setting theuser up/, explaining the basics and letting them explore on their o wn/.
Chapter /6/. Ev aluation /1/1/9Question Av erage ScoreW ere the screen la y outs helpful/? /#28nev er/#2Falw a ys/#29 /8/./3Amoun t of info that can b e displa y ed on screen/? /#28inadequate/#2Fadequate/#29 /7/./2Arrangemen t of information on screen/? /#28illogical/#2Flogical/#29 /8/./3T able /6/./3/: Sub jects/' reactions to screen la y out and design/./6/./6 In terface La y out and DesignAll six sub jects resp onded p ositiv ely in the surv ey that they quic kly understo o d thereceding stream in terface/. In QUIS the sub jects resp onded with an mean score of/8/./3 on the usefulness of the screen la y out and the arrangemen t of information on thescreen/. On the surv ey sub jects resp onded that the stream w as an /#5Cob vious/" asp ect ofthe system/.In QUIS sub jects resp onded with a sligh tly lo w er score on the in terface/'s infor/-mation densit y and this w as re/#0Dected b y some resp onses in the surv ey /. One studen tcommen ted that the information densit y of the displa yw as /#5Clo w/" and that a w a yo fdispla ying more of eac h /#0Cle/'s con ten ts w ould impro v e the in terface/. Ho w ev er/, anotheruser though t that the /#5Cconcept b ehind the screen la y outs /././. w ere excellen t and madegreat use of the screen/./" W e tend to agree with the /#0Crst studen t and b eliev e the datadensit y of the in terface can b e impro v ed/.Initially no vice users did ha v e one problem that w as corrected b efore the testingp erio d /| while the windo w manager capabilities of our clien tw ere useful for adv ancedusers they pro v ed confusing for no vice users/. These users had trouble understandingthe mo del of external applications handling the editing of their do cumen ts that w ouldthen b e written bac k to the Lifestreams system/. W e b eliev e this is b ecause they did notha v eag o o dm e n tal mo del of the pro cess/. No vice users also dislik ed the m ultiple mouseclic ks needed to send mail messages or reply to existing messages /#28e/.g/./, New/-Edit/-Sa v e/-Xfer or Clone/-Edit/-Sa v e/-Xfer/#29/. Rather than teac hing these users this /#5Cmen tal mo del/"w ec hose to mak e the system easier to use b y supplying an editing windo w for textdo cumen ts that op ens within the Lifestreams clien t rather than within the windo wsystem /#28do cumen ts with other con ten t/-t yp es still op ened within help er applications/#29/.Since the editor sta ys anc hored in the clien t windo w/, the no vice user do es not ha v e theproblem of /#5Closing/" an editor windo w/. This editing windo w is annotated with commonop erations suc ha s Reply /. The e/#0Bect of clic king on Reply is that the clien t automatesthe task of cloning the do cumen t and transferring it/. No vice users found these c hangessatisfactory and adv anced users lik ed the con v enience of the mail/-related automation/.In an y case/, b oth sets of users still had the underlying h yp erto ols mo del for mediat yp es other than text and this seemed to create a happ y medium/.
Chapter /6/. Ev aluation /1/2/0/6/./7 System Capabilities and P erformanceNine of the QUIS questions addressed the capabilities and p erformance of the proto/-t yp e/. In addition w e logged and recorded t w en t yv ariables of the system/'s use andp erformance/. Lo oking at the resp onses to the QUIS questions in Figure /6/./4/, w e seea range of answ ers from /6/./6 to /8/./6/. High scores w ere giv en to the question ab out theabilit yo f n o vice users to accomplish tasks /#28one of the main goals of this w ork/#29 andto the dep endabili t y of the system op erations /#28/8/./3/#29/. Sligh tly lo w er scores w ere giv ento the system/'s sp eed /#28/7/./8/#29/, the resp onse time of op erations /#28/7/./3/#29 and the reliabili t yof the system /#28/7/./4/#29/. While these are still highly p ositiv en um b ers/, it is imp ortan tt op oin t out that t w o of the protot yp e users /#28the undergraduates/#29 used the system b eforethe summer of /1/9/9/6/, b efore a n um b er of p erformance impro v emen ts and bug /#0Cxes w eremade/. If w e only consider the scores of the other four users the a v erage scores o v erthese questions /#28sp eed/, resp onse time/, reliabilit y/#29 are /9/, /9 and /7 resp ectiv ely /. So whilew e impro v ed resp onse time and system sp eed/, w e still had reliabilit y problems/. W eb eliev e most of these problems are with the Solaris v ersion of Lifestreams/. When ex/-amining the data of the only sub ject who used the Solaris v ersion w e /#0Cnd that he ga v ethe question a score of /5/. Giv en that all other users /#28including the dev elop er/#29 w ereon a SunOS v ersion of the system it is p ossible that the Solaris system receiv ed lessatten tion when it came to remo ving bugs and glitc hes caused b y Solaris/. This problemsho ws up again in the QUIS question p ertaining to system failures/, whic h receiv ed thelo w est score /#28/6/./6/#29 in the en tire questionnaire/. Here the Solaris user rep orted a score of/4/. The a v erage score of the remaining users w as /8/./5/.Finally the questionnaire asks users ab out suitabilit y of the protot yp e for exp e/-rienced users/. When ask ed if the protot yp e addressed the needs of b oth no vice andexp erienced users the sub jects resp onded with a mean score of /7/./6/. Giv en that theprevious question ab out no vice use receiv ed a high score w e will attribute most of thede/#0Cciencies here to the needs of exp erienced users/. When ask ed if exp erts could usefeatures or shortcuts the sub jects resp onded with a score of /7/. On this p oin t sev eralusers resp onded with written commen ts/:/#5BA/#5D c ommand key would b e helpful in avoiding r e dundant steps/, e/.g/./, Ctrl/-Nfor new/././.A few mor e shortcuts c ould b e adde d using c ommand keys/.So while the needs of no vice users w ere accoun ted for/, impro v emen ts can b e made toaddress the needs of adv anced users/./6/./7/./1 Ov erview of System UseDuring the logging p erio d a total of /5/5/5/8 Lifestreams op erations w ere p erformed b yfour users/. In T able /6/./5 w e presen t eac h op eration along with the n um b er of times it
Chapter /6/. Ev aluation /1/2/1Question Av erage ScoreSystem sp eed /#28to o slo w/#2Ffast enough/#29 /7/./8Resp onse time for most op erations /#28to o slo w/#2Ffast enough/#29 /7/./3Rate information is displa y ed /#28to o slo w/#2Ffast enough/#29 /8/./3Ho w reliable is the system/? /#28unreliable/#2Freli able/#29 /7/./4Op erations are /#28undep endable/#2Fdep endabl e/#29 /8/./3System failures o ccur /#28frequen tly/#2Fseldom/#29 /6/./6No vices can accomplish tasks /#28with di/#0Ecult y/#2Feasily/#29 /8/./6Are the needs of b oth exp eriencedand inexp erienced users tak en in to consideration/? /#28nev er/#2Falw a ys/#29 /7/./6Exp erts can use features/#2Fshortcuts /#28with di/#0Ecult y/#2Feasily/#29 /7T able /6/./4/: Sub jects/' reactions to system capabilities/.w as used and the p ercen tage of its use/. These n um b ers are pro vided for eac h user andfor the group as a whole/; here w e include not only the primitiv e op erations/, but alsodo cumen t reads
/3/, /#5Ctime tra v el/" op erations /#28going to the future/, past or returning to thepresen t/#29/, substream op erations /#28accessing existing substreams/, remo ving substreams/#29/,and also freeze and prin t op erations/.As one migh t exp ect/, reading/#2Fediting w as the most common op eration accoun tingfor /4/0/#25 of all op erations /#28b ecause writes w ere not logged there is no w a y to distinguishbe t w een read and edit op erations/#29/. Do cumen t creation w as the next most p opularop eration o ccurring o v er /2/1/#25 of the time/. Of the /2/1/#25/, new accoun ted for nearly /1/3/#25and clone for /8/#25/. The transfer op eration o ccurred nearly /2/0/#25 of the time/. This w asalso to b e exp ected giv en the amoun t of time the a v erage users sp end handling email /|with /1/0/8/4 transfers and /1/1/5/9 do cumen t creations/, man y of the do cumen ts created w ereev en tually sen t to another user /#28although /#5Cincoming/" do cumen ts are often forw ardedthrough transfer without a corresp onding creation op eration/#29/. Op erations used tomanage substreams accoun ted for /7/./8/#25 of the user/'s op erations /| these op erationso ccurred when sub jects used the substream men us to recall an existing substream/,remo v e a substream/, or return to the main stream from a substream/. Time tra v elop erations accoun ted for nearly /5/#25 of the user op erations/; the /#0Cnd op eration o ccurredsligh tly less often at /3/./7/#25/. When w e consider the substream and /#0Cnd op erationstogether w e obtain a measure of ho w often users /#5Cmanaged/" information /#28b y relyingon organizational structures they had already created or in creating new structures/#29they accoun t for /1/1/./5/#25 of the total op erations/. Summarize op erations made up /1/./4/#25of the total/. Of the summaries p erformed /5/7/#25 w ere future summaries/, /3/3/#25 w ere/3A coun tw as not logged for the write op eration/.
Chapter /6/. Ev aluation /1/2/2G/1
G/2
C/1
C/2
T otalRead/#2FEdit /7/5/7 /#28/3/9/./8/#25/#29 /9/8/0 /#28/3/7/./4/#25/#29 /3/5/8 /#28/4/9/./5/#25/#29 /1/5/6 /#28/5/0/./5/#25/#29 /2/2/5/1 /#28/4/0/./5/#25/#29Xfer /3/6/7 /#28/1/9/./3/#25/#29 /5/6/1 /#28/2/1/./4/#25/#29 /9/5 /#28/1/3/./1/#25/#29 /6/1 /#28/1/9/./7/#25/#29 /1/0/8/4 /#28/1/9/./5/#25/#29New /2/2/0 /#28/1/1/./6/#25/#29 /3/3/8 /#28/1/2/./9/#25/#29 /1/0/4 /#28/1/4/./4/#25/#29 /4/4 /#28/1/4/./2/#25/#29 /7/0/6 /#28/1/2/./7/#25/#29Clone /1/7/8 /#28/9/./3/#25/#29 /2/4/4 /#28/9/./3/#25/#29 /1/9 /#28/2/./6/#25/#29 /1/2 /#28/3/./9/#25/#29 /4/5/3 /#28/8/./2/#25/#29Substreaming /2/3/8 /#28/1/2/./5/#25/#29 /2/8/5 /#28/1/0/./9/#25/#29 /9/5 /#28/1/2/./9/#25/#29 /2/2 /#28/7/./2/#25/#29 /6/3/8 /#28/1/1/./5/#25/#29Time /8/5 /#28/4/./5/#25/#29 /1/4/6 /#28/5/./6/#25/#29 /3/2 /#28/4/./4/#25/#29 /3 /#28/1/./0/#25/#29 /2/6/6 /#28/4/./8/#25/#29Summarize /3/2 /#28/1/./7/#25/#29 /3/1 /#28/1/./2/#25/#29 /7 /#28/1/./0/#25/#29 /1/0 /#28/3/./2/#25/#29 /8/0 /#28/1/./4/#25/#29Misc /2/7 /#28/1/./5/#25/#29 /3/7 /#28/1/./4/#25/#29 /1/5 /#28/2/./1/#25/#29 /1 /#28/0/./3/#25/#29 /8/0 /#28/1/./4/#25/#29T otal Ops /1/9/0/4 /2/6/2/2 /7/2/3 /3/0/9 /5/5/5/8T able /6/./5/: Use of Lifestreams op erations/.LaT eX summaries and /1/0/#25 w ere b o okmark summaries/. The use of summarize is alittle lo w er/, but not really surprising giv en the small n um b er of useful summarizers w eha v e dev elop ed /#28and users did request new t yp es of summarizers to b e added to thesystem/#29/. F reeze and prin t eac h made up less than a p ercen t of the total op erations/.Ov erall/, the sub jects/' use patterns w ere fairly uniform/. Some notable exceptions arethat the clerical users tended to use clone a little less than the graduate studen ts whileusing the new op eration sligh tly more often/. While the reasons require further study /,graduate studen ts ma y reuse and edit information more often than clerical w ork erswho handle more short term action items/./6/./7/./2 Use of SubstreamsIn Chapter /5 w e discussed the v arious w a ys that substreams organize information/. W eno w lo ok at the data collected from use of substreams/. During the logging p erio d /2/0/7/#0Cnd op erations w ere p erformed/. Of the /2/0/7 op erations/, /1/5/0 /#28/7/2/#25/#29 of them w ere k eyw ordsearc hes/, while the remaining /5/7 /#28/2/8/#25/#29 where b o olean queries/. W e further analyzedthese searc hes to determine ho w man y actual queries w ere p erformed/; that is/, the userma yh a v e used m ultiple /#0Cnd op erations in an incremen tal fashion to satisfy one query /.W e also determined whether or not a query w as successful b y the follo wing heuristic/:after a /#0Cnd/, if the user p erformed an op eration on a do cumen t in the substream or onthe substream itself /#28b efore remo ving the substream or returning to the main stream/#29then the query w as considered a success/. The v alid op erations included reading thedo cumen t/, cloning it/, prin ting it/, transferring it or summarizing it /#28or the substream/#29/.This heuristic ma y misclassify in at least t w ow a ys /#28b oth fa v orable and unfa v orable/#29/.In the /#0Crst case/, a /#0Cnd ma y b e coun ted as a failure when in fact the sub ject usedthe glance view capabilit y of Lifestreams to obtain the information he needed/. In the
Chapter /6/. Ev aluation /1/2/3G/1
G/2
C/1
C/2
MeanNum be r /6/3 /9/5 /2/3 /6 /4/6/./7/5Query Size /1/./3 /1/./2/3 /1/./5 /1/./7 /1/./4/3Query Depth /1/./1/1 /1/./0/7 /1/./0/9 /1/./0 /1/./0/7Success Rate /9/0/./5/#25 /9/4/./7/#25 /7/8/./2/#25 /8/3/./3/#25 /8/6/./7/#25T able /6/./6/: Query use o v er testing p erio d/.
50
40
30
20
10
01
2-4
5-8
9-16
17-32
33-64
65-128
129-256
257-512
513-1024
1025-2048
> 2048Figure /6/./1/: Size of substreams returned from FINDs/.second case the user ma yh a v e op ened a do cumen t within the substream that turnedout to b e the incorrect do cumen t/. One other scenario is also not accoun ted for /| auser ma y use m ultiple incremen tal /#0Cnds in an attempt to lo cate information and thenreturn to the main stream and b egin again using a sligh tly di/#0Beren ts c heme for /#0Cndingthe same information/. This can cause an inaccurate measure of the n um b er of /#0Cndsrequired to satisfy a query /.F or this last t yp e of error w e man ually scanned the logs/,iden ti/#0Ced ob vious cases and then ask ed the user for con/#0Crmation/. As an example oneuser p erformed a /#0Cnd on /"b o ok AND order/" and then returned to his main stream andp erformed another /#0Cnd on /#5CDo v er/" /#28a publisher/#29/. The user con/#0Crmed that these t w o/#0Cnds w ere p erformed to lo cate the same information/. While the heuristic w ould ha v ecoun ted this as t w o searc hes /#28one failing and one succeeding/#29 w e adjusted the data tosho w that a searc h consisting of t w o queries w as p erformed and successful/.
Chapter /6/. Ev aluation /1/2/4Our analysis also accoun ts for incremen tal substreaming /| if/, instead of p erformingan op eration on a do cumen t in the substream/, the user incremen tally initiated another/#0Cnd/, the depth of the query w as incremen ted and the result considered a success orfailure based on the result of the second /#0Cnd /#28and so on/#29/. W e found that /2/0 /#28/9/./7/#25/#29of the /#0Cnd op erations w ere p erformed incremen tally /. Of the /1/8/7 /#28/2/0/7 /, /2/0/#29 queriesp erformed/, the a v erage query depth w as /1/./0/7/. /1/7/0 queries w ere coun ted as successesresulting in a /9/0/./9/#25 success rate/.In T able /6/./6 w e presen t the data for all users/. The n um b er of substreams v ariedamong users from /6 to /9/5/; this is partly a re/#0Dection of the amoun t of time the userssp end at the computer/. The t w o graduate studen ts /#28 G/1
and G/2
/#29t ypically sp end theiren tire w ork da y at the computer/, while the t w o clerical w ork ers sp end only a fractionof their time in fron t of the computer /#28esp ecially in the case of C/1
/, who only w orks/2/0 hours a w eek/#29/. Nev ertheless/, the results for query size /#28n um b er of searc h terms ina query/#29/, query depth /#28n um b er of /#0Cnds required to lo cate a piece of information/#29 andsuccess rate are fairly uniform/. Lo oking at the mean o v er all users /#28coun ting eac h user/'sresults with equal w eigh t/#29/, /1/./4/3 k eyw ords w ere used p er searc h with a query depth of/1/./0/7/. While comparisons with the desktop mo del are di/#0Ecult
/4/,w e b eliev e that in thea v erage case it requires more than /1/./0/7 /#5Cop erations/" to lo cate a piece of informationwithin a desktop /#0Cle and folder system/./6/./7/./3 Substream AccuracyOne of the more crucial v ariables is the success rate of the substream op erations/. Ratesv aried from /7/8/./2/#25 to /9/4/./7/#25 o v er the users /#28T able /6/./6/#29/, and the adv anced users hadhigher success rates than the clerical w ork ers/. One p ossible explanation is that theadv anced users had used Lifestreams for a longer p erio d of time b efore the testingp erio d /#28mean time of /1/2 v ersus /2 mon ths/#29/.Giv en that our measure ma y include error /#28as w e p oin ted out in our heuristics fordetermining success rates/#29/, w e ask ed the users in the surv eyWere you usually able to find what you were looking for/?If not/, was the system frustrating in this respect/?Represen tativ e resp onses include/:Pr etty much always able to /#0Cnd what I was lo oking for /| and quickly/./#28I/#29 was able to /#0Cnd what I wante d/.Y es/. /#28I/#29 har d ly ever /#28had tr ouble/#29/./././.substr e ams did not always c ontain exactly al l the r elevant information Iwante d/. It was e asy enough to /#0Cnd a simple do cument/, but not a c ompletec ol le ction/./4W e/'v e found no empirical data on /#5Cna vigation/" depth in desktops/.
Chapter /6/. Ev aluation /1/2/5Usual ly /| c onc ept and c ate gory/-b ase ds e ar ching would help though/.The resp onses indicate that while users could lo cate what they w an ted to/, nev erthe/-less the protot yp e could b e impro v ed with more p o w erful searc h capabilities and withimpro v ed abilit y to create substreams b y instance/./6/./7/./4 Substream SizeW e also logged the size of the resulting substreams/. Of the /2/0/7 substreams created/,the minim um/#2Fmedian/#2Fmean/#2Fmaxim um substream sizes w ere /1/#2F/1/5/#2F/8/9/#2F/2/8/2/4 /#28 /#1B /= /3/./8/#29/./5/9/#25 of the substreams w ere smaller than /2/5 do cumen ts/, /7/1/#25 w ere smaller than /5/0do cumen ts/, /8/6/#25 w ere smaller than /1/0/0 do cumen ts and /9/2/#25 w ere smaller than /2/0/0do cumen ts/. Only /1/1 /#28/5/#25/#29 exceeded /5/0/0 do cumen ts/. Another w a y to view this data is inthe form of a bar c hart /#28Figure /6/./1/#29/. Here eac h bar represen ts the n um b er of substreams/#28from the /2/0/7 /#0Cnd op erations/#29 that ha v e a size that falls in to the corresp onding in terv al/.Note that /#28with the exception of the /#0Crst t w o bars/#29 eac h successiv e bar has an in terv althat is t wice that of the previous bar/.One migh t argue that substream sizes will uniformly gro w along with the streamsize/. If so/, the a v erage stream size for these queries is roughly /7/0/0/0 do cumen ts/, whic hmeans that /5/9/#25 of the substreams con tained a mean of roughly /./0/1/5/#25 of the do c/-umen ts in the main stream/. If w e extrap olate to a stream size of /1/0/0/,/0/0/0 do cu/-men t then the mean substream w ould b e /1/5/0/0 do cumen ts in size/. Ho w ev er if w eexamine the median and mean sizes of the substreams across all users
/5/#28T able /6/./7/#29compared to their lifestream/'s size w e /#0Cnd that as w e step up in stream size from/1/4/0/0 /! /3/2/0/0 /! /6/9/0/0 /! /1/6/7/0/0 the mean substream size /#28as a p ercen t of the main streamsize/#29 go es from /2/#25 /! /1/./2/#25 /! /./8/#25 /! /./6/#25 and the median size from /./4/#25 /! /./2/#25 /! /./2/#25 /! /./1/#25/.While this is encouraging/, the fallo/#0B in gro wth rate of the substreams is still to o slo wto prev en t a slo w rise in the size of substreams/.There is/, ho w ev er/, a comp elling reason to think this will not b e a problem inthe general case b ecause w eh a v ec hronology to rely on/; that is/, since the v alue ofinformation is lik ely to decrease o v er time the user is more lik ely to /#0Cnd the informationnear the head of the substream or to scan bac k to the appropriate time in the past/#28and w eh a v e seen from Lansdale/'s w ork that users are go o d at remem b ering wheninformation w as created/#29/. Queries in future Lifestreams systems ma y also allo w usersto constrain the queries to the last few y ears or mon ths and e/#0Bectiv ely cut the streamdo wn to a reasonable n um b er of do cumen ts/./6/./7/./5 Substream Resp onse TimeIn Chapter /4 w e discussed Shneiderman/'s concept of direct manipulation and the im/-p ortance of allo wing the user to carry out tasks quic kly and observ e results immediately /./5W e are making the assumption that the a v erage substream size /#28relativ e to stream size/#29 is somewhatuniform across users/. Ob viously /, this ma yo rm a y not b e the case and requires further study /.
Chapter /6/. Ev aluation /1/2/6G/2
G/1
C/1
C/2Stream Size /1/6/7/0/0 /1/6/7/0/0 /3/2/0/0 /1/4/0/0Minim um /1 /1 /1 /1Median /2/1 /1/2 /9 /6Mean /1/0/6 /5/3 /4/1 /4/0Max /2/8/2/4 /1/5/5/0 /5/2/9 /1/3/8Standard Deviation /7/./0 /5/./9 /8/./1 /1/5/./2T able /6/./7/: Size of Substreams/.
Server substream computation
Screen update
Network transfer time.06.18 .8
1.04 secondsFigure /6/./2/: Av erage time to compute and displa y a substream/.Using the timing results from all /2/0/7 /#0Cnd op erations w e found that it tak es an a v erageof /1/./0/4 seconds for Lifestreams to compute a substream and displa y it on the screen/. Ofthe /1/./0/4 seconds /#28see Figure /6/./2/#29 it requires /#28on a v erage/#29 /./0/6 seconds for the serv er tocompute the substream/, /./1/8 seconds to transfer data describing the substream to and
from the serv er/, and /./8 seconds to displa y the substream on the screen/. One secondis t wice as long as Shneiderman/'s /#5Coptimal/" up date time of /5/0/0 ms but giv en that/7/7/#25 of the substream time is b eing consumed b y screen up date there is m uc hr o o mfor impro v emen t /#28recall that our clien t is written in Tcl/#2FTk/, a scripting language/, nota compiled language/#29/. In an y case/, the users w ere con ten t with the resp onse of thesystem as indicated in the QUIS questionnaire and the surv ey /./6/./7/./6 Substream Managemen tS t ylesW eh a v e observ e dav ariet yo f/#5C s t yles/" in whic h substreams are managed b y users/.Some users main tain a small n um be r /#28 t ypically less than a dozen/#29 of substreams whic hthey revisit from time to time/.
Chapter /6/. Ev aluation /1/2/7G/1
G/2
C/1
C/2Substream accesses /7/8 /2/1 /4 /6Hits /6/6 /1/9 /3 /4Success Rate /8/5/#25 /9/0/#25 /7/5/#25 /6/6/#25T able /6/./8/: Lo cating information through p ersisten t substreams/.Mostly I r emove /#28substr e ams/#29 exc ept for the /2/-/4 I always ke ep ar ound/.Users C/2
and G/1
fell in to this category /, b oth creating a handful of substreams thatthey main tained/. These sub jects still used the /#0Cnd op eration to lo cate /#5Cshort/-term/"information/, but they quic kly remo v ed those substreams/.Other users tend to alw a ys use the /#0Cnd op eration to lo cate information/, ev en if theyalready ha v e an existing substream whic hw as created with the same searc h query /.These users ma y allo w a large n um b er of substreams to build/-up b efore remo vingthe whole lot/. Before the logging p erio d b egan user C/1
w as found to ha v eo v er /1/0/0substreams that he nev er reused/. When ask ed in the surv ey if he k ept substreamsaround for future use he resp onded/:No I don /'t/. I r emove them when a lot have ac cumulate d /././. /#5Bthe/#5D user shouldb e able to set a default wher e substr e ams automatic al ly /#5Cself er ase/" after aday or a user sp e ci/#0Ce dp erio d of time/.These st yles can b e seen in T able /6/./8 where w e list the substream op erations eac huser p erformed/. User G/1
claimed to reuse substreams while user G/2
claimed to almostnev er reuse them/; consisten t with this user G/1
revisited substreams nearly four timesthe n um b er of times G/2
did and /#28referring bac kt o T able /6/./5/#29 G/2
used /#0Cnd /4/0/#25 moretimes than G/1
/. Although there is sparse data from the clerical w ork ers the same trendseems to o ccur with C/1
using existing substreams at a higher rate /#28comparing /#0Cnds/#29than C/2
/./6/./8 Summa ryWith t w o exceptions /#28with resp ect to the reliabilit y of the protot yp e/#29/, our initial userp o ol resp onded in a highly p ositiv e manner across all QUIS questions /#28mean o v er allquestions /= /8/./0/#2F/9/#29/. Learning had the highest sub jectiv e satisfaction score of all QUIScategories indicating that Lifestreams has a short learning curv e/. Users also indicatedthat they found the Lifestreams metaphor and in terface an easy and in tuitiv ew a yt o
Chapter /6/. Ev aluation /1/2/8manage online information/. Data from instrumen tation suggests that substreams w erea e/#0Bectiv e and e/#0Ecien t mec hanism for lo cating information/.W e also learned that users felt they w ould b ene/#0Ct from impro v ed and more /#0Dexiblesearc hing capabilities and the abilit y to supply time/-in terv als for substreams/. Adv ancedusers also w an ted shortcuts to minimize the n um b er of steps required for an op eration/.With resp ect to the in terface/, users felt the displa y could ha v e b een more informationric h and/, from the resp onse of no vice users/, w e learned that a minimal in terface is notalw a ys b etter /| often users w an t sev eral rep etitiv e commands wrapp ed up in to onebutton or function/. By pac k aging op erations /#28suc h as Clone/-Edit/-Xfer in to a Replybutton/#29 w e reduce the n um b er of steps required to p erform a common op eration/.Finally /, in the surv ey w e ask ed the sub jects whether or not they w ould con tin ueto use Lifestreams if it w ere a robust and supp orted system/. All users resp onded in ap ositiv e manner/. In fact /#0Cv e of the six sub jects resp onded in a v ery p ositiv e manner
/6/:Y es/!A bsolutely/!Y es/!A bsolutelyDe/#0Cnitely/6The sixth sub ject/, resp onded /#5CY es/, assuming it was faster and a little mor er e/#0Cne d/./" This userw ork ed with the system b efore the summer of /1/9/9/6 /#28b efore some p erformance problems w ere /#0Cxed andb efore in terface impro v emen ts w ere made/#29/.
Chapter /7Information Managemen tRevisitedW en o w return to the user studies of the information managemen t comm unit y thatw ei n tro duced in Chapter /1 and examine them in more detail/. In the pro cess w ewill explore the Lifestreams mo del in the con text of these studies/. First w e examineclassi/#0Ccations of user information t yp es dev elop ed b y Cole and Barreau /& Nardi/. Nextw e revisit the w ork of Malone and examine his sp eci/#0Cc recommendations for electronicsystems/. W e then examine user studies that resulted in sp eci/#0Cc task classi/#0Ccations/.Finally /,w e revisit Lansdale/'s w ork/./7/./1 Information /#5CT yp es/"The user studies of Cole /#5BCol/8/2 /#5D and Barreau /& Nardi /#5BBN/9/5/#5D examined the w a ysusers of desktop systems use/, pro cess and manage electronic information/. Both studies
resulted in v aluable classi/#0Ccation sc hemes for electronic information/. Barreau andNardi found that users commonly deal with three t yp es of information/:/#0F Working information is usually relev an t to long or medium term tasks that theuser is w orking on activ ely /. T ypically it has a /#5Cshelf life/" /#28p erio d of use/#29 ofda ys/, w eeks or mon ths and is imp ortan t enough to b e stored in its o wn folder orlo cation/. Users w ork ed with this information frequen tly enough to kno w exactlywhere it w as stored/./#0F A r chive d information has a shelf life of mon ths or y ears/, but is infrequen tly rele/-v an t to the user/'s curren tw orking tasks/./#0F Ephemer al information has a /#5Cshort shelf life/" and is only used for a short amoun tof time/. On desktop systems users tend to place these items on the desktopand later discard them/. Ephemeral information ma y include to do list items/,/1/2/9
Chapter /7/. Information Managemen t Revisited /1/3/0reminders/, or electronic mail/. Note that this includes /#5Creminding/" t yp es of in/-formation/.Cole found practically the same categories/:/#0F Personal work /#0Cles refers to information that is categorized according to someuser/-de/#0Cned strategy and is relev an t to the user/'s ongoing w ork activities/./#0F A r chive d stor age refers to structured storage of no direct relev ance to a user/'spredicted w ork sc hedule/./#0F A ction items consists of information that is immediately imp ortan t or needs tob e dealt with in the near futur e /.W eh a v e already discussed in Chapter /1 the w a y in whic h curren t desktop systemsfail to supp ort these t yp es gracefully /, but these categories mak e it easier to see wh y/:/#5Cw orking information/,/" for example/, requires that the user main tain discipli ned /#0Clingpractices/, something whic h/, according to previous w ork/, users /#0Cnd di/#0Ecult/, esp eciallyo v er time/. Curren t systems also force the job of main taining organization on theuser rather than relying on the inheren t con ten t of the information/. With resp ectto /#5Carc hiv ed information/" desktop systems pro vide little supp ort for the arc hivingor retriev al of older information/. The burden of b oth are forced on the user/, whois exp ected to dev elop complex arc hiving sc hemes /#28here w e mean arc hiving in theconceptual sense /| users don/'t ha v et ow orry ab out old information cluttering theirdesktops or getting in the w a y/#29 and remem b er them /#28for retriev al/#29 o v er time/. W eha v e seen the results/: users often thro w out information rather than b e burdened withits upk eep/. /#5CEphemeral information/" or /#5Caction items/" quic kly build up in to piles ofinformation that ha v e to b e searc hed with brute force metho ds /#5BCo o/9/5 /#5D/. This t yp eof information is often the source of /#5Cmessy electronic desktops/./" A ma jor p ortion ofephemeral information includes items of a reminding nature/, y et as w eh a v e arguedelectronic systems pro vide no in tegrated supp ort for con v enien t or e/#0Bectiv e reminding/.Let us no w turn to Lifestreams and study the w a ys in whic h it accommo dates theseclassi/#0Ccations/. A lifestream can b e divided in to three p ortions/: p ast /, pr esent /, and fu/-tur e /. The presen t p ortion normally o ccupies the head of a stream or substream/. Thefuture p ortion is distinct and usually hidden from view /#28i/.e/./, in our protot yp e/#29/, and thepast p ortion recedes in to the distance as do cumen ts are added to the stream/. Thesestream segmen ts closely mirror the information categories/. The /#5Cpresen t/" p ortion ofthe stream holds /#5Cw orking do cumen ts/;/" this is also t ypically where new do cumen ts arecreated and where incoming do cumen ts are placed/. Substreams are used as w orkingareas in a manner that is similar to folders/. A substream can hold the do cumen ts rele/-v an t to a particular w orking task/, allo wing the user to lo cate and /#0Clter out extraneousinformation quic kly /. As do cumen ts age and new er do cumen ts are added/, older do cu/-men ts recede from the user/'s view and are /#5Carc hiv ed/" in the pro cess/; if at some future
Chapter /7/. Information Managemen t Revisited /1/3/1p oin t they need the arc hiv ed information/, it can b e lo cated with find /. Ephemeral in/-formation passes through the presen t and in to the past/, receding out of the users viewin the pro cess/|as in a quic k resp onse mail message /#28e/.g/./, /#5Clunc h/?/"/#29 /| y et it remainsa v ailable for for retriev al if needed/./#5CF uture creation/" pro vides a natural metho d of p osting reminders and calendarinformation b y allo wing the user to dial to the future and dep osit a do cumen t there/|sa y /, a meeting reminder/. This facilitates reminding in t w ow a ys/: the user can use thestream as a to do list b y dialing to the future at an y time to see the reminding itemson his stream or he can use future do cumen ts as truly e/#0Bectiv e reminders/|when thecreation date of a future do cumen t arriv es/, the reminder automatically app ears in thepresen t and alerts the user /#28through the same mec hanism that alerts of the user of anew do cumen t on the stream/, suc h an incoming email message/#29/./7/./2 Malone RevisitedWhile Malone /#5BMal/8/3 /#5D did not dev elop task classi/#0Ccations in his w ork he did use theresults of his study to suggest a v en ues for the automation and simpli/#0Ccation of elec/-tronic systems/. Malone c hose t w o sp eci/#0Cc areas for these recommendations/: /#0Cndingand reminding/./7/./2/./1 FindingMalone suggests that electronic systems can help with /#5C/#0Cnding/" in three areas/: creatingclassi/#0Ccations/, classifying information and retrieving information/. Creating classi/#0Cca/-tions/, Malone commen ts/, is non trivial and a /#5Cma jor barrier to k eeping /#0Cle systems cur/-ren t/./" T o impro v e information classi/#0Ccation Malone recommends incorp orating threecapabilities in to computer systems/:/#0F Multiple classi/#0Cc ation allo ws a do cumen t to b e easily put in to sev eral categories/.A Lifestreams do cumen t can b e lo cated in as man y substreams as necessary /,o rto none/./#0F Deferr e d classi/#0Cc ation allo ws users to store information in the same ph ysicallo cation without ha ving to /#5Ctitle/" the information explicitly /.Lifestreams uses c hronology as a basic storage mo del/, remo ving the need forexplicit storage or naming/./#0F A utomatic classi/#0Cc ation allo ws the computer to do as m uc h classi/#0Ccation as p os/-sible based on /#0Celds or attributes of the do cumen t/. Malone notes that c hronologyis one useful metho d of automatic classi/#0Ccation and suggests that users ma yw an tto /#5Crewind or fast/-forw ard the /#28history of /#29 their desktop to lo cate the last timethe desired do cumen tw as on their desk/./"
Chapter /7/. Information Managemen t Revisited /1/3/2P ersisten t substreams pro vide automatic classi/#0Ccation as new do cumen ts areadded to a lifestream/. Lifestreams/, of course/, mak es use of c hronology as abasic storage mo del/.Last/, Malone notes that in retriev al/, curren t systems only allo w users to sp ecifyone retriev al k ey /#28e/.g/./, the name of a /#0Cle/#29 at a time/. He suggests that systems shouldallo w users to use more than one retriev al k ey at at time/, suc h as the do cumen t/'s t yp e/,time of creation and information ab out its con ten t/. While the situation has c hangedsomewhat since Malone/'s time/, nev ertheless desktop systems can still b e impro v ed/.Lifestreams allo ws retriev al on all these cues/. Users can sp ecify /#0Cle t yp es/, /#0Cle con ten tand bro wse through information based on c hronology /. With resp ect to c hronologyMalone suggests that c hronology actually b e used as a searc h metho d /#28e/.g/./, /#0Cnd ado cumen t created last w eek/#29/. In Lifestreams/, this asp ect is used for bro wsing ratherthan as an explicit searc h term/, although future Lifestreams systems can easily andnaturally accommo date time/-based v alues in searc hes/./7/./2/./2 RemindingIn the area of reminding Malone suggests that systems should mak e it easy for usersto /#5Cstore certain information so that it will automatically app ear/, without b eing re/-
quested/./" Lifestreams pro vides this in a natural w a yb y allo wing users to create do c/-umen ts in the future/. In addition/, our researc h protot yp e pro vides an e/#0Bectiv e meansof allo wing the reminders to /#5Cautomatically app ear/" at the time the user needs to b ereminded/./7/./3 T ask AnalysisW en o wl o o k a tw ork where users w ere observ ed and the tasks they t ypically p erformw ere categorized/./7/./3/./1 Whittak er and SidnerW e /#0Crst examine a large/-scale user study conducted b y Whittak er and Sidner /#5BWS/9/6 /#5D/; inthis study they examined ho w users mak e use of electronic mail to p erform a v ariet yo factivities b ey ond its initial role as a means of async hronous comm unication/. This studyis imp ortan t not only b ecause users sp end a signi/#0Ccan t p ortion of time using electronicmail /#5BGat/9/6 /, WS/9/6/#5D but b ecause Whittak er and Sidner sp eci/#0Ccally studied the w a ysin whic h users managed their electronic information with the goal of disco v ering ho wemail migh t fully supp ort al l the electronic tasks a user p erforms/. They disco v eredthree main functions that users p erform/: task management /, p ersonal ar chiving /, andasynchr onous c ommunic ation /. Whittak er and Sidner describ e task managemen ta sfollo ws/:
Chapter /7/. Information Managemen t Revisited /1/3/3/#5C T ask management requires users to ensure that information relating tocurren t tasks is readily available /. This b oth preserv es task c ontent andallo ws users to determine the progress of ongoing tasks/. T ask managemen talso in v olv es r eminding oneself ab out when particular tasks or actions ha v eto b e executed/./"P ersonal arc hiving/:/#5C Personal ar chiving or /#0Cling addresses ho w p eople organize and categorizelonger term information/, so that it can later b e retriev ed/. A r chives are notof immediate relev ance to curren t tasks/, but are constructed for referenceor an ticipated future use/. Researc h sho ws that users exp erience ma jorproblems in generating appropriate folder lab els when /#0Cling longer terminformation for later retriev al/, and in reconstructing these lab els when theyengage in later retriev al/./"Async hronous comm unication/:/#5C Asynchr onous c ommunic ation is concerned with the in teraction in a p er/-manen t medium across space and time/././. Suc hi n teractions are seldomone/-shot/, and w ork ers often engage in m ultiple in termitten ti n teractionsin order to complete a task/. W ork ers are also usually engaged in sev eralindep enden t/, but concurren t ongoing con v ersations/, with the requiremen tsof trac king separate con v ersational threads and switc hing con texts b et w eencon v ersations/./"Their primary /#0Cnding w as that email w as b eing used for purp oses b ey ond async hronouscomm unication /#28its original/, in tended purp ose/#29 b ecause of a lac k of supp ort for taskmanagemen t and p ersonal arc hiving in their desktop systems/.Let us no w consider these imp ortan t tasks in the con text of Lifestreams/. Lifestreamsincludes async hronous comm unication as a basic functionalit y of its mo del /#28throughthe transfer op eration/#29/. W e discuss this asp ect of Lifestreams in detail in our fo cuson email later in this c hapter/.Whittak er and Sidner/'s /#5Ctask managemen t/" requires that information b e /#5Creadilya v ailable/./" Lifestreams pro vides this b y allo wing the do cumen ts in a user/'s lifestreamto alw a ys remain a v ailable for searc h /#28whether or not it has already b een organized inother substreams/#29/. In this w a y substreaming pro vides a more /#0Dexible means of taskmanagemen t than rigid directories/. This is b est demonstrated through examples lik eLansdale/'s m ultiple pro jects scenario presen ted in Chapter /1/; while desktop systemslo c k users in to /#0Cle organizations/, Lifestreams allo ws a /#0Duid w a y of organizing informa/-tion that can c hange along with users/' needs/. Whittak er and Sidner/'s /#5Ctask con text/" ispro vided through p ersisten t substreams/, analogous to a directory that can main tain acollection of do cumen ts o v er time/. Because substreams activ ely capture new con ten t/,
Chapter /7/. Information Managemen t Revisited /1/3/4the user can more readily /#5Cdetermine the progress of ongoing tasks/./" Moreo v er/, sub/-streams can con tain all the information related to ongoing tasks /#28rep orts/, email/, etc/./#29/;w e will return to this p oin t in the next section/. Whittak er and Sidner also explicitlyp oin t out the imp ortance of reminding to task managemen t/| w eh a v e already de/-scrib ed ho w Lifestreams supplies reminding in a natural manner /#28as w es a w from usercommen ts in Chapter /6/#29/.On the topic of p ersonal arc hiving/, Whittak er and Sidner p oin t out that /#5Cusersexp erience ma jor problems in generating appropriate folder lab els when /#0Cling longerterm information for later retriev al/" and in /#5Creconstructing these lab els when theyengage in later retriev al/./" Lifestreams pro vides a solution to these problems in t w ow a ys/: /#28/1/#29 through the time/-ordered stream mo del do cumen ts gradually recede fromthe users /#5Cview/" and are conceptually arc hiv ed in the pro cess /#28/2/#29 all do cumen ts inLifestreams remain a v ailable for retriev al via con ten t/. In this w a y users nev er ha v et oin v en t /#5Cfolder lab els/" or remem b er them/; they only ha v e to remem b er the con ten to fthe information or when it w as created or some com bination of the t w o /#28somethingusers are go o d at /#5BLan/8/8b /#5D/#29/./7/./3/./2 Eric ksonW en o w examine a second long/-term study at Apple Computer b y Thomas Eric kson/.Eric kson dev elop ed and analyzed his o wn use of a p ersonal electronic noteb o ok o v era three y ear p erio d /#5BEri/9/6 /#5D/. The noteb o ok/, implemen ted in Hyp ercard on an AppleP o w erb o ok/, w as an attempt to dev elop a system that mirrored the ev eryda y tasks ofEric kson /#28a casual user/#29/. During this w ork Eric kson aimed to understand the featuresand the mo des of use that made his noteb o ok useful/. This w ork is particularly germaneb ecause it studies a user in the con text of a p ersonal information system/.Eric kson primarily used his noteb o ok in a w ork setting to manage tasks/, recordnotes/, comp ose and send electronic mail and as an arc hiv e for his information/. He usedthese v arious functions in an iterativ e manner/. Usually at the b eginning of the da yh ec hec ks and up dates his T oDo list /#28task managemen t/#29 and then c hec ks email and hiscalendar /#28whic hm a y result in further alterations to his T oDo list/#29/. Throughout theda y he iterates through making notes/, c hec king his T oDo list and using electronic mail/.Less often Eric kson p erforms the follo wing tasks/: searc hing through his informationfor a particular item/, bro wsing the last mon th of activities and incorp orating it in to asummary /, or transcribing something written in to his P o w erb o ok/. Eric kson had origi/-nally en visioned that he w ould link and dev elop cross references b et w een informationin his collection of do cumen ts/, but he quic kly abandoned this idea b ecause it causeddisruptiv e con text shifts/. In a comparison with Eric kson/'s old pap er/-based metho d oforganizing information/, he found that his electronic noteb o ok had the follo wing e/#0Bect/:he to ok more notes b ecause/, through the searc hing and bro wsing capabilit y /,h e w asable to /#0Cnd old information more readily /#28and it w as more legible than in handwrittenform/#29/.
Chapter /7/. Information Managemen t Revisited /1/3/5In summary /, Eric kson uses his noteb o ok primarily for managing his tasks and sc hed/-ule /#28T oDos and calendar/#29/, creating and managing notes/, p erforming messaging throughelectronic mail/, and arc hiving and later searc hing for information/.Ho w do these tasks of a t ypical user of a p ersonal information managemen t system/#0Ct to Lifestreams/? As w e/'v e seen Lifestreams accommo dates task managemen tb yallo wing the user to create task con texts and also through managing reminders/. Inprevious c hapter w e presen ted sev eral metho ds used in Lifestreams to manage T od olists/. Lifestreams pro vides a natural /#5Cpap er/-lik e/" system for creating notes whereneither names nor storage folders are needed/, and/, as in Eric kson/'s system/, wherenotes can b e searc hed for
/1/.Eric kson mak es an in teresting p oin t ab out the com bination of messaging and notemaking in his system/:/#5C/#28My system/#29 is useful b ecause of the synergy b et w een note making andmessaging/. As noted/, the messaging built in to /#28m y system/#29 increases thep oten tial utilit y /#28and qualit y/#29 of note making/, and the note making in turnpro vide grist for messages and other re/-uses of con ten t/./"This is in teresting b ecause Eric kson/'s system did not ha v e a fully in tegrated com/-m unications system/. He mo v ed text bac k and forth b et w een Hyp erCard and mailer/.Lifestreams should mak e the synergy stronger with its built/-in transfer op eration thatallo ws an y do cumen t to b ecome a mail message/.Eric kson/'s last task/, arc hiving and retriev al/, has b een discussed at length withresp ect to Lifestreams/. Eric kson do es commen t on some in teresting asp ects of searc hingwhen the underlying system stores a user/'s en tire information collection /#28that is/, allnotes/, T oDo lists/, email/, etc/./#29/:/#5CBro wsing itself is made easier b ecause the /#5Binformation that is/#5D normallyephemeral/, /././. is captured /#7B T oDo lists/, email messages/, notes /#7B /#5Band/#5D pro/-vides more cues ab out what is b eing searc hed for/./"
/2Tw o factors in the Lifestreams system help to preserv e these cues/: /#28/1/#29 all informationin y our electronic life is stored in y our lifestream /#28/2/#29 c hronological storage groupsthese items together in the manner they w ere created/. This supp orts our argumen ti nChapter /2 for c hronological storage/.Eric kson also p oin ts out that searc h is useful when /#5Ctrying to put together a sum/-mary of what has happ ened on a pro ject/./" Here is further evidence that users are inneed of a summarize capabilit y /#28as w eh a v e in Lifestreams/#29/./1Lifestreams impro v es on the tec hnology of Eric kson/'s system b ecause w e use an indexing system/#28he relied on the in ternal/, non/-index searc h capabilit y of Hyp erCard/#29/. In addition Eric kson couldn/'tuse substreams to organize information/./2Although not c hronological ly /-based /, Eric kson/'s system groups daily items within one page andpro vides a table of con ten ts/.
Chapter /7/. Information Managemen t Revisited /1/3/6Last/, Eric kson states that his system is /#5Cgo o d at dealing with text/, and the man yw a ys in whic h I re/#0Dect/, comm unicate and act are en t wined in textual represen tation/./"W e b eliev e the same is true of most users and w eh a v e sho wn ho w Lifestreams alsore/#0Dects this st yle of w ork/. Eric kson concludes that /#5Cprobably the most signi/#0Ccan t im/-pact of /#28his system/#29 is a sort of synergy among the activities of note making/, reference/,and message/./" The parallel with Lifestreams should b e clear as it is/, in its core/, a notemaking/, reference/, message and reminding system/./7/./3/./3 T asks from the Kno wledge Na vigatorFinally w e tak e a lo ok at tasks not from a user study /, but from a protot yp e system/.In /1/9/8/7 Apple Computer created the video /#5CKno wledge Na vigator/,/" whic h presen tsa futuristic protot yp e of a /#5Ccon v ersational computer/" /#5BCom/8/7 /#5D/. While the video hasdra wn m uc hi n terest b ecause of the con v ersational asp ect of the system/, the informationtasks the user is /#0Duen tly carrying out are more enligh tening/. W e presen t the dialogfrom the /#0Crst half of the video in Figure /7/./1/, where w e join a professor as he /#5Cc hec ksin/" with his computer/.Setting AI issues aside/, w e examine this in teraction in the con text of informationmanagemen t/. In /1 the computer b egins b y summarizing messages that ha v e arriv edsince the user last sp ok e with the computer /| an op eration that could /#28in theory/#29 b eaccomplished b y a Lifetreams/' summary of new messages/. Then/, in /2 /, the professorimmediately creates a reminder/. Next/, in /3 /, the computer summarizes the reminderson the future of the professor/'s /#5Cstream/./" In /5 /, the professor asks the computer to /#0Cndinformation based on con ten t and c hronologically /. The computer presen ts the resultsand the professor/, not happ y /, asks the computer to /#0Cnd all articles he has not y et read/| an attribute based searc h/. The computer then asks for clari/#0Ccation and summarizesthe searc h results in /9 /.I n /1/0 /- /1/1 the professor p erforms messaging with the computer/'shelp/. In /1/2 the professor p erforms another c hronology and con ten t/-based /#0Cnd and thecomputer resp onds with a summary /.The Kno wledge Na vigator pro vides an excellen t example of a /#0Duid soft w are en/-vironmen t that mirrors the user/'s w ork habits/. W e note that the primary op erationsp erformed in the video /#28summarize /- remind /- /#0Cnd /- /#0Cnd /- summarize /- messaging /- /#0Cnd/- summarize/#29 directly corresp ond to the primitiv e op erations of Lifestreams /#28lea vingaside new and clone/#29/./7/./4 Lansdale RevisitedFinally w e revisit the examples of Lansdale in the con text of Lifestreams/. Our /#0Crstexample illustrates a user who needs to retriev e information in a manner that is di/#0Beren tthan the w a yi t w as organized within a hierarc h y /.
Chapter /7/. Information Managemen t Revisited /1/3/7Pr ofessor enters r o om/1/. Computer/: /#5CY ou ha v e three messages/: y our graduate researc h team inGuatemala just c hec king in/; Rob ert Jordan/, a second semester junior/, request/-ing a second extension on his term pap er/; and y our mother reminding y ou ab outy our father/./././"Pr ofessor interrupts/2/. Professor/: /#5Csurprise birthda y part y next sunda y/"/3/. Computer/: /#5CT od a yy ou ha v e a facult y lunc h at /1/2/:/0/0/, y ou need to tak e Kath yto the airp ort b y /2/:/0/0/, y ou ha v e a lecture at /4/:/1/5 on deforestation in the AmazonRain F orest/./"/4/. Professor/: /#5CRigh t/./"/5/. Professor/: /#5CLet me see the lecture notes from last semester/./"Computer displays notes/./6/. Professor/: /#5C No that/'s not enough/, I need to review the more recen t literature/.Pull up all the articles I ha v en/'t read y et/./"/7/. Computer/: /#5CJournal articles only/?/"/8/. Professor/: /#5CFine/./"/9/. Computer/: /#5CY our friend/, Jill Gilb ert/, has published an article ab out defor/-estation in the Amazon and it/'s e/#0Bects on rainfall in the sub/-Sahara/./"Computer c ontinues with summary of Jil l/'s work/./1/0/. Professor/: /#5CCon tact Jill/./"/1/1/. Computer/: /#5CI/'m sorry she/'s not a v ailable righ tn o w/. I left a message thaty ou had called/./"/1/2/. Professor/: /#5C Ok/, let/'s see/. There/'s an article ab out /5 y ears ago/, Dr/. Flempsonor something/. He really disagreed with the direction of Jill/'s researc h/./"/1/3/. Computer /: /#5CJohn Fleming/, of UpSilla Univ ersit y /./"Computer c ontinues with summary of his work/./1/4/. Professor/: /#5CY es/, that is it/./"/././.Figure /7/./1/: Dialog from Apple/'s /#5CKno wledge Na vigator/"/.
Chapter /7/. Information Managemen t Revisited /1/3/8/#5CMy b oss w an ts to see all the pro ject reviews I ha v e carried out o v er thelast six mon ths/. The trouble is/, they are /#0Cled under eac h of the individualpro jects/. It will tak e me ages to w ork through and dig them all out/./"In Lifestreams the user can p erform a /#0Cnd op eration to retriev e all /#5Cpro ject re/-views/./" The result of the /#0Cnd is a substream that acts as a temp orary con text for histask/. With the assumption that his Lifestreams system is equipp ed with a metho d ofsummarizing text /#0Cles
/3/, he could use the summary op eration to condense the pro jectreviews in to one do cumen t/, from whic h he could prepare the rep ort for his b oss/. T akingthis one step further/, he could then transfer the rep ort to his b oss/' stream in a thirdop eration/.Users often remem be r c hronological information ab out do cumen ts /#28discussed inChapter /1/#29 as seen in this example/:/#5CY es I remem b er that pap er/. It came at the same time as the pro ductaudit/. I can/'t remem b er what happ ened to it/, though/./"In Lifestreams the user /#0Crst substreams to lo cate the pro duct audit and notesthe time of its creation b y lo oking at the glance view of the do cumen t/. He thenreturns to his mail stream/, zo oms bac k to that time in the past /#28in our in terfacevia the time/-enhanced scroll bar/#29 and bro wses for the do cumen t/. If he happ ens toremem b er something ab out the pap er /#28it men tioned /#5CSc h w artz/"/#29/, then he can /#0Crstcreate a substream based on that information and then zo om to the past/. This reducesthe amoun t of information the user needs to p eruse/.Often a user/'s memory of where things are /#0Cled breaks do wn/. In this case users relyon the mnemonics of /#0Cle names and directory names to lo cate information/. Unfortu/-nately /, as Dumais /#5BDL/8/3 /#5D p oin ted out/, o v er time these categories o v erlap and b ecomeam biguous/./#5CThe do cumen tIw an t is the F renc h Finance Committee/'s min utes/, but I/'v etried lo oking under /`F renc h/'/, and /'Committees/' and it/'s not there/. P erhapsit/'s under /`F rance/'/. I don/'t kno wI m a ya sw ell searc h through the wholelot/./"Searc hing through the whole lot is ob viously a pain in most desktop systems/. Ev enwith a searc ho v er /#0Cle names it is not clear the user will /#0Cnd the information/. Ho w ev erwith Lifetreams/' con ten t/-based searc h the user can often lo cate the information inone step /#28e/.g/./, with a searc h for /"/#28French or France/#29 committee minutes/" /#29/. Herethe burden of /#0Cnding the information is placed on the computer/, whic h main tains indata/-structures the con ten t information needed for retriev al/. In desktop systems theorganization structure is main tained in the users head/./3Summary engines suc h as Apple/'s V espa Linear lead us to b eliev e this is not a big assumption/.
Chapter /7/. Information Managemen t Revisited /1/3/9/7/./5 Summa ryThe w ork of Malone/, Lansdale and others suggest a v en ues for the simpli/#0Ccation andimpro v emen t of electronic systems/. Other w ork/, suc h as Whittak er and Eric kson/'s/,pro duced v aluable classi/#0Ccations sc hemes for information t yp es and tasks that canb e used to examine the capabilities of curren t desk systems and suggest ho w futuresystems migh t b etter serv e us/.In this c hapter w eh a v e examined these /#0Cndings and explored ho w Lifestreams asa mo del incorp orates man y of these suggested a v en ues and handles user informationt yp es and tasks in a more elegan tw a y than curren t desktop systems/. W en o wm o v eon to examine Lifestreams in the con text of related soft w are systems/.
Chapter /8Related W orkLifestreams builds up on previous w ork in a n um b e ro fd i v erse areas/: p ersonal computerindexing systems/, information retriev al and /#0Cltering systems/, corp orate do cumen t andarc hiving systems/, p ersonal information handlers/, time and con tact managers/, w ork/-/#0Do w systems/, /#0Cnancial managers/, and sc heduling systems/. In this section w e surv ey thelandscap e/, comparing and con trasting represen tativ ew orks from eac h area with Life/-streams/. W e conclude this section with a comparison of features from related systemsand Lifestreams/.While w e do not claim the systems w e visit in this c hapter are all inclusiv e/, w edo b eliev e they are represen tativ e of the landscap e of existing systems/. F or instance/,there are sev eral /#5Cdisk indexing/" applications on the mark et and a v ailable as sharew are/,ho w ev er/, w e primarily co v er On T ec hnologies/' pro duct/, as it has the same functionalit yas other applications on the mark et/./8/./1 Information Retriev al SystemsHistorically /,w ork in information retriev al /#28IR/#29 has included b oth information retriev aland information /#0Cltering/. Information retriev al concerns itself with the e/#0Ecien t stor/-age and retriev al of do cumen ts/, in most cases text/-based do cumen ts/. Filtering is av arian t of information retriev al that t ypically targets real/-time streams/. IR tec hniquesha v e traditionally b een used on large cen tralized collections of do cumen ts/, suc h as theNexis/#2FLexis database/. More recen tw ork addresses ho w suc h tec hniques migh t b ene/#0Ctev eryda y computer users with their o wn do cumen t collections/. W e presen t examplesof b oth information retriev al and /#0Cltering here/./8/./1/./1 W AISThe Wide Area Information Service /#28W AIS/#29 is a commercial/-grade information retriev alsystem /#5BKah/9/1 /#5D that pro vides access to an arbitrary n um b er of net w ork do cumen t col/-/1/4/0
Chapter /8/. Related W ork /1/4/1lections/. W AIS users form ulate searc h queries o v er an yn um b er of do cumen t collectionsand can re/#0Cne their searc hes using relev ance feedbac k/. Queries can b e sa v ed/, and theretriev al pro cess automated /#28e/.g/./, retriev al can b e sc heduled to o ccur at p erio dic in ter/-v als/#29/, allo wing W AIS to function as a rudimen tary /#5Cclipping serv er/./" W AIS pro videsa clien t/#2Fserv er arc hitecture for accessing m ultiple do cumen t collections as w ell as theuse of relev ance feedbac k to guide user searc hes/.In comparison to Lifestreams/, W AIS is used to searc h cen tralized do cumen t collec/-tions rather than p ersonal information/. The abilit yt o s a v e and resc hedule searc hes hasa ten uous relation to substreams but W AIS do es not pro vide builtin comm unication orsummarizing capabilities/./8/./1/./2 T ap estryT ap estry /, a researc h system dev elop ed at Xero xP AR C /#5BGNOT/9/2 /#5D/, w as constructed tomanage a large n um b er of incoming articles/, suc h as netnews and electronic mailinglists/, for a w orkgroup/. As new articles arriv ei n T ap estry they are collected and arc hiv edwithin a global database/|lik e Lifestreams/, they are mean t to b e arc hiv ed inde/#0Cnitely /.Rather then p erusing the collection of do cumen ts directly /, users supply con ten t/-based/#0Clters that are installed in the system and then iterativ ely applied to the database/.Successfully /#0Cltered do cumen ts are then forw arded to eac h user/'s mailb o x where an/#5Cappraiser/" ma y do additional /#0Cltering /#28suc h as sorting the mail in to folders/#29 b eforethe user sees the list of new do cumen ts/. Lik e Lifestreams/, T ap estry also infers an um b er of mail/-related attributes for eac h do cumen t whic h can b e used in /#0Cltering/.One esp ecially no v el asp ect of the system is its supp ort for /#5Ccollab orativ e /#0Cltering/"whereb y group mem b ers can recommend an article as w orth y /#28or not/#29 of b eing read b yothers/.Lik e Lifestreams/, T ap estry allo ws the user to construct /#0Clters that con tin ually /#0Cl/-ter incoming do cumen ts/; this com bined with an appraiser that categorizes do cumen tsin to folders giv es us something that lo oks v ery m uc h lik e a substream/. It/'s not a sub/-stream though/, b ecause a substream creates a virtual collection of do cumen ts basedon a sp eci/#0Cc /#0Clter/, whereas T ap estry folders are the result of man y /#0Cltering op erationsmerged together/. The main di/#0Berence b et w een T ap estry and Lifestreams is one of phi/-losoph y/; T ap estry is not a system for managing p ersonal info c h unks/, it/'s more of aglobal /#0Cltering engine for all the information coming in t oaw orkgroup/. While T ap estrypro vides some Lifestreams t yp e mec hanisms/, it directs them at ob jects incoming fromthe outside w orld and not at the user/'s /#0Clespace/./8/./1/./3 MIT Seman tic File SystemThe MIT Seman tic File System /#5BGJSO/9/1/#5D pro vides asso ciativ e access to a /#0Cle systemvia virtual dir e ctories /. Using nativ e directory commands /#28suc ha s ls and cd /#29/, virtualdirectory names are in terpreted as asso ciativ e queries/. The results of a query are
Chapter /8/. Related W ork /1/4/2computed via an automatically indexed set of attributes /#28/#0Celd/#2Fv alue pairs/#29/. This indexis generated b ya n um be r o f tr ansduc ers that map /#0Cles of sp eci/#0Cc t yp es /#28e/.g/./, C /#0Cles/,TE
X/#0Cles/, etc/./#29 to a set of attributes/.The Seman tic File System is no v el in its abilit y to describ e a desired view of the /#0Clesystem/'s con ten ts/. This description maps to no actual folder or directory of informationbut to a virtual one computed on demand/. Indexing is imp ortan t b ecause it guaran teesacceptable resp onse time on queries /#28w e established this in Chapter /3/#29/. Indexing alsoenables searc hes on a /#0Cle/'s en tire con ten t/.The Seman tic File System sho ws reasonable p erformance on a realistically sized /#0Clesystem with queries answ ered in the one to t w o second range/. The results of the w ork/#5Csuggest that seman tic /#0Cle systems can b e used to /#0Cnd information more quic kly thanis p ossible using ordinary /#0Cle systems/./"The connection with Lifestreams is clear/: b oth pro vide virtual organization do cu/-men ts through searc h/. Unlik e Lifestreams/, the Seman tic File System do es not pro videan in tegrated information managemen te n vironmen t/, just a searc h to ol/. Ho w ev er/, theseman tic /#0Cle system suggests impro v emen ts that can b e made to the Lifestreams systemvia transducers/. T od a y /, Lifestreams only indexes text do cumen ts/. With transducers/,other do cumen tt yp es can b e indexed and the o v erall metho d of indexing impro v ed/./8/./1/./4 GlimpseGlimpse is an indexing to ol for Unix /#0Cles systems dev elop ed b y Udi Man b er and SunW u at the Univ ersit y of Arizona that manages p ersonal information and uses an in/-dexing approac h that /#0Cts in/-b et w een in v erse indices and signature /#0Cles /#5BMW/9/3 /#5D/. Thisapproac h pro duces index /#0Cles of only /2/#25 to /4/#25 of the original text size /#28v ersus /5/0/#25 to/3/0/0/#25 for traditional tec hniques/#29 while pro viding a v erage searc h times on the order ofa few seconds/; Man b er and W u argue that this is su/#0Ecien t for p ersonal information/.Glimpse ac hiev es small indices b y breaking text /#0Cles in to blo c ks and adding one recordto the index p er o ccurrence of eac hw ord in the blo c k /#28as opp osed to storing ev eryo ccurrence/#29/. Searc hing is a t w o phase pro cess that uses agr ep /#5BWM/9/4 /#5D/. A gr ep is ageneralized v ersion of gr ep that allo ws the user to sp ecify a n um b er of errors whic h canb e insertions/, deletions/, or substitutions/. This allo ws Glimpse to handle missp ellingsand other common searc h mistak es/. In Glimpse/, agr ep is /#0Crst used to searc h the indexitself/, and then agr ep uses the output records to p erform a searc h on the actual /#0Cles/.Glimpse is similar to Lifestreams in that it allo ws quic k access to a users informationvia a searc h mec hanism/. Using Glimpse ho w ev er is a /#5Cone shot/" pro cess that do es notallo w the creation of virtual directories/. In short/, Glimpse is primarily an extension ofsearc h to ols suc ha s gr ep /#28alb eit an imp ortan t extension allo wing fast access to a user/'stotal information store/#29 and not an in tegrated w ork en vironmen t/. W ork on Glimpseis encouraging ho w ev er/, and suggests an in triguing metho d of cataloging and searc hlarge p ersonal data collections/.
Chapter /8/. Related W ork /1/4/3/8/./1/./5 Apple FindThe Apple /#5CFind/" application is often though t of as a last resort in lo cating /#0Cles on theMacin tosh/. F or man y /, who are not as organized as they w ould lik e to b e/, Find b ecomesaw a y of life/. Find presen ts a simple in terface to the user that allo ws the en try ofk eyw ords that are matc hed to /#0Clenames on the user/'s hard driv e/. In the new est v ersionof the Macin tosh op eration system/, System /7/./5/, Find has b een extended to allo w forcustom searc hes to b e done on /#0Cle t yp e and dates of creation/, and so on/.The similarit y with Lifestreams is in the mo de of op erations/: using searc h ratherthan using lo cale to /#0Cnd dated information/. Find di/#0Bers in man yw a ys ho w ev er/, Findsearc hes all information at run time/, it do esn/'t index disk information incremen tally /.I talso do esn/'t create virtual directories based on the searc h criteria /#28although the system/7/./5 presen ts the information as if it is a virtual directory/#29/./8/./2 Database Manageme n t SystemsLifestreams shares sev eral ideas with the database managemen t systems /#28DBMS/#29/. Life/-streams consist of a n um b er of do cumen ts that can b e describ ed in a record/-lik e manner/.Substreams are related to /#5Cviews/" in relational databases /#5BDat/8/6 /#5D/. F uture do cumen tsare related to /#5Ctriggers/" /#28in Lifestreams/, the trigger o ccurs when the creation date ofthe do cumen t slides in to the past/#29/. There are also connections b et w een Lifestreamsand temp oral databases /#5BSno/9/0 /#5D/, temp oral logic /#5BAll/8/3/#5D/, and sequence database systems/#5BSLR/8/4/#5D where time and/#2For logical sequences pla y a crucial role in the system/.Lifestreams di/#0Bers from previous w ork in the DBMS comm unities in sev eral imp or/-tan tw a ys/. Lifestreams is /#0Crst and foremost a system for p ersonal information manage/-men t/, while DBM systems are used for cen tralized data collections/. Lifestreams alsoop erates on a /#0Dexible data mo del that includes man yt yp es of media and is based on/#0Dexible indexing and retriev al tec hniques/. Lifestreams/' searc h is pro vided b y a sim/-ple system of k eyw ords and b o olean op erations that allo ws ev eryda y users to createqueries/. Database systems rely on query languages suc h as SQL/, whic h are not acces/-sible to the t ypical computer user/. Last/, Lifestreams pro vides a no v el user in terfaceto a database system/, whic h has b een called for b y the leading researc hers of the DBcomm unit y /#5BSSU/9/5/#5D/./8/./3 P ersonal Information ManagersThere are a n um b er of p ersonal information managemen t /#28PIM/#29 pac k ages and platformson the mark et/. Lik e Lifestreams these pac k ages are suited to w ards managing p ersonalinformation suc h as con tacts/, ongoing tasks and sc hedules/. In this section w e /#0Crstco v er the most common t yp es of soft w are pac k ages/, and then the Newton platformwhic h subsumes the functionalit y of most PIM devices/. Last w ec o v er an in teresting
Chapter /8/. Related W ork /1/4/4sharew are application with a philosoph y similar to that of Lifestreams/./8/./3/./1 T oDo List ManagersT oDo List managers/, suc h as LandW are/'s T oDo List /#5BW ar/9/5 /#5D/, all pro vide the samebasic functionalit y /, that of managing a simple list of p ersonal tasks/. T oDo List allo wsthe user to create a n um b er of time/-stamp ed do cumen ts /#28of t yp e text or v oice memo/#29and displa ys them according to their date and an optional priorit y /#28priorit y items areunderlined/#29/. Additional information can b e displa y ed along with eac h item/, suc ha sthe n um be r o f d a ys the task is o v erdue/. A clic kb o xi sp r o vided for the user to indicatethe task is /#0Cnished/. T oDo List also allo ws the user to searc h for text within the T oDolist text do cumen ts/.As w eh a v e already men tioned in Chapter /5/, the to do list capabilities are a simple/#5Cadd on/" to the Lifestreams system/, as the stream pro vides a natural data structurefor to do list applications/. The to do items are also made a v ailable along with the rest ofthe user/'s do cumen ts/. Moreo v er/, the rest of Lifestreams/' capabilities are not a simple/#5Cadd on/" to to do list managers/./8/./3/./2 Con tact Managers and Time T rac k ersIn their simplest form con tact managers store and pro vide access to names/, addresses/,phone n um b ers/, and other information ab out a n um be r o f /#28 t ypically business/#29 con/-tacts/. T ak en to their logical conclusion/, con tact managers retriev e phone n um b ers/,dial phones/, log calls/, automate the sending of electronic mail/, prin te n v elop es and au/-tomate letter sending/. Man y con tact managers also include /#5Ctime trac king/,/" the abilit yto trac k /#5Cbillable hours/" b yh a ving the computer log and c harge standard hourly ratesfor the duration of some task/. Rep orts and bills can usually b e generated from theselogs/.As with the to do list/, w e men tioned in Chapter /5 that these capabilities are simple/#5Cadd ons/" to the Lifestreams system/./8/./3/./3 The NewtonThe Newton represen ts an /#5Carc hitectural/" approac h to implemen ting a p ersonal infor/-mation manager as it includes b oth a no v el hardw are and soft w are design/. Since theNewton includes man y of the PIM features w eh a v e already discussed/, w e will presen tonly its no v el features here/.W eh a v ei n tro duced the the Newton in Chapter /4/. Here w e will touc h on the morein teresting asp ects of its soft w are arc hitecture/. The most in teresting asp ect of theNewton is its storage mo del/. A Newton can ha v ea n yn um be r o f stor es /; stores usuallyrepresen tp h ysical storage suc h as RAM/, a memory card/, or a hard driv e/. Applicationsaccess stores b y creating/, reading/, and writing soups /#5BCom/9/3 /#5D/. Soups are somewhatanalogous to /#0Cles/; they are p ersisten t storage structures that can b e accessed b ya n y
Chapter /8/. Related W ork /1/4/5pro cess/. Soups are the primary organization sc heme for the Newton/, whic h con tains nohierarc hical storage mo del/. Users t ypically searc h for information rather than staticallyorganize it/.Eac h soup con tains en tries that are made up of t ypically homogeneous data struc/-tures/, with zero or more indexed /#0Celds/. F or eac h soup/, applications can de/#0Cne a searc hin terface that allo ws the Newton/'s p ersonal assistan t /#28a soft w are functionalit ya v ail/-able to the user/#29 to searc h for arbitrary information/. F or example/, if the user tells thep ersonal assistan t to /#0Cnd ev erything it kno ws ab out /#5CBob Sc h w artz/" then an arbitraryapplication can ha v e its data included in the searc h/.Lifestreams and the Newton are similar in that they use a non/-hierarc hical storagemo del /#28soups v ersus the time/-ordered stream/#29 and prefer searc hing to static organi/-zation/. They also b oth include task automation /#28Lifestreams uses p ersonal agen ts/,and Newton uses its p ersonal assistan t/#29/. They di/#0Ber in that the Newton do esn/'t allo worganization sc hemes/, lik e substreams/, to b e created/, nor do es it pro vide a default or/-ganization sc heme for all information/. W eh a v e suggested in /#5BF re/9/5 /#5Dh o w the Newtonmigh t b e altered and b ene/#0Ct from a Lifestreams lik e mo del/./8/./3/./4 Guy F rida yGuy F rida y is a sharew are application dev elop ed b y former Y ale undergraduate MatthewKlein on the Macin tosh platform/. Guy F rida y is an attempt to dev elop a p ersonal in/-formation manager for unorganized p eople/. Guy F rida yw as designed to w ork lik escraps of pap er/; the user simply jots do wn notes/, phone n um b ers/, etc/. on electronicnotes /#28called /#5Cn uggets/"/#29/. Notes are displa y ed in an arbitrary and o v erlapping manneron the user/'s screen/. T o recall a note/, the user en ters k eyw ords in to a dialog b o x andthe relev an t notes are displa y ed on the screen/.Guy F rida y includes t w o other features/, phone dialing and reminders/. Phone dialingw orks b y searc hing the top/-most /#28selected/#29 note for a phone n um b er and dialing it viathe computer/. Reminders are added via a dialog b o x that ask for a text message/, adate and time/, and whether the reminder should o ccur once/, daily /,w eekly /, mon thly ory early /. When the reminder expires/, a dialog message is displa y ed with the text of thereminder/.Guy F rida y and Lifestreams b oth include a simply w a y of creating and /#0Clteringinformation as w ell as phone dialing and reminder functions/. They di/#0Ber in that GuyF rida y con tains no organizing framew ork other than quic k searc hes/. They also di/#0Berin that reminders in Guy F rida y are a separate asp ect of the system/, discrete from thenotes/. That is/, a n ugget can/'t b e a reminder/. Reminders can b e created and listed/,but do not inhabit the same space as notes and can/'t b e searc hed for/.
Chapter /8/. Related W ork /1/4/6/8/./4 Sc hedulers and Meeting Mak ersThere are a n um b e ro fs c heduling applications on the mark et /#28suc ha s O n T ec hnologies/'Meeting Mak er XP /#5BMee/9/4 /#5D/#29 that pro vide the same basic functionalit y/: electronicallysc heduling a meeting of n p eople/. The meeting mak er scenario is usually/: /#28/1/#29 someoneprop oses a meeting to the meeting mak er along with a list of required participan ts /#28/2/#29the meeting mak er /#28usually via in tegrated email/#29 asks eac h participan t to accept orreject the prop osed meeting/, and /#28/3/#29 the meeting is then either sc heduled or canceled/#28or p erhaps an alternativ e suggested and a second round b egun/#29/. The sophisticationof these systems v aries but almost all attempt to at least examine existing sc hedules toa v oid sc heduling con/#0Dicts/. Some systems include complex rule/-based logic for prop osingmeeting times/#2Fplaces and man y systems pro vide electronic reminders that can b e sen tout b efore a sc heduled meeting/.The sc heduler or /#5Cmeeting/-mak er/" is p erhaps the canonical example of an imp or/-tan t functionalit y/#28 t ypically implemen ted in a standalone application/#29 that can b eincorp orated in to Lifestreams/. Lifestreams/' agen ts along with its time/-based streamand in tegrated email pro vide a natural setting for implemen ting sc hedulers/./8/./5 Corp orate Do cumen t SystemsCorp orate do cumen t systems fall in to the categories of do cumen t arc hiv e systems/,/#5Cgroup w are/" systems/, and w ork/#0Do w tec hnologies /#28the automation of con v en tional /#5Cpap er/-trials/" with electronic systems/#29/. Our previous discussion of information retriev al co v ersthe topic of do cumen t arc hiv e systems/, although there are some corp orate retriev al sys/-tems that include w ork/#0Do w and other enhancemen ts/. In this section w e /#0Crst co v er thepredominan t group w are platform on the mark et/, Lotus Notes/, and then discuss w ork/-/#0Do w in general terms/./8/./5/./1 Do cumen t Systems/: Lotus NotesLotus Notes
TMis p erhaps the most successful /#5Cw orkgroup/" comm unications pro ducton the mark et/. Notes acts b oth as a compan y do cumen t arc hiv e/#2Fdatabase and alsofacilitates /#5Cw orkgroup/" comm unications among emplo y ees/. There are sev eral analo/-gies b et w een Lifestreams and Lotus Notes/: Notes main tains do cumen t collections indatabases and allo ws custom viewing and /#0Cltering of a particular database via a /#5Cview/"/#28a view is a sp eci/#0Ccation for ho w to displa y the do cumen ts within a particular database/#29/.Notes also incorp orates electronic mail as an in tegral part of the system/. On the surfacethis sounds a lot lik e Lifestreams/, ho w ev er the domain for whic h Notes is used is quitedi/#0Beren t/. Wh y do es this matter/? Notes is foremost a system for main taining corp oratedo cumen ts and information/|the users don/'t generally main tain p ersonal do cumen tswithin Notes/. As suc h/, Notes databases are statically con/#0Cgured and/, for example/,
Chapter /8/. Related W ork /1/4/7database /#0Clters aren/'t created b yt ypical emplo y ees but rather b y the system admin/-istrator/. In con trast/, Lifestreams w as created to manage an individual/'s do cumen tcollection and allo ws custom /#0Cltering b y the user/.Notes pro vides sev eral metho ds of creating collab orativ e structures/. The primarymetho d of group collab oration is the /#5Cshared database/./" This amoun ts to a commonarea where users can p ost messages and reply to previous messages/. Lifestreams canaccommo date the same structure with shared streams /#28although w eh a v en/'t exploredsuc h use of Lifestreams/#29/. Notes also includes a w ork/#0Do w mo del based on email c hains/;that is/, the originator of a do cumen t supplies a c hain of p eople through whic h the do c/-umen t should pass /#28p ossibly getting appro v al at eac h p oin t along the w a y/#29/. Lifestreamscan b e extended to supp ort this w ork/#0Do w mo del via agen ts/. F or instance/, the path ado cumen t follo ws can b e dynamically supplied b y an agen t rather than statically sup/-plied b y the originator of a message/. Con/#0Cguring Notes for more adv anced group w areapplications suc ha ss c heduling/, although not imp ossible/, is a far leap/./8/./5/./2 W ork/#0Do w SystemsBecause there are a plethora of commercially a v ailable w ork/#0Do w systems/, with no clearleaders in the mark et/, w e discuss w ork/#0Do w systems without reference to a sp eci/#0Ccpro duct/. Sev eral academic systems include w ork/#0Do w capabilities/, namely /#5BMGL
/+/8/7 /,BR/9/3/, Bor/9/3b /#5D/. W ork/#0Do w systems automate information/-based tasks within organiza/-tions /#5BBar/9/5 /#5D/. W ork/#0Do w falls in to sev eral categories/: automating administrativ e tasks/#28the path of a purc hase order through an organization/#29/, task monitoring /#28e/.g/./, ho wlong emplo y ee x tak es to complete task y /#29/, and mediating less structured tasks /#28draftreview b yaw orkgroup/#29/.In Chapter /5/, w eh a v e suggested ho w Lifestreams/, through its agen t supp ort andtimed/-based storage structure/, can b e used to supp ort w ork/#0Do w capabilities/./8/./6 New P aradigmsA few systems defy categorization /#28lik e Lifestreams/#29 and are b est lab eled new paradigms/./8/./6/./1 MemoirsMemoirs is the system that is closest in philosoph y to Lifestreams/. Dev elop ed b yLansdale /#5BLan/8/8a/#5D/, Memoirs uses c hronology as an underlying storage sc heme andsearc h to organize do cumen ts/. Memoirs uses a /#5Ctimebase/" to displa y do cumen ts in acollection/. The timebase displa ys a sequence of time /#28the endp oin ts b eing determinedb y the user/#29 along with slots that are highligh ted to indicate do cumen ts/. The user canapply a /#0Clter to the timebase/, whic h lea v es only relev an t slots highligh ted/, or p erform ageneral searc h that creates a nativ e Macin tosh windo w /#28lik e a folder windo w/#29 with therelev an t do cumen ts/. Do cumen ts are searc hed via a n um b er of user de/#0Cnable attributes/,
Chapter /8/. Related W ork /1/4/8suc h as color /#28the Macin tosh allo ws the user to lab el /#0Cles with color/#29/, user/-addedk eyw ords or assigned icon/. Memoirs also includes a separate /#5Cdiary/" whic h allo ws theuser to mo v e items in and out of the timebase and add reminders/.Lifestreams and Memoirs di/#0Ber in that Lifestreams fully in tegrates the ideas ofc hronology in to a single /#5Cmetaphor/,/" the stream/, whereas Memoirs com bines a diarywith a timebase/. Lifestreams also recognizes the essen tial feature of con ten t/-basedsearc hing/. Without it w e are still relying on users to remem b er categorizations /#28andcreate them in the /#0Crst place/#29/. Substreams are incorp orated in to the Lifestreams mo deland are not external to the system/. Lik ewise/, substreams are /#5Cliv e/" and con tin ue tocollect do cumen ts as they are added to the system/. Lifestreams also incorp oratescomm unication and the abilit y to summarize/./8/./6/./2 Dynamic QueriesShneiderman/'s dynamic queries /#5BShn/9/4/#5D com bine direct manipulation and databasevisualization to allo w a user to rapidly /#0Clter information through the use of visualcomp onen ts suc h as sliders and buttons/. Manipulation of these comp onen ts results inthe user receiving feedbac k within /1/0/0ms /#28allo wing him to quic kly p erceiv e patterns inthe data/#29/. Visual queries ha v e b een applied to a n um b er of domains suc h as geographicdatabase systems and mo vie databases/. Visual queries ha v e also b een implemen ted inthe form of a Unix directory bro wser /#5BLOS/9/3/#5D/. Shneiderman et al found that withthe bro wser user queries could b e /#5Cansw ered more rapidly b ecause users can /#0Clterout irrelev an t information and visually scan the remaining information/./" The lo cation/-based alternativ e /#28i/.e/./, using the Unix from the command line/#29
/1/#5Crequires more timeb ecause users m ust visually scan a m uc h larger set of information/./" The bro wser w ork isa /#0Crst step/, and as Shneiderman et al p oin t out/, more w ork needs to b e done in tegratingvisual queries in to our da y/-to/-da y applications/.Dynamic queries are an in triguing alternativ e to b o olean searc hes and with impro v e/-men ts in p erformance could pro v ea ni n teresting metho d of searc hing o v er Lifestreamsdo cumen ts/./8/./6/./3 LifeLinesLifeLines /#5BPMR
/+/9/5/#5D is a general tec hnique for visualizing summaries of p ersonal histo/-ries/. LifeLines visualizes p ersonal histories b y depicting them on a graphical time scale/.LifeLines is particularly appropriate for handling biographical data suc h as medical orlegal records/. F or instance/, medical conditions can b e represen ted b y timelines andph ysician consultations can b e represen ted b y icons/. Plaisan t et al claim that the nat/-ural/, time/-based ordering /#5Callo ws comparisons and relationships b et w een the quan titiesdispla y ed/./"/1Barreau and Nardi describ e DOS as a lo cation/-based system/, w e do the same /#28for comparison/#29with the UNIX /#0Cle system/.
Chapter /8/. Related W ork /1/4/9LifeLines suggests an in teresting alternativ ei n terface to the Lifestreams system/;lik ewise/, LifeLines could use a lifestream as its underlying database/./8/./7 Summa ry /| Surv eying the Landscap eW en o w pro vide a o v erview of all the systems w e/'v e visited in this c hapter b y compar/-ing them against the essen tial features w e deriv ed in Chapter /1 /#28transparen t storage/,dynamic organization/, etc/./#29 along with some additional features that are imp ortan tt othe p erformance and usabilit y of the system/; for example/, it is not only imp ortan t thata system allo w the user to organize information based on con ten t/-based searc h/, but itis also imp ortan t that the system index the do cumen ts in the collection so that searc hcan b e accomplished quic kly /.Applicability to P ersonal Use/. Is the system suitable for p ersonal storage/? Man yof the systems w eh a v el o o k ed at are in tended for group or corp orate data/, ho w/-ev er/, as w eh a v e seen/, these tec hnologies are no w b eing applied to p ersonal in/-formation systems/.Searc hable Con ten t/. Can the data in the system b e searc hed based on its con ten t/?As w eh a v e seen/, systems lik e the Apple /#5CFind/" application allo w searc h/, but onlyb y /#0Cle attributes suc h as /#0Clename/, mo di/#0Ccation dates/, and size/. In con trast/, more/#0Dexible systems lik e the MIT Seman tic File System allo w searc hes on do cumen tcon ten t/.Indexed Con ten t/. Giv en that the system pro vides searc hable con ten t/, do es the sys/-tem index the con ten t to impro v e resp onse time/? Previous w ork has sho wn thatresp onse time is a crucial factor in searc h/-based systems /#5BShn/9/4 /#5D/. Indexing con/-ten t /#28or similar tec hniques/#29 is mandatory for searc h in systems that con tain morethan one thousand /#0Cles or do cumen t with to da y/'s tec hnology /#28as w e discussed inChapter /3/#29/.T ransparen t Storage/. Do es the system supp ort transparen t storage/? The Newtonpro vides a p ersisten t store and a v oids the o v erhead of naming and explicit storagewhile the Macin tosh uses a con v en tional /#0Cle and folder metaphor/, whic h requiresnaming/, the creation of static categories/, and explicitly c ho osing a storage lo/-cation for ev ery do cumen t/. So what/? Pro viding transparen t storage suggestsp oten tial gains for the user/, for example/, as w e discussed in Chapter /1 Mal/-one /#5BMal/8/3/#5D has sho wn that the most di/#0Ecult asp ect of managing information isc ho osing a storage lo cation/.Default Data View/. If the system do es supp ort transparen t storage/, do es it pro videa default w a y of viewing a set of do cumen ts/? Our time/-ordered stream and Lotus
Chapter /8/. Related W ork /1/5/0Notes pro vide default views/, while the Newton only pro vides default views of sub/-sets of its data store via applications /#28for instance the Newton notes applicationpro vides a default view of /#5Cnotes/" data ob jects/#29/, while W AIS pro vides no defaultview at all/. A default view is imp ortan t/. It pro vides a storage structure thatusers can alw a ys fall bac k on and that can help to prev en t the /#5Clost do cumen tproblem/"
/2in searc h/-based systems/. The default view t ypically also pro vides acon v enien tw a y for users to bro wse new information/.Virtual Directories/. Do es the system allo w virtual collections of information to b ecreated/? Organizational constructs lik e virtual directories allo w users to organizedata in the w a y it is needed rather than the w a yi t w as created/.P ersisten t Filtering/. If virtual collections of data are allo w ed/, do these collectioncon tin ue to collect /#28/#0Clter/#29 new information as it is added to the system/? Doingso allo ws users to monitor and categorize incoming information automatically /.F or instance/, Lifestreams allo ws searc h results /#28substreams/#29 to p ersist/, while theApple Find application do es not/.Data In tegration/. Do es the system supp ort its o wn in ternal data mo del or do es italso in tegrate external do cumen tt yp es/? This p oin tm a y need further illustration/.Guy F rida y for instance/, uses its o wn do cumen tt yp e/, the /#5Cn ugget/./" Nuggetscan not b e exp orted /#28without the user explicitly cop ying its data to anotherdo cumen t/#29 nor can Guy F rida y incorp orate other do cumen tt yp es /#28suc ha saMicrosoft W ord do cumen t/#29/. The Seman tic File System/, on the other hand/, usestransducers to pro vide an extensible metho d of handling a v ariet y of do cumen tt yp es/.Comm unication In tegration/. Is comm unication in tegrated in to the system/? Thatis/, is there a con v enien t metho d of exc hanging data or do cumen ts with others/?F or instance Lifestreams includes a transfer op eration while Guy F rida y has nobuilt in metho d of comm unication/.Reminders/. Do es the system allo w for the creation of reminders and sc hedulinginformation/? Barreau and Nardi /#5BBN/9/5/#5D ha v e sho wn that reminding pla ys acritical role in t ypical computer use/.First/-class Reminders/. If the system has a notion of a reminder/, are the reminders/#0Crst class/? That is/, can w e op erate on the reminder lik ea n y other do cumen ti nthe system/? Are reminders searc hable/? Can w e send reminders to other users/?Lifestreams pro vides all these capabilities while systems lik e Guy F rida y pro videreminding that is separate from the data mo del of the system /#28e/.g/./, remindersare not n uggets/#29/./2The problem of ha ving a do cumen t in the system that can/'t b e easily found/.
Chapter /8/. Related W ork /1/5/1T ask Automation/. Can tasks b e automated b y the user/? Do es the system includean in ternal scripting language or some other means of automating tasks/?Extrap olation/. Can the system b e extended to include new functionalities b ey ondits core capabilities/?Summaries/. Do es the system ha v e the abilit y to pro vide a summary or o v erview ofa data collection/? This capabilit y often allo ws users to quic kly assimilate data/,dra w trends from time/-dep enden t data/, or generate o v erview do cumen ts suc ha smon thly rep orts or billing data/.W en o w presen t a feature comparison o v er the landscap e of the systems w eh a v esurv ey ed in T able /8/./1/. This table is particularly in teresting b ecause when analyzing itfor common patterns w e /#0Cnd the soft w are w orld in a rather random state/. One migh texp ect that the table w ould neatly partition itself in to a small set of similar classes/.Instead w e /#0Cnd that eac h system incorp orates some asp ect of the total landscap e offeatures/, but that on a case b y case basis/, the assignmen t of features to systems aresomewhat random/. W e b eliev e this mak es a strong case for the searc h for a uni/#0Cedframew ork that naturally accommo dates all features/. W e note that Lifestreams ful/#0Cllsthis role/.
Chapter /8/. Related W ork /1/5/2SystemPersonal UseSearchable Content
Indexed Content
Transparent Storage
Default Data ViewVirtual DirectoriesPersistent Filtering
Data Integration
Communication Integration
RemindersFirst/-class RemindersTask AutomationExtrap olationSummaries
Apple Find /#0F /#0E /#0F /#0E
Con tact Manager /#0F /#0F /#0E /#0F /#0F /#0E
Dynamic Queries /#0F /#0E /#0F /#0E
Emacs /#0F /#0F /#0F /#0F /#0F /#0F /#0F /#0E
Enabled Mail /#0F /#0F /#0F /#0E /#0E /#0F /#0E
F GP /#0F /#0F /#0E /#0F /#0F
Glimpse /#0F /#0F /#0F /#0E /#0F /#0F /#0E /#0E
Guy F rida y /#0F /#0F /#0F /#0F /#0F /#0E
InfoLens /#0F /#0E /#0E /#0F /#0F /#0F /#0E /#0F /#0F
Memoirs /#0F /#0F /#0F /#0F /#0E /#0F /#0E
MIT SFS /#0F /#0F /#0F /#0F /#0F /#0E
LifeLines /#0E /#0F /#0F /#0E
Lotus Notes /#0F /#0F /#0F /#0F /#0F /#0F /#0F /#0F /#0F /#0E
Newton /#0F /#0F /#0F /#0F /#0E /#0F /#0F /#0F
Meeting Mak er /#0E /#0F /#0F /#0E
T ap estry /#0F /#0F /#0F /#0F /#0F /#0F /#0F /#0E
T oDo List /#0F /#0F /#0E /#0F /#0E /#0F /#0E
W AIS /#0F /#0F /#0F /#0E /#0F /#0E /#0E
W ork/#0Do w /#0F /#0F /#0F /#0F /#0F
Lifestreams /#0F /#0F /#0F /#0F /#0F /#0F /#0F /#0F /#0F /#0F /#0F /#0F /#0F /#0F
T able /8/./1/: Comparison features o v er landscap e of systems/. /#0F indicates the presence of the capabilit y /, /#0E indicates
that the capabilit y is supp orted in a limited w a y /, or that the capabilit y can/, in principle/, b e supp orted/. An empt y /#0Celd
in the table signi/#0Ces the lac k of that feature in the system/, or a feature that is not applicable to the system/.
Chapter /9ConclusionsW eh a v e sho wn Lifestreams to b e an in triguing and no v el system for managing elec/-tronic information and ev en ts/. By pro viding a common time/-based storage structureorganized on demand/, Lifestreams uni/#0Ces existing applications and can b e extrap olatedto new v aluable b eha viors/. Moreo v er/, w eh a v e dev elop ed a researc h protot yp e that hassurpassed b eing a simple /#5Cpro of of concept/" and is no w though t of as an indisp ensableto ol b y the handful of lo cal researc h group mem b ers that use it/. In summary /,w eh a v esho wn that Lifestreams holds the follo wing adv an tages o v er curren t soft w are systems/:/#0F Lifestreams transparen tly stores information/, allo wing users to concen trate onthe task at hand rather than the name/, folder/, disk/, mac hine/, or net w ork of aparticular data item/./#0F Lifestreams stores information at the time it is created and organizes informationin the c ontext it is needed/. This reduces the o v erhead of creating information/,impro v es recall/, and facilitates retriev al/./#0F Lifestreams is the /#0Crst general system to treat reminders as /#0Crst/-class en titiesand to pro vide a metaphor that naturally accommo dates reminding/./#0F Lifestreams solv es the conceptual /#5Cdata arc hiving problem/" inheren t in desktopsystems b ym o ving data out of view as it is no longer needed/, y et main taining itfor future retriev al/./#0F Lifestreams pro vides new opp ortunit y for users to exploit relationships and globalpatterns that exist in do cumen t collections b y pro viding arc hitectural framew orkfor creating executiv e summaries and o v erviews/.W e b eliev e Lifestreams has a promising future/, ho w ev er the utilit y of Lifestreamscan only b e determined through long term study /, use/, and user acceptance/. On thispath/, there are man ya v en ues for future w ork/. W e plan to con tin ue Lifestreams w ork/1/5/3
Chapter /9/. Conclusions /1/5/4at Y ale and there has b een signi/#0Ccan ti n terest from b oth the researc h and commercialcomm unities/. Already Lifestreams has serv ed as a foundation for three undergraduatepro jects at Y ale/. While this dissertation motiv ated the arc hitecture and demonstratedits usefulness/, future w ork remains in man y areas including/, but not limited to/, im/-pro v ed information retriev al and exp ert database tec hniques/, scalabilit y /,a v ailabilit y /,securit y /, user in terface design/, as w ell as further study of utilit y and usabilit y /.
Bibliograph y/#5BAll/8/3/#5D James F/. Allen/. Main taining kno wledge ab out temp oral in terv als/. Com/-munic ations of the A CM /, /2/6/#28/1/1/#29/:/8/3/2/#7B/8 /4/3/, /1/9/8/3/./#5BAza/9/5/#5D Beth Azar/. Meet /`b ob/'/: psyc hology/'s answ er to easy computing/. AP AMonitor /, April /1/9/9/5/./#5BBar/9/5/#5D Doug Bartholomew/. A b etter w a yt o w ork/. Information We ek /, pages /3/2/#7B/4/0/,Septem b er /1/9/9/5/./#5BBF/9/2/#5D N/. Borenstein and N/. F reed/. MIME /#28Multipurp ose In ternet Mail Exten/-sions/#29 part one/: Mec hanisms for sp ecifying and describing the format ofin ternet message b o dies/, June /1/9/9/2/./#5BBFJ
/+/9/5/#5D Martin G/. Bro wn/, Jonathan T/. F o ote/, Gareth J/. F/. Jones/, Karen Sparc kJones/, and Stev eJ /. Y oung/. Automatic con ten t/-based retriev al of broadcastnews/. In A CM Multime dia /9/5 /- Ele ctr onic Pr o c e e dings/, San F r ancisc o/, CA/. /,/1/9/9/5/./#5BBH/9/4/#5D B/. Bederson and J/. Hollan/. P ad/+/+/: A zo oming graphical in terface forexploring alternate in terface ph ysics/. In A CM UIST /, /1/9/9/4/./#5BBN/9/5/#5D Deb orah Barreau and Bonnie A/. Nardi/. Finding and reminding/: File orga/-nization from the desktop/. In SIGCHI Bul letin /. SIGCHI/, July /1/9/9/5/./#5BBor/#5D N/.S/. Borenstein/. Multime dia Applic ations development with the A ndr ewT o ol Kit /./#5BBor/9/3a/#5D N/. Borenstein/. A user agen t con/#0Cguration mec hanism for m ultimedia mailformat information/, Marc h /1/9/9/3/./#5BBor/9/3b/#5D Nathaniel S/. Borenstein/. Email with a mind of its o wn/: The safe/-tcl lan/-guage for enabled mail/, No v /1/9/9/3/./#5BBR/9/3/#5D Nathaniel Borenstein and Marshall T/. Rose/. MIME extensions for mail/-enabled applications/: application/#2FSafe/-Tcl and m ultipart/#2Fenabled/-mail/,No v /1/9/9/3/./1/5/5
BIBLIOGRAPHY /1/5/6/#5BCar/8/2/#5D J/. M/. Carroll/. Learning/, using and designing /#0Clenames and commandparadigms/. Behaviour /& Info T e ch /, /1/#28/4/#29/:/3/2/7/#7B/3/4/6 /, /1/9/8/2/./#5BCDN/8/8/#5D John P /. Chin/, Virginia A Diehl/, and Ken t L/. Norman/. Dev elopmen to fato ol measuring user satisfaction of the h uman/-computer in terface/. T ec hnicalrep ort/, Departmen t of Psyc hology /, Univ ersit y of Maryland/, College P ark/,MD /2/0/7/4/2/, /1/9/8/8/./#5BCFF G/9/6/#5D Nic holas Carriero/, Scott F ertig/, Eric F reeman/, and Da vid Gelern ter/. Life/-streams/: Bigger than Elvis/. T ec hnical Rep ort /1/0/9/8/, Y ale Univ ersit y De/-partmen t of Computer Science/, Marc h /1/9/9/6/./#5BCG/8/9/#5D Nic holas Carriero and Da vid Gelern ter/. Linda in con text/. Communic ationsof the A CM /, April /1/9/8/9/./#5BCol/8/2/#5D I/. Cole/. Human asp ects of o/#0Ece /#0Cling/: Implications for the electronic of/-/#0Cce/. In Pr o c e e dings of the HUMAN F A CTORS SOCIETY/|/2/6th ANNUALMEETING /, /1/9/8/2/./#5BCom/8/7/#5D Apple Computer/. The kno wledge na vigator/, /1/9/8/7/./#5BCom/9/3/#5D Apple Computer/. The Newton Pr o gr ammer/'s Guide /. Apple Computer/,/1/9/9/3/./#5BCo o/9/5/#5D T erry Co ok/. Do y ou kno w where y our data are/? In T e chnolo gy R eview /.MIT/, Jan uary /1/9/9/5/./#5BCor/9/6/#5D Diba Corp oration/. Vision white pap er/, /1/9/9/6/./#5BDat/8/6/#5D C/. J/. Date/. Datab ase Systems /. Addison/-W esley /, /1/9/8/6/./#5BDL/8/3/#5D S/.T/. Dumais and T/.K/. Landauer/. Using examples to describ e categorizes/.CHI/'/8/3 /, /1/9/8/3/./#5BDum/9/6/#5D Susan T/. Dumais/. P ersonal comm unication/, Jan /1/9/9/6/./#5BEri/9/1/#5D Thomas Eric kson/. Designing a desktop information system/: Observ ationsand issues/. A CM CHI/'/9/1 /, /1/9/9/1/./#5BEri/9/6/#5D Thomas Eric kson/. The design and long/-term use of a p ersonal electronicnoteb o ok/: A re/#0Dectiv e analysis/. CHI/'/9/6 /, /1/9/9/6/./#5BFE/9/2/#5D William B/. F rak es and Ricardo Baeza/-Y ates /#28Editors/#29/. Information R e/-trieval/: Data Structur es and A lgorithms /. Pren tice/-Hall/, /1/9/9/2/./#5BFlu/#5D Christian Fluhr/. Multilingual information retriev al/. In Survey of the Stateof the A rt in Human L anguage T e chnolo gy/, V arile and Zamp ol li /#28Eds/./#29/,National Scienc eF oundation and the Eur op e an Commission /.
BIBLIOGRAPHY /1/5/7/#5BF re/9/5/#5D Eric F reeman/. Lifestreams for the Newton/. PD A Develop er /, /3/#28/4/#29/:/4/2/#7B/4/5/,July/#2FAugust /1/9/9/5/./#5BGat/9/6/#5D Bill Gates/. Keynote address/, electronic mail asso ciation/, Jan /1/9/9/6/./#5BGel/9/1/#5D Da vid Gelern ter/. Mirr or Worlds /. Oxford Univ ersit y Press/, /1/9/9/1/./#5BGel/9/4/#5D Da vid Gelern ter/. The cyb er/-road not tak en/. The Washington Post /, April/1/9/9/4/./#5BGJSO/9/1/#5D Da vid K/. Gi/#0Bord/, Pierre Jouv elot/, Mark Sheldon/, and James O/'T o ole/. Se/-man tic /#0Cle systems/. In /1/3th A CM Symp osium on Op er ating Systems Prin/-ciples /, Octob er /1/9/9/1/./#5BGKM/9/5/#5D Burra Gopal/, P aul Klark/, and Udi Man b er/. Com bining bro wsing andsearc hing/. T ec hnical rep ort/, Departmen t of Computer Science/, Univ ersit yof Arizona/, Octob er /1/9/9/5/./#5BGNOT/9/2/#5D Da vid Goldb erg/, Da vid Nicols/, Brian M/. Oki/, and Douglas T erry /. Usingcollab orativ e /#0Cltering to w ea v e an information tap estry /. Communic ationsof the A CM /, /3/5/#28/1/2/#29/:/6/1/#7B/7/0/, /1/9/9/2/./#5BHal/#5D P er/-Kristian Halv orsen/. Do cumen t retriev al/: Ov erview/. In Survey ofthe State of the A rt in Human L anguage T e chnolo gy/, V arile and Zamp ol li/#28Eds/./#29/, National Scienc eF oundation and the Eur op e an Commission /./#5BHil/9/5/#5D Ed Hilp ert/. Human/-computer in teraction o v erview/. IBM Personal Systems /,Septem b er /1/9/9/5/./#5BHN/9/3/#5D B/. D/. Harp er and L/. K/. Norman/. Impro ving user satisfaction/: The ques/-tionnaire for user in teraction satisfaction v ersion /5/./5/. In Pr o c e e dings of the/1st A nnual Mid/-A tlantic Human F actors Confer enc e /, pages /2/2/4/#7B/2/2/8/, /1/9/9/3/./#5BHS/9/4/#5D M/. Holsheimer and A/.P /.J/.M/. Sib es/. Data mining/: The searc h for kno wledgein databases/. T ec hnical Rep ort /9/4/0/6/, Cenrum v o or Wiskunde en Informat/-ica/, Amsterdam/, The Netherlands/, /1/9/9/4/./#5BHup/9/6/#5D Susanne Christine Hupfer/. T uringwar e/: A n Inte gr ate d Appr o ach to Col lab/-or ative Computing /. PhD thesis/, Y ale Univ ersit y /, New Ha v en/, Connecticut/,/1/9/9/6/./#5BHut/9/5/#5D John Hutc hins/. In tro duction to text summarization/. In Dagstuhl SeminarR ep ort/, IBFI/, Dagstuhl/, /1/9/9/5 /, /1/9/9/5/./#5BJD/8/3/#5D William P /. Jones and S/.T/. Dumais/. The spatial metaphor/: Exp erimen taltests of reference b y lo cation v ersus name/. A CM T r ansactions on O/#0Ec eInformation Systems /, /4/#28/1/#29/:/4/3/#7B/6/3/, /1/9/8/3/.
BIBLIOGRAPHY /1/5/8/#5BJon/#5D Karen Sparc k Jones/. Do cumen t retriev al/: Summarization/. In Survey ofthe State of the A rt in Human L anguage T e chnolo gy/, V arile and Zamp ol li/#28Eds/./#29/, National Scienc eF oundation and the Eur op e an Commission /./#5BKah/9/1/#5D Brewster Kahle/. An information system for corp orate users/: Wide area in/-formation serv ers/. T ec hnical rep ort/, Thinking Mac hines Cop oration/, April/1/9/9/1/./#5BKap/9/1/#5D Mitc hell Kap or/. A soft w are design manifesto/. Dr/. Dobbs Journal /, /1/9/9/1/./#5BKa y/9/0/#5D Alan Ka y /. User in terface/: A p ersonal view/. In The A rt of Human/-ComputerInterfac e Design /#28Ed/./#29 Br enda L aur el /, /1/9/9/0/./#5BKM/9/5/#5D P aul Klark and Udi Man b er/. Dev eloping a p ersonal in ternet assistan t/. InED/-MEDIA /'/9/5 World c onfer enc eo n e duc ational multime dia and hyp erme/-dia /, June /1/9/9/5/./#5BKM/9/6/#5D Judith L/. Kla v ans and Kathleen McKeo wn/. Domain indep enden t summa/-rization/: Pro ject description/, /1/9/9/6/./#5BLan/8/8a/#5D M/. Lansdale/. Memoirs/: A p ersonal m ultimedia information system/. Per/-sonal Information Systems/: Business Applic ations/, P/.J/. Thomas /#28Ed/./#29 /,/1/9/8/8/./#5BLan/8/8b/#5D M/. Lansdale/. The psyc hology of p ersonal information managemen t/. Applie dEr gonomics /, Marc h /1/9/8/8/./#5BLOS/9/3/#5D H/. Liao/, M/. Osada/, and Ben Shneiderman/. Bro wsing Unix directories withdynamic queries/: An analytical and exp erimen tal ev aluation/. Pr o c/. NinthJap anese Symp/. Human Interfac e /, pages /9/5/#7B/9/8/, /1/9/9/3/./#5BLS/9/6/#5D Andrew Larratt/-Smith/. A calendar in terface for lifestreams/. T ec hnicalrep ort/, Senior Pro ject/, Departmen t of Computer Science/, Y ale Univ ersit y /,Ma y /1/9/9/6/./#5BMal/8/3/#5D Thomas W/. Malone/. Ho w do p eople organize their desks/? Implicationsfor the design of o/#0Ece information systems/. A CM T r ansactions on O/#0Ec eSystems /, /1/#28/1/#29/:/9/9/#7B/1/1/2 /, Jan uary /1/9/8/3/./#5BMee/9/4/#5D On T ec hnology /, Corp/./, Cam bridge/, MA/. Me eting Maker XP V ersion /2/./0User/'s Guide /, /1/9/9/0/-/1/9/9/4/./#5BMGL
/+/8/7/#5D Thomas W/. Malone/, Kenneth R/. Gran t/, Kum/-Y ew Lai/, Ramana Rao/,and Da vid Rosen blitt/. Semistructured messages are surprisingly useful forcomputer/-supp orted co ordination/. A CM T r ansactions on O/#0Ec e Informa/-tion Systems /, /5/#28/2/#29/:/1/1/5/#7B/1/3 /1/, April /1/9/8/7/.
BIBLIOGRAPHY /1/5/9/#5BMH/9/2/#5D J/.T/. Ma y es and N/.V/. Hammond/. Wh y is it so hard to learn to use comput/-ers/? DTI /#5CUsability Now/" R ep ort /, /1/9/9/2/./#5BMSW/9/2/#5D Ric hard Mander/, Gitta Salomon/, and Yin Yin W ong/. The /`Pile/' metaphorfor supp orting casual organization of information/. A CM CHI/'/9/2 Pr o c e e d/-ings /, pages /6/2/7/#7B/6/3/4/, Ma y /1/9/9/2/./#5BMW/9/3/#5D Udi Man b er and Sun W u/. Glimpse/: A to ol to searc h through en tire /#0Clesystems/. T ec hnical Rep ort /0/9/3/-/3/4/, Departmen t of Computer Science/, TheUniv ersit y of Arizona/, Octob er /1/9/9/3/./#5BNel/9/0/#5D Theo dor Nelson/. The righ tw a y to think ab out soft w are design/. In The A rtof Human/-Computer Interfac e Design /#28Ed/./#29 Br enda L aur el /, /1/9/9/0/./#5BNie/9/3/#5D J/. Nielsen/. Usability Engine ering /. Academic Press/, /1/9/9/3/./#5BNor/9/0/#5D Ken t L/. Norman/. Questionnaire for user in teraction satisfaction/. MarylandImagination /, Octob er /1/9/9/0/./#5BOus/9/4/#5D John K/. Ousterhout/. Tcl and the Tk T o olkit /. Addison/-W esley /, /1/9/9/4/./#5BOv e/9/5/#5D Ov erview/. Summarizing text for in telligen t comm unication/. In DagstuhlSeminar R ep ort/, IBFI/, Dagstuhl/, /1/9/9/5 /, /1/9/9/5/./#5BP em/9/6/#5D Stev en P em b erton/. Email w orkshop/. In CHI/'/9/6 /,V ancouv er/, BC/, /1/9/9/6/./#5BP er/9/6/#5D Gary P erlman/. Pr actic al Usability Evaluation/, T utorial Notes /. Conferenceon Human F actors in Computing Systems/, V ancouv er/, BC/, /1/9/9/6/./#5BPMR
/+/9/5/#5D Catherine Plaisan t/, Brett Milash/, Anne Rose/, Seth Wido/#0B/, and BenShneiderman/. Lifelines/: Visualizing p ersonal histories/. T ec hnical Rep ort/7/8/7/, Human/-Computer In teraction Lab oratory /, Cen ter for Automation Re/-searc h/, Departmen t of Computer Science/, Univ ersit y of Maryland/, Septem/-b er /1/9/9/5/./#5BP or/8/0/#5D M/.F/. P orter/. An algorithm for su/#0Ex stripping/. Pr o gr am /, /1/4/#28/3/4/#29/:/1/3/0/#7B/1/3/7 /,Jul /1/9/8/0/./#5BShn/9/2/#5D Ben Shneiderman/. Designing the User Interfac e/: Str ate gies for E/#0Be ctiveHuman/-Computer Inter action /. Addison/-W esley Publishing Compan y /, /1/9/9/2/./#5BShn/9/4/#5D Ben Shneiderman/. Dynamic queries for visual information seeking/. IEEESoftwar e /, pages /7/0/#7B/7/7/, No v em b er /1/9/9/4/./#5BSLR/8/4/#5D Pra v een Seshadr/, Miron Livn y /, and Ragh u Ramakrishnan/. Sequence querypro cessing/. In A CM SIGMOD Confer enc e on Data Management /, /1/9/8/4/.
BIBLIOGRAPHY /1/6/0/#5BSno/9/0/#5D Ric hard T/. Sno dgrass/. T emp oral databases /- status and researc h directions/.SIGMOD R e c or d /, /1/9/#28/4/#29/:/8/3/#7B/8/9/, /1/9/9/0/./#5BSSU/9/5/#5D Avi Silb ersc hatz/, Mik e Stonebrak er/, and Je/#0B Ullman/. Database researc h/:Ac hiev emen ts and opp ortunities in to the /2/1st cen tury /. T ec hnical rep ort/,Rep ort of an NSF W orkshop on the F uture of Database Systems Researc h/,Ma y /1/9/9/5/./#5BSte/9/1/#5D Ric hard Stev ens/. Distribute dP r o gr amming /. Addison W esley /, /1/9/9/1/./#5BT uf/9/0/#5D Edw ard T ufte/. Envisioning Information /. Graphics Press/, /1/9/9/0/./#5BW ar/9/5/#5D Blak eW ard/. T oDo List/: A T o Do List Manager /. LandW are/, Soft w are forT erra Firma/./, Budd Lak e/, NJ/, /1/9/9/5/./#5BW a y/9/5/#5D P eter W a yner/. A gents Unle ashe d/: A public domain lo ok at agent te chnolo gy /.AP Professional/, /1/9/9/5/./#5BW ei/9/1/#5D Mark W eiser/. The computer for the t w en t y/-/#0Crst cen tury /. Scienti/#0Cc A mer/-ic an /, Septem b er /1/9/9/1/./#5BWM/9/4/#5D Sun W u and Udi Man b er/. A fast algorithm for m ulti/-pattern searc hing/.T ec hnical rep ort/, Departmen t of Computer Science/, The Univ ersit y of Ari/-zona/, Ma y /1/9/9/4/./#5BWS/9/6/#5D Stev e Whittak er and Candace Sidner/. Email o v erload/: exploring p ersonalinformation managemen t of email/. CHI/'/9/6 /, /1/9/9/6/.
App endix ALifestreams Primitiv es/.
func extr act /#28 in t docid /, c har attr /#29b egindo cumen t DS /;rd /#28/"document/"/, docid/, /? DS/#29 /;return ds extr act /#28DS/, attr/#29 /;endpro c r epl ace /#28 in t docid /, c har attr /, p oly val /#29b egindo cumen t DS /;in /#28/"document/"/, docid/, /? DS/#29 /;ds r epl ace /#28DS/, attr/, val/#29 /;out /#28/"document/"/, docid/, DS/#29 /;endFigure A/./1/: The complete stream primitiv es/./1/6/1
App endix A/. Lifestreams Primitiv es /1/6/2/.
pro c r ead /#28 in t sid /, in t docindex /, do cumen t DS /#29b eginin t docid /;rd /#28 /"streamdoc/" /, sid /, docindex /,/? docid /#29/;rd /#28 /"document/" /, docid /,/? DS /#29/;return DS /;endpro c w r ite /#28 in t sid /, in t docindex /, do cumen t DS /#29b egindo cumen t oldDS /;in t created /;rd /#28 /"streamdoc/" /, sid /, docindex /,/? docid /#29/;in /#28 /"document/" /, docid /,/? oldDS /#29/;created /:/= ds extr act /#28 oldDS /, /"created/" /#29/;ds r epl ace /#28 DS /, /"created/" /, created /#29/;out /#28 /"document/" /, docid /,/? DS /#29/;endpro c append /#28 in t sid /, do cumen t DS /#29b eginin t docid /, docindex /, filterindex /, valid /;in t agentnum /, i /;c har agentcode /;valid /:/= /#28 extr act /#28 sid /, docid /, /"created/" /#29 /#3E /= now /#29if /#28 valid /#29 thenb eginin /#28 /"documenthead/" /,/? docid /#29/;out /#28 /"documenthead/" /, docid /+ /1 /#29/;in /#28 /"stream/" /, sid /,/? docindex /,/? subhead /,/? agentnum /#29/;out /#28 /"stream/" /, sid /, docindex /+ /1 /, subhead /, agentnum /#29/;out /#28 /"document/" /, docid /, DS /#29/;out /#28 /"streamdoc/" /, sid /, docindex /, docid /#29/;for /#28i /:/= /0/; i /#3C agentnum/; i/+/+/#29b eginrd /#28 /"agent/" /, i /,/? agentcode /#29/;ev al /#28 agentcode /#28 sid /, docindex /#29/#29/;endreturn docindex /;endendFigure A/./2/: The complete stream primitiv es /#28con t/#29/.
App endix A/. Lifestreams Primitiv es /1/6/3/.
pro c f il ter /#28 in t sid /, in t pid /, c har query /#29b eginin t docnum/, subnum /;in /#28 /"stream/" /, sid /,/? docnum /,/? subnum /#29/;out /#28 /"stream/" /, sid /, docnum /, subnum /+ /1 /#29/;out /#28 /"substream/" /, sid /, subnum /, pid /, query /#29/;return subnum /;endpro c r etr iev e /#28 in t sid /, in t subid /#29b eginc har query /;in t docnum/, subnum/, doc/, pid /;list docs /, substream /:/= /#28/#29 /;rd /#28 /"substream/" /, sid /, subid /,/? pid /,/? query /#29/;rd /#28 /"stream/" /, sid /,/? docnum /,/? subnum /#29/;if /#28 pid /=/= /0 /#29docs /:/= iota /#28 docnum /#29/;elsedocs /:/= r etr iev e /#28 sid /, pid /#29/;foreac h doc in docsif /#28 match /#28 sid /, doc /, query /#29/#29substream /:/= cons /#28 substream/, doc /#29/;return sort /#28 sid /, substream /, /"created/" /#29/;endpro c add ag ent /#28 in t sid /, c har agent /#29b eginin t dochead /, subhead /, agentid /;in /#28 /"stream/" /, sid /,/? dochead /,/? subhead /,/? agentid /#29/;out /#28 /"stream/" /, sid /, dochead /, subhead /, agentid /+ /1 /#29/;out /#28 /"agent/" /, sid /, agentid /, agent /#29/;return agentid /;lifestreams /:/= f il ter /#28 sid /, /0 /, /"/*/" /#29/;Figure A/./3/: The complete stream primitiv es /#28con t/#29/.
App endix BUser QuestionnaireLifestreams User QuestionnaireName of hardware/: Unix versionName of software/: LifestreamsIdentification number/: /_/_/_/_/_/_/_/_/_/_/_/_/_/_/_ /_/_/_/_/_ /_/_/_Age/: /_/_/_/_/_/_Sex/: /_/_ male /_/_ femalePART /1/: Type of System to be Rated/1/./1 How long have you worked on this system/?/_/_ less than /1 hour /_/_ /6 months to less than /1 year/_/_ /1 hour to less than /1 day /_/_ /1 year to less than /2 years/_/_ /1 day to less than /1 week /_/_ /2 years to less than /3 years/_/_ /1 week to less than /1 month /_/_ /3 years or more/_/_ /1 month to less than /6 months/1/./2 On the average/, how much time do you spend per week on this system/?/_/_ less than one hour /_/_ /4 to less than /1/0 hours/_/_ one to less than /4 hours /_/_ over /1/0 hoursPART /2/: Past Experience/2/./1 How many different types of computer systems /#28e/. g/./, main frames andpersonal computers/#29 have you worked with/?/1/6/4
App endix B/. User Questionnaire /1/6/5/_/_ none /_/_ /3/-/4/_/_ /1 /_/_ /5/-/6/_/_ /2 /_/_ more than /6PART /3/: Overall User ReactionsPlease circle the numbers which most appropriately reflect your impressionsabout using this computer system/. Not Applicable /= NA/./3/./1 Overall reactions to the system/:terrible wonderful/1 /2 /3 /4 /5 /6 /7 /8 /9 NA/3/./2 frustrating satisfying/1 /2 /3 /4 /5 /6 /7 /8 /9 NA/3/./3dull stimulating/1 /2 /3 /4 /5 /6 /7 /8 /9 NA/3/./4difficult easy/1 /2 /3 /4 /5 /6 /7 /8 /9 NA/3/./5inadequate power adequate power/1 /2 /3 /4 /5 /6 /7 /8 /9 NA/3/./6 rigid flexible/1 /2 /3 /4 /5 /6 /7 /8 /9 NAPART /4/: Screen/4/./3 Were the screen layouts helpful/?never always/1 /2 /3 /4 /5 /6 /7 /8 /9 NA/4/./3/./1 Amount of information that can be displayed on screeninadequate adequate/1 /2 /3 /4 /5 /6 /7 /8 /9 NA/4/./3/./2 Arrangement of information on screenillogical logical
App endix B/. User Questionnaire /1/6/6/1 /2 /3 /4 /5 /6 /7 /8 /9 NAPlease leave any comments that you have about the screens hereearning/6/./1 Learning to operate the systemdifficult easy/1 /2 /3 /4 /5 /6 /7 /8 /9 NA/6/./1/./1 Getting starteddifficult easy/1 /2 /3 /4 /5 /6 /7 /8 /9 NA/6/./1/./2 Learning advanced featuresdifficult easy/1 /2 /3 /4 /5 /6 /7 /8 /9 NA/6/./1/./3 Time to learn to use the systemslow fast/1 /2 /3 /4 /5 /6 /7 /8 /9 NAPlease leave any comments that you have about learning the system hereystem Capabilities/7/./1 System speedtoo slow fast enough
App endix B/. User Questionnaire /1/6/7/1 /2 /3 /4 /5 /6 /7 /8 /9 NA/7/./1/./1 Response time for most operationstoo slow fast enough/1 /2 /3 /4 /5 /6 /7 /8 /9 NA/7/./1/./2 Rate information is displayedtoo slow fast enough/1 /2 /3 /4 /5 /6 /7 /8 /9 NA/7/./2 How reliable is the system/?unreliable reliable/1 /2 /3 /4 /5 /6 /7 /8 /9 NA/7/./2/./1 Operations areundependable dependable/1 /2 /3 /4 /5 /6 /7 /8 /9 NA/7/./2/./2 System failures occurfrequently seldom/1 /2 /3 /4 /5 /6 /7 /8 /9 NA/7/./5 Are the needs of both experienced and inexperienced users takeninto consideration/?never always/1 /2 /3 /4 /5 /6 /7 /8 /9 NA/7/./5/./1 Novices can accomplish tasks knowing only a few commandswith difficulty easily/1 /2 /3 /4 /5 /6 /7 /8 /9 NA/7/./5/./2 Experts can use features/#2Fshortcu tswith difficulty easily/1 /2 /3 /4 /5 /6 /7 /8 /9 NAPlease leave any comments that you have about the system capabilities here
App endix B/. User Questionnaire /1/6/8Part /8/: General QuestionsWhat was your initial reaction to Lifestreams upon hearing the concept/,seeing the system or first using the systemhat features of Lifestreams do you find most useful when compared withyour previous computing environment/#28s/#29/?
hat features of your previous computing environment do you miss whenusing Lifestreams/?
o you find any aspect of Lifestreams difficult or confusing
App endix B/. User Questionnaire /1/6/9Does Lifestreams make any aspect of managing information less /#28or more/#29confusing /#28say/, as compared to the way you normally do things/#29/?
oes Lifestreams in any way change the way you thought about using yourcomputer or managing your information/? If so/, howid you quickly understand the /"receding stream/" user interface/? Does itmake sense to you/?
a/#5D Was it an effective interface to your stream of documents/? That is/,does it allow you to carry out the operations you needed tob/#5D Do the animations help you to understand the effect of the variousoperations/? For instance creating a new document/, the arrival ofa new document/, sending out a document/, creating a substream/?/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_ /_/_/_/_/_ /_/_/_
App endix B/. User Questionnaireo you like the fact that all your documents /#28email/, TeX documents/,pictures/, bookmarks/, etc/./#29 were stored in the same stream/? Or do youfind it easier to maintain them separately in your file system/, emailapplication/, etco you find chronology /#28the time/-based stream/#29 a useful method of storing andmanaging informationa/#5D Does chronology allow you to concentrate on current informationwhile older information was moved to the background/? Or would youprefer some other default organizationb/#5D Does chronology help you locate older information /#28say/, because youremember the approximate time when that document was created/#29/?/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_ /_/_/_/_/_ /_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_ /_/_/_/_/_ /_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_ /_/_/_/_/_ /_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_ /_/_/_/_/_ /_/_/_
App endix B/. User Questionnairec/#5D Do you want a delete button in your lifestream/? If so/,whyo you like that fact that you don/'t have to file and name new documents/?Or do you prefer to name them and store them in a directoryo you find substreams useful for locating informationa/#5D What about for maintaining collections of information over timeb/#5D Were you usually able to find what you were looking for/?If not/, was the system frustrating in this respect/?/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_ /_/_/_/_/_ /_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_ /_/_/_/_/_ /_/_/_
App endix B/. User Questionnairec/#5D Do you typically keep substreams around for future use/, or do youremove them soon after they are created/? Or do you do a bit of botho you make use of the reminding functionality of the future part of thestreama/#5D Does this /"metaphor/" for reminding make sense to youo you use any /"squishes/"/? Which ones/? How do they help you
App endix B/. User Questionnaire /1/7/3/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_/_ /_/_/_/_ /_/_/_/_/_ /_/_/_What features or changes would you like to see in Lifestreamsf Lifestreams were a robust and supported piece of software would youcontinue using it
