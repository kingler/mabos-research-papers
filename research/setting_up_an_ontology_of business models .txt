Setting up an ontology of business models 
Alexander Osterwalder1, Christine Parent1, Yves Pigneur1 
1 University of Lausanne, Ecole des HEC 
1015 Lausanne, Switzerland 
{alexander.osterwalder, christine.parent, 
yves.pigneur}@hec.unil.ch 
http://www.hec.unil.ch/inforge 
1   Introduction 
The overall goal of the ongoing research descri bed in this paper is to combine busi-
ness management research in the domain of business models with more technical and conceptual research in the domain of informatics, particularly ontologies. In other words we aim at applying the rigor, precision, more complete descriptions (e.g. con-straints and rules) and reasoning of ontologies to the concept of business models. The formalization of a business model ontology  will provide the conceptual foundation 
for new methods and computer-based tools for such diverse fields as management-
level business model design, busine ss strategy & Information Technol-
ogy/Information Systems alignment, more technical process & requirements engi-neering, and automatic comparison of business models . This more formal approach will remove eventually existing ambiguities and will allow the use of the reasoning capabilities of an ontology based upon a logic language to check the consistency and 
satisfiability of the business model, and complement the business model with integ-rity constraints and deduction rules. 
A business model reference model (i.e. business model ontology) as proposed in 
[7] and outlined in the next section is a first step on the way to clarifying what terms and concepts belong into a business model and how they relate to each other. How-
ever, the proposed model is not yet sufficiently rigid and formal for building the foundation for more sophisticated require ment elicitation methods and computer-
based tools. Section 3 shortly sketches the research in progress in order to formally model the ontology we have designed. Sec tion 4 shortly compares two extreme kinds 
of models, description logics and conceptual  models, that could be selected, and gives 
the rationale for adopting an OWL paradigm for defining our ontology. The last sec-tion presents our claim that modeling the business model of companies, and not only the enterprise model, should cont ribute to improving interoperability. 
2   A Reference Business Model (= one relevant recent result) 
Our motivation to design a business model ontology stems from the fact that the 
power of computer-based design tools has had little influence on the science of man-agement to date although defining the business logic or the structure of a company 
has a very strong design com ponent. This stands in str ong opposition with other fields 
such as such as engineering where design is a natural component and Computer Aided Design (CAD) has beco me irreplaceable. Opponents to  applying computers to 
management science will stress the complexity of a business enterprise and the im-portance of the role of human judgment. We don't deny this but simply think that computer assistance can bring a fresh br eeze to business model design and manage-
ment. Particularly, since Information and Communication Technology (ICT) has increased the number of possible business configurations a company can adopt. In other words, firms can increasingly work in partnerships, offer joint value proposi-tions, build-up multi-channel and multi-owned distribution networks and profit from diversified and shared revenue streams. This, however, means that a company's busi-
ness has more stakeholders, becomes more complex and is harder to understand and 
communicate. 
 
 
Fig. 1. The business model ontology [7] 
The existing business model ontology [7] which we want to render more precise 
consists of nine elements. Namely, valu e proposition, target cu stomer, distribution 
channel, relationship, value configuration, capability, partnership, cost structure, and revenue model (cf. figure 1). A Value Propos ition is an overall view of a company's 
bundle of products and services that are of value to the customer. The Target Cus-tomer is a segment of customers a compan y wants to offer value to. A Distribution 
Channel is a means of getting in touch with the customer. The Relationship describes the kind of link a company establishes be tween itself and the customer. The Value 
Configuration describes the a rrangement of activities and resources that are necessary 
to create value for the customer. A Capability is the ability to execute a repeatable pattern of actions that is necessary in or der to create value for the customer. A Part-
nership is a voluntarily initiated cooperativ e agreement between the enterprise and 
another company in order to create value fo r the customer. The Cost Structure is the 
representation in money of all the means employed in the business model. The Reve-nue Model describes the way a company ma kes money through a variety of revenue 
flows. The mentioned elements are further detailed and decomposed in the existing business model ontology and thei r relationships described.  Channel Value  
ConfigurationValue  
Proposition Capability Customer Relationship Partnership 
Revenue Cost Profit INFRASTRUCTURE 
MANAGEMENT CUSTOMER 
RELATIONSHIP PRODUCT 
INNOVATION
FINANCIAL 
ASPECTS 
3   Enhancing the Business Model Ontology (= work in progress) 
The proposition described above is indeed a model: It is independent of any enter-
prise and can describe the business model of any enterprise. Furthermore, it repre-sents a synthesis of existing business mode l research. Therefore it complies with the 
first requirement of an ontology, being a generic description shared by a community of users. Yet, unfortunately no complete and definite consensus exists between the different communities of users. Some business model concepts include more or less so-called elements. The model outlined above represents a synthesis in the sense that 
it comprises all elements that have been mentioned by at least two different au-
thors/researches in the field of business models. 
The main goal of the business model framework is to provide users, such as man-
agers, consultants process-, or IS/IT-designers with easy to understand, analyze, and compare descriptions of the business model of their enterprises. Although this goal has been reached and the proposed business model framework is far more precise in 
defining the relevant business model concepts  than any other model it remains a first 
version. Even if we suggested an XML-based grammar for our ontology, for some business model applications, such as for computer-based business model design or 
requirements engineering some of the feat ures of the proposed framework still need 
to be fixed more precisely. Indeed a formal  definition of a model reduces the chances 
of misunderstanding and makes automatic tr anslation into other languages possible. 
In particular implementation into a database management system or an ontology server can be automatically set up. 
Our goals for an ontology of business models are not only to get an unambiguous 
model. We would like to complement our static description of business models with: 
• integrity constraints, like "at leas t one value proposition of a company 
must be connected to a revenue st ream that generates income from a 
specified target customer segment".  
• derivation rules that define new concepts through formulae, like "a busi-
ness model that only has free or low co st value propositions is a low-cost 
business model".  
• a combination of both, like "eventually such a low cost business model 
must have an efficient infrastructure management". 
Moreover we plan to offer users the possibility to query, analyze, and compare the 
descriptions of the business models of different enterprises that will be stored in an application.  
Our reference business model has been de scribed using an ad hoc meta model 
which is a kind of object-oriented data model. It supports the usual concepts of object class (called element), attribute, composition link, and inheritance link. It supports two other concepts: 1) a generic relationshi p link, similar to a binary relationship 
(without attribute) of the entity  relationship model [2], and 2) a facility to define sub-
parts of the schema. This last concept is similar to the external-schema notion of the ANSI three levels schema architecture [8] This meta model does not support integrity constraints, rules, or instances. Therefore we need to move on to another meta model.  
4   Which Meta Model for the Ontology of Business Model? (= 
summary of one activity) 
The information systems community progressively introduced ontologies at different 
stages: the Bunge-Wand-Web (BWW) ontology [10] is largely diffused for meta-modeling at the level of system analysis. Many ontologies have been proposed for covering enterprise modeling using different, mo re or less formal, syntaxes  [4] [5]. A 
very small number of ontologies has been proposed for addressing the business side 
[9] [6] [1], most of them use ad hoc formalisms for describing their model. 
Moreover there are quite a wide variety of  meta models coming from the research 
communities in artific ial intelligence, knowledge repres entation, and databases. The 
artificial intelligence community defined logi c languages, especially description lo-
gics with their associated powerful inference techniques. These languages have been extensively used as formal theories on which several ontology languages have been 
designed, like OWL or RACER. The database community has defined conceptual data models with visual diagrams and associated design CASE tools. The structure of these data models range from binary models (e.g. DOGMA) to extended entity-
relationship models (e.g. MADS). In betw een description logics and conceptual 
schemas lie the frame-based models that have been defined by the knowledge repre-
sentation community. These models support some limited reasoning mechanisms. KAON and PROTEGE are examples of this cat egory. Below, we shortly compare the 
two extreme kinds of models, description logics and conceptual models. A more detailed comparison may be found in [3]. 
Data modeling: One could roughly say that conceptual models are better at design-
ing primitive concepts because they can describe more comp lex structures, closer to 
the real world, and because they support a ppealing visual diagra ms and design tools. 
Some of them also support a few derived constructs whose instances can be automati-cally inferred. But, contrarily to models  based on a description logic, they do not 
support constructs that designers can define by a logical formula without knowing where they will fit in the generalization hi erarchy or even knowing the generalization 
hierarchy. On the other hand, most descripti on logics rely on simple binary structures, 
but they offer to the users all the power of  their logic reasoners. They allow users to 
define precisely new constructs by a logical formula as complex as needed. Con-straints may also be defined by logic formulae (of type inclusion or equivalence). The inference mechanisms automati cally check the consistency of the new definitions and 
constraints, deduce where the new constructs  are placed in the generalization hierar-
chy, and infer their instances. 
Instances: Description logic systems naturally adhere to the open world assump-
tion, which assumes that present data is ju st the explicitly known subset of the valid 
data, and more valid data may be inferred by sophisticated reasoning. On the other 
hand, databases follow the closed world assumption, stating that only information that is present in the database (or derivable by explicitly defined derivation rules) is valid. Consequently, they do not n eed sophisticated reasoners to infer additional informa-
tion.  
Constraints: Checking the consistency of the set of constraints and checking the 
consistency between the constraints and the schema are tasks that can be performed 
automatically by the reasoners available in description logics. On the other hand, 
databases have a normative approach and it is not possible to define a schema that does not obey the meta model constraints. Databases having no reasoning facilities, they cannot check the set of integrity constraints, and moreover usually they don’t have an integrated language for defining integrity constraints. For example, "if a distribution channel delivers a value propos ition and reaches a customer group, then 
this value proposition targets this customer group". 
Instances querying: Databases and descri ption logics offer complementary func-
tionality for instance querying. Databases systems usually provide powerful asser-tional query languages complemented with efficient query optimization tools. De-scription logic systems support a set of si mple functions for accessing instances and 
derived facts computed by their inference engines. 
In conclusion, as only logic languages support the definition of integrity con-
straints and derivation rules that are fully integrated in the ontology description, a description logic system seems appropriate for defining a new version of business model. We plan to use PROTEGE as a front end editor for defining the structure of the business model, and then move to a description logic system, like OWL or RACER for the definition of the integrity constraints and derivation rules. 
5   Conclusion (= a position statement) 
Our ultimate goal in setting up a formal ontology of business models with a descrip-tion logic system is to check on a real exam ple what are the exact benefits of an on-
tology with respect to a database for the different kinds of users: the designers of the ontology Tbox (or database sc hema) and the end users that will query, compare, and 
analyze the descriptions of business models entered in the ontology Abox (or data-base). In this comparison, we want to find out if there exist – and which ones – char-acteristics of business models that require an ontology or a database approach. For instance, as descriptions of business models will always be incomplete, will the open world assumption of description logics be useful? 
At the end, our research is based on the assumption that modeling the business 
model (value proposition, customers, partne rs, value systems, revenues, …) of com-
panies, and not only their enterprise models (actors, roles, activities, resources, con-versation, goals …) should contribute to improve their interoperability. This claim 
has still to be demonstrated. It is one of the main research questions we will address in this project. 
References 
1. Alter, S.: Architecture of Sysperento, a theo ry based ontology of the IS field. Working pa-
per, submitted for publication (2004). 
2. Chen, P.P.: The Entity-Relationship Model - Toward a Unified View of Data. ACM Trans-
actions on Database Systems, Vo l. 1, No. 1, March (1976) 9-36 
3. Cullot, N., Parent, C., Spaccapietra, S., Vangenot, C.: Ontologies: A contribution to the DL / 
DB debate. In: VLDB Workshop on Semantic Web and Databases, Be rlin, Germany, Sep-
tember 7-8 (2003) 
4. Fox, M. S., Barbuceanu, M., Gruninger, M. and Lin, J.: An organization ontology for enter-
prise modeling. In Simulating Organizations: Computational Models of Institutions and 
Groups(Ed, Gasser, L.) AAAI/MIT Pre ss, Menlo Park CA, (1998) 131-152. 
5. Geerts, G. L., McCarthy, W. E.: Modeling Business Enterprises as Value-Added Process 
Hierarchies with Resource-Event-Agent Object Templates. In Business Object Design and Implementation (Ed, Patel, D. ) Springer-Verlag (1997) 94-113. 
6. Gordijn, J., Akkermans, J. M.: Value-base d requirements engineeri ng: exploring innovative 
e-commerce ideas. In Requirements e ngineering, Vol. 8 (2003) 114-134. 
7. Osterwalder, A.: The Business Model Ontol ogy - a proposition in a design science approach. 
Ph.D. thesis. In Institut d'Info rmatique et Organisation, Univ ersity of Lausanne, Ecole des 
Hautes Etudes Commerc iales HEC, Lausanne, Switzerland (2004) 
8. Tsichritzis, D., Klug, A.: The ANSI/X3/ SPARC DBMS Framework Report of the Study 
Group on Dabatase Management Systems. Information Syst ems Vol.3, N°3 (1978) 173-191 
9. Uschold, M., King, M., Moralee, S. and Zo rgios, Y.: The Enterprise Ontology. In The 
Knowledge Engineering Review, Vol. 13 (1998) 31-89. 
10. Wand, Y.: Ontology as a Foundation for Meta-Modelling and Method Engineering. In 
Information and Software Technology, Vol. 38 (1996) 281-287 
