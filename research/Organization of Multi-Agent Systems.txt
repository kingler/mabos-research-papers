 
International Journal of Intelligent Information Sy stems  
2015; 4(3): 46-57 
Published online June 26, 2015 (http://www.sciencep ublishinggroup.com/j/ijiis) 
doi: 10.11648/j.ijiis.20150403.11 
ISSN: 2328-7675 (Print); ISSN: 2328-7683 (Online)  
 
Organization of Multi-Agent Systems: An Overview 
Hosny Ahmed Abbas 1, *, Samir Ibrahim Shaheen 2, Mohammed Hussein Amin 1 
1Department of Electrical Engineering, Assiut Univer sity, Assiut, Egypt 
2Department of Computer Engineering, Cairo University,  Giza, Egypt 
Email Address: 
hosnyabbas@aun.edu.eg (H. A. Abbas), sshaheen@eng.c u.edu.eg (S. I. Shaheen), mhamin@aun.edu.eg (M. H. Amin) 
To cite this article: 
Hosny Ahmed Abbas, Samir Ibrahim Shaheen, Mohammed Hussein Amin. Organization of Multi-Agent Systems: An Overview. International 
Journal of Intelligent Information Systems . V ol. 4, No. 3, 2015, pp. 46-57. doi: 10.11648/j.i jiis.20150403.11 
 
Abstract: In complex, open, and heterogeneous environments, a gents must be able to reorganize towards the most a ppropriate 
organizations to adapt unpredictable environment ch anges within Multi-Agent Systems (MAS). Types of re organization can be 
seen from two different levels. The individual agen ts level (micro-level) in which an agent changes it s behaviors and interactions 
with other agents to adapt its local environment. A nd the organizational level (macro-level) in which the whole system changes it 
structure by adding or removing agents. This chapte r is dedicated to overview different aspects of wha t is called MAS 
Organization including its motivations, paradigms, models, and techniques adopted for statically or dy namically organizing 
agents in MAS. 
Keywords:  Multi-Agent Systems, Organization, Organizational M odels, Dynamic Reorganization, Self-Organization 
 
1. Introduction 
Complexity and highly distribution are the key 
characteristics of modern real world systems. The c omplexity 
of the near future and even present applications ca n be 
characterized as a combination of aspects such as g reat 
number of components taking part in the application s, 
knowledge and control have to be distributed, the p resence of 
non-linear processes in the system, the fact that t he system is 
more and more often open, its environment dynamic a nd the 
interactions unpredictable [3]. Further, the increa sing 
complexity, heterogeneity, and openness of modern s oftware 
systems have reached a point that imposes new deman ds on 
their engineering technologies. It is expected that  
conventional engineering approaches will stand powe rless in 
front of future systems increase in scale and compl exity either 
vertically (control and information layers) or hori zontally 
(physical distribution). It doesn’t mean that conve ntional 
engineering techniques will become obsolete and hav e to be 
thrown away. Absolutely, they only need to be integ rated with 
new engineering styles where concepts such as, 
decomposition, autonomy, modularity, and adaptivity  can be 
collectively combined in one system. MAS are consid ered as a 
promising engineering (i.e., architectural) style f or developing 
adaptive software systems able to handle the contin uous 
increase in their complexity as a result of their o pen, 
heterogeneous, and continuous evolution nature. The y model the system as distributed autonomous agents coopera te 
together to achieve system goals. The ability of ag ents to 
dynamically reorganize to adapt working environment  
dynamic changes is a key feature provided by MAS. I t is 
obvious that the natural way to model a complex sys tem is in 
terms of multiple autonomous components that can ac t and 
interact in flexible ways in order to achieve their  objectives, 
and also that agents provide a suitable abstraction  for 
modeling systems consisting of many subsystems, 
components and their relationships [22]. Ferber [23 ] described 
how agents, as a form of distributed artificial int elligence, are 
suitable for use in application domains which are w idely 
distributed. MAS are currently considered as the mo st 
representatives among artificial systems dealing wi th 
complexity and highly distribution [24]. MAS allow the 
design and implementation of software systems using  the 
same ideas and concepts that are the very founding of human 
societies and habits. These systems often rely on t he 
delegation of goals and tasks among autonomous soft ware 
agents, which can interact and collaborate with oth ers to 
achieve common goals [34]. In other words, an agent  falls 
somewhere between a simple event-triggered program and 
one with human collaborative abilities [36].   
In contrast to initial MAS research, which concerne d 
individual agents’ aspects such as agents’ architec tures, agents’ 
47 Hosny Ahmed Abbas et al. :  Organization of Multi-Agent Systems: An Overview   
 
mental capabilities, behaviors, etc, the current re search trend 
of MAS is actively interested in the adaptivity, en vironment, 
openness and the dynamics of these systems. Also, t here is a 
great attention towards the MAS technique as a way to design 
self-organized systems. In open environments, agent s must be 
able to adapt towards the most appropriate organiza tions 
according to the environment conditions and their 
unpredictable changes. Agent organizations are cons idered as 
an emergent area of MAS research that relies on the  notion of 
openness and heterogeneity of MAS and imposes new 
demands on traditional MAS models [44]. MAS that ha ve the 
ability to dynamically reorganize (regardless of th e type of 
reorganization, self or enforced) will be adaptive enough to 
survive against their dynamic and continuously chan ging 
working environments. Dynamic reorganization can ta ke 
many forms, for instance, agents can dynamically ch ange their 
roles, behaviors, locations, acquaintances, or the whole 
system organization structure can be dynamically ch anged.  
An agent organization can also be defined as a soci al entity 
composed of a specific number of members (agents) t hat 
accomplish several distinct tasks or functions and that are 
structured following some specific topology and 
communication interrelationships in order to achiev e the main 
aim of the organization. Thus, agent organizations assume the 
existence of global common goals, outside the objec tives of 
any individual agent, and they exist independently of agents 
[64][65]. 
This chapter is dedicated to provide a comprehensiv e 
overview of MAS organization including its motivati ons, 
paradigms, and familiar organizational models. The remaining 
of this chapter is organized as follows: Section 2 explores 
MAS literature to identify the motivations towards agent 
organizations. Section 3 presents different approac hes and 
paradigms used to organize agents within multi-agen t systems. 
Section 4 introduces what is called organizational models, 
which concern the abstractions, languages, approach es and 
techniques for modeling dynamically reorganized MAS . And 
Section 5 concludes the article and highlights futu re work. 
2. Motivations to MAS Organization 
This section is dedicated to identify from MAS lite rature 
the suggested motivations to give increasing attent ion to MAS 
organization. Basically, a MAS is formed by the col lection of 
autonomous agents situated in a certain environment , respond 
to their environment dynamic changes, interact with  other 
agents, and persist to achieve their own goals or t he global 
system goals. There are two viewpoints of MAS engin eering, 
the first one is the agent-centered MAS (ACMAS) in which 
the focus is given to individual agents. With this viewpoint, 
the designer concerns the local behaviors of agents  and also 
their interactions without concerning the global st ructure of 
the system. The global required function of the sys tem is 
supposed to emerge as a result of the lower level i ndividual 
agents interactions in a bottom-up way.  
Picard et al. [13] stated that the agent-centered a pproach 
takes the agents as the “engine” for the system org anization, and agent organizations implicitly exist as observa ble 
emergent phenomena, which states a unified bottom-u p and 
objective global view of the pattern of cooperation  between 
agents. Further, Picard gives the ant colony [15] a s an example, 
where there is no organizational behavior and const raints are 
explicitly and directly defined inside the ants. Th e main idea is 
that the organization is the result of the collecti ve emergent 
behavior due to how agents act their individual beh aviors and 
interact in a common shared and dynamic environment . 
The key problems of the ACMAS viewpoint are 
unpredictability and uncertainty. Because the whole  is more 
than the sum of its parts [14], this approach can l ead to 
undesirable emergent behaviors that may impact syst em 
performance, as a result, this approach might be no t suitable to 
design and engineer complex multi-agent systems. Th e MAS 
applications engineered by the ACMAS approach are c losed 
for agents that are not able to use the same type o f 
coordination and behavior, and that all global char acteristics 
and requirements are implemented in the individual agents 
and not outside them [10].  
Weyns [11] stated that giving the responsibility of  system 
organization implicitly to individual agents, as in  the ACMAS 
approach, in addition to their functional responsib ilities is not 
adequate because it is a type of dual responsibilit y, which is 
very complex to engineer and not suitable for handl ing real 
world complexity and other  emerged characteristics such as 
highly distribution, unpredictability, uncertainty,  and 
continuous evolution. 
The second viewpoint of MAS engineering is what is called 
organization-centered MAS (OCMAS) in which the stru cture 
of the system is given a bigger attention through t he explicit 
abstraction of agent organization. With that approa ch, the 
designer designs the entire organization and coordi nation 
patterns on the one hand, and the agents’ local beh aviors on 
the other hand. It is considered as a top-down appr oach 
because the organization abstraction imposes some r ules or 
norms used by agents to coordinate their local beha viors and 
interactions with other agents.  
The OCMAS viewpoint has been promoted by many 
pioneers in MAS research. For instance, Jennings an d 
Wooldridge [2] stated that MAS contribute to the so ftware 
engineering (SE) discipline as a way to simplify th e design of 
complex software systems but considering MAS with n o real 
structure isn’t suitable for handling current softw are systems 
complexity, and higher order abstractions should be  used and 
some way of structuring the society is typically ne eded to 
reduce system complexity, to increase system effici ency, and 
to more accurately model the problem being tackled.  Odell et 
al. [4] stated that the current practice of MAS des ign tends to 
be limited to individual agents and small face-to-f ace groups 
of agents that operate as closed systems which is n ot adequate 
to model and design of complex adaptive systems. Al so 
Gutknecht and Ferber [66] argued that taking organi zational 
concepts, such as groups, roles, structures, depend encies, etc, 
as first class citizens, and relating them to the b ehavior of 
agents is a key issue for building large scale and complex 
systems. In another article, Ferber [6] also stated  that 
International Journal of Intelligent Information Sy stems 2015; 4(3): 46-57 48 
 
representing a MAS as an organization consists of r oles 
enacted by agents arranged (statically or dynamical ly) to form 
groups of agents, can handle many drawbacks such as  system 
complexity, uncertainty, and system dynamism. 
Gasser [3] stated that we simply have hardly any re al 
experience building truly heterogeneous realistical ly 
coordinated multi-agent systems that work together and 
almost no basis for systematic reflection and analy sis of that 
experience. Further, Horling et al. [5] stated that  our real world 
getting more complex and highly distributed and tha t should 
be reflected in new software engineering paradigms such as 
MAS. Therefore, the adoption of higher order abstra ct 
concepts like organizations, societies, communities , and 
groups of agents can reduce systems complexity, inc rease its 
efficiency, and improve system scalability.  
Establishing an organizational structure that speci fies how 
agents in a system should work together helps the 
achievement of effective coordination in MAS [39]. Broek [7] 
stated that complexity of real world applications n eeds to be 
tackled from higher abstraction order such as organ izations 
which can be used to limit the scope of interaction s, provide 
strength in numbers, reduce or manage uncertainty, and 
formalize high-level goals which no single agent ma y be 
aware of. Further, Hübner [8] confirmed that organi zations 
provide a framework for structuring and managing ag ents’ 
interactions and serve as a kind of tuning of the a gents 
autonomy level. Furthermore, Burns et al. [12] stat ed that in 
organization theory [25][26], it is commonly accept ed that 
different types of organizational structure are sui table for 
particular environmental conditions and one of the main 
reasons for creating organizations is to provide st able means 
for coordination that enable the achievement of glo bal goals. 
Moreover, Corkill et al. [36] stated that as agent- based 
systems become more widespread and complex, designe d 
organization will become an important aspect of eff ective 
system performance, and they suggested the possible  
situations where organization design will be very i mportant 
such as, large number of agents, long duration of a gent 
activities, more repetitive activities, more activi ties require 
shared resources, more collaborative the activities , more 
specialized agents, less capable agents, and less s lack 
resources are available. Also, they emphasized that  no one 
organization is right for every situation. 
In nutshell, proposing a way for statically or dyna mically 
organizing MAS, has been given great attention by M AS 
researchers, as a promising approach for handling t he 
challenging issue of engineering complex and large- scale 
software systems. The adoption of the ACMAS or OCMA S 
viewpoints mainly depends on the nature of applicat ion 
domain and the degree of system complexity. The dev elopers 
interested in bottom-up self-organized systems will  prefer the 
ACMAS approach and the developers interested in top -down 
system reconfiguration will prefer the OCMAS approa ch. In 
the MAS literature there are two communities each a dopts and 
concerns one of the two engineering approaches. The  first one 
is SASO (Self-Adaptive and Self-Organizing systems)  which 
concerns the ACMAS viewpoint. And the second one is  COIN (Coordination, Organization, Institutions and Norms  in agent 
systems) which concerns the OCMAS viewpoint. 
The OCMAS viewpoint is more adequate for engineerin g 
complex adaptive multi-agent systems, which are exp ected to 
be, in the near future, the mainstream approach for  
engineering large-scale and even ultra-large scale application 
domains especially with the evolving topic of the I nternet of 
Things (IoT) [17], which concerns devices capable t o 
communicate via the Internet and manipulate an enor mous 
amount of data. Examples of such application domain s are 
CPS (Cyber-Physical Systems) [16], Smart Grids [18] , global 
SCADA (Supervisor Control and Data Acquisition) [19 ], 
Pervasive Computing [20], Ubiquitous Computing [21] , etc. 
The next section explores the familiar paradigms of  MAS 
organization. 
3. Paradigms of MAS Organization 
Originally, the organization abstract is inspired f rom 
business human organizations, which are constituted  of a 
number of roles, so a key concept in the design of OCMAS is 
that of roles, which define normative behavioral re pertoires 
for agents [4]. A role is defined as an abstract de scription of 
some activity or functionality, for instance in a b usiness 
human organization we may see a role like Manager w ho is 
responsible of the organization management and the 
coordination between other organization members (ro les). In 
MAS, agents are supposed to enact roles according t o the 
capabilities of each agent. It is also possible tha t one agent can 
enact many roles in the same time. The role enacted  by an 
agent has a direct effect on the agent behavior and  interaction 
with other roles (agents).  Odell et al. [27] described two 
familiar ways for assigning roles to agents, endoge nously by 
emergent self-organization as the system runs, or e xogenously 
by the system designer when the system is construct ed or 
modified. The adoption of human organization theory  was the 
focus of distributed systems in general before mult i-agent 
systems, which are themselves distributed systems 
[30][31][32][33].  
Modern organizations (real or virtual) are characte rized by 
their complex structure, dense information flows, a nd 
incorporation of information technology, they also 
characterized by highly dynamic, constantly changin g, 
organic structure and show hardly identified, not f ormalized, 
non-linear behavior [28][29]. These challenges enfo rce the 
urgent need to a new way of engineering multi-agent  systems.  
Inspired from human organizations, Galbraith [37] 
described an agent organization as an entity that i s composed 
of  a set of agents, working together to achieve a shared 
purpose through a division of labor, integrated by decision 
processes continuously through time. Further, Galbr aith 
pointed out that an organization consists of patter ns of 
behavior and interaction that are relatively stable  and change 
slowly over time.  
Shehory [1] defined MAS organization as the way in which 
multiple agents are organized to form a multi-agent  system. 
The relationships and interactions among the agents  and 
49 Hosny Ahmed Abbas et al. :  Organization of Multi-Agent Systems: An Overview   
 
specific roles of agents within the organization ar e the focus of 
multi-agent organization. The use of organizations provides a 
new way for describing the structures and the inter actions that 
take place in MAS. Dignum [10] stated that agent or ganization 
can be understood from two perspectives: organizati on as a 
process and organization as an entity. In other wor ds, 
organizations can be considered as the process of o rganizing a 
set of individual agents, thus in this sense it is used to refer to 
constraints (structures, norms and patterns) found in a social 
context that shape the actions and interactions of agents [53]. 
In other situations, it can be considered as an ent ity in itself, 
with its own requirements and objectives and is rep resented by 
(but not identical to) a group of agents. In fact, agent 
organizations demand the integration of both perspe ctives and 
rely for a great extent on the notion of openness a nd 
heterogeneity of MAS.  
Figure 1 illustrates how a MAS can be seen from two  levels, 
the individual agents’ level and the organizational  level. The 
organizational level presents a higher order abstra ction of the 
lower agents’ level.  
 
Figure 1.  Organizational level vs. individual level in MAS. 
Ferber et al. [6] proposed a set of general princip les that 
should be taken into account when designing MAS wit h 
organizational dimension:  
1.  The organizational level describes the “what” and n ot the 
“how”. In other words, the organizational level imp oses 
a structure into the pattern of agents’ activities,  but does 
not describe how agents behave. 
2.  No agent description and therefore no mental issues  at 
the organizational level. The organizational level should 
not say anything about the way agents would interpr et 
this level. 
3.  An organization provides a way for partitioning a s ystem, 
each partition (or agent group) constitutes a conte xt of 
interaction for agents. Thus, a group is an organiz ational 
unit in which all members are able to interact free ly. 
Ferber principles provide important general guideli nes for 
OCMAS research. They identify precisely the logical  relation 
between agents and their organization regardless of  the nature 
of organization (i.e. a process or an entity). The first principle 
concerns the autonomy of agents. Agents should be 
autonomous but they may be guided by some general 
organizational norms or constraints. Full autonomy is not a 
preferred agent characteristic in MAS research, we can only 
find a type of full autonomy with humans because th ey have 
perfect rational minds, but agents (software or har dware) designed for specific missions in certain applicati on domains 
and the concept of safety imposes some constraints on agents’ 
autonomy, in these situations, a designed organizat ion, where 
agents give up some degree of self-motivation and a utonomy 
can be an appropriate choice [36].  
The second principle concerns the unawareness of ag ents 
about the existence of the organizational level, wh ich 
according to Ferber should be transparent from agen ts. In 
other words, agents should be affected indirectly b y the 
change of system organization (i.e., through enviro nment). 
The third principle concerns system modularity. Org anizations 
provide a way for, statically or dynamically, decom posing the 
system. Modularity and flexibility of system decomp osition 
enhance system maintainability. 
Horling and Lesser [5] also stated that organizatio nal design 
employed by an agent system can have a significant,  
quantitative effect on its performance characterist ics, and they 
surveyed the major organizational paradigms used in  
multi-agent systems. These include hierarchies, hol archies, 
coalitions, teams, congregations, societies, federa tions, 
markets, and matrix organizations. Also, they provi ded a 
description of each paradigm, and discuss its advan tages and 
disadvantages, further, they provided examples of h ow each 
organization paradigm may be instantiated and maint ained. 
Table 1 provides a summary of Horling and Lesser [5 ] work. 
The Table contains a number of methods by which MAS  could 
be organized and highlights the key characteristics , benefits, 
and drawbacks of each organization paradigm. Simila r work 
was provided by Carley and Gasser [35]. The main co nclusion 
of these surveys is that no single organization par adigm is 
necessarily better than all others in all situation s. The selection 
made by a designer should be dictated by the needs imposed 
by the system's goals, the resources at hand, and t he 
environment in which the participants will exist. I n other 
words, an organization paradigm that can be describ ed as a 
fit-to-all paradigm does not exist (at least till n ow!). A MAS 
can be statically (in design time) organized using any of the 
organization paradigms presented in Table 1, not on ly this but 
also hybrids of these and others in addition to dyn amic 
changes from one organization style to another are also 
possible [1] with the price of implementation compl exity. The 
later case is called dynamic reorganization which i s currently a 
very active research area within MAS discipline. Th e next 
subsections present in more details the concept of dynamic 
reorganization and its captivating relevant concept s, 
self-organization and emergence. 
3.1. Dynamic Reorganization 
Earlier proposed MAS organization mechanisms tackle d 
with organizational aspects at design time, that ap proach 
requires some important initial knowledge about the  exact 
purposes and objectives of the system-to-be and eve ry 
interaction to which it may be confronted in the fu ture have to 
be known in design time [41]. However, the openness , 
complexity, and heterogeneity of modern software sy stems 
impose new demands and requirements on agent-orient ed 
software engineering (AOSE) [71], which is concerne d with 

International Journal of Intelligent Information Sy stems 2015; 4(3): 46-57 50 
 
the development of feasible, effective, and adaptiv e MAS. 
Building adaptive MAS (AMAS) able to handle opennes s, complexity, and highly distribution of modern real world 
applications has recently attracted great attention . 
Table 1. Analysis of Some of Possible MAS Organization Parad igms (adopted from [5]).  
Paradigm Key Characteristic Benefits Drawbacks 
    Decomposition Maps to many common domains; handles scale well  Potentially brittle, can lead to bottlenecks or 
delays 
Holarchy Decomposition with autonomy Exploit autonomy of functional units Must organize holons, lake of predicable 
performance 
Coalition Dynamic, goal-directed Exploit strength in number Short-term benefits may not outweigh 
organization construction costs 
Team Group level cohesion Address larger grained problems; task-centric Increased communication 
Congregation  Long-lived, utility-directed Facilitates agent discovery Sets may be overly restrictive 
Society Open system Public services; well defined conventions Potentially complex, agents may require 
additional society-related capabilities 
Federation Middle-agents Matchmaking, brokering, translation services, 
facilitates dynamic agent pool Intermediaries become bottlenecks 
Market Competition through pricing Good at allocation, increased utility through 
centralization, increased fairness through bidding Potential for collusion, malicious behaviour, 
allocation decision complexity can be high 
Matrix Multiple managers Resource sharing, multiple influenced agents Potential of conflicts, need for increased agent 
sophistication 
Compound Concurrent organizations Exploit benefits of several organizational styles Increased sophistication, drawbacks of several 
organizational styles 
 
AMAS designed to be capable to adapt themselves to 
unforeseen situations in an autonomous manner. They  can be 
realized by enabling the system to dynamically reor ganize to 
adapt its environment changes [42]. Dynamic reorgan ization 
is a way to design and develop AMAS. It can be desc ribed as 
the change of MAS structure and behavior as a resul t of 
internal (local) or external (supervisory) demand. The external 
demand can be for example human intervention. The i nternal 
demand emerges from the system itself as an autonom ous 
system to adapt environments changes. Generally, dy namic 
reorganization in MAS takes place as a result of in dividual 
agents' interactions. However, in many application domains 
the environment can stimulate MAS reorganization (e .g., 
when removing or adding environment resources), the  system 
may reorganize to adapt the change of environment. In other 
words, reorganization is the answer to change in th e 
environment. 
Dignum et al. [40] identified two types of MAS dyna mic 
reorganization, emergent Organization in which glob al 
behavior cannot be specified in advance, but emerge s from the 
interaction of local behaviors. In other words, age nts’ 
interactions may eventually create dynamic organiza tions [44]. 
Thus, emergent organizational behavior is primarily  a 
bottom-up process in which agents look for interact ion and 
local control decisions that have been effective in  the past and 
give similar decisions preference in the future. Th e ACMAS 
viewpoint concerns this type of reorganization. The  other type 
of reorganization is called designed organization, which has 
an explicit interaction structure that determines t he 
coordination of the agents participating. Designed systems are 
created using organization design knowledge and 
task-environment information to develop an explicit  
organizational structure, that is then elaborated b y the 
individual agents into appropriate behaviors. Desig ned 
organization exhibits predicable and controllable b ehavior, 
dynamic change implies the need for highly intellig ent and communicative agents (at least some of them) that c an reason 
about and negotiate change. Designed organization i s the main 
concern of the OCMAS approach. In human organizatio ns, it 
has been proven that designed organizations perform  better 
than those that emerge naturally. This viewpoint ho lds for 
agent organizations as well, that is because the gl obal behavior 
of emergent organizations cannot be predicted and c hanges 
cannot be guided, which makes this type less suitab le for 
situations where coordinated and goal-directed glob al action 
is required.  
Picard et al. [13] added the agents’ awareness /una wareness 
of the existence of the organization structure as a  dimension of 
the organization modification process and he identi fied four 
cases:  
1.  The agents don’t represent the organization, althou gh the 
observer can see an emergent organization. In some 
sense, they are unaware that they are part of an 
organization. 
2.  Each agent has an internal and local representation  of 
cooperation patterns which it follows when deciding  
what to do. This local representation is obtained e ither 
by perception, communication or explicit reasoning.  
3.  The organization exists as a specified and formaliz ed 
schema, made by a designer but agents don’t know 
anything about it and even do not reason about it. They 
simply comply with it as if the organizational cons traints 
were hard-coded inside them. 
4.  Agents have an explicit representation of the 
organization which has been defined. The agents are  able 
to reason about it and to use it in order to initia te 
cooperation with other agents in the system. The ag ents 
are able to reason about it and to use it in order to initiate 
cooperation with other agents in the system. 
Case 1 and 2 considered as ACMAS and case 3 and 4 
considered as OCMAS. The importance of Picard 
classification of MAS dynamic reorganization is tha t nearly 
51 Hosny Ahmed Abbas et al. :  Organization of Multi-Agent Systems: An Overview   
 
most of known reorganization methods fit to a speci fic case or 
multiple cases. Similar classification proposed by Sichman et 
al. [44], but he used the concept of observer in th e same 
position as the agent awareness of the organization . Table 2 
provides the global picture of possible types of MA S organization with examples. As shown in the table M AS 
organization is classified according to the 
awareness/unawareness of individual agents about th e 
presence of the organizational level. 
Table 2. The global picture of MAS organization. 
 Agents unaware Agents aware 
ACMAS=Emergent organization Organization is observed. It is implicitly programm ed 
in agents, interactions, and environment. Organization is observed. Coalition mechanisms 
programmed in the agents. 
Concerned Community SASO COIN 
Examples Swarm-based systems [72] Contract-Net Interaction Protocol [73] 
OCMAS = Designed organization  Organization is a design model. It may be hard code d 
in the agents. Organization is programmed in the agents and/or in 
specialized middleware services. 
Concerned Community COIN COIN 
Examples AOSE methodologies such as: 
MASE [74], INGENIAS [75]. Organizational models such as: 
AGR [58] MOISE+ [67] 
 
Picard also, after finishing his valuable study pro posed a 
comprehensive definition of dynamic reorganization as 
follows: 
“Reorganization is a process, endogenous or exogeno us, 
concerning systems in which organization is explici tly 
manipulated through specifications, constraints or other 
means, in order to ensure an adequate global behavi or, when 
the organization is not adapted. Agents being aware  of the 
organization state and structure, they are capable of 
manipulating primitives to modify their social envi ronment. 
This process can be both initiated by an external e ntity or by 
agents themselves, by reasoning directly on the org anization 
(roles, organizational specification) and the coope ration 
patterns (dependencies, commitments, powers).” 
This definition assumes that the agents are aware o f the 
existence of the organizational level, thus it conc erns the 
OCMAS viewpoint. But, what if agents are unaware of  the 
organization level? According to Picard, in this ca se the 
dynamic reorganization process is called self-organ ization 
which defined by Picard as follows: 
“Self-organization is an endogenous and bottom-up p rocess 
concerning systems in which only local information and 
representations are manipulated by agents unaware o f the 
organization as a whole, in order to adapt the syst em to the 
environmental pressure by modifying indirectly the 
organization, therefore by changing directly the sy stem 
configuration (topology, neighborhoods, influences,  
differentiation), or the environment of the system,  by local 
interactions and propagation, by avoiding predefine d model 
biases.” 
This definition states that self-organization repre sents the 
ACMAS viewpoint. In a self-organized system, agents  are 
unaware of the organization level, the reorganizati on process 
is decentralized, implicit, endogenous, and agents are 
responsible of the system dynamic reorganization, w hich is 
often initiated by an environmental change. In a dy namically 
reorganizing system where agents are aware of the 
organization level, this process can be decentraliz ed or not, but 
always explicit and directly performed by entities (designer or agents) manipulating organizational primitives. The refore, the 
awareness is a key dimension added by Picard to ide ntify 
self-organized MAS. The next section provides detai led 
review of the self-organization concept in MAS. 
3.2. Self-Organization 
Self-* properties [43] (i.e., self-organization, se lf-healing, 
self-adaptation, self-configuration, etc) are the m ost 
captivating concepts recently appeared in software 
engineering. They remind us of Einstein ideas about  Time 
Machine, which was and still a far dream of human t o travel 
through time. Human also dreams to design a system,  
regardless of its nature (software or hardware), ab le to do all 
things by itself. A system has all known self-* pro perties will 
be amazing. Actually, this type of systems is imagi nary (at 
least till now!); we can only see this system in sc ience fiction 
movies. However, it is possible to design systems w ith one or 
more of self-* properties for predefined purposes a nd under 
certain circumstances. 
The first use of the term self-organization returns  to Ashby 
[56], in 1947, he stated that a system is said to b e 
self-organized if it changed its own organization r ather than 
being changed by an external entity. Self-organizat ion in 
software systems received great attention since the  last few 
years. It is an attractive way to handle the dynami c 
requirements in software in general and MAS in spec ific. It 
refers to a process where a system changes its inte rnal 
organization to adapt to changes in its goals and i ts working 
environment without explicit external control. Unde rstanding 
the mechanisms that can be used to model, assess an d engineer 
self-organizing behavior in MAS is currently an iss ue of major 
interest [38]. 
Picard’s definition of self-organization (see previ ous 
section) can be rephrased as follows:  Self-organization is a 
process where some form of overall order or coordin ation 
arises out of the local interactions between the co mponents of 
an initially disordered system. This process is spo ntaneous: it 
is not necessarily directed or controlled by any ag ent or 
subsystem inside or outside of the system. It is of ten triggered 
International Journal of Intelligent Information Sy stems 2015; 4(3): 46-57 52 
 
by random fluctuations, which are triggered and amp lified by 
positive feedback. The resulting organization is wh olly 
decentralized or distributed over all the component s of the 
system, it is typically very robust and able to sur vive and 
self-repair substantial damage or perturbations. 
The roots of the term self-organization return to t he work of 
Glansdorff and Prigogine [46] through thermodynamic s 
studies. They discovered that open systems decrease  their 
entropy (order comes out of disorder) when an exter nal energy 
is applied on the system. Matter organizes itself u nder this 
external pressure to reach a new state where entrop y has 
decreased.     
Nature is full of self-organization forms and patte rns, for 
instance social behavior of insects like ants or te rmites, which 
formed as a result of indirect communication throug h 
environment without the need for any type of direct  
interaction, this type of interaction is called Sti gmergy. Social 
behavior of humans is also self-organized and gives  rise to 
emergent complex global behaviors. Human beings typ ically 
work with local information and through local direc t or 
indirect interactions producing complex societies [ 45]. 
Researchers from variety of disciplines who were in terested 
in self-organization in nature found MAS as the ade quate 
engineering style for modeling and simulation of th e 
self-organization phenomena and after a period of t ime the 
situation reversed as the MAS researchers, who are concerned 
with AOSE gave a greet attention to bio-inspired mo dels for 
developing complex, open, and heterogeneous MAS-bas ed 
applications. Self-organization and emergence are c urrently 
the main focus of AOSE researchers. The adoption of  
naturally inspired methods and approaches for engin eering 
self-organized MAS is currently a very active resea rch area 
[47][48]. Mechanisms such as direct interactions [4 9], 
Stigmergy [50], reinforcement [51], and agents’ coo peration 
[52] are widely used to design MAS with self-organi zation 
behavior.  
Another relevant and interesting concept is that of  
emergence, which can be considered as a process tak es place 
in complex systems (which may or may not be self-or ganized). 
Self-organization results from emergence, but there  is no 
guarantee that a self-organized system will always generate 
emergent phenomena. Understanding how to engineer 
systems that are capable of presenting self-organiz ed behavior 
and desirable emergence is currently a very active research 
area too. The next section introduces briefly the c oncept of 
emergence. 
3.3. Emergence 
A lot of confusion exists about the meaning of the two 
relevant terms emergence and self-organization. One  of the 
sources of the confusion comes from the fact that a  
combination of both phenomena often occurs in dynam ical 
systems [53]. In MAS domain, self-organization and 
emergence concepts are recently getting great focus  as a way 
to engineer open, heterogeneous, and complex MAS-ba sed 
applications such as complex adaptive systems (CAS)  [54],  
which are fluidly changing collections of distribut ed interacting components that react to both their env ironments 
and to one another. The familiar definition of emer gence is as 
a phenomenon where global behavior arises from the 
interactions between the local parts of the system.  This general 
and vague definition indicates that still there is no consensus 
of a clear definition for emergence. Also, it indic ates the 
absence of clear understating of its nature. In con trast to the 
reductionism theory [55], which allows a system to be reduced 
to the sum of its parts, the emergent global behavi or cannot be 
predicted by observing its parts local behaviors. A n accepted 
operational definition of emergence was proposed by  De Wolf 
and Holvoet [53] as follows: 
“A system exhibits emergence when there are coheren t 
emergents at the macro-level that dynamically arise  from the 
interactions between the parts at the micro-level. Such 
emergents are novel with respect to the individual parts of the 
system.” 
This definition uses the concept of an ‘emergent’ a s a 
general term to denote the result of the process of  emergence, 
i.e., properties, behavior, structure, patterns, et c. The ‘level’ 
mentioned refers to certain points of view. The mac ro-level 
considers the system as a whole and the micro-level  considers 
the system from the viewpoint of the individual ent ities that 
make up the system. The concept of emergence is ver y 
complex and it is not fall in the scope of this art icle, interested 
readers are invited to explore the emergence releva nt 
references.  
3.4. Discussion 
Static design of MAS is not adequate for modern rea l world 
applications, which characterized by their increasi ng 
complexity heterogeneity, and openness. Even closed  systems 
in which the number of agents is constant with time  should 
have a type of adaptive dynamic behaviors. All poss ible 
behaviors of modern systems cannot be captured at d esign 
time and that requires these systems to be adaptive  able to 
adapt changes in their working environments. Dynami c 
reorganization is currently a familiar way for deve loping 
adaptive MAS. As shown in Section 2, the adoption o f 
organizational aspects within MAS is promoted and 
recommended by pioneers of MAS research. Dynamic 
reorganization can be described as the change of MA S 
structure and behavior as a result of internal or e xternal 
demand. The external demand can be for example huma n 
intervention. The internal demand emerges from the system 
itself as an autonomous system to adapt environment s changes. 
Self-organization is a dynamical and adaptive proce ss where 
systems acquire and maintain structure themselves, without 
external control. In self-organizing systems, robus tness is used 
in terms of adaptivity in the presence of perturbat ions and 
change. A self-organizing system is expected to cop e with that 
change and to maintain its organization autonomousl y. 
Emergence emphasizes the presence of a novel cohere nt 
macro-level emergent (property, behavior, structure , etc) as a 
result of the interactions  between micro-level parts. A 
combination of emergence and self-organization is a  
promising approach to engineer large-scale multi-ag ent 
53 Hosny Ahmed Abbas et al. :  Organization of Multi-Agent Systems: An Overview   
 
systems. In most systems that are considered in MAS  
literature, emergence and self-organization occur t ogether. 
Research in MAS and CPS communities focuses on such  
systems. In very complex (multi-agent) systems, i.e . 
distributed, open, large, situated in a dynamic con text, etc., the 
combination of emergence and self-organization is 
recommended. 
When a researcher proposes an approach to dynamical ly 
reorganize a multi-agent system to adapt environmen ts’ 
changes, he actually proposes what the MAS domain 
consensus agreed to call as an Organizational (or o rganization) 
Model. MAS organizational models will play a critic al role in 
the development of future larger and more complex M AS. The 
main concern of organizational models is to describ e the 
structural and dynamical aspects of organizations [ 9]. They 
have proven to be a useful tool for the analysis an d design of 
multi-agent systems. Furthermore, they provide a fr amework 
to manage and engineer agent organizations, dynamic  
reorganization, self-organization, emergence, and a utonomy 
within multi-agent systems. The next section introd uces 
organizational models in some details. 
4. Organizational Models 
Organizational models have been recently used in ag ent 
theory for modeling coordination in open systems an d to 
ensure social order in MAS applications [64]. The a doption of 
organizational models is currently given great impo rtance 
within most agent-oriented software engineering 
methodologies. The motivation to this direction is that in open 
environments, agents must be able to adapt towards the most 
appropriate organizations according to the environm ent 
conditions and their unpredictable changes. As a re sult, 
organizational models should guarantee the ability of 
organizations to dynamically reorganize as a respon se to 
dynamic environment changes. Organizational models are 
responsible of how efficiently and effectively orga nizations 
carry out their tasks, they have been recently used  in agent 
theory for modeling coordination in open systems an d to 
ensure social order in multi-agent system applicati ons [7]. 
From the business management discipline an organiza tional 
model, also called as organizational structure, def ines an 
organization through its framework, including lines  of 
authority, communications, duties and resource allo cations. A 
model is driven by the organization’s goals and ser ves as the 
context in which processes operate and business is done. The 
ideal model depends on the nature of the business a nd the 
challenges it faces. In turn, the model determines the number 
of roles needed and their required skill sets. In M AS, the 
purpose of an organizational model is to enhance th e analysis 
and design of OCMAS, so it's usually integrated wit h a 
particular agent-based software engineering methodo logy.  
Before exploring some of the familiar organizationa l 
models proposed for modeling complex MAS, it is a s uitable 
time to show the difference between them and MAS 
development methodologies. In general, a methodolog y is a 
body of methods employed by a discipline. A method is a procedure for attaining something. A methodology ai ms to 
prescribe all the elements necessary for the develo pment of a 
software system [57]. AOSE community concerns creat ing 
development methodologies suitable for the developm ent of 
agent-oriented or agent-based software. Typically, a 
development methodology (agent-oriented or not) com prises 
an ordered set of phases such planning, analysis, d esign, 
implementation, validation, and deployment. An 
organizational model is a tool adopted within a dev elopment 
methodology for modeling the system-to-be. Typicall y, it 
starts in the analysis phase but can expand through  design and 
implementation phases, or in other cases it can exp anded 
through the whole development life cycle. 
The next section explores some of familiar proposed  MAS 
organizational models focusing in their tackled org anizational 
aspects, their advantages, and their disadvantages.  
4.1. Familiar Organizational Models 
There is a lot of MAS organizational models propose d in 
the literature; each of them tackles MAS organizati on from a 
different viewpoint. Some of them adopt the ACMAS 
viewpoint, others adopt the OCMAS viewpoint, and so me 
adopt a hybrid approach concerns both ACMAS and OCM AS 
viewpoints. In what follows, three of familiar orga nizational 
models are introduced.  
4.1.1. AGR and AGRE 
Ferber et al. [6] proposed a very concise and minim al 
OCMAS model called AGR, for Agent/Group/Role, also 
known as the AALAADIN model [58]. The authors of AG R 
model proposed a set of notations and a methodologi cal 
framework to help the designer to build MAS using A GR. 
Further, they presented a set of diagrams (organiza tional 
structure, cheeseboard diagram, and organizational sequence 
diagrams), which may represent the different aspect s (static 
and dynamic) of OCMAS. Their model is based on the 
dynamic creation of agents groups (agents partition ing) and 
dynamic forming of hierarchies of groups (Holarchie s). They 
pointed out that their AGR-based model can be integ rated 
with Gaia [59] MAS development methodology to compl ete 
the analysis and design phases of MAS development.  Figure 2 
presents the AGR meta-model. 
 
Figure 2. The AGR Meta-Model.  

International Journal of Intelligent Information Sy stems 2015; 4(3): 46-57 54 
 
The core concepts on which the AGR model is based a re 
agent, group and role. The agent in AGR is assumed to be an 
active, communicating entity which plays roles with in groups, 
with no restrictions on its internal architecture. The group is 
defined as the basic unit of agent aggregation. Eac h agent is 
part of one or more of these groups. The role is an  abstract 
representation of an agent function, service or ide ntification 
within a group. Each agent can handle several roles , and each 
role handled by an agent remains local to a group. Other 
important abstract concepts are also shown the AGR 
meta-model shown in Figure 9.1, they are Group Stru cture and 
Organizational Structure. The group structure is an  abstract 
representation of the roles required in this group and their 
interaction relationships and protocols. The organi zation 
structure is the set of group structures expressing  the design of 
a multi-agent organizational scheme. 
In other paper, Ferber et al. [60] presented an ext ension of 
the AGR organizational model, called AGRE (AGR + 
Environment), which includes physical (or simply 
geometrical) environments. This extension is based on the 
concept of a space which can be seen either as a ph ysical area 
or as a social group. 
The main advantages of the AGR/AGRE models are: 
supporting of heterogeneous agents architectures, 
heterogeneous communication languages, and dynamic 
role-group relationships. On the other hand, the 
disadvantages are multi-role agents which make agen ts 
internally complex; roles sharing between Groups ca n cause 
overloaded agents, agents ask to join groups which require 
highly knowledgeable agents, use of mediator agents  
(brokers) which can be a source of bottlenecks, and  very few 
known real applications. 
4.1.2. MOISE 
Hannoun et al. [67] proposed MOISE (Model of 
Organisation for multI-agent SystEms); for modeling  
organizational aspects of MAS.  Similar to the AGR model, 
their model is based on three major concepts: roles , 
organizational links (roles relations), and groups.  What 
distinguishes the MOISE model is that it tries to i ntegrate both 
viewpoints, ACMAS and OCMAS. By this way MOISE give s 
the chance to the designer to model totally or part ially the 
social behavior of system agents by specify the pos sible 
organizational structures and that will be useful f or system 
verification and validation. On the other hand, for  the sake of 
flexibility, agents should be able to reason about their social 
behaviors and have a direct influence on system dyn amic 
reorganization.  
The MOISE model is structured along with three leve ls: (i) 
for each agent, definition of the tasks that it is responsible of 
(individual level), (ii) aggregation of agents in l arge structures 
(aggregate level), (iii) global structuring and int erconnection 
of the agents and structures with each other (socie ty level). 
The organization in MOISE is viewed as a normative set of 
rules that constrains the agents’ behaviors [67].  
The MOISE organizational model was extended by Hübn er 
et al. to MOISE + [68] to create an organization-centered model for independently specify the structural and functional 
aspects then link them by a deontic aspect. Another  extension 
to MOISE + [69] was done to add dynamic reorganization 
process to adapt environment changes. 
4.1.3. MACODO 
Weyns et al. [61] presented an organizational model  for 
context-driven dynamic agent organizations. The mod el 
defines abstractions that support application devel opers to 
describe dynamic reorganization. The organizational  model 
is part of an integrated approach, called MACODO 
(Middleware Architecture for COntext-driven Dynamic  
agent Organizations); in this model, the life-cycle  
management of dynamic organizations is separated fr om the 
agents, organizations are first-class citizens, and  their 
dynamics are governed by laws. Moreover, the author s 
provided a formal specification to describe and spe cify the 
semantics of their organizational model abstraction s using Z 
specification language [62], which is based on set theory and 
first order predicate calculus. The main concern of  
MACODO is to directly relate organization dynamics to 
context changes in the environment.  
We argue that the main drawback of the MACODO 
organizational model is the pure dynamically create d 
organization; we argue that an organization should be tackled 
from the two perspectives, static and dynamic for t he sake of 
long-term system stability. Dynamically creating an d 
vanishing of organizations without keeping an amoun t of 
static behavior can impact system stability and pre vents it 
from reaching an equilibrium state. In other words,  there 
should be an amount of balance between static and d ynamic 
organizational behaviors. The authors applied their  model to 
traffic monitoring application. To our best knowled ge, there is 
no any other real world application designed with M ACODO. 
4.2. Discussion 
In MAS literature, there is large number of organiz ational 
models proposed by MAS researchers from all over th e 
world to support the organizational aspects within MAS. 
Some of these models adopt the ACMAS viewpoint, oth ers 
are concerned with the OCMAS viewpoint, and others adopt 
a hybrid approach combines both viewpoints. For the  sake of 
this article size, it is not possible to explore al l proposed 
organizational models in details, but interested re aders can 
see [70], which is a handbook of research on MAS 
organizational models contains many of recent 
organizational model. Bellow, we provide our remark s about 
these models:  
 This large number of organizational models indicate s 
that concerning organizational aspects within MAS i s 
currently a very interesting research area.  
 It also emphasize that till now there is no a fit-t o-all 
organizational models that can be used to design 
MAS-based systems in all application domains. 
 Nearly, each of these models was dedicated to speci fic 
real world application domain and it is not applied  to 
other applications. 
55 Hosny Ahmed Abbas et al. :  Organization of Multi-Agent Systems: An Overview   
 
 Some of these organizational models tackle with 
organization structure issues at design time (pure static), 
and others tackle them at will (pure dynamic). 
 In some of them the organization abstraction is not  
explicit and the responsibility of dynamic 
reorganization is given to individual agents in add ition 
to their functional responsibilities. 
 Most of them considered the intra-organization and did 
not tackle with inter-organization reorganization. How 
to model the interaction among organizations? 
  Few organizational models tackled both static and 
dynamic aspects of organizations and environments.  
 In most of them the individual agent initiates to j oin a 
certain organization and this require that the agen t has a 
reasonable knowledge about the services of each 
organization to select the appropriate one to join.  We 
argue that letting the organization itself to selec t 
suitable agents to award it a role is the better ap proach 
because organization knowledge is more global than 
that of an individual agent. 
Based on these remarks and limitations of most prev iously 
proposed MAS organizational models, we proposed a n ovel 
organizational model for engineering complex large- scale 
MAS-based applications. The new MAS organizational 
model was called NOSHAPE and conceptually presented  in 
[76]. NOSHAPE is supposed to handle all the limitat ions of 
other related models. It exploits the overlapping 
relationships among higher order abstraction entiti es such as 
organizations of agents, worlds of organizations, a nd even 
universes of worlds within MAS to realize and utili ze their 
captivating characteristics. 
5. Conclusion and Future Work 
MAS organization can be considered as a process to 
dynamically reorganize the system-to-be to adapt 
environment dynamic changes. Or, it can be consider ed as an 
entity facilitates the partitioning of the system-t o-be. 
Organizations are a typical way to structure and ma nage 
interactions among agents. Establishing an organiza tional 
structure that specifies how agents in a system sho uld work 
together helps the achievement of effective coordin ation in 
MAS. This chapter provided a comprehensive overview  
about MAS organization including its motivations, 
paradigms, models, and other related concepts such as 
self-organization and emergence. In MAS literature,  we 
found very large number of organizational models pr oposed 
to support dynamic reorganization of the MAS, this large 
number of organizational models indicates that conc erning 
organizational aspects within MAS is currently a ve ry active 
and interesting research area and that till now the re is no a 
fit-to-all MAS organizational model that can be use d for 
engineering all possible application domains. This 
conclusion motivates us to propose a novel organiza tional 
model for engineering complex and highly distribute d 
large-scale MAS such as modern industrial networks (i.e., 
SCADA [19]).  
References 
[1]  Shehory, O. Architectural properties of multi-agent  systems. 
Technical Report CMU-RI-TR-98-28, The Robotics Instit ute, 
Carnegie Mellon University, Pittsburgh, Pennsylvania  15213, 
1998. 
[2]  Jennings, N. R., & Wooldridge, M. Agent-Oriented Sof tware 
Engineering. in Bradshaw, J. ed. Handbook of Agent 
Technology, AAAI/MIT Press, 2000. 
[3]  Gasser, L. (2001). Perspectives on Organizations in  
Multi-Agent Systems. In Multi-Agent Systems and 
Applications, Michael Luck et al (pp. 1–16). Berlin:  
Springer-Verlag. doi:10.1007/3-540-47745-4_1. 
[4]  Odell, J. J., Parunak, H. V. D., & Fleischer, M. (2 003). The role 
of roles in designing effective agent organizations . In Software 
Engineering for Large-Scale Multi-Agent Systems (pp . 27–38). 
Springer Berlin Heidelberg. doi:10.1007/3-540-35828- 5_2. 
[5]  Horling, B., & Lesser, V. (2004). A survey of multi- agent 
organizational paradigms. The Knowledge Engineering  
Review, 19(4), 281–316.doi:10.1017/ S026988890500031 7. 
[6]  Ferber, J., Gutknecht, O., & Michel, F. (2004). Fro m agents to 
organizations: an organizational view of multi-agen t systems. 
In Agent-Oriented Software Engineering IV (pp. 214– 230). 
Springer Berlin Heidelberg. 
doi:10.1007/978-3-540-24620-6_15. 
[7]  Van Den Broek, E. L., Jonker, C. M., Sharpanskykh, A. , & 
Treur, J. (2006). Formal modeling and analysis of o rganizations. 
In Coordination, Organizations, Institutions, and No rms in 
Multi-Agent Systems (pp. 18-34). Springer Berlin Hei delberg. 
[8]  Hübner, J. F., Vercouter, L., & Boissier, O. (2009).  
Instrumenting multi-agent organisations with artifa cts to 
support reputation processes. In Coordination, Organ izations, 
Institutions and Norms in Agent Systems IV (pp. 96– 110). 
Springer Berlin Heidelberg. 
doi:10.1007/978-3-642-00443-8_7. 
[9]  Ferber, J., Michel, F., & Báez, J. (2005). AGRE: Inte grating 
environments with organizations. In Environments fo r 
multi-agent systems (pp. 48-56). Springer Berlin Hei delberg. 
[10]  Dignum, V. (2009). The role of organization in agen t systems. 
Handbook of Research on Multi-Agent Systems: Semanti cs 
and Dynamics of Organizational Models, 1-16.  
[11]  Weyns, D., Haesevoets, R., & Helleboogh, A. (2010). The 
MACODO organization model for context-driven dynamic  
agent organizations. ACM Transactions on Autonomous and 
Adaptive Systems (TAAS), 5(4), 16. 
[12]  Burns, T., & Stalker, G. (1961). The Management of Innovation , 
Tavistock, London. 
[13]  Picard, G., Hübner, J. F., Boissier, O., & Gleizes,  M. P. (2009, 
June). Reorganisation and self-organisation in multi -agent 
systems. In 1st International Workshop on Organizat ional 
Modeling, ORGMOD (pp. 66-80). 
[14]  Upton, J., Janeka, I., & Ferraro, N. (2014). The wh ole is more 
than the sum of its parts: aristotle, metaphysical.  Journal of 
Craniofacial Surgery, 25(1), 59-63.  
International Journal of Intelligent Information Sy stems 2015; 4(3): 46-57 56 
 
[15]  A. Drogoul, B. Corbara, and S. Lalande. MANTA: New 
experimental results on the emergence of (artificia l) ant 
societies. In Nigel Gilbert and Rosaria Conte, editor s, Artificial 
Societies: the Computer Simulation of Social Life, p ages 
119–221. UCL Press, London, 1995. 
[16]  Rajkumar, R. R., Lee, I., Sha, L., & Stankovic, J. (20 10, June). 
Cyber-physical systems: the next computing revoluti on. In 
Proceedings of the 47th Design Automation Conference  (pp. 
731-736). ACM.  
[17]  Mattern, F., & Floerkemeier, C. (2010). From the Int ernet of 
Computers to the Internet of Things. In From active data 
management to event-based systems and more (pp. 242 -259). 
Springer Berlin Heidelberg.  
[18]   James Momoh (2012), Smart Grid: Fundamentals of De sign 
and Analysis, Wiley-IEEE Press; 1 edition (March 20 , 2012). 
[19]  Abbas, H. A. (2014). Future SCADA challenges and the  
promising solution: the agent–based SCADA. International 
Journal of Critical Infrastructures , 10 (3), 307-333. 
[20]  Saha, D., & Mukherjee, A. (2003). Pervasive computi ng: a 
paradigm for the 21st century. Computer , 36 (3), 25-31.  
[21]  Friedewald, M., & Raabe, O. (2011). Ubiquitous compu ting: 
An overview of technology impacts. Telematics and 
Informatics , 28 (2), 55-65.  
[22]  Jennings NR (2001) An agent-based approach for buil ding 
complex software systems. Communications of the ACM 4 4 
(4):35–41 
[23]  Ferber J (1999) Multi-Agent Systems: An Introductio n to 
Distributed Artificial Intelligence. Addison-Wesley , Harlow, 
England. 
[24]  Wooldridge, M.: An Introduction to Multi-Agent Syst ems. 
Wiley, New York (2002). 
[25]  Posey, Rollin B. (March 1961). "Modern Organization T heory 
edited by Mason Haire". Administrative Science Quar terly 5 
(4): 609–611. 
[26]  Hertz, D. and R. Livingston. (1950). Contemporary 
Organizational theory: A review of current concepts  and 
methods. Human Relations, 3 (4), 373-394. 
[27]  Odell, J. J., Parunak, H. V. D., & Fleischer, M. (2 003). The role 
of roles in designing effective agent organizations . In Software 
Engineering for Large-Scale Multi-Agent Systems  (pp. 27-38). 
Springer Berlin Heidelberg.  
[28]  Van Den Broek, E. L., Jonker, C. M., Sharpanskykh, A. , & 
Treur, J. (2006). Formal modeling and analysis of o rganizations. 
In Coordination, Organizations, Institutions, and Norm s in 
Multi-Agent Systems  (pp. 18-34). Springer Berlin Heidelberg.  
[29]  Miles, R. E., Snow, C. S., Mathews, J. A., Miles, G.,  & 
Coleman, H. J. (1997). Organizing in the knowledge a ge: 
Anticipating the cellular form. The Academy of Management 
Executive , 11 (4), 7-20.  
[30]  Lesser, V. R., & Corkill, D. D. (1981). Functionally accurate, 
cooperative distributed systems. Systems, Man and 
Cybernetics, IEEE Transactions on,11(1), 81-96.  
[31]  Corkill, D. D. (1980). An organizational approach to planning 
in distributed problem-solving systems . Technical Report 80-13, 
Department of Computer and Information Science, Univ ersity 
of Massachusetts, Amherst, Massachusetts 01003.  [32]  Jay Galbraith. Designing Complex Organizations . 
Addison-Wesley, 1973. 
[33]  Fox, M. S. (1981). An organizational view of distri buted 
systems. Systems, Man and Cybernetics, IEEE Transactions on , 
11 (1), 70-80.  
[34]  Giovanna Di Marzo Serugendo et al (2011), “Self-org anizing 
Software, From Natural to Artificial Adaptation”, S pringer. 
[35]  M. Carley and L. Gasser. Computational organization t heory. In 
G. Weiss, editor, Multiagent Systems: A Modern Appr oach to 
Distributed Arti_cial Intelligence, pages 299.330. MIT Press, 
1999. 
[36]  Corkill, D. D., & Lander, S. E. (1998). Diversity in  agent 
organizations. Object Magazine , 8(4), 41-47.  
[37]  Jay R. Galbraith. Organization Design.  Addison-Wesley, 1977. 
[38]  Giovanna di Marzoserugendo et al, “Self-organizatio n in 
multi-agent systems”, The Knowledge Engineering Revi ew, 
Vol. 20:2, 165–189., 2005, Cambridge University Pres s. 
[39]  K. S. Barber and C. E. Martin, ‘Dynamic reorganizatio n of 
decisionmaking groups’, in Proceedings of the 5th 
Autonomous Agents, (2001). 
[40]  Dignum, V., Dignum, F., & Sonenberg, L. (2004, Sept ember). 
Towards dynamic reorganization of agent societies. In 
Proceedings of Workshop on Coordination in Emergent  Agent 
Societies at ECAI  (pp. 22-27).  
[41]  Bernon, C., Camps, V., Gleizes, M. P., & Picard, G. (2 005). 
Engineering adaptive multi-agent systems: The adelf e 
methodology. Agent-oriented methodologies, 172-202.  
[42]  Guessoum, Z., Briot, J. P., Marin, O., Hamel, A., & Sens, P. 
(2003). Dynamic and adaptive replication for large- scale 
reliable multi-agent systems. InSoftware engineerin g for 
large-scale multi-agent systems (pp. 182-198). Spri nger Berlin 
Heidelberg. 
[43]  Berns, A., & Ghosh, S. (2009, September). Dissecting  self-* 
properties. In Self-Adaptive and Self-Organizing Sy stems, 
2009. SASO'09. Third IEEE International Conference o n (pp. 
10-19). IEEE.  
[44]  Sichman, J. S., Dignum, V., & Castelfranchi, C. (2005 ). Agents' 
organizations: a concise overview. Journal of the Br azilian 
Computer Society, 11(1), 3-8.  
[45]  Serugendo, G. D. M., Gleizes, M. P., & Karageorgos,  A. (2006). 
Self-Organisation and Emergence in MAS: An Overview . 
Informatica (Slovenia),30(1), 45-54.  
[46]  P. Glansdorff and I. Prigogine. Thermodynamic study  of 
Structure, Stability and Fluctuations. Wiley, 1971.  
[47]  Mano, J. P., Bourjot, C., Lopardo, G., & Glize, P. ( 2006). 
Bio-inspired mechanisms for artificial self-organise d systems. 
Informatica, 30(1), 55-62.  
[48]  Giovanna (2011) Di Marzo Serugendo et al, “Self-org anizing 
Software, From Natural to Artificial Adaptation”, S pringer, 
2011.  
[49]  Zambonelli, F., Gleizes, M. P., Mamei, M., & Tolksd orf, R. 
(2004, May). Spray computers: frontiers of self-org anization. 
In Autonomic Computing, 2004. Proceedings. Internati onal 
Conference on (pp. 268-269). IEEE.  
57 Hosny Ahmed Abbas et al. :  Organization of Multi-Agent Systems: An Overview   
 
[50]  Karuna, H., Valckenaers, P., Saint-Germain, B., Vers traete, P., 
Zamfirescu, C. B., & Van Brussel, H. (2005). Emergent 
forecasting using a stigmergy approach in manufactu ring 
coordination and control. In Engineering Self-Organ ising 
Systems (pp. 210-226). Springer Berlin Heidelberg.  
[51]  Weyns, D., Schelfthout, K., Holvoet, T., & Glorieux , O. (2004). 
Role based model for adaptive Agents. In Fourth Symposium 
on Adaptive Agents and Multiagent Systems at the AI SB'04 
Convention .  
[52]  M.P. Gleizes, V. Camps, and P. Glize. A theory of em ergent 
computation based on cooperative self-organisation for 
adaptive artificial systems. Fourth European Congre ss of 
Systems Science. Valencia, 1999. 
[53]  De Wolf, T., & Holvoet, T. (2004). Emergence and 
self-organisation: a statement of similarities and differences. 
Engineering Self-Organising Systems , 3464 , 1-15.  
[54]  Akgün, A. E., Keskin, H., & Byrne, J. C. (2014). Com plex 
adaptive systems theory and firm product innovative ness. 
Journal of Engineering and Technology Management, 3 1, 
21-42.  
[55]  Streng, W. (2005). Reductionism versus Holism–Contras ting 
Approaches.Consilience. Interdisciplinary Communicati ons, 
2006, 11-14.  
[56]  Ashby, W.R.: Principles of self-organizing dynamic s ystems. 
Journal of General Psychology 37 (1947) 125–128. 
[57]  Giorgini, P., & Henderson-Sellers, B. (2005). Agent- oriented 
methodologies: an introduction. Agent-oriented Methodologies , 
1-19.  
[58]  Ferber, J. and Gutknecht, O., Aalaadin: a meta-mode l for the 
analysis and design of organizations in multi-agent  systems. in 
Third International Conference on Multi-Agent Syste ms, (Paris, 
1998), IEEE, 128-135. 
[59]  Wooldridge, M., Jennings, N. R., & Kinny, D. (2000).  The Gaia 
methodology for agent-oriented analysis and design.  
Autonomous Agents and Multi-Agent Systems, 3(3), 28 5-312 . 
[60]  Ferber, J., Michel, F., & Báez, J. (2005). AGRE: Inte grating 
environments with organizations. In Environments fo r 
multi-agent systems (pp. 48-56). Springer Berlin Hei delberg.  
[61]  Weyns, D., Haesevoets, R., & Helleboogh, A. (2010). The 
MACODO organization model for context-driven dynamic  
agent organizations. ACM Transactions on Autonomous and 
Adaptive Systems (TAAS), 5(4), 16.  
[62]  Spivey, J. M. (1989). The Z notation (V ol. 1992). N ew York: 
Prentice Hall.  
[63]  Coutinho, L. R., Sichman, J. S., & Boissier, O. (2005,  October). 
Modeling organization in mas: A comparison of model s. In 
First Workshop on Software Engineering for Agent-or iented 
Systems (pp. 1-10).  
[64]  Argente, E., Palanca, J., Aranda, G., Julian, V., B otti, V., Garcia-Fornes, A., & Espinosa, A. (2007). Supportin g agent 
organizations. In Multi-Agent Systems and Applicati ons V (pp. 
236-245). Springer Berlin Heidelberg.  
[65]  Dignum, V., Dignum, F.: A Landscape of Agent System s for the 
Real World. Tech. Report Utrecht University (2007) 
[66]  Gutknecht, O., & Ferber, J. (1998). A model for soc ial 
structures in multi-agent systems (Vol. 98040). Tec hnical 
Report RR LIRMM.  
[67]  Hannoun, M., Boissier, O., Sichman, J. S., & Sayetta t, C. 
(2000). MOISE: An organizational model for multi-ag ent 
systems. In Advances in Artificial Intelligence (pp . 156-165). 
Springer Berlin Heidelberg.  
[68]  Hübner, J. F., Sichman, J. S., & Boissier, O. (2002,  July). 
Moise+: towards a structural, functional, and deont ic model for 
mas organization. In Proceedings of the first inter national joint 
conference on Autonomous agents and multiagent syst ems: 
part 1 (pp. 501-502). ACM.  
[69]  Hübner, J. F., Sichman, J. S., & Boissier, O. (2004) . Using the 
MOISE + for a Cooperative Framework of MAS Reorganisation. 
In Advances in artificial intelligence–SBIA 2004 (pp . 506-515). 
Springer Berlin Heidelberg.  
[70]  Dignum, V. (Ed.). (2009). Handbook of Research on 
Multi-Agent Systems: Semantics and Dynamics of 
Organizational Models: Semantics and Dynamics of 
Organizational Models. IGI Global.  
[71]  Jennings, N. R. (1999). Agent-oriented software engi neering. 
In Multiple Approaches to Intelligent Systems (pp. 4-10). 
Springer Berlin Heidelberg. 
[72]  Duan, Junhua, Yi-an Zhu, and Shujuan Huang. "Stigme rgy 
agent and swarm-intelligence-based multi-agent syst em." 
Intelligent Control and Automation (WCICA), 2012 10th  
World Congress on. IEEE, 2012.  
[73]  Smith, R. G. (1980). The contract net protocol: High -level 
communication and control in a distributed problem solver. 
IEEE Transactions on computers, (12), 1104-1113.  
[74]  S.A. DeLoach. Methodologies and Software Engineerin g for 
Agent Systems. The Agent-Oriented Software Engineer ing 
Handbook Series : Multiagent Systems, Artificial So cieties,and 
Simulated Organizations, volume 11, chapter The MaS E 
Methodology. Kluwer Academic Publishing (available via 
Springer), 2004. 
[75]  Juan Pav´on and Jorge J. G´omez-Sanz. Agent oriente d 
software engineering with ingenias. In Vladim´ır Ma r´ık, J¨org 
P. M¨uller, and Michal Pechoucek, editors, CEEMAS, v olume 
2691 of Lecture Notes in Computer Science, pages 394 –403. 
Springer, 2003. 
[76]  Abbas, H. A. (2014). Exploiting the Overlapping of Higher 
Order Entities within Multi-Agent Systems. Internat ional 
Journal of Agent Technologies and Systems (IJATS), 6(3), 
32-57. doi:10.4018/ijats.2014070102. 
 
