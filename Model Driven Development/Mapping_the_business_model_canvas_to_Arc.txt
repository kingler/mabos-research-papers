Mapping the Business Model Canvas to ArchiMateL.O. Meertens, M.E. Iacob, L.J.M. Nieuwenhuis, M.J. van Sinderen University of Twente P.O. Box 217 7500 AE Enschede +31 (0) 53 489 5057 {l.o.meertens, m.e.iacob, l.j.m.nieuwenhuis, m.j.vansinderen}@utwente.nlH. Jonkers, D. Quartel BiZZdesign B.V. P.O. Box 321 7500 AH Enschede +31 (0) 53 4 878 15 {h.jonkers, d.quartel}@bizzdesign.nlABSTRACT Many IT projects fail to succeed in the market, as they start purely from technology. Much effort is therefore wasted, while the potential benefits are not realized. We argue that the design process should start with creating a business model, which is then translated to an architecture to ensure fitness for market of the future system. Therefore, we propose a mapping from Osterwalder’s business modeling canvas and ontology to the enterprise architecture modeling standard ArchiMate, which makes the above translation possible and represents a formal basis for business modeling in ArchiMate. A case study illustrates the mapping between the two languages.   Keywords Business Modeling, Enterprise Architecture, Mapping, Business Model Canvas, ArchiMate, Business Model Ontology. 1. INTRODUCTION Many expensive IT innovation projects suffer from the fact that the solutions and techniques they propose never materialize. Years of research are put into the development of yet another working pilot proving a new concept that, eventually, fails to be absorbed into real life settings. The issue is often caused by technology push, without a proper analysis of the problem in its context.  We argue that the design process should start with the creation and analysis of one (or more alternative) business model(s). Then, this should be translated and further refined into an enterprise architecture to ensure fitness for market of the future system. To make this possible, a technique is necessary for mapping business model specifications to design specifications, if possible, in an automated way. Therefore, the main goal and contribution of this paper is defining a mapping between Osterwalder’s Business Model Ontology (BMO) [1] and The Open Group’s enterprise architecture modeling standard, ArchiMate [2]. The first one is the formal basis for, currently, the most popular framework for business models, the Business Model Canvas (BMC) [3]. The second one is a modeling language and open standard that can be used for the specification of architecture descriptions and of their motivation, which go from business goals to technology infrastructure. We have chosen BMC and ArchiMate because they are the de facto standards in their respective fields. To define a mapping, we compare the (definitions of) concepts and relationships specified by ArchiMate to the concepts and relationships defined by the BMC. To illustrate the mapping from a business model to enterprise architecture, we use a running example often used in the enterprise architecture domain, the ArchiSurance case. This example is suitable, as we can compare the outcome of our mapping to its previously published architecture descriptions, which were not derived and developed from a business model perspective.  Besides being able to go from business models to system design in a model-driven fashion, a few other reasons motivate the mapping we propose. Such a mapping x provides a sound formal basis for modeling business models in ArchiMate; x facilitates traceability of business requirements in the design specifications; x allows the definition and analysis of alternative business cases derived from a certain business model of a specific system, thus facilitating (in a top-down fashion) the quantitative analysis of alternative architecture designs in terms of costs and benefits; x conversely, it allows assessment of the impact a change in the architecture may have for an existing business model. In other words, it makes it possible to quantify (in a bottom-up fashion) the value of an architectural change for the business. The need for such a mapping has been also recognized by Tom Graves as well who wrote (in a rather informal, yet expressive fashion) [4]: “And who would want to go from Business Model Canvas to Archimate, anyway? […] People like building business-models. It’s wonderfully abstract, and it’s fun – like playing with model-trains, where the passengers are only imaginary and the trains really can run on time. Unfortunately (or fortunately?) the real world is a bit different from that… Real-world detail can break the best-looking business-model without even breaking out a sweat. We need to know that detail – or at least have a better sense of that detail – before committing ourselves and others to a lot of hard work and ultimate heartache.” He pinpoints that crafting an instance of the Business Model Canvas is not enough. Before attempting to implement a business model, more details have to be filled in. However, in our view,  Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. SAC’12, March 25-29, 2012, Riva del Garda, Italy. Copyright 2012 ACM 978-1-4503-0857-1/12/03…$10.00.  1694
many of these can be developed from the business model, or even have a place in it. Doing this should avoid much hard work for nothing. The remainder of the paper is organized as follows. The next section covers some background information on BMO and ArchiMate. Section 3 presents the proposed mapping. This is illustrated by means of an elaborated example in Section 4. Section 5 is devoted to a discussion of accuracy and limitations of the mapping. The paper concludes in Section 6, with conclusions and pointers to future work. 2. BACKGROUND As we aim to describe a mapping from Osterwalder’s BMO to ArchiMate, we first introduce each of them separately. This section provides both the meta-models, which we use to create the mapping in the next section. 2.1 Business Model Ontology As we mentioned before, for business modeling we chose Osterwalder’s Business Model Ontology (BMO) [1]. It provides formalization through a detailed description, yet remains relatively easy to use thanks to the basic “canvas” [3]. The ontology is based on previous research. Key concepts for business models come from the balanced score card [5], value chains [6], and stakeholder analysis [7]. As we use Osterwalder’s business model ontology, we stick to the definition of a business model as he provided it [1]: “A business model is a conceptual tool that contains a set of elements and their relationships and allows expressing a company's logic of earning money. It is a description of the value a company offers to one or several segments of customers and the architecture of the firm and its network of partners for creating, marketing and delivering this value and relationship capital, in order to generate profitable and sustainable revenue streams.” Osterwalder identified nine elements that were in at least two previous studies used too. These elements map to four general areas, similar to the balanced score card [5]: product (what? The value a company offers), customer interface (who? One or several segments of customers), infrastructure management (how? The architecture of the firm and its network of partners), and financial aspects (Profitable and sustainable revenue streams). Each of the nine elements can be decomposed into sub-elements, for example, a value proposition may consist of multiple offerings. Besides that, the elements may have attributes for example the sub-element “account” may take a name and a percentage of the total costs as attributes. Figure 1 shows all the elements and their relations. For a precise and formal description of each element, its attributes, and its relations, please see [1]. 2.1.1 BMO Meta-Model Osterwalder described the BMO in much detail in his thesis [1]. From his description, we have derived the meta-model shown in Figure 1. While in his thesis Osterwalder presents the BMO with twenty concepts, later versions include only nine concepts. These were called the Business Model Canvas (BMC) [3]. The main reduction of concepts comes from combining the elements with their sub-elements. For example, from the two pairs Value Proposition and Offering, and Capability and Resource, only Value Proposition and Resource remain. Besides that, the concepts Profit and Actor have been eliminated in the BMC. They were also the only two elements without a sub-element in the original BMO. Furthermore, Profit is not described in the thesis, although it is included in the figure showing the ontology. Profit might have been considered as superfluous, as it is simply the difference between Revenue and Cost. In the meta-model, it has no relations to any other elements either. On the other hand, Actor has several relations to other concepts. We  Figure 1: Meta-model for the Business Model Ontology 
1695
assume that the Actor concept was merged with Partnership and Agreement, to form Partner. With this, two potential other meanings of actor are lost. Both the customer and the organization for which the business model is made could be considered an actor. Table 1 shows the concepts of the BMC and the corresponding concepts from the original BMO. 2.2 ArchiMate As mentioned before, we plan to use the ArchiMate language and its extensions to capture the alignment between business models and enterprise architecture. To do that, first we briefly describe ArchiMate and two of its extensions: the Motivation extension and the Valuation extension. 2.2.1 The ArchiMate core Figure 2 shows a simplified version of ArchiMate’s meta-model. The language distinguishes between three layers: the business layer, the application layer, and the infrastructure layer. The language considers the structural, behavioral, and informational aspects within each layer. It also identifies relations between and within the layers. For a full description of the language, we refer to [2]. To facilitate architecture-based (quantitative) analysis, ArchiMate models could be annotated with attributes, which quantify measures associated with the concepts and relations. The nature of these measures may vary depending on the needs of the concrete analysis technique used. For example, one may associate core elements with costs, value, performance measures, KPIs, etc. Attributes can be defined for both input parameters and analysis results, although the distinction may not always be sharp: the result of one analysis step may be the input of a later analysis step. In our approach, the specific quantitative attributes are related to costs and revenues as defined in the BMO. In the context of this paper, only the business layer of the ArchiMate language is relevant, as business models do not go further than that. Figure 3 shows the complete meta-model of the business layer. This figure however does not show all permitted relationships: every element in the language can have composition and aggregation relations with elements of the same type; furthermore, there are indirect relationships that can be derived trough a relationship composition mechanism. [2] 2.2.2 Motivation Extension A motivational element is defined as an element that provides the context or reason lying behind the architecture of a system or behind architecture decisions. ArchiMate 1.0 does not include such concepts. Nevertheless, a proposal for ArchiMate’s extension in this sense has been made [9] to provide modeling support for business requirements management. This extension facilitates the identification, description, analysis and validation of requirements at business level and their realization in enterprise architecture models as described with the current ArchiMate 1.0 concepts. Intentions are pursued by people, called stakeholders, which can be some individual human being or some group of human beings, such as a project team, enterprise or society. In addition, intentions may be organized into certain areas of interest, called concerns such as customer satisfaction, compliance to legislation or profitability. Concerns represent internal or external factors which influence the plans and aims of an enterprise.  Assessments of these concerns are needed to decide whether existing intentions need to be adjusted or not. The actual intentions are represented by goals, principles and requirements. Goals represent some intended result – or end – that a stakeholder wants to achieve (for example, increasing customer satisfaction with 10%). Principles and requirements represent intended properties of solutions – o r  means – to realize the goals. Principles represent intended properties that are required from all possible solutions in a given context. For example, the principle “Data must be stored only once” represents a means to achieve the goal of “Data consistency” and applies to all possible designs of the organization’s architecture. Instead, requirements represent intended properties of specific solutions. For example, the requirement “Use a single CRM system” is a specialization of the aforementioned principle by applying it to the current organization’s architecture in the context of the management of customer data. For a full description of this ArchiMate extension, we refer to [9]. Figure 5 shows an example use of the goal concept.  Figure 2: Simplified ArchiMate meta-model  Figure 3: Meta-model of ArchiMate's business layer 
Businessactor
Application functionBusiness object
ArtifactDeviceSystemsoftwareNetworkBusiness processInformation
Application
ApplicationInfrastructureData objectApplicationcomponentBehaviourStructure
Businesstriggeringused byassignmentrealisationaccessassociationRelationsOrganisationalservice
Applicationservice
Infrastructureservice
1696
2.2.3 Valuation extension The valuation extension proposes several additional concepts that make the modeling of value and value related concepts possible. This extension (soon to be published) is proposed to support architecture-based IT valuations models and portfolio management techniques and represents work being currently done in the ArchiValue project [10]. The main elements define concepts such as value, risk, constraint and resource. With these, it becomes possible to connect ArchiMate with portfolio management techniques, such as Financial and Economic Models, Constrained Optimization Models, Multi-criteria Decision Making Models, Checklists, Scoring models, Relevance Trees, etc. Furthermore, these concepts are linked with the existing ArchiMate concepts and aligned with the ArchiMate meta-model. From this point of view, we argue that ArchiMate’s value concept, although restrictive, fits in the general definition of value as assumed by most valuation techniques. For this reason, we propose a broadening of the value concept definition to cover a broader range of value types. Thus, value is defined as the relative worth, utility, or importance of a core architectural element (business service, product, process, application component, etc.) or of an IT project. The resource concept is prominently present in most valuation techniques, and especially in constraint optimization models in which they are formally defined and constrained. We defined a resource as a person, (information) asset, material, and/or capital, which can be used to accomplish a goal. Per definition, we relate the resource concept to the motivation extension, in particular to goals. Figure 5 provides an example of resource use.  Figure 5: Example of resource use 3. MAPPING BMO TO ARCHIMATE A mapping from the business modeling language to the architecture language is a first step in the progress of developing architecture from business models. This section describes such a mapping. Specifically, we propose a mapping from the Business Model Ontology (BMO) [1] [3] to ArchiMate [2]. To define a mapping, we first compare the (definitions of) concepts specified by ArchiMate to the concepts defined by the BMO. After the most suitable matches for BMO concepts are found in ArchiMate, we analyze the relationships between them in order to match BMO relationships with ArchiMate relationships. Since in ArchiMate relationships are ranked according to their strength (see [2]), we choose to match a BMO relationship between two BMO concepts with the strongest possible ArchiMate relationship, between the corresponding ArchiMate concepts (unless there is a strong argument to choose otherwise).  3.1 Concept mapping We start with the nine concepts from the business model canvas, since these are the most used in practice. Table 1 shows the proposed mapping from canvas concepts (middle) to ArchiMate 
Figure 4: Mapping made visual 
1697
concepts (right). We included the BMO concepts (left) for clarity; their position has no relation with the ArchiMate concepts to the right. Often, the concepts from Osterwalder’s meta-model could be mapped onto multiple ArchiMate concepts. This is logical, as ArchiMate is far richer than the BMO. On the other hand, Cost, Revenue, and part of Value Proposition should all be mapped onto the ArchiMate concept of Value.  However, we argue that Value Proposition is a special case, and should be treated differently. As a central part of the BMO it has an aggregate function, which is best represented with an aggregate concept. This is why we use ArchiMate’s grouping relationship to model a complete Value Proposition. We assume the Value Proposition consists of three elements, which are included in this group: x A Service or Product. This represents a choice, according to the form the offering takes.  x A Goal from the motivation extension. This shows why the Product or Service is useful. x A Value. This shows the worth of reaching the Goal for the customer.  Together these three concepts grouped express a Value Proposition.  Table 2: Mapping relations Relation name in BMO From BMO concept To BMO concept Strongest ArchiMate relation Connected to Channel Channel composition Delivers to Channel Customer Segment used by Delivered by Channel Key Partnership used by has Channel Revenue Stream association Delivers Channel Value Proposition assignment isA Channel Value Proposition assignment isA Customer Relationship Channel composition Is maintained with Customer Relationship Customer Segment composition Promotes Customer Relationship Value Proposition assignment Receives Customer Segment Value Proposition assignment Is executed by Key Activity Key Partnership used by Fits, flows to, or is shared by Key Activity Key Resource access Relies on Key Activity Key Resource access Make possible Key Activity Value Proposition realization Concerns Key Partnership Key Activity assignment on Key Partnership Key Activity assignment Made with Key Partnership Key Partnership composition on Key Partnership Key Resource composition Is developed Key Value composition Table 1: Mapping concepts BMO concept Canvas concept ArchiMate concept Target Customer Customer Segments Business Actor Criterion Business Role Value Proposition Value Propositions Business Service Value Offering Product Goal Distribution Channel Channels Business Interface Link Relationship Customer Relationships Business Collaboration Mechanism Business Interaction Revenue Revenue Streams Value  Pricing Capability Key Resources Resource Resource Value Configuration Key Activities Business Process Activity Business Function Business Interaction Partnership Key Partnerships Business Actor Agreement Business Role Actor Business Collaboration Contract Cost Cost Structure Value Account 1698
to provide Partnership Proposition Fits, flows, or is shared by Key Resource Key Activity association Provided by Key Resource Key Partnership composition Allows a firm to provide its Key Resource Value Proposition composition Is  built on and depends on Revenue Stream Value Proposition composition Is for Revenue Stream Value Proposition composition Value for Value Proposition Customer Segment used by Based on Value Proposition Key Resource composition 3.2 Relations We started from Osterwalder’s relations among the concepts, as presented in Figure 1. For each relation, we decided on the most suitable ArchiMate relation type. As explained in the beginning of this section, in most cases, this is the strongest relation type possible between the concepts according to the ArchiMate meta-model. Table 2 shows the proposed mapping of relations. Relation types include assignment, realization, used by, and association. While analyzing the BMO relationships we noticed that one BMO concept, Cost, is not connected in any way to any other BMO concept, which makes it impossible to precisely relate costs to other elements in the business model. We therefore propose one notable addition to Osterwalder’s [1] original model (see Figure 1). Namely, we add a relation between Cost and Key Resource. We argue that Key Resource is the right concept to connect to, as all costs can be seen as resulting from consumption/usage of resources. They are what you pay for. 4. CASE STUDY: ARCHISURANCE To illustrate the mapping from a business model to enterprise architecture, we use a case often used in the enterprise architecture domain, the ArchiSurance case (see [2]). This case is suitable, as we can compare the outcome of our mapping to previously published architectures, which were not developed from a business model perspective. ArchiSurance is a fictitious company that provides home, travel, car, and legal aid insurance. It sells its services through a network of intermediaries. ArchiSurance’s primary operations are (1) maintaining customer relations and intermediary relations, (2) contracting, (3) claims handling, (4) financial handling, and (5) asset management. These operations are similar for most insurance companies. To support these operations, the company has several departments, and is running a collection of applications on various hardware platforms. As for most insurance companies, ArchiSurance offers “security” in the form of risk reduction to its customers.  In return for a premium, customers are covered in the case of incidents. The goal of the customers is to “be insured”. Insurance can be considered as a case of the upside-down freemium pattern [3]; many paying customers cover the costs of a few claims. Next to the premiums paid, ArchiSurance also tries to make a profit on its assets by investing them in stocks and bonds. This is common practice for most financial companies. A full case description for ArchiSurance is available in the ArchiMate Language Primer [11]. Figure 7 shows the ArchiSurance business model in the form of Osterwalder’s Business Model Canvas. We derive the business model from the case description. 
 Figure 6: ArchiSurance mapped from the BMC to ArchiMate layers  Figure 7: Business Model Canvas for ArchiSurance 
1699
Figure 6 shows the same business model, mapped to ArchiMate’s concepts. We have added the main relations between the concepts, but left out several to avoid clutter (for example, all resources should be connected to resource costs). Besides that, we have applied the layering style of ArchiMate. As addition to the descriptions given in the ArchiMate primer, we separate the customer in two groups, users and payers. This distinction is made often in insurance settings. A choice has to be made when mapping Customers to ArchiMate. Either the Role concept or the Actor concept can be chosen. To make comparison to existing models easier, we choose to do both and map Customers to a combination of Role and Actor. We discuss this in the next section. 5. DISCUSSION While the previous sections provide and demonstrate the mapping, this section discusses the results. First, we analyze the mapping, and then we touch upon some design choices. 5.1 Mapping Analysis In this section, we provide an analysis of the proposed mapping from the perspective of two criteria: completeness and clarity. Such analysis is based on the ontological analysis method as described by Wand and Weber [12], and compares the mapping of two languages (BMO and ArchiMate). It reveals which concepts are missing, and which concepts are confusing or overkill. The amount of concepts in the BMO, which have no representation in ArchiMate, defines the lack of completeness (deficiencies, Figure 8). Clarity is a combination of redundancy, overload, and excess of concepts. Redundancy means that more than one concept in the language represents one concept in the ontology (Figure 9). Overload of concepts indicates that one concept in the language represents more than one concept in the ontology (Figure 10). Concepts that do not represent any concept of the ontology cause excess of concepts (Figure 11). Lack of completeness would be a serious issue for the mapping. Lack of clarity mainly makes reverse use of it hard and makes the mapping unidirectional (only from BMO to ArchiMate). 5.1.1 Completeness All concepts from the canvas can be mapped to ArchiMate concepts. Therefore, the mapping is complete: there are no deficiencies. To achieve this, the ArchiMate extensions are needed though. This means that any BMC concept can always be mapped to ArchiMate concepts. The reverse is not always possible. 5.1.2 Excess In terms of concepts, ArchiMate is a richer language than BMO. Therefore we may expect it has many excess concepts. However, taking into account only the business layer of the original meta-model reduces the excess to three concepts: event, meaning, and representation. The extensions of ArchiMate contain more concepts that are excess. ArchiMate excess concepts do not cause any problems in the case of a transformation of a business model into an ArchiMate model, as they will never occur as result of the transformation. However, attempting to derive a business model from an ArchiMate model may result in serious problems, as there is in BMO nothing to map to from these excess concepts. In such case one solution could be to first eliminate from the ArchiMate model all the excess concepts (which obviously leads to information loss) and only after that to apply the mapping as defined in the previous sections. Nevertheless, it remains to be investigated to what extend such a solution leads to viable business models. Event is a typical concept for business process modeling. It represents something that happens and influences behavior. As opposed to other behavioral concepts, it has no duration but is instantaneous. While it may provide further explanation when going into details of behavior, it plays no further role in business modeling. Representation is the perceptible form of the information carried by a business object. Meaning closely relates to Representation. It represents the informative value of a business object. Both provide detail that is deemed unnecessary for business modeling. 5.1.3 Overload In a few cases, different BMO concepts map onto the same ArchiMate concept. This situation is mentioned in the literature as construct overload. More exactly, this situation occurs in the case of Actor, Role, Interaction, Collaboration, and Value. Overload does not lead to issues when only mapping from BMC to ArchiMate. However, for reverse engineering, a choice would have to be made, based on context, or stored data. Overload may also suggest that ArchiMate is not complete (from a business modeling perspective). For example, Value could have specializations for Costs and Benefits, and Actors may be Customers or Partners. As long as no reverse engineering takes place, none of the overloaded concepts will cause problems.  5.1.4 Redundancy In some situations, ArchiMate has more than one concept suitable to represent a single BMC concept. This situation is mentioned in the literature as construct redundancy. More exactly, this situation occurs in the case of the BMO concepts Partnerships, Activities, Relations, and Customers. One may argue that Value Proposition could also be seen as a case of redundancy. However, in this case the transformation rule maps it on a group of ArchiMate concepts, which can be considered as a new composite concept.  Concept redundancy means one has to choose one of several options when transforming a business model into an ArchiMate model. Human architects usually make these choices based on context and experience. However, this can be a serious issue for automated model transformations. For pure visualization, an  Figure 8: Deficiency   Figure 9: Redundancy 
 Figure 10: Overload   Figure 11: Excess 
1700
arbitrary concept can be chosen from the mapping options, preferably in such a manner that it represents only one BMC concept. For (formal) development of an enterprise architecture, this does not always suffice. Grouping may be a solution to the redundant mapping of Customer (and partially Partnerships) as well, as often Actors and Roles are combined in ArchiMate models (see Figure 12 for an example). On the other hand, this may reduce the design options to an undesired level.  5.2 Choice for Meta-Models Because the BMO is not a standard and no official or complete meta-model exists, we had to create one ourselves. We took Osterwalder’s thesis [1] as the main reference, as this is the most thoroughly researched work on the BMO. However, we used the concepts from the BMC for mapping the concepts, as this is the version most often used and allows for a more intuitive mapping. As the BMC does not provide relations, we took those from the BMO and included them in our BMO meta-model. For the mapping, we use two extensions to ArchiMate 1.0. We think this is necessary, especially for the resource concept. This concept plays an important role in business modeling. Particularly when quantifying business models, such a concept is needed. Without these extensions, Key Resource is hard to map from the BMC to ArchiMate, and the Value Proposition would have an incomplete mapping. The improved definition of Value, in the value extension, is also closer to the definitions used in the BMO. 6. CONCLUSIONS The main goal and contribution of this paper is a mapping between the BMO and ArchiMate. The definition of such a mapping between the de facto standards in business modeling (Osterwalder’s Business Model Ontology) and enterprise architecture (The Open Group’s enterprise architecture modeling standard, ArchiMate) provides a formal basis for modeling business models in ArchiMate. This facilitates tracing of requirements from business demands down to the design specifications. It helps discovering the effects of business model changes on architectural design. Thus, future work may consider the investigation of quantitative analysis techniques of alternative architecture designs in terms of costs and benefits. For example, the activity-based costing type of calculation techniques that accompany the business model canvas could be extended and applied to architecture models. In addition, the mapping may be used the other way around, to allow the assessment of the impact of an architectural design change on its underlying business. In other words, we believe future work may concern the calculation (in a bottom-up fashion) of the value of an architectural change for the business. For the mapping, we compared the meta-models of BMO and ArchiMate. We demonstrated that both concepts and relations can be mapped. The mapping is complete in the sense that every concept from the business model canvas can be mapped to at least one ArchiMate concept. The clarity of the mapping is less than perfect, as several concepts are overloaded or redundant, and several of ArchiMate’s concepts are excess for the BMO (and perhaps business modeling in general). The lack of clarity in the mapping makes reverse use of the mapping hard. 7. ACKNOWLEDGMENTS This work is part of the IOP GenCom U-CARE project, which the Dutch Ministry of Economic Affairs sponsors under contract IGC0816. 8. REFERENCES [1]  A. Osterwalder, “The Business Model Ontology - a proposition in a design science approach,” PhD Thesis, Universite de Lausanne, 2004. [2]  M. Iacob, H. Jonkers, M. Lankhorst, and H. Proper, ArchiMate 1.0 Specification. Zaltbommel, Netherlands: Van Haren Publishing, 2009. [3]  A. Osterwalder and Y. Pigneur, Business model generation. John Wiley & Sons, Inc., 2010. [4]  T. Graves, “Why business-model to enterprise-architecture?,” Tetradian, 27-Jul-2011. [Online]. Available: http://weblog.tetradian.com/2011/07/27/why-bizmodel-to-ea/. [Accessed: 06-Sep-2011]. [5]  R. Kaplan and D. Norton, “The balanced scorecard: measures that drive performance,” Harvard Business review, vol. 70, no. 1, 1992. [6]  M. E. Porter, Competitive advantage. Free Press New York, 1985. [7]  R. E. Freeman, Strategic management: A stakeholder approach. Boston Pitman, 1984. [8]  R. S. Kaplan and D. P. Norton, “The balanced scorecard–measures that drive performance,” Harvard business review, vol. 70, no. 1, pp. 71–79, 1992. [9]  W. Engelsman, D. Quartel, H. Jonkers, and M. van Sinderen, “Extending enterprise architecture modelling with business goals and requirements,” Enterprise Information Systems, vol. 5, pp. 9-36, Feb. 2011. [10]  Novay, “ArchiValue Project.” [Online]. Available: http://www.novay.nl/projecten/archivalue/7240. [Accessed: 06-Sep-2011]. [11]  M. Lankhorst, “ArchiMate Language Primer,” Telematica Institute, 2004. [12]  Y. Wand and R. Weber, “On the ontological expressiveness of information systems analysis and design grammars,” Information Systems Journal, vol. 3, no. 4, pp. 217-237, 1993.    Figure 12: Grouping Role and Actor 
1701
