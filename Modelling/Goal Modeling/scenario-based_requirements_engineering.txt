Scenario-based Requirements Engineering and User-Interface 
Design
© Hermann Kaindl 1
Institut für
Computertechnik
ICT
Institute of
Computer Technology
Scenario-based
Requirements Engineering
and User-Interface Design
Hermann Kaindl
Vienna University of Technology, ICT
Austria
kaindl@ict.tuwien.ac.at
Institute of Computer TechnologyApplication Domain
User
System to be builtSystem Border
Composite systemSystem overview
Scenario-based Requirements Engineering and User-Interface 
Design
© Hermann Kaindl 2
Institute of Computer TechnologyOutline
Background
Functions / tasks, goals, scenarios / use cases
Requirements and object-oriented models
A systematic design process
Scenarios / use cases for interaction design
Summary and Conclusion
Institute of Computer TechnologyUser wishes / needs
IEEE Standard:
“A condition or capacity ne eded by a user to solve 
a problem or achieve an objective.”
“The < system > shall be able to ...”
- system to be built- composite system
Example: “The ATM shall accept a cash card.”
Requirements modeling
What are requirements?
Scenario-based Requirements Engineering and User-Interface 
Design
© Hermann Kaindl 3
Institute of Computer TechnologyScenarios – Stories and narratives
For representation of
●cultural heritage
●explanations of events
●everyday knowledge
Human understanding in terms of specific situations
Human verbal interactions by exchanging stories
Institute of Computer Technology“particular cases of how the system is to be used”
Use-Case Report (according to Unified Process):
1. Brief Description
2. Flow of Events
3. Special Requirements4. Pre-conditions
5. Post-conditions
6. Extension Points
7. Relationships
8. Use-Case Diagrams
9. Other Diagrams
Use cases
Scenario-based Requirements Engineering and User-Interface 
Design
© Hermann Kaindl 4
Institute of Computer TechnologyUse-case diagram
UML graphical notation
Ellipse: use case
Stick man: actor
Connecting line: association
Name of actorName of use case
Institute of Computer TechnologyInteraction design
Design of interactions between human and 
computer
Relation to requirements engineering
Relation to task analysis
No commitment to specific user interface
Scenario-based Requirements Engineering and User-Interface 
Design
© Hermann Kaindl 5
Institute of Computer TechnologyWidgets
Widget
Container Widget Widget for Selecting an Action Control ToolInteractive objects presented on the display
●windows 
●buttons 
●scroll bars
User interface elements
Classification hierarchy of widgets
Institute of Computer TechnologyOutline
Background
Functions / tasks, goals, scenarios / use cases
Requirements and object-oriented models
A systematic design process
Scenarios / use cases for interaction design
Summary and Conclusion
Scenario-based Requirements Engineering and User-Interface 
Design
© Hermann Kaindl 6
Institute of Computer TechnologyScenarios: “sequences of actions aimed at 
accomplishing some task goal”
Goals: “partially specified states that the user 
considers as desirable”
Use cases: “particular cases of how the system is to 
be used”, “classes of scenarios”
Functions: “effects achieved by some entity”
Tasks: “pieces of work that a person or other agent 
has to (or wishes to) perform”Glossary
Institute of Computer TechnologyFunctional requirements
Describe required functionality not yet available
Functional user requirements may be high-level statements of what the system should be able to 
do.
Functional software/system requirements should 
describe the functions of the software/system to be 
built in detail (but not yet its design or 
implementation).
Scenario-based Requirements Engineering and User-Interface 
Design
© Hermann Kaindl 7
Institute of Computer TechnologyRent Available Video :
A member of the video store iden tifies himself/herself to VSS 
(Video Store Software).
VSS shall check the identification.If the identification is successful, VSS sha ll start a transaction 
and present a selectio n of video titles.
The member selects a video ti tle that is available and 
indicates the intent to re nt (a copy of) the video.Scenario – Video Store Example
Institute of Computer TechnologyVSS shall book this rental on the account of the member and 
ask the clerk to hand out a video copy to the member.
The clerk hands out a copy of the video title and 
acknowledges this to VSS.
VSS shall again present a se lection of video titles.
The member does not select fu rther titles, but initiates the
termination of the transaction.
VSS shall issue a good-bye message and terminate the 
transaction.Scenario – Video Store Example (cont.)
Scenario-based Requirements Engineering and User-Interface 
Design
© Hermann Kaindl 8
Institute of Computer TechnologyA member of the video store iden tifies himself/ herself to VSS
(Video Store Software).
VSS shall check the identification.
By-Function :Member Identification Check
...
VSS shall book this rental on the account of the member and 
ask the clerk to hand out a video copy to the member.
By-Function :Video Rental Booking
Video Handing-out Request
...By-Function – Video Store Example
Institute of Computer TechnologyRent Available Video By-Function Video Rental Booking
Video Rental Booking :
VSS shall book the rental of a copy of a vide o title on the 
account of the memb er, and reduce the nu mber of available
copies of the video title by 1. Functional requ. – Video Store example
Scenario-based Requirements Engineering and User-Interface 
Design
© Hermann Kaindl 9
Institute of Computer TechnologyMember Has Video for Rent By-Scenario Rent Available Video
Member Has Video for Rent :
A member of the video store has a copy of a video title from 
the store for rent.Goal – Video Store example
Institute of Computer Technology
Bank 
CustomerWithdraw Cash
Deposit Cash
Transfer between 
Accounts«include»
Identify Customer«include»
«include»Use-case diagram
Scenario-based Requirements Engineering and User-Interface 
Design
© Hermann Kaindl 10
Institute of Computer TechnologyOutline
Background
Functions / tasks, goals, scenarios / use cases
Requirements and object-oriented models
A systematic design process
Scenarios / use cases for interaction design
Summary and Conclusion
Institute of Computer TechnologyDomainDomain
Real worldRequirementsRequirements
AbstractionModelRequirements and object-oriented models
Scenario-based Requirements Engineering and User-Interface 
Design
© Hermann Kaindl 11
Institute of Computer Technology«stereotype»
Requirement
«stereotype»
Envisioned Scenario«stereotype»
Functional Requirement«stereotype»
Quality Requirement
«stereotype»
Constraint on System
«stereotype»
Constraint on ProcessTypes of requirements
Institute of Computer TechnologyTypes of requ. – Constraints on system
Performance
Reliability
Security
Safety
Portability
Maintainability
Reusability
Interface
Usability
Scenario-based Requirements Engineering and User-Interface 
Design
© Hermann Kaindl 12
Institute of Computer TechnologyTypes of requ. – Constraints on process
Specific development process to follow
Specific programming language for implementation
Specific tools to be used
Specific hardware to be used
Political issues
Time to market
Terms of delivery
Cost
Institute of Computer TechnologyConflicts between Quality Requirements
VSS example
VSS shall allow direct access to member data. 
VSS shall protect member data from illegal access.
Usability vs. Security
Trade-off
Common in complex systems
Scenario-based Requirements Engineering and User-Interface 
Design
© Hermann Kaindl 13
Institute of Computer Technology
OOA model – ATM Example
Entry Station
out of order
ATM
owner
1 *Cash Card
bank code
card code
serial numberuser*
*Transaction
date-time
Remote transaction
Cashier
nameCashier Station
Customer
name
address
passwordCash notes
on hand
dispensedrecipient
* *Cashier transaction
provider
**user**handler
**
Institute of Computer TechnologyOOA model adapted – ATM Example
Entry Station
out of order
ATM
owner
1 *Cash Card
bank code
card code
serial numberuser*
*Transaction
date-time
Remote transaction
Cashier
nameCashier Station
Customer
name
address
passwordCash notes
on hand
dispensedrecipient
* *Cashier transaction
provider
**user**handler
** *handler *
handler
**
Scenario-based Requirements Engineering and User-Interface 
Design
© Hermann Kaindl 14
Institute of Computer Technologyinsert card
request PINOOA model – UML sequence diagram
enter PIN
request amount
enter amount
request confirmation
enter confirmation
dispense card
take card
dispense cashRepresents a scenario
Interaction of instances
Activation
System border
a1:ATM c1:Customer
Institute of Computer Technology0..10..*
0..10..*
rent to1..*1..*in stock asVideo Title
...
Video
...
Member
...Customer
...Clerk
...
1..*
maintained by
VSSworks with
maintains
1..*
OOA model – Video Store example
Scenario-based Requirements Engineering and User-Interface 
Design
© Hermann Kaindl 15
Institute of Computer Technologyhand out! (Video)
hand out (Video)
acknowledge ()OOA model – UML sequence diagram
Unnamed instances
Concurrent objects
select title from (List)
terminate ()
good-bye ()check Member (ID)
select title from (List)
rent (Video Title):VSS :Clerk :Member
Institute of Computer TechnologyConceptual
model

Scenario-based Requirements Engineering and User-Interface 
Design
© Hermann Kaindl 16
Institute of Computer TechnologyRequirements vs. requirements representation
Reuse of requirements representation only
Distinction between
descriptive and
model-based
Descriptive:
need described
Model-based:abstraction ofwhat the system should look like
Institute of Computer TechnologyOutline
Background
Functions / tasks, goals, scenarios / use cases
Requirements and object-oriented models
A systematic design process
Scenarios / use cases for interaction design
Summary and Conclusion
Scenario-based Requirements Engineering and User-Interface 
Design
© Hermann Kaindl 17
Institute of Computer TechnologyIdea: navigation in the metamodel graph
Excerpt: Goals
ScenariosBy-Scenario
Functional RequirementsBy-FunctionSystematic process
Institute of Computer TechnologyIdea: navigation in the metamodel graph
Excerpt:
Functional RequirementsScenarios
By-FunctionGoals
By-ScenarioSystematic process
Scenario-based Requirements Engineering and User-Interface 
Design
© Hermann Kaindl 18
Institute of Computer TechnologyScenariosGoals
By-Scenario
Functional RequirementsBy-Function
What is known already?
Old system or system to be built?Idea: navigation in the metamodel graph
Excerpt:Systematic process
Institute of Computer TechnologySystematic process – Given goals
1. If some goal is known from the old system, then figure out 
whether this is still a goal in the new system that will 
include the system to be built.
E.g., Meeting a Friendly Person, Customer Has Cash.
2. If some goal is known for the new system, then try to link it 
to one or more scenarios fo r the new system that are 
already known.
E.g., Customer Has Receipt – Get Cash from ATM.
3. If some goal that is known for the new system cannot be 
linked to any scenario for th e new system, then develop 
one or more such scenarios and link them to the goal.
E.g., Customer Has Cash – Get Cash from ATM.
Scenario-based Requirements Engineering and User-Interface 
Design
© Hermann Kaindl 19
Institute of Computer TechnologySystematic process – Given scenarios
1. If some scenario is know n from the old system, then 
determine the goals that are achieved through it.
E.g., Get Cash from Human Cashier – Customer Has Cash.
2. If some scenario is known fr om the old system, then try to 
develop an analogous scen ario for the new system.
E.g., Get Cash from Human Ca shier – Get Cash from ATM.
3. If some scenario is known for the new system, then try to 
link it to one or more goals and,  each action contained in it 
to one or more functions fo r the new system that are 
already known.
E.g., Get Cash from ATM – Custo mer Has Cash – Cash Provision.
Institute of Computer TechnologySystematic process – Given scenarios (cont.)
4. If some scenario that is kn own for the new system cannot 
be linked to any goal for th e new system, then determine 
one or more goals and lin k them to the scenario.
E.g., Get Cash from ATM – Customer Has Cash.
5. If one or more actions contai ned in some scenario that is 
known for the new system cannot  be linked to any function 
for the new system, then de velop one or more such 
functions and link them to th e actions of this scenario.
E.g., Get Cash from ATM – Receipt Provision.
Scenario-based Requirements Engineering and User-Interface 
Design
© Hermann Kaindl 20
Institute of Computer TechnologySystematic process – Given functional requ.
1. If some function is known fr om the old system, then figure 
out whether this is still a re quired function in the new 
system that will include the system to be built.
E.g., finger prints – Cash Card Acceptance, Cash Provision.
2. If some function is known for the new system, then try to 
link it to one or more actions contained in s cenarios for the 
new system that are already known. 
E.g., Check Amount – Get Cash from ATM.
3. If some function that is known for the new system cannot 
be linked to any action cont ained in any scenario for the 
new system, then develop one or more such scenarios and 
link one or more actions contai ned in them to the function. 
E.g., money transfer between accounts.
Institute of Computer TechnologySystematic process (cont.)
Partial sequences of steps selected according to 
what is known – agenda
Both model-driven and data-driven
Successful termination – agenda empty
Improvement of
- Completeness
- Non-redundancy- Understandability
But no guarantee
Scenario-based Requirements Engineering and User-Interface 
Design
© Hermann Kaindl 21
Institute of Computer Technology
Institute of Computer Technology

Scenario-based Requirements Engineering and User-Interface 
Design
© Hermann Kaindl 22
Institute of Computer Technology
Institute of Computer Technology

Scenario-based Requirements Engineering and User-Interface 
Design
© Hermann Kaindl 23
Institute of Computer Technology
Institute of Computer TechnologySupporting the Primary Tasks
Presenting choice of conceptual entities to be 
modeled
Providing example descriptions of conceptual 
entities
Guidance in linking entities according to the method
Scenario-based Requirements Engineering and User-Interface 
Design
© Hermann Kaindl 24
Institute of Computer TechnologySupporting the Secondary Tasks
Active guidance through step-by-step instructions 
and monitoring
Immediate feedback at each point
Letting system perform actions on one‘s behalf
Institute of Computer TechnologyOutline
Background
Functions / tasks, goals, scenarios / use cases
Requirements and object-oriented models
A systematic design process
Scenarios / use cases for interaction design
Summary and Conclusion
Scenario-based Requirements Engineering and User-Interface 
Design
© Hermann Kaindl 25
Institute of Computer TechnologyInteraction scenarios with attached task descriptions
Scenarios as a prerequisite
Example scenario: Get Cash from ATM
Attached tasks:
- Entering PIN code
- Cash provision
- ...
Tasks of user and machine
Institute of Computer Technology1. Put tasks into predefined categories
Based on a hierarchy of task categories
Task
User Task System Task
Complementary Task Output Task Internal System Task
Scenario-based Requirements Engineering and User-Interface 
Design
© Hermann Kaindl 26
Institute of Computer Technology2. Aggregate complementary tasks
Task of user and complementary task of machine
Together make up an interaction through the UI
Interaction Task
Complementary Task User Task
Institute of Computer Technology3. Compose and decompose tasks
Find right granularity
aggregate
decompose
Aggregate Interaction Task
Interaction Task
Scenario-based Requirements Engineering and User-Interface 
Design
© Hermann Kaindl 27
Institute of Computer Technology4. Classify tasks according to the kind of interaction
Based on defined hierarchy of Interaction Tasks
Interaction Task
Aggregate Interaction Task Task of Selecting an Action I/O Task
Institute of Computer Technology5. Map to widget classes
Control I/O TaskContainer Aggregate interaction taskWidget of selecting an action Task of selecting an action
Scenario-based Requirements Engineering and User-Interface 
Design
© Hermann Kaindl 28
Institute of Computer TechnologyEssential use cases 
Choose
Dispense cash
Take cashVerify identity
Offer choicesIdentify selfATM UserLarry Constantine
Essential modeling
Abstract usage of system
ATM example:
Institute of Computer TechnologyConcrete vs. abstract – ATM Example  
John inserts his cash card with the magnetic stripe 
up into the slot of the ATM machine of the bank …
The customer initiates a transaction by inserting a 
cash card.
Insert card
Identify self
Request
There is a whole spectrum!
Scenario-based Requirements Engineering and User-Interface 
Design
© Hermann Kaindl 29
Institute of Computer TechnologyConcrete vs. abstract – Discussion
Being concrete is one of the main points of 
scenarios, in contrast to abstract specifications!
Scenarios may talk about more general uses 
through specific examples.
How concrete is best (for which purpose)?
Too much detail may contain built-in, premature 
assumptions (about a UI).
Abstract descriptions leave choices open in the UI design.
Institute of Computer TechnologyContent model
Larry Constantine
Abstract interface contents
Abstract components to be supplied by the user interface, placeholders  for the actual visual 
components in the implemented interface
Video Titles
(list of titles)Members
(list of
members)Member 
Identification
Scenario-based Requirements Engineering and User-Interface 
Design
© Hermann Kaindl 30
Institute of Computer TechnologyProcess of content modeling
Larry Constantine
Examining (validated) use case narratives
For each user step, what will have to be supplied for 
user to complete step?
External view
Language of user and application domain
What information will be needed by and from the user?
What functions will be needed by the user?
Institute of Computer TechnologyEssential use case – Video Store Example 
…Hand out copyClerk
Choose video title 
for rent
Book rental
Request hand-out of 
video copy
… …Verify identity
Offer video title choicesIdentify selfVSS User
Scenario-based Requirements Engineering and User-Interface 
Design
© Hermann Kaindl 31
Institute of Computer TechnologyInteraction context
Larry Constantine
Different tasks carried o ut in different spaces / 
contexts
Distinct interaction contexts in UI
Video Titles
(list of titles)Title SelectorTitle Selection Dialogue
Institute of Computer TechnologyContext navigation map
Larry Constantine
Navigational relationships among interaction 
contexts
Member 
Identification 
Dialogue Title 
Selection 
DialogueVideo Copy 
Hand-out 
Dialogue
Scenario-based Requirements Engineering and User-Interface 
Design
© Hermann Kaindl 32
Institute of Computer TechnologyImplementation model
Larry Constantine
Layout of the UI and interaction between user and 
system
How to embody each abstract interaction context in the UI as an actual interaction context?E.g., as a screen, window, dialogue box, etc.
How to realize each abstract component as some actual visual component on the UI?E.g., as a tool, command button, text box, etc.
Institute of Computer TechnologyOutline
Background
Functions / tasks, goals, scenarios / use cases
Requirements and object-oriented models
A systematic design process
Scenarios / use cases for interaction design
Summary and Conclusion
Scenario-based Requirements Engineering and User-Interface 
Design
© Hermann Kaindl 33
Institute of Computer TechnologySummary and Conclusion
Goals, scenarios and functions / tasks can be 
combined.
This combination serves as a basis for a systematic 
approach.
Scenarios / use cases may help both in 
requirements engineering and in interaction design.
In this sense, scenario-based requirements engineering can facilitate interaction design.
Institute of Computer TechnologyLiterature
Carroll, J. M., editor, Scenario-Based Design: 
Envisioning Work and Technology in System 
Development . New York, NY: John Wiley & Sons, 
1995.
Constantine, L., and Lockwood, L. A. D., Software 
for Use . New York, NY: ACM Press, 1999.
Scenario-based Requirements Engineering and User-Interface 
Design
© Hermann Kaindl 34
Institute of Computer TechnologySelected work of this tutorial presenter
Kaindl, H., A Design Process Base d on a Model Combining Scenarios 
with Goals and Functions, IEEE Transactions on Systems, Man, and 
Cybernetics (SMC) Part A 30(5), 2000, pp. 537–551.
Kaindl, H., Kramer, S., and Hailing, M., An Interactive Guide Through a Defined Modelling Process, in 
People and Computers XV, Joint Proc. of 
HCI 2001 and IHM 2001 , Lille, France, September 2001. Springer, 
London, England, pp. 107–124.
Kaindl, H., and Jezek, R., From Usage Scenarios to User Interface 
Elements in a Few Steps, in Proc. 4th International Conference on 
Computer-Aided Design of User Interfaces (CADUI’2002 ), 
Valenciennes, France, May 2002,
http://foruse.com/articles/kaindl.pdf .
Kaindl, H., Is Object-Oriented Requir ements Engineering of Interest?, 
Requirements Engineering , 10, 2005, pp. 81–84.
Kaindl, H., and Svetinovic, D., On confusion between requirements and 
their representations, Requirements Engineering , 15, 2010, pp. 307–
311.
