A Framework for Enterprise Sy stems Engineering Processes 
 
Dr. Robert S. Swarz 
Tel: +1 781-271-2847 
Email:  rswarz@mitre.org 
Fax:  +1 781-271-2841  Dr. Joseph K. DeRosa 
Tel: +1 781-271-3332 
Email:  jderosa@mitre.org 
Fax:  +1 781-271-3803
 
The MITRE Corporation 
202 Burlington Road 
Bedford, MA 01730-1420 
U.S.A. 
 
Abstract: In this paper, we describe how traditional systems engineering processes, such as those delineated in the 
ANSI//EIA 632 standard, are becoming inadequate for today’s complex systems, in which there is a rich set of 
interconnections and interrelationships between all of the systems in an enterprise. We further suggest that a new discipline (or an extension of the old discipline) is developing in response, called Enterprise Systems Engineering  
(ESE).  
 We next explain some salient characteristics of complex adaptive systems and motivate how these properties, such 
as variation, interaction, and selection can be used to sh ape the evolution of the enterprise. We outline five important 
new processes: Technology Planning, Capability-Based En gineering Analysis, Enterprise Architecture, Strategic 
Technical Planning, and Enterprise Analys is and Assessment that can be used to  exercise a degree of control beyond 
that which can be afforded by traditional means. 
 
Key words:  Enterprise Systems Engineering, Evolution, Variet y, Selection, Process, Enterprise Architecture, 
Capabilities 
 
ICSSEA 2006 Swarz & Derosa 
 21.  INTRODUCTION 
 
In 1999, the Electronic Industries  Alliance (EIA) published their Processes for Engineering a System . This has 
become an American National Standard (ANSI/EIA 632), and is consistent with the approach being taken by the 
International Standards Organization’s standard ISO 15288. In addition, the Institute of Electrical and Electronics 
Engineers (IEEE) standard 1220 represen ts an application of EIA 632 to the electronics and elect rical industry. The 
INCOSE systems engineering process, shown in Figure 1, is based on EIA 632. Thus, the world has converged on a systems engineering standard. Although widely adopted and accepted, this mode l may prove to be inadequate for 
today’s enterprise environment, where no single management entity has control over the whole. 
 
Consider, for example, the World-Wide Web (WWW). 
Who is in charge of the Web? Who determines its 
requirements and makes its products? Who funds and 
schedules the rollout of its components? The WWW 
may be the best example of an “enterprise” as this paper envisions it. It is much more than just the satisfaction of 
a user requirement within budget and time constraints 
(and with the appropriate level of quality, dependability, etc.). The WWW is governed (mainly) by the “World-
Wide Web Consortium” (W3C), which is a collection 
of “stakeholders” (developers, users, etc.), who have an interest in its operation and evolution who collaborate 
to produce the standards by which the WWW operates. 
Could the current INCOSE systems engineering model suffice in this environment? 
 
The INCOSE model shows how to transform needs into 
a system. It includes a total of thirteen processes in four 
areas. For example, the System Design area defines 
basic tasks, such as Define the System Objectives, Requirements, Evolve Design and Operations Concepts, 
                              
Figure 1.  ANSI/EIA 632 
 
Select a Baseline, Verify that the Ba seline Satisfies the User, and Iterate th e Process through Lower Level Analysis. 
At The MITRE Corporation (a not-for-profit Federally-Fu nded Research and Development Center), we have been 
interested in extending systems engineering into the enterprise context (DeRosa 2005, Kuras and White 2005). 
 But what's missing? Even the simplest systems interoperate with and are interdependent with other systems in the 
broader enterprise. Their development processes follow organizational vision, goals, and governance, necessarily 
changing as political and financial environments change. Th eir requirements change as the people who operate them 
adapt the processes for their usage. They evolve as technology evolves and matures. Traditional Systems 
Engineering (TSE) does not naturally account for these comple x, adaptive influences. Thus, we consider Enterprise 
Systems Engineering (ESE) to be an augmentation of Traditional Systems Engineering (TSE) with people, processes, and technology, subject to extern al (“environmental”) influences. 
 
We can represent systems engineering in the enterprise context as shown in Figure 2. The left-hand side of the 
drawing indicates that any system under development is 
embedded in a network, and the right-hand side of the drawing indicates that, in developing any system, we 
must consider the people, pr ocesses and technology that 
make up the system as well as its environmental 
stresses. 
 Figure 2.  People, Processes, and Technology Interacting 
 

ICSSEA 2006 Swarz & Derosa 
 32.  ENTERPRISE SYSTEMS ENGINEERING 
 
2-1  A New Discipline 
 
The burgeoning discipline of Enterprise Systems Engineering  (ESE) is consequently developing to deal with 
complex adaptive systems. ESE extends the TSE disciplin e and processes in new and different ways. Although the 
ESE state-of-the-art is still quite imma ture, the interest and potential benefit of developing such a discipline is 
extraordinarily high because of the pervasive nature of the internet, wireless communication, ubiquitous computing, 
intelligent agents, non-hierarchical control, etc. 
 We define an enterprise  not as a business entity, nor a very large system, nor even as a system-of-systems, but an 
entity arising from taking a completely different perspectiv e suggested by these complex behavior patterns. It is not 
simply a matter of scale. We consider an enterprise to  be a collection of systems whose operational capabilities are 
inextricably intertwined with considerations of people, processes, and technology, whose boundaries are often 
imprecise, and which can often be  characterized by a set of special, additiona l properties, such as emergent behavior, 
non-determinism, and environmental dependencies. ESE also considers the entire environment in which the 
system(s) must operate, including, but not limited to, the human-machine interface, the governance structure, 
maintenance and support, etc. The architecture of the en terprise and both its explicit requirements and implicit 
potential capabilities will evolve and emerge as trends in technology, scope of the enterprise, the aggregate user base, 
and other factors evolve over time. 
 Emergent behavior occurs when a collection of systems operate in an environment that enables different, often more 
complex, behaviors than could have been predicted by observing their individual characteristics. Thus, an 
enterprise’s behavior is often unpredictable and may represent a new level of the system's evolution. The challenge to the enterprise systems engineer is to exploit these ne w, emergent capabilities for the user community’s benefit. 
 
The number of interactions in an enterprise increases expo nentially with the number of systems, thus potentially 
allowing for many new and subtle capabilities and behavi or patterns to emerge in non-deterministic ways. The 
challenge to the enterprise systems engi neer is to characterize and constrain the enterprise’s complex behavior so 
that its evolution, while not predictable, is controllable.   
The environment of the enterprise includes not only the systems of which it is composed, but the people (i.e., 
organizations), processes (e.g., governance and standards), and technology that surround it and profoundly effect its 
operation and evolution. The challenge to the enterprise systems engineer is to understand and adapt to these 
environmental dependencies so that the enterprise can evolve in response to changes in its environment while remaining stable and controllable. 
 
2-2  Variation, Interaction, and Selection in Complex Adaptive Systems 
 
If we are to treat an enterprise as a complex adaptive system, we must take into account that variation provides the 
“raw material.” Consider some well-known examples: VHS vs. Betamax, PC vs. Macintosh, MS Windows vs. Linux, Blu-ray vs. HD-DVD, etc. Variation brin gs innovative strategies into the enterprise which take the form of new 
technologies or new processes for doing things that serve enterprise needs. Variation increases the choices available 
to the enterprise, and more choices increase complexity. In mo st situations variation is healthy for the enterprise and 
can be exploited. 
 
Interaction patterns shape the events in which members of a complex system become directly involved and provides the opportunities that lead to creation and destruction of va rieties. Interaction patterns help determine what will be 
successful and help shape the dynamics of the interaction patterns themselves. 
 Finally, selection can be employed to promote healthy adaptation. This involves making decisions on which 
strategies should be prolifer ated and which eliminated. 
ICSSEA 2006 Swarz & Derosa 
 4 
 
2-3  Shaping the Enterprise through ESE processes 
 
ESE addresses the whole of the enterprise as a comple x adaptive system. Processes are the means to achieve 
productive ends and to shape the evolution of an enterprise. DeRosa and McCaughin (2005) described how ESE 
processes create a balance between the complementary enterprise behaviors of  effectiveness and efficiency. They 
further showed that complexity is the enterprise characteristi c that yields effectiveness, as order is the characteristic 
that yields efficiency. ESE processes shape the balance between complexity and order by influencing the amount of 
variation and selection introduced into the overall development process.  
We should say a word about Capability Maturity Models  Integration (CMMI). Traditi onal CMMI is directed at 
improving the quality of a system by improving the quality of the processes producing it. It provides a framework by 
which we can measure and improve efficiency and quality (measured in fewer defects.) Thus, CMMI concentrates 
on only one of the dimensions we engineer in complex systems—that in which selection of options produces order which, in turn, yields increased effi ciency. Enterprise processes generalize the notion of CMMI to include the 
dimension in which a variety of strategies produces complexity which in turn yields increased effectiveness. Such a 
model increases order and complexity in a balanced way to  produce the combination of efficiency and effectiveness 
that best fits the enterprise goals. A generalized CMMI model has not yet been developed for ESE. 
 
One can view these processes as being more what a gardener  does in tending a garden than what a watchmaker does 
in making a fine timepiece. A thoughtful gardener takes seve ral steps: (1) takes advantage of what's available in the 
soil, the climate and seeds; (2) plans the crops to be ha rvested; (3) lays out framework for the placement and timing 
of crops; (4) plans the strategy for implementing the garden adapting universal tools and techniques to the local environment; and then adopts a regimen of fertilizing, watering, weeding to match the unfolding of the growth of the 
garden and the unfolding of the environmental conditions. The watchmaker, however, has long since defined the 
precise requirements, procured the totality of materials and executed assembly of a timepiece that is easily repeated. 
The images of the gardener and watchmak er are good metaphors for ESE and TSE. 
 
DeRosa, Swarz, and Rebovich (2006) proposed five ESE processes designed to shape the evolution of an enterprise through a balance of actions that promote efficiency a nd effectiveness: Technology  Planning, Capabilities-Based 
Engineering Analysis, Enterprise Ar chitecture, Strategic Technical Pla nning, and Enterprise Assessment and 
Analysis, as shown in Figure 3, below. The right side of the figure represents the EIA-632 processes for engineering 
a system. The left-hand side represents business pro cesses derived from Gharajedaghi and the middle section 
includes the five ESE processes.  
 
 
Figure 3.  ESE Processes 
ICSSEA 2006 Swarz & Derosa 
 53.  IMPLEMENTING ESE 
 
For each of the ESE processes defined, we have built a process toolkit. The ph ilosophy employed is similar to that 
of our traditional CMMI processes. The toolkits guide en gineers in the development of the engineering processes 
that support development of their system components in the context of the larger enterprise. 
 
Each toolkit gives guidance on the use of the toolkit. It advises that if you do not have that particular process in place, you use the toolkit to define and implement it, and if you do have one in place, to tailor and monitor it. A 
"Process Assets" section outlines standard process elements, steps in the process, and tailoring guidelines. Then it 
lays out the compliance features consisting of process goals and self-assessment. It has a subsection calling for any policy that drives the proces s, and lastly has a place for relevant refe rences. A "Support Assets" section of the 
template calls for procedures and tools and techniques. It augments that with any available training, and then gives 
case studies to clarify the material. A process diagram is calle d for to illustrate the totality of the process. All of this 
is available to all staff on the corporate web site. 
 We next present the essential elements of the toolkits for e ach of the five ESE processes. Each of these processes is 
currently being piloted in one or more programs at the Electronic Systems Center of the U.S. Air Force Material 
Command.  
 
4.  THE ESE PROCESSES 
 
4-1  Technology Planning 
 
Technology Planning develops and asse sses technical opportunities in th e marketplace. Development favors 
innovation, and assessment favors integration. 
 The purpose of Technology Pla nning process is to watch trends in both the commercial marketplace and the research 
community. For example, the Internet brought us the Internet Protocol (IP) as the pervasive communications 
protocol standard. The World Wide Web established the hypertext transfer protocol (HTTP) and ushered in the era of "pull" verses “push” of information exchange. The Extensible Markup Language  (XML) became the preferred 
standard for data representation. The “dot-com” boom-turned-bust left us with an N-tier architecture firmly in place 
as the structure of choice for informa tion systems. Watching such trends helps establish the technical strategy and 
implementation guidance in the Strategic Technical Plan. It defines which tec hnologies and strategies are in the 
R&D phase, which are in the experimental phase, which are preferred options, and which are so pervasive as to be mandated. 
 
The most effective technology is used in systems development and acquisition. The identification of technology that satisfies system needs and corrects shortfalls is necessary  for the successful acquisition,  integration and sustainment 
of systems. All system components must maintain a current awareness and worki ng knowledge of applicable 
technology and actively plan for their incorporation into th e enterprise. To accomplish this, the technology planning 
process will achieve three primary outcom es: (1) identification of technology needs, (2) assessment of technology 
maturity, applicability, and effectiveness with respect to  system application, and (3) planning for technology 
transition to a sustainable product.  
Technology Needs. The development of optimal technical solutions to  solve functional objectives requires an in-
depth understanding of those objectives and available or emerging technologies. To this end, it is necessary to remain current with the existence, capabilities, and status  of existing and emerging technologies and to continually 
answer the question: “What technical characteristics or desired services must be achieved to satisfy an functional 
objective?”  
Technology Assessments. For a technology or group of technologies to be consider ed an acceptable solution to a 
functional objective, it is necessary to assess the maturity, capability, reliability, supportability, maintainability, and 
interoperability of candidate technolo gies. The assessment should also include a comprehensive understanding of 
the risks and potential impact of adopting the proposed technology.  
ICSSEA 2006 Swarz & Derosa 
 6Technology Transition. Merging an accepted technology solution into th e enterprise needs to be integrated with 
overall program planning and funding for all the programs a ffected. It should also be merged in a logical manner 
that most effectively provides delivery of services to the AF Enterprise. 
 
4-2  Capabilities-Based Engineering 
 
Capabilities-Based Planning (CBP) is a business process th at manages the evolution of the enterprise as an 
interrelated set of capabilities, rather than a set of syst ems or programs. Capabilities-Ba sed Engineering (CBE) is the 
disciplined engineering process (technical framework) for purposeful evolution of the enterprise. CBP and CBE take 
a holistic view of the enterprise and define capabilities in te rms of the big picture. In doing so, they define issues 
from an enterprise perspective, rather  than from a Program perspective. They  set goals that the programs use to 
produce variety, i.e., competing strategies to accomplish t hose goals. CBE is the first step in what Ackoff and 
Gharajedaghi call idealized design. It operationalizes the mo st exciting vision of the future. We describe three key 
process modules. 
 Purposeful Formulation Process Module . This module establishes the framework for analysis and synthesis of the 
enterprise as a purposeful systems (see Ackoff & Emery 1972). It has several key steps: 
 
• Assess Stakeholder Interests
. Knowing the range of stakeholder interests is the first step. This makes 
apparent to stakeholders any conflicting demands and involves them in a participative process to dissolve 
conflicts. 
• Specify Outcomes Spaces . This step defines in simple but broa d terms desired enterprise outcome spaces, 
that is, the operational goals, contexts, and conditions which solutions address. It stimulates variety in the 
solution set. 
• Frame Capability Portfolios . Capability portfolios gather together all the structural elements that must 
cooperate over time to provide the desired operational outcomes in capability areas. 
 
Exploratory Analysis Process Module. This module assesses the technical f easibility and operational viability of 
various courses of action. It includes several key steps:  
• Assess Performance and Cost
. The performance and cost of portfolio options is assessed over the broad 
range of formulated contexts and conditions. Critical capability drivers, capability gaps, and possible areas of significant improvement are identified in terms of the ability of concepts and systems to achieve the 
desired outcomes. 
• Determine Need for More Variety
. By assessing the risks and opportunities from the foregoing capability 
analyses (e.g., mission shortcomings, excessive costs, or hypothesized opportunities for significant 
performance improvements), decide whether additional solutions are needed. A decision to explore 
alternative solution concepts may proceed in parallel with continued portfolio planning. This leads to a 
time-dependent CBP process linked to a portfolio evolution strategy. 
• Explore Additional Concepts . This activity represents a comprehensive effort to identify possible changes 
in the enterprise architecture or implementing tech nologies that will generate additional concepts. The 
focus on capabilities, verses existing solutions, should facilitate thinking about new ways and means to 
accomplish a mission, and thus, potentially foster new transfor mational capabilities.  
 
Evolutionary Planning Process Module. The previous two options determined where we wanted to go and what 
courses of action we might take to get there. This module forms the basis for selection of the winning options.   
• Examine Evolution Strategies
. Examine and integrate alternative evolution strategies. Construct time-
phased cost and performance profiles for different evolution paths. Such strategies must typically integrate (or at least de-conflict) component program planning, budgeting, and decision-making. 
• Assess Enterprise Impacts
. Asses plans for their impacts (technical, capability, and resource) on other 
capability portfolios and the broader enterprise. Evolutionary planning activities are conducted at various compositional levels (e.g. program, portfolio, and enterprise), typically distributed among various 
organizations. Different stak eholders may manage programs that contribute to a particular capability, and a 
program may well support multiple capabilities. Such  complicated interrelations present challenges for 
ICSSEA 2006 Swarz & Derosa 
 7evolutionary planning, and as in all CBP modules, establishing partnering relationships across the 
enterprise is critical. 
• Select Concepts . Select capability solution altern atives, constrained by fiscal realities, acceptable degrees of 
risk and potential opportunities. Provide informati on and supporting analyses that will most influence 
selection decisions. Balance the adequ acy of covering the decision trad e space with the need to not delay 
decisions. 
• Develop Portfolio Roadmap . A capability portfolio roadmap documents the analysis, planning, and 
decisions for the future of a capability area. A roadma p is used as a fundamental capability planning and 
management tool to enable the development of materiel solutions which meet the user’s needs. A roadmap provides an integrated, time-phased, and fiscally-i nformed plan that assists in conducting capability 
assessments, guiding systems development, and defining investment strategies. A roadmap is also used as a 
basis for aligning resources and as an input to strategic guidance documents, program development, and program reviews. 
 
4-3  Enterprise Architecture 
 
Enterprise Architecture represents the vision, strategy, and im plementation at the enterprise  scale. It promotes self-
synchronization for both developers and managers.  
The vision is represented by the Enterprise Architecture. In essence Enterprise Architecture is the highest level of 
guidance or framework. It describes the components in an enterprise, their roles and their relationships. It can be further described as a strategic information asset base, which defines the business mission, the information necessary 
to perform the mission, the technologies necessary to perform the mission, and the transitional processes for 
implementing new technologies in response to the changing mission needs. Enterprise Architecture includes a baseline architecture, target architecture,  and transition plan.” It represents a framework for an integrated strategic 
view of the enterprise across the various dimensions of the value chain. 
 
There is general recognition that Enterprise Architecting (EA) within Enterprise Syst ems Engineering (ESE) will 
differ somehow from “traditional” EA activities. The differen ces relate initially to recognition that an enterprise’s 
interests are more diverse than the interests found historically at the systems engineering level and across the 
system-of-systems engineering area. Additionally, the sk ills, tools, techniques, and practices supporting this 
different kind of “next generation” EA are still maturing and not fully deployable for uniform and universal use. 
 
The international community has already come to similar conclusions in its report from the International Federation 
for Information Processing (IFIP) Technical Committee C5/Working Group 5.12 (TC5/WG5.12) regarding enterprise integration efforts. This working group drew  the following conclusions about the state of the practice 
regarding enterprise engineering: 
 
• Large, complex problems need an interdisciplinary approach to integrate ex pertise, processes, and 
infrastructure and are not easil y amenable to decomposition 
• While models (and related architectures) can make knowledge more explicit, historically, they have 
focused more on production aspects of the enterprise, rather than on other aspects of interest to the 
enterprise, such as: 
- Uncertainties, unknowns, and unknowables 
- Social and cultural collaborative dynamics (including trust) 
- Investment and capital 
• Integration at the level of models is a foundation requ irement to architecturally relating different domains, 
enterprise views, and generic types 
• Models must be dynamic and continuously changing to reflect responses to changing conditions and 
objectives 
 
We adopted the approach that the EA pr ocess should be oriented to the capture of enterprise knowledge important to 
the enterprise, including aspects discussed above, and that this knowledge should be made readily available to the 
entire enterprise community at large (not just the archit ects). This “next-generation” EA process within the ESE 
ICSSEA 2006 Swarz & Derosa 
 8discipline recognizes some differences in emphasis in ce rtain EA areas from our “traditional” EA activities in 
several important ways. 
 
We should restrict the scope of the EA by excluding irrelevant external archit ectures but extend the scope to include 
elements that document and relate to the enterprise’s goals and strategies and its ability to adapt to them. 
Deliver a federated architecture that allows the enterpri se to continuously fulfill its (potentially changing) goals 
while responding rapidly and efficiently to external and internal needs for change.  
4-4  Strategic Technical Planning  
 
As forward-looking organizations plan their enterprise  architecture and initiatives, they quickly come to the 
realization that the technology challenges they face are actually the easy part. Far more challenging are the 
organizational and management issues they must overcome to successfully  meet the collected goals. An important 
part of controlling the evolution of the enterprise is to develop and make all components of the enterprise adhere to a 
single technical broad and overreaching technical strategic, which we call the Strategic Technical Plan (STP).   
Gharajedaghi has argued that socio-cu ltural systems are bonded together through an agreement based on a common 
perception. The STP represents a shared technical image fo r the enterprise. Moreover, to  promote social learning of 
the enterprise as a whole, the shared im age must be simple and comprehensible.  
 
STP Creation . The creation of the STP starts with baselining
 the enterprise. Although the CBE Process may have 
created a grand vision of what the enterp rise wants to become, the evolutionary process constrains us to always start 
with the whole of what we have. Next comes modifying  that baseline to take incremental steps toward that grand 
vision, subject only to the constraints that desired changes must be both technically feasible and operationally viable to promote the evolutionary process. Lastly comes simplifying
 the combination of the baseline, the grand vision and 
the incremental steps. This simplification is a critical st ep that differentiates Strate gic Technical Planning from 
traditional system planning, where detailed functional specifi cations are often defined. Here the objective is not 
hierarchical control of the design, bu t rather a shared image of the enterprise. The created STP must be simple, 
understandable, widely-believed and accepted. For a modern  information system, an N- tier architecture using the 
Internet Protocol (IP) in its network layer and a Service- oriented architecture in its ap plication layer is one such 
example of tenets found in an STP.  
 
STP Implementation . Simplification brings unders tandability and wide acceptance. It gets everyone in the 
enterprise moving in the same general direction. More de tailed implementation guidance is generated as an adjunct 
to the STP Sometimes it is mandated and sometimes it comes from a community standards process.   
• Level I Guidance
 presents standards that are so pervasive as to  be key enablers of enterprise capabilities. IP 
is such a standard. Whether by market forces or po licy, these standards are implementation mandates.  
• Level II Guidance  deals with a small number of standards th at are each pervasive enough to produce 
efficiencies and economies of scale, but as a group  are competitive enough to stimulate innovation. They 
represent the reality that an enterprise will always be  heterogeneous. Implementation guidance must discuss 
the strategy for dealing with that reality. For example,  many enterprises must currently deal with both .NET 
and Java frameworks within th e information environment.  
• Level III Guidance  deals with the way in which experimental technologies may be introduced into the 
enterprise. The methods may include an artificial (simulation) environment, a live experimental 
environment, or even an operational setting in which the new technology is on-line without being in-line. 
Level III Guidance lays out the rules to sa feguard the integrity of the enterprise.  
 
An STP applies to all of the systems that are encompassed by the enterprise. It should be based on achieving key enterprise objectives, such as interoperability. These objectives are generally derived from capabilities derived 
through the Capability-Based Engineering process. It describes a common technical vision to synchronize each 
program’s technical strategies to ac hieve the enterpri se’s objectives. 
 
The technical strategy sets the context for planning and implementation. It is of necessity simplified, because simple 
strategies can be widely understood, and being understood is a precursor to being accepted. The STP embodies the 
Enterprise Architecture, the desired evolutionary capabilities, and the vision, goals and policies of the leadership.  
ICSSEA 2006 Swarz & Derosa 
 9 
4-5  Enterprise Analysis and Assessment 
 
Enterprise Analysis and Assessment (EA&A) helps shape the environment and select options by measuring progress towards realizing the vision 
 
EA&A is a key part of the learning and control dimension of the enterprise. It is the primary means by which the technical dimensions of the enterprise  are coupled into the business decisions . It determines the enterprise-scale 
measures and the means by they are made. Thus, it help s identify whether the strategy and implementation are 
working as intended. Further, it analyzes any discrepancie s between what is observed and what is expected to 
diagnose problems, identify risks and opportunities, and prescribe action. EA&A provides the potential for 
identifying break points where capabilities are either significan tly enhanced or totally disabled. Thus it serves as an 
early warning system, an opportunity identifier, and a pr ogress marker, and it informs business decisions at the 
enterprise level. 
 EA&A is not the ability to analyze the complete inner workings  of an entire enterprise at once. It is defined in terms 
of an ability to characterize the behavi or of entities or capabilities that are im mersed within an enterprise. EA&A 
relates strongly to enterprise opportunity and risk assessment, emphasizing  
• A robust "What If?" approach versus the traditional,  highly scenario-dependent attempts at a more 
"predictive" approach 
• Leveraging modeling and simulation (M&S) capabilities 
• The ability to analyze and assess potential outcomes in a robust manner within enterprise architecture 
constructs to permit an understanding of fundamental behaviors 
 
EA&A is not the ability to analyze the complete inner work ings of an entire C2 enterprise at once, but it is the 
ability to characterize the behavior of entities or ca pabilities that are immersed within an enterprise. 
 
The fundamental parts of  the process are to: 
 
• Assess an enterprise component’s stat us and/or value as a provider in a service-oriented architecture (SOA) 
• Plan and organize for EA&A activities to  reduce risk and increase opportunities 
• Reach out to other stakeholder organizations for collaboration 
• Modify your work program to address emerging needs as identified by the EA&A program 
 
 
5.  SUMMARY 
 
An enterprise arises from taking a completely different  perspective on systems, system-of-systems, and family-of 
systems, characterized by rich interconnectivity and co mplex behavior patterns. Its operational capabilities are 
inextricably intertwined with considerations of people, processes, and technology, whose boundaries are often 
imprecise and which are strongly influence by their environment. The architecture of the enterprise, with both its 
explicit requirements and implicit potential capabilities, will e volve and emerge as trends in technology, scope of the 
enterprise, the aggregate user base, and other factors evolve over time. 
 
We have described a top-level framework for performing systems engineering in such an enterprise environment, which describes an extension of traditional systems engineering models and processes to enterprise systems 
engineering.  
  
REFERENCES 
 
[1] Ackoff, Russell, Ackoff's Best: His Classic Writings on Management , John Wiley and Sons, New York, 
1999. 
ICSSEA 2006 Swarz & Derosa 
 10[2] Axelrod, Robert, and Michael D. Cohen, Harnessing Complexity: Organizational Implications of a 
Scientific Frontier , Basic Books, 2000. 
[3] DeRosa, Joseph K., George Rebovich, and Robert S. Swarz, An Enterprise Systems Engineering Model , 
INCOSE International Symposium, 2006 
[4] INCOSE, Systems Engineering Handbook , INCOSE-TP-2003-016-02, Version 2a, June 2004. 
[5] Gharajedaghi, Jamshid, Systems Thinking: Managing Chaos and Complexity , Butterworth-Heinemann, 
1999. 
[6] Holland, John H., Hidden Order: How Adaptation Builds Complexity , Basic Books, 1995. 
[7] Kuras, M. L., and Brian E. White, Engineering Enterprises Using Complex-System Engineering , INCOSE 
2005 Symposium, Rochester, NY, 10-15 July 2005. 
[8] McCaughin, L. Keith and Joseph K. DeRosa, Process in Enterprise Systems Engineering , INCOSE 2006 
Symposium, Orlando, FL, July 2006. 
[9] McMullen, William, Enterprise Architecting within Enterprise Systems Engineering , (unpublished), August 
2006. 
[10] Rebovich, Jr., George, Enterprise Systems Engineering Theory and Practice, Vol. 2: Systems Thinking for 
the Enterprise: New and Emerging Perspectives , The MITRE Corporation, MP05B0000043, November 
2005. 
[11] Software Engineering Institute, CMMI Overview , http://www.sei.cmu.edu/cmmi/adoption/pdf/cmmi-
overview05.pdf. 
[12] Weinberg, Gerald M., An Introduction to General Systems Thinking: Silver Anniversary Edition , Dorset 
House, New York 2001. 
 
 
ACKNOWLEDGEMENTS 
 
The authors wish to express their appreciation to Mi chael Webb, Carol L. Peterson, John Roberts, William 
McMullen, and John Michitson of The MITRE Corporation, who developed the detailed ESE Processes. We also wish to thank George Rebovich, Peter Smyton, Douglas Norman and Terrence Blevins for many helpful discussions 
concerning this material. 
