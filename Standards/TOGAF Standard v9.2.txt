The Open Group Standard
The TOGAF®Standard, Version 9.2
The Open Group
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Copyright © 2005-2018, The Open Group
All rights reserved.
No part of this publication may be reproduced, stored in a retrieval system, or transmitted, in any form or
by any means, electronic, mechanical, photocopying, recording or otherwise, without the prior
permission of the copyright owners.
The Open Group Standard
The TOGAF®Standard, Version 9.2
ISBN: 1-947754-11-9
Document Number: C182
Published in the U.S. by The Open Group, 2005-2018.
Any comments relating to the material contained in this document may be submitted by email to:
OGspecs@opengroup.orgAny use of this publication for commercial purposes is subject to the terms of the Annual Commercial
License relating to it. For further information, see www.opengroup.org/legal/licensing .
ii The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Contents
Part I Introduction ................................................................................................... 1
Chapter 1 Introduction ..................................................................................................... 3
1.1 Str uctur eo ft his Document .............................................................................. 4
1.2 Str uctur eo ft he TOGAF Library ...................................................................... 5
1.3 Executive Overview .......................................................................................... 6
1.4 Information on Using the TOGAF Standar d................................................. 9
1.4.1 Conditions of Use ........................................................................................... 9
1.4.2 How Much Does the TOGAF Standar dCost? ............................................ 9
1.4.3 Downloads ....................................................................................................... 9
1.5 Why Join The Open Gr oup? ............................................................................. 9
Chapter 2 Core Concepts ................................................................................................. 1 1
2.1 What is the TOGAF Standar d? ........................................................................ 11
2.2 What is Architectur ei nt he Context of the TOGAF Standar d? ................... 11
2.3 What Kind of Architectur eDoes the TOGAF Standar dDeal W ith? .......... 11
2.4 Ar chitectur eDevelopment Method ................................................................ 12
2.5 Deliverables, Artifacts, and Building Blocks ................................................. 13
2.6 Enterprise Continuum ...................................................................................... 15
2.7 Ar chitectur eRepository .................................................................................... 16
2.8 Establishing and Maintaining an Enterprise Architecture
Capability ............................................................................................................ 18
2.9 Establishing the Architectur eCapability as an Operational
Entity ................................................................................................................... 19
2.10 Using the TOGAF Standar dwith Other Frameworks ................................. 20
Chapter 3 Deﬁnitions ........................................................................................................ 21
Part II Architecture Development Method (ADM) ............................ 35
Chapter 4 Introduction to Part II ................................................................................. 37
4.1 ADM Overview .................................................................................................. 37
4.1.1 The ADM, Enterprise Continuum, and Architecture
Repository ........................................................................................................ 37
4.1.2 The ADM and the Foundation Architectur e.............................................. 38
4.1.3 ADM and Supporting Guidelines and T echniques ................................... 38
4.2 Ar chitectur eDevelopment Cycle .................................................................... 39
4.2.1 Key Points ........................................................................................................ 39
The TOGAF®Standard, Version 9.2 iii
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Contents
4.2.2 Basic Structur e................................................................................................. 39
4.3 Adapting the ADM ............................................................................................ 42
4.4 Ar chitectur eGovernance .................................................................................. 43
4.5 Scoping the Architectur e.................................................................................. 44
4.5.1 Br eadth ............................................................................................................. 45
4.5.2 Depth ................................................................................................................ 46
4.5.3 T ime Period ...................................................................................................... 46
4.5.4 Ar chitectur eDomains .................................................................................... 47
4.6 Ar chitectur eIntegration ................................................................................... 47
4.7 Summary ............................................................................................................. 48
Chapter 5 Preliminary Phase ......................................................................................... 51
5.1 Objectives ............................................................................................................ 52
5.2 Inputs ................................................................................................................... 52
5.2.1 Refer ence Materials External to the Enterprise .......................................... 52
5.2.2 Non-Ar chitectural Inputs .............................................................................. 52
5.2.3 Ar chitectural Inputs ....................................................................................... 53
5.3 Steps ..................................................................................................................... 53
5.3.1 Scope the Enterprise Organizations Impacted ........................................... 54
5.3.2 Conﬁrm Governance and Support Frameworks ....................................... 54
5.3.3 Deﬁne and Establish Enterprise Architectur eTeam and
Organization .................................................................................................... 54
5.3.4 Identify and Establish Architectur ePrinciples ........................................... 55
5.3.5 T ailor the TOGAF Framework and, if any ,Other Selected
Architectur eFramework(s) ........................................................................... 55
5.3.6 Develop aStrategy and Implementation Plan for Tools and
Techniques ....................................................................................................... 56
5.4 Outputs ............................................................................................................... 56
5.5 Appr oach ............................................................................................................ 57
5.5.1 Enterprise ......................................................................................................... 58
5.5.2 Or ganizational Context .................................................................................. 58
5.5.3 Requir ements for Architectur eWork ........................................................... 59
5.5.4 Principles ......................................................................................................... 59
5.5.5 Management Frameworks ............................................................................ 60
5.5.6 Relating the Management Frameworks ...................................................... 61
5.5.7 Planning for Enterprise Architecture/Business Change
Maturity Evaluation ....................................................................................... 62
Chapter 6 Phase A: Architecture Vision .................................................................. 65
6.1 Objectives ............................................................................................................ 66
6.2 Inputs ................................................................................................................... 66
6.2.1 Refer ence Materials External to the Enterprise .......................................... 66
6.2.2 Non-Ar chitectural Inputs .............................................................................. 66
6.2.3 Ar chitectural Inputs ....................................................................................... 66
6.3 Steps ..................................................................................................................... 67
6.3.1 Establish the Architectur eProject ................................................................ 67
6.3.2 Identify Stakeholders, Concerns, and Business
Requir ements .................................................................................................. 67
6.3.3 Conﬁrm and Elaborate Business Goals, Business Drivers,
and Constraints ............................................................................................... 68
6.3.4 Evaluate Capabilities ...................................................................................... 68
6.3.5 Assess Readiness for Business T ransformation .......................................... 69
iv The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Contents
6.3.6 Deﬁne Scope .................................................................................................... 69
6.3.7 Conﬁrm and Elaborate Architectur ePrinciples, including
Business Principles ......................................................................................... 70
6.3.8 Develop Architectur eVision ......................................................................... 70
6.3.9 Deﬁne the Target Architectur eValue Propositions and
KPIs ................................................................................................................... 71
6.3.10 Identify the Business Transformation Risks and Mitigation
Activities .......................................................................................................... 71
6.3.1 1D evelop Statement of Architectur eWork; Secur eApproval .................... 71
6.4 Outputs ............................................................................................................... 72
6.5 Appr oach ............................................................................................................ 73
6.5.1 General ............................................................................................................. 73
6.5.2 Cr eating the Architectur eVision .................................................................. 74
Chapter 7 Phase B: Business Architecture .............................................................. 77
7.1 Objectives ............................................................................................................ 78
7.2 Inputs ................................................................................................................... 78
7.2.1 Refer ence Materials External to the Enterprise .......................................... 78
7.2.2 Non-Ar chitectural Inputs .............................................................................. 78
7.2.3 Ar chitectural Inputs ....................................................................................... 78
7.3 Steps ..................................................................................................................... 79
7.3.1 Select Reference Models, Viewpoints, and T ools ....................................... 80
7.3.2 Develop Baseline Business Architectur eDescription ................................ 84
7.3.3 Develop Target Business Architectur eDescription ................................... 84
7.3.4 Perform Gap Analysis .................................................................................... 84
7.3.5 Deﬁne Candidate Roadmap Components .................................................. 84
7.3.6 Resolve Impacts Across the Architectur eLandscape ................................ 85
7.3.7 Conduct Formal Stakeholder Review .......................................................... 85
7.3.8 Finalize the Business Architectur e............................................................... 85
7.3.9 Cr eate the Architectur eDeﬁnition Document ............................................ 85
7.4 Outputs ............................................................................................................... 86
7.5 Appr oach ............................................................................................................ 88
7.5.1 General ............................................................................................................. 88
7.5.2 Developing the Baseline Description ........................................................... 89
7.5.3 Applying Business Capabilities .................................................................... 89
7.5.4 Applying Value Str eams ................................................................................ 90
7.5.5 Applying the Organization Map .................................................................. 90
7.5.6 Applying Modeling T echniques ................................................................... 91
7.5.7 Ar chitectur eRepository ................................................................................. 92
Chapter 8 Phase C: Information Systems Architectures ................................. 95
8.1 Objectives ............................................................................................................ 96
8.2 Appr oach ............................................................................................................ 96
Chapter 9 Phase C: Information Systems Architectures — Data
Architecture ...................................................................................................... 97
9.1 Objectives ............................................................................................................ 97
9.2 Inputs ................................................................................................................... 97
9.2.1 Refer ence Materials External to the Enterprise .......................................... 97
9.2.2 Non-Ar chitectural Inputs .............................................................................. 97
9.2.3 Ar chitectural Inputs ....................................................................................... 97
9.3 Steps ..................................................................................................................... 99
The TOGAF®Standard, Version 9.2 v
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Contents
9.3.1 Select Reference Models, Viewpoints, and T ools ....................................... 99
9.3.2 Develop Baseline Data Architectur eDescription ...................................... 102
9.3.3 Develop Target Data Architectur eDescription .......................................... 102
9.3.4 Perform Gap Analysis .................................................................................... 103
9.3.5 Deﬁne Candidate Roadmap Components .................................................. 103
9.3.6 Resolve Impacts Across the Architectur eLandscape ................................ 103
9.3.7 Conduct Formal Stakeholder Review .......................................................... 103
9.3.8 Finalize the Data Architectur e...................................................................... 104
9.3.9 Cr eate the Architectur eDeﬁnition Document ............................................ 104
9.4 Outputs ............................................................................................................... 104
9.5 Appr oach ............................................................................................................ 106
9.5.1 Key Considerations for Data Architectur e.................................................. 106
9.5.2 Ar chitectur eRepository ................................................................................. 107
Chapter 10 Phase C: Information Systems Architectures — Application
Architecture ...................................................................................................... 109
10.1 Objectives ............................................................................................................ 109
10.2 Inputs ................................................................................................................... 109
10.2.1 Refer ence Materials External to the Enterprise .......................................... 109
10.2.2 Non-Ar chitectural Inputs .............................................................................. 109
10.2.3 Ar chitectural Inputs ....................................................................................... 109
10.3 Steps ..................................................................................................................... 1 11
10.3.1 Select Reference Models, Viewpoints, and T ools ....................................... 111
10.3.2 Develop Baseline Application Architectur eDescription .......................... 115
10.3.3 Develop Target Application Architectur eDescription ............................. 115
10.3.4 Perform Gap Analysis .................................................................................... 1 15
10.3.5 Deﬁne Candidate Roadmap Components .................................................. 1 15
10.3.6 Resolve Impacts Across the Architectur eLandscape ................................ 116
10.3.7 Conduct Formal Stakeholder Review .......................................................... 1 16
10.3.8 Finalize the Application Architectur e.......................................................... 1 16
10.3.9 Cr eate the Architectur eDeﬁnition Document ............................................ 1 17
10.4 Outputs ............................................................................................................... 1 17
10.5 Appr oach ............................................................................................................ 118
10.5.1 Ar chitectur eRepository ................................................................................. 118
Chapter 1 1P hase D: Technology Architecture ....................................................... 1 19
11.1 Objectives ............................................................................................................ 120
11.2 Inputs ................................................................................................................... 120
11.2.1 Refer ence Materials External to the Enterprise .......................................... 120
11.2.2 Non-Ar chitectural Inputs .............................................................................. 120
11.2.3 Ar chitectural Inputs ....................................................................................... 120
11.3 Steps ..................................................................................................................... 121
11.3.1 Select Reference Models, Viewpoints, and T ools ....................................... 122
11.3.2 Develop Baseline Technology Architectur eDescription .......................... 126
11.3.3 Develop Target Technology Architectur eDescription .............................. 126
11.3.4 Perform Gap Analysis .................................................................................... 126
11.3.5 Deﬁne Candidate Roadmap Components .................................................. 127
11.3.6 Resolve Impacts Across the Architectur eLandscape ................................ 127
11.3.7 Conduct Formal Stakeholder Review .......................................................... 127
11.3.8 Finalize the Technology Architectur e.......................................................... 127
11.3.9 Cr eate the Architectur eDeﬁnition Document ............................................ 128
11.4 Outputs ............................................................................................................... 128
vi The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Contents
11.5 Appr oach ............................................................................................................ 129
11.5.1 Emer ging T echnologies .................................................................................. 129
11.5.2 Ar chitectur eRepository ................................................................................. 130
Chapter 12 Phase E: Opportunities & Solutions ................................................... 131
12.1 Objectives ............................................................................................................ 132
12.2 Inputs ................................................................................................................... 132
12.2.1 Refer ence Materials External to the Enterprise .......................................... 132
12.2.2 Non-Ar chitectural Inputs .............................................................................. 132
12.2.3 Ar chitectural Inputs ....................................................................................... 132
12.3 Steps ..................................................................................................................... 133
12.3.1 Determine/Conﬁrm Key Corporate Change Attributes .......................... 134
12.3.2 Determine Business Constraints for Implementation ............................... 134
12.3.3 Review and Consolidate Gap Analysis Results from Phases B
to D .................................................................................................................... 134
12.3.4 Review Consolidated Requirements Across Related Business
Functions .......................................................................................................... 135
12.3.5 Consolidate and Reconcile Interoperability Requir ements ...................... 135
12.3.6 Reﬁne and Validate Dependencies ............................................................... 135
12.3.7 Conﬁrm Readiness and Risk for Business T ransformation ...................... 136
12.3.8 Formulate Implementation and Migration Strategy ................................. 136
12.3.9 Identify and Group Major Work Packages ................................................. 136
12.3.10 Identify Transition Architectur es ................................................................. 137
12.3.1 1C reate the Architectur eRoadmap & Implementation and
Migration Plan ................................................................................................ 137
12.4 Outputs ............................................................................................................... 138
12.5 Appr oach ............................................................................................................ 139
Chapter 13 Phase F: Migration Planning ................................................................... 141
13.1 Objectives ............................................................................................................ 142
13.2 Inputs ................................................................................................................... 142
13.2.1 Refer ence Materials External to the Enterprise .......................................... 142
13.2.2 Non-Ar chitectural Inputs .............................................................................. 142
13.2.3 Ar chitectural Inputs ....................................................................................... 142
13.3 Steps ..................................................................................................................... 144
13.3.1 Conﬁrm Management Framework Interactions for the
Implementation and Migration Plan ........................................................... 144
13.3.2 Assign aBusiness Value to Each Work Package ........................................ 145
13.3.3 Estimate Resource Requirements, Project Timings, and
Availability/Delivery V ehicle ....................................................................... 146
13.3.4 Prioritize the Migration Projects through the Conduct of
aCost/Beneﬁt Assessment and Risk V alidation ........................................ 146
13.3.5 Conﬁrm Architectur eRoadmap and Update Architecture
Deﬁnition Document ...................................................................................... 146
13.3.6 Complete the Implementation and Migration Plan .................................. 147
13.3.7 Complete the Architectur eDevelopment Cycle and Document
Lessons Learned .............................................................................................. 147
13.4 Outputs ............................................................................................................... 147
13.5 Appr oach ............................................................................................................ 148
Chapter 14 Phase G: Implementation Governance .............................................. 149
14.1 Objectives ............................................................................................................ 150
The TOGAF®Standard, Version 9.2 vii
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Contents
14.2 Inputs ................................................................................................................... 150
14.2.1 Refer ence Materials External to the Enterprise .......................................... 150
14.2.2 Non-Ar chitectural Inputs .............................................................................. 150
14.2.3 Ar chitectural Inputs ....................................................................................... 150
14.3 Steps ..................................................................................................................... 151
14.3.1 Conﬁrm Scope and Priorities for Deployment with
Development Management ........................................................................... 151
14.3.2 Identify Deployment Resources and Skills ................................................. 152
14.3.3 Guide Development of Solutions Deployment .......................................... 152
14.3.4 Perform Enterprise Architectur eCompliance Reviews ............................ 153
14.3.5 Implement Business and IT Operations ...................................................... 153
14.3.6 Perform Post-Implementation Review and Close the
Implementation ............................................................................................... 153
14.4 Outputs ............................................................................................................... 153
14.5 Appr oach ............................................................................................................ 154
Chapter 15 Phase H: Architecture Change Management .................................. 155
15.1 Objectives ............................................................................................................ 156
15.2 Inputs ................................................................................................................... 156
15.2.1 Refer ence Materials External to the Enterprise .......................................... 156
15.2.2 Non-Ar chitectural Inputs .............................................................................. 156
15.2.3 Ar chitectural Inputs ....................................................................................... 156
15.3 Steps ..................................................................................................................... 157
15.3.1 Establish Value Realization Pr ocess ............................................................. 158
15.3.2 Deploy Monitoring T ools ............................................................................... 158
15.3.3 Manage Risks .................................................................................................. 158
15.3.4 Pr ovide Analysis for Architectur eChange Management ......................... 158
15.3.5 Develop Change Requirements to Meet Performance Tar gets ................ 159
15.3.6 Manage Governance Pr ocess ........................................................................ 159
15.3.7 Activate the Process to Implement Change ................................................ 159
15.4 Outputs ............................................................................................................... 159
15.5 Appr oach ............................................................................................................ 159
15.5.1 Drivers for Change ......................................................................................... 161
15.5.2 Enterprise Architectur eChange Management Pr ocess ............................. 162
15.5.3 Guidelines for Maintenance versus Architectur eRedesign ..................... 163
Chapter 16 ADM Architecture Requirements Management .......................... 165
16.1 Objectives ............................................................................................................ 166
16.2 Inputs ................................................................................................................... 166
16.3 Steps ..................................................................................................................... 166
16.4 Outputs ............................................................................................................... 170
16.5 Appr oach ............................................................................................................ 171
16.5.1 General ............................................................................................................. 171
16.5.2 Requir ements Development ......................................................................... 171
16.5.3 Resour ces ......................................................................................................... 172
Part III ADM Guidelines and Techniques ................................................. 173
Chapter 17 Introduction to Part III ............................................................................... 175
17.1 Guidelines for Adapting the ADM Pr ocess ................................................... 175
17.2 T echniques for Architectur eDevelopment .................................................... 175
viii The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Contents
17.3 Using the TOGAF Framework with Different Architectural
Styles .................................................................................................................... 176
Chapter 18 Applying Iteration to the ADM ............................................................. 179
18.1 Overview ............................................................................................................. 179
18.2 Iteration Cycles .................................................................................................. 180
18.3 Classes of Architectur eEngagement .............................................................. 181
18.4 Appr oaches to Architectur eDevelopment .................................................... 185
18.5 Iteration Considerations ................................................................................... 185
18.5.1 Iteration between ADM Cycles .................................................................... 186
18.5.2 Iteration within an ADM Cycle .................................................................... 187
18.6 Conclusions ........................................................................................................ 190
Chapter 19 Applying the ADM Across the Architecture Landscape ......... 193
19.1 Overview ............................................................................................................. 193
19.2 Ar chitectur eLandscape .................................................................................... 193
19.3 Or ganizing the Architectur eLandscape to Understand the
State of the Enterprise ....................................................................................... 195
19.4 Developing Architectures at Different Levels ............................................... 195
Chapter 20 Architecture Principles ............................................................................... 197
20.1 Intr oduction ........................................................................................................ 197
20.2 Characteristics of Architectur ePrinciples ...................................................... 198
20.3 Components of Architectur ePrinciples ......................................................... 198
20.4 Developing Architectur ePrinciples ................................................................ 199
20.4.1 Qualities of Principles .................................................................................... 199
20.5 Applying Architectur ePrinciples ................................................................... 200
20.6 Example Set of Architectur ePrinciples .......................................................... 201
20.6.1 Business Principles ......................................................................................... 201
20.6.2 Data Principles ................................................................................................ 205
20.6.3 Application Principles ................................................................................... 209
20.6.4 T echnology Principles .................................................................................... 210
Chapter 21 Stakeholder Management ........................................................................ 213
21.1 Intr oduction ........................................................................................................ 213
21.2 Appr oach to Stakeholder Management ......................................................... 213
21.3 Steps in the Stakeholder Management Pr ocess ............................................. 214
21.3.1 Identify Stakeholders ..................................................................................... 214
21.3.2 Classify Stakeholder Positions ...................................................................... 216
21.3.3 Determine Stakeholder Management Appr oach ....................................... 216
21.3.4 T ailor Engagement Deliverables ................................................................... 217
21.4 T emplate Stakeholder Map .............................................................................. 217
Chapter 22 Architecture Patterns ................................................................................... 229
22.1 Intr oduction ........................................................................................................ 229
22.1.1 Backgr ound ...................................................................................................... 229
22.1.2 Content of a Pattern ........................................................................................ 230
22.1.3 T erminology ..................................................................................................... 231
22.2 Some Pattern Resour ces .................................................................................... 232
Chapter 23 Gap Analysis ................................................................................................... 235
23.1 Intr oduction ........................................................................................................ 235
The TOGAF®Standard, Version 9.2 ix
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Contents
23.2 Suggested Steps ................................................................................................. 236
23.3 Example ............................................................................................................... 236
Chapter 24 Migration Planning Techniques ............................................................ 239
24.1 Implementation Factor Assessment & Deduction Matrix ........................... 239
24.2 Consolidated Gaps, Solutions, & Dependencies Matrix .............................. 240
24.3 Ar chitectur eDeﬁnition Increments T able ...................................................... 240
24.4 T ransition Architectur eState Evolution T able ............................................... 241
24.5 Business Value Assessment T echnique ........................................................... 242
Chapter 25 Interoperability Requirements .............................................................. 243
25.1 Overview ............................................................................................................. 243
25.2 Deﬁning Inter operability .................................................................................. 243
25.3 Enterprise Operating Model ............................................................................ 245
25.4 Reﬁning Inter operability .................................................................................. 245
25.5 Determining Interoperability Requir ements ................................................. 246
25.6 Reconciling Interoperability Requirements with Potential
Solutions .............................................................................................................. 248
Chapter 26 Business Transformation Readiness Assessment ........................ 249
26.1 Intr oduction ........................................................................................................ 249
26.1.1 Business Transformation Enablement Program (BTEP) ........................... 250
26.2 Determine Readiness Factors ........................................................................... 250
26.3 Pr esent Readiness Factors ................................................................................ 252
26.4 Assess Readiness Factors .................................................................................. 253
26.4.1 Readiness Factor V ision ................................................................................. 253
26.4.2 Readiness Factor Rating ................................................................................. 254
26.4.3 Readiness Factor Risks & Actions ................................................................ 255
26.5 Readiness and Migration Planning ................................................................. 255
26.6 Marketing the Implementation Plan ............................................................... 255
26.7 Conclusion .......................................................................................................... 256
Chapter 27 Risk Management ......................................................................................... 257
27.1 Intr oduction ........................................................................................................ 257
27.2 Risk Classiﬁcation .............................................................................................. 258
27.3 Risk Identiﬁcation .............................................................................................. 258
27.4 Initial Risk Assessment ..................................................................................... 258
27.5 Risk Mitigation and Residual Risk Assessment ............................................ 260
27.6 Conduct Residual Risk Assessment ................................................................ 260
27.7 Risk Monitoring and Governance (Phase G) ................................................. 260
27.8 Summary ............................................................................................................. 261
Chapter 28 Capability-Based Planning ...................................................................... 263
28.1 Overview ............................................................................................................. 263
28.2 Capability-Based Planning Paradigm ............................................................ 264
28.3 Concept of Capability-Based Planning ........................................................... 264
28.3.1 Capability Dimensions ................................................................................... 265
28.3.2 Capability Increments .................................................................................... 266
28.4 Capabilities in an Enterprise Architectur eContext ...................................... 267
28.5 Summary ............................................................................................................. 268
x The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Contents
Part IV Architecture Content Framework ................................................... 269
Chapter 29 Introduction to Part IV ............................................................................... 271
29.1 Overview ............................................................................................................. 271
29.2 Content Metamodel ........................................................................................... 273
29.3 Content Framework and the TOGAF ADM .................................................. 274
29.4 Str uctur eo fP art IV ............................................................................................ 275
Chapter 30 Content Metamodel ..................................................................................... 277
30.1 Overview ............................................................................................................. 277
30.2 Content Metamodel Vision and Concepts ..................................................... 277
30.2.1 Cor eContent Metamodel Concepts ............................................................. 277
30.2.2 Overview of the Content Metamodel .......................................................... 281
30.3 Content Metamodel in Detail ........................................................................... 283
30.3.1 Cor eContent Metamodel .............................................................................. 284
30.3.2 Full Content Metamodel ................................................................................ 286
30.4 Content Metamodel Extensions ....................................................................... 288
30.4.1 Governance Extensions .................................................................................. 289
30.4.2 Services Extensions ......................................................................................... 291
30.4.3 Pr ocess Modeling Extensions ........................................................................ 292
30.4.4 Data Extensions ............................................................................................... 295
30.4.5 Infrastr uctur eConsolidation Extensions ..................................................... 297
30.4.6 Motivation Extensions ................................................................................... 299
30.5 Content Metamodel Entities ............................................................................ 301
30.6 Content Metamodel Attributes ........................................................................ 304
30.7 Metamodel Relationships ................................................................................. 314
Chapter 31 Architectural Artifacts ................................................................................ 319
31.1 Basic Concepts .................................................................................................... 319
31.1.1 Simple Example of an Architectur eViewpoint and
Architectur eView ........................................................................................... 321
31.2 Developing Architectur eViews in the ADM ................................................. 322
31.2.1 General Guidelines ......................................................................................... 322
31.2.2 Ar chitectur eView Creation Pr ocess ............................................................. 323
31.3 V iews, Tools, and Languages ........................................................................... 324
31.3.1 Overview .......................................................................................................... 324
31.4 Ar chitectur eViews and Architectur eViewpoints ........................................ 324
31.4.1 Example of Architectur eViews and Architectur eViewpoints ................ 324
31.4.2 Ar chitectur eViews and Architectur eViewpoints in
Enterprise Architectur e.................................................................................. 325
31.4.3 Need for a Common Language and Interoperable Tools for
Architectur eDescription ............................................................................... 326
31.5 Conclusions ........................................................................................................ 326
31.6 Ar chitectural Artifacts by ADM Phase ........................................................... 326
31.6.1 Pr eliminary Phase ........................................................................................... 329
31.6.2 Phase A: Architectur eVision ........................................................................ 329
31.6.3 Phase B: Business Architectur e..................................................................... 330
31.6.4 Phase C: Data Architectur e........................................................................... 336
31.6.5 Phase C: Application Architectur e............................................................... 339
31.6.6 Phase D: Technology Architectur e............................................................... 344
31.6.7 Phase E: Opportunities and Solutions ......................................................... 348
31.6.8 Requir ements Management .......................................................................... 348
The TOGAF®Standard, Version 9.2 xi
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Contents
Chapter 32 Architecture Deliverables ......................................................................... 349
32.1 Intr oduction ........................................................................................................ 349
32.2 Deliverable Descriptions .................................................................................. 350
32.2.1 Ar chitectur eBuilding Blocks ........................................................................ 351
32.2.2 Ar chitectur eContract ..................................................................................... 351
32.2.3 Ar chitectur eDeﬁnition Document ............................................................... 352
32.2.4 Ar chitectur ePrinciples .................................................................................. 353
32.2.5 Ar chitectur eRepository ................................................................................. 354
32.2.6 Ar chitectur eRequirements Speciﬁcation .................................................... 354
32.2.7 Ar chitectur eRoadmap ................................................................................... 355
32.2.8 Ar chitectur eVision ......................................................................................... 356
32.2.9 Business Principles, Business Goals, and Business Drivers ..................... 356
32.2.10 Capability Assessment ................................................................................... 357
32.2.1 1C hange Request .............................................................................................. 358
32.2.12 Communications Plan .................................................................................... 359
32.2.13 Compliance Assessment ................................................................................ 359
32.2.14 Implementation and Migration Plan ........................................................... 360
32.2.15 Implementation Governance Model ............................................................ 361
32.2.16 Or ganizational Model for Enterprise Architectur e.................................... 361
32.2.17 Request for Architectur eWork ..................................................................... 362
32.2.18 Requir ements Impact Assessment ............................................................... 362
32.2.19 Solution Building Blocks ............................................................................... 363
32.2.20 Statement of Architectur eWork ................................................................... 363
32.2.21 T ailored Architectur eFramework ................................................................ 363
Chapter 33 Building Blocks .............................................................................................. 365
33.1 Overview ............................................................................................................. 365
33.2 Intr oduction to Building Blocks ...................................................................... 365
33.2.1 Overview .......................................................................................................... 365
33.2.2 Generic Characteristics .................................................................................. 365
33.2.3 Ar chitectur eBuilding Blocks ........................................................................ 366
33.2.4 Solution Building Blocks ............................................................................... 367
33.3 Building Blocks and the ADM ......................................................................... 368
33.3.1 Basic Principles ............................................................................................... 368
33.3.2 Building Block Speciﬁcation Process in the ADM ..................................... 369
Part V Enterprise Continuum and Tools .................................................... 371
Chapter 34 Introduction to Part V ................................................................................. 373
34.1 Intr oduction ........................................................................................................ 373
34.2 Str uctur eo fP art V ............................................................................................. 373
Chapter 35 Enterprise Continuum ................................................................................ 375
35.1 Overview ............................................................................................................. 375
35.2 Enterprise Continuum and Architectur eRe-Use .......................................... 375
35.3 Constituents of the Enterprise Continuum .................................................... 376
35.4 Enterprise Continuum in Detail ...................................................................... 377
35.4.1 Ar chitectur eContinuum ................................................................................ 378
35.4.2 Solutions Continuum ..................................................................................... 380
35.5 The Enterprise Continuum and the ADM ..................................................... 382
35.6 The Enterprise Continuum and Your Or ganization ..................................... 383
xii The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Contents
35.6.1 Relationships ................................................................................................... 383
35.6.2 Y our Enterprise ............................................................................................... 384
Chapter 36 Architecture Partitioning .......................................................................... 385
36.1 Overview ............................................................................................................. 385
36.2 Applying Classiﬁcation to Create Partitioned Architectur es ...................... 385
36.2.1 Activities within the Preliminary Phase ...................................................... 387
36.3 Integration .......................................................................................................... 388
Chapter 37 Architecture Repository ............................................................................. 391
37.1 Overview ............................................................................................................. 391
37.2 Ar chitectur eLandscape .................................................................................... 392
37.3 Refer ence Library ............................................................................................... 393
37.3.1 Overview .......................................................................................................... 393
37.4 Standar ds Information Base ............................................................................. 394
37.4.1 Overview .......................................................................................................... 394
37.4.2 T ypes of Standar d........................................................................................... 394
37.4.3 Standar ds Lifecycle ......................................................................................... 394
37.4.4 Standar ds Classiﬁcation within the Standards Information
Base ................................................................................................................... 395
37.5 Governance Log ................................................................................................. 396
37.5.1 Overview .......................................................................................................... 396
37.5.2 Contents of the Governance Log .................................................................. 396
37.6 The Architectur eRequirements Repository .................................................. 397
37.6.1 Overview .......................................................................................................... 397
37.6.2 Contents of the Architectur eRequirements Repository ........................... 398
37.7 Solutions Landscape .......................................................................................... 398
37.8 The Enterprise Repository ................................................................................ 399
37.9 External Repositories ........................................................................................ 399
37.9.1 External Reference Models ............................................................................ 399
37.9.2 External Standar ds ......................................................................................... 399
37.9.3 Ar chitectur eBoardApprovals ...................................................................... 399
Chapter 38 Tools for Architecture Development .................................................. 401
38.1 Overview ............................................................................................................. 401
38.2 Issues in Tool Standar dization ......................................................................... 401
Part VI Architecture Capability Framework ............................................. 403
Chapter 39 Introduction to Part VI ............................................................................... 405
39.1 Overview ............................................................................................................. 405
39.2 Str uctur eo fP art VI ............................................................................................ 406
Chapter 40 Establishing an Architecture Capability .......................................... 407
40.1 Overview ............................................................................................................. 407
40.2 Phase A: Architectur eVision ........................................................................... 408
40.3 Phase B: Business Architectur e........................................................................ 409
40.4 Phase C: Data Architectur e.............................................................................. 409
40.5 Phase C: Application Architectur e.................................................................. 410
40.6 Phase D: Technology Architectur e.................................................................. 410
40.7 Phase E: Opportunities & Solutions ................................................................ 410
The TOGAF®Standard, Version 9.2 xiii
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Contents
40.8 Phase F: Migration Planning ............................................................................ 410
40.9 Phase G: Implementation Governance ........................................................... 410
40.10 Phase H: Architectur eChange Management ................................................ 410
40.11R equirements Management ............................................................................. 41 1
Chapter 41 Architecture Board ........................................................................................ 413
41.1 Role ...................................................................................................................... 413
41.2 Responsibilities .................................................................................................. 413
41.3 Setting Up the Architectur eBoard.................................................................. 414
41.3.1 T riggers ............................................................................................................. 414
41.3.2 Size of the Boar d............................................................................................. 415
41.3.3 Boar dStructur e............................................................................................... 415
41.4 Operation of the Architectur eBoard.............................................................. 416
41.4.1 General ............................................................................................................. 416
41.4.2 Pr eparation ...................................................................................................... 416
41.4.3 Agenda ............................................................................................................. 417
Chapter 42 Architecture Compliance .......................................................................... 419
42.1 Intr oduction ........................................................................................................ 419
42.2 T erminology: The Meaning of Architectur eCompliance ............................ 419
42.3 Ar chitectur eCompliance Reviews .................................................................. 421
42.3.1 Purpose ............................................................................................................ 421
42.3.2 T iming .............................................................................................................. 422
42.3.3 Governance and Personnel Scenarios .......................................................... 423
42.4 Ar chitectur eCompliance Review Pr ocess ..................................................... 423
42.4.1 Overview .......................................................................................................... 423
42.4.2 Roles ................................................................................................................. 425
42.4.3 Steps .................................................................................................................. 426
42.5 Ar chitectur eCompliance Review Checklists ................................................ 427
42.5.1 Har dwar eand Operating System Checklist ............................................... 427
42.5.2 Softwar eServices and Middlewar eChecklist ............................................ 428
42.5.3 Applications Checklists ................................................................................. 429
42.5.4 Information Management Checklists .......................................................... 432
42.5.5 Security Checklist ........................................................................................... 433
42.5.6 System Management Checklist ..................................................................... 434
42.5.7 System Engineering/Overall Architectur eChecklists .............................. 435
42.5.8 System Engineering/Methods & Tools Checklist ...................................... 437
42.6 Ar chitectur eCompliance Review Guidelines ............................................... 439
42.6.1 T ailoring the Checklists .................................................................................. 439
42.6.2 Conducting Architectur eCompliance Reviews ......................................... 439
Chapter 43 Architecture Contracts ................................................................................ 441
43.1 Role ...................................................................................................................... 441
43.2 Contents .............................................................................................................. 443
43.2.1 Statement of Architectur eWork ................................................................... 443
43.2.2 Contract between Architectur eDesign and Development
Partners ............................................................................................................ 443
43.2.3 Contract between Architecting Function and Business Users ................. 444
43.3 Relationship to Architectur eGovernance ...................................................... 444
Chapter 44 Architecture Governance .......................................................................... 445
44.1 Intr oduction ........................................................................................................ 445
xiv The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Contents
44.1.1 Levels of Governance within the Enterprise .............................................. 445
44.1.2 Natur eo fG overnance .................................................................................... 446
44.1.3 T echnology Governance ................................................................................ 447
44.1.4 IT Governance ................................................................................................. 447
44.1.5 Ar chitectur eGovernance: Overview ........................................................... 448
44.2 Ar chitectur eGovernance Framework ............................................................ 449
44.2.1 Ar chitectur eGovernance Framework — Conceptual
Structur e........................................................................................................... 449
44.2.2 Ar chitectur eGovernance Framework — Organizational
Structur e........................................................................................................... 451
44.3 Ar chitectur eGovernance in Practice .............................................................. 453
44.3.1 Ar chitectur eGovernance — Key Success Factors ...................................... 453
44.3.2 Elements of an Effective Architectur eGovernance Strategy .................... 454
Chapter 45 Architecture Maturity Models ................................................................ 455
45.1 Overview ............................................................................................................. 455
45.2 Backgr ound ......................................................................................................... 455
45.3 US DoC ACMM Framework ............................................................................ 456
45.3.1 Overview .......................................................................................................... 456
45.3.2 Elements of the ACMM ................................................................................. 457
45.3.3 Example: Enterprise Architectur eProcess Maturity Levels ..................... 457
45.4 Capability Maturity Models Integration (CMMI) ......................................... 460
45.4.1 Intr oduction ..................................................................................................... 460
45.4.2 SCAMPI Method ............................................................................................. 461
45.5 Conclusions ........................................................................................................ 461
Chapter 46 Architecture Skills Framework .............................................................. 463
46.1 Intr oduction ........................................................................................................ 463
46.2 Need for an Enterprise Architectur eSkills Framework ............................... 463
46.2.1 Deﬁnitional Rigor ........................................................................................... 463
46.2.2 Basis of an Internal Architectur ePractice ................................................... 464
46.3 Goals/Rationale ................................................................................................. 465
46.3.1 Certiﬁcation of Enterprise Ar chitects .......................................................... 465
46.3.2 Speciﬁc Beneﬁts ............................................................................................... 465
46.4 Enterprise Architectur eRole and Skill Categories ....................................... 466
46.4.1 Overview .......................................................................................................... 466
46.4.2 T OGAF Roles ................................................................................................... 466
46.4.3 Categories of Skills ......................................................................................... 467
46.4.4 Pr oﬁciency Levels ........................................................................................... 468
46.5 Enterprise Architectur eRole and Skill Deﬁnitions ....................................... 468
46.5.1 Generic Skills ................................................................................................... 468
46.5.2 Business Skills & Methods ............................................................................ 469
46.5.3 Enterprise Architectur eSkills ....................................................................... 469
46.5.4 Pr ogram or Project Management Skills ....................................................... 470
46.5.5 IT General Knowledge Skills ........................................................................ 470
46.5.6 T echnical IT Skills ........................................................................................... 471
46.5.7 Legal Envir onment ......................................................................................... 471
46.6 Generic Role and Skills of the Enterprise Ar chitect ...................................... 472
46.6.1 Generic Role .................................................................................................... 472
46.6.2 Characterization in Terms of the Enterprise Continuum ......................... 474
46.6.3 Key Characteristics of an Enterprise Ar chitect ........................................... 474
46.7 Conclusions ........................................................................................................ 476
The TOGAF®Standard, Version 9.2 xv
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Contents
Part VII Appendices ..................................................................................................... 477
Appendix A Glossary of Supplementary Deﬁnitions ........................................... 479
Appendix B Abbreviations .................................................................................................. 489
Index ..................................................................................................................... 493
List of Figures
1-1 Str uctur eo ft he TOGAF Standar d...................................................................... 4
2-1 Relationships between Deliverables, Artifacts, and Building
Blocks ...................................................................................................................... 13
2-2 Example —A rchitectur eDeﬁnition Document................................................ 14
2-3 Enterprise Continuum .......................................................................................... 15
2-4 T OGAF Architectur eRepository Structur e....................................................... 16
2-5 T OGAF Architectur eCapability Overview ....................................................... 18
4-1 Ar chitectur eDevelopment Cycle ........................................................................ 39
4-2 Integration of Architectur eArtifacts .................................................................. 48
5-1 Pr eliminary Phase ................................................................................................. 51
5-2 Management Frameworks to Co-ordinate with the TOGAF Framework .... 60
5-3 Inter operability and Relationships between Management
Frameworks ........................................................................................................... 62
6-1 Phase A: Architectur eVision ............................................................................... 65
7-1 Phase B: Business Architectur e........................................................................... 77
7-2 UML Business Class Diagram ............................................................................. 91
8-1 Phase C: Information Systems Architectur es .................................................... 95
11-1 Phase D: Technology Architectur e...................................................................... 1 19
12-1 Phase E: Opportunities & Solutions ................................................................... 131
13-1 Phase F: Migration Planning ............................................................................... 141
14-1 Phase G: Implementation Governance .............................................................. 149
15-1 Phase H: Architectur eChange Management .................................................... 155
16-1 ADM Architectur eRequirements Management ............................................... 165
18-1 Iteration Cycles ...................................................................................................... 180
18-2 Classes of Enterprise Architectur eEngagement .............................................. 181
18-3 A Hierarchy of ADM Processes Example .......................................................... 186
18-4 Activity by Iteration for Baseline First Architecture
Deﬁnition ................................................................................................................ 187
18-5 Activity by Iteration for Target First Architectur eDeﬁnition ......................... 187
19-1 Summary Classiﬁcation Model for Architectur eLandscapes ........................ 193
19-2 Summary of Architectur eContinuum ............................................................... 194
21-1 Sample Stakeholders and Categories ................................................................. 215
21-2 Stakeholder Power Grid ....................................................................................... 216
23-1 Gap Analysis Example ......................................................................................... 236
24-1 Implementation Factor Assessment and Deduction Matrix ........................... 239
24-2 Consolidated Gaps, Solutions, and Dependencies Matrix .............................. 240
24-3 Ar chitectur eDeﬁnition Increments T able .......................................................... 240
24-4 T ransition Architectur eState Evolution T able .................................................. 241
24-5 Sample Project Assessment with Respect to Business Value and
Risk .......................................................................................................................... 242
25-1 Business Information Interoperability Matrix .................................................. 247
25-2 Information Systems Interoperability Matrix ................................................... 247
xvi The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Contents
26-1 Business Transformation Readiness Assessment — Maturity
Model ...................................................................................................................... 252
26-2 Summary Table of Business Transformation Readiness Assessment ............ 254
27-1 Risk Classiﬁcation Scheme .................................................................................. 259
27-2 Sample Risk Identiﬁcation and Mitigation Assessment W orksheet .............. 260
28-1 Capability-Based Planning Concept .................................................................. 264
28-2 Capability Increments and Dimensions............................................................. 265
28-3 Capability Increment Radar ................................................................................ 266
28-4 Relationship Between Capabilities, Enterprise Architecture, and
Projects .................................................................................................................... 267
29-1 Relationships between Deliverables, Artifacts, and Building
Blocks ...................................................................................................................... 272
29-2 Example —A rchitectur eDeﬁnition Document................................................ 272
29-3 Content Metamodel Overview ........................................................................... 273
30-1 T OGAF Content Metamodel and its Extensions .............................................. 278
30-2 Cor eEntities and their Relationships ................................................................. 280
30-3 Content Framework by ADM Phases ................................................................ 281
30-4 Detailed Representation of the Content Metamodel ....................................... 282
30-5 Entities and Relationships Present within the Cor eContent
Metamodel ............................................................................................................. 284
30-6 Content Metamodel with Extensions ................................................................. 286
30-7 Relationships between Entities in the Full Metamodel ................................... 287
30-8 Cor eContent Metamodel and Predeﬁned Extension Modules ...................... 288
30-9 Cor eContent with Governance Extensions ...................................................... 288
30-10 Governance Extensions: Extensions to Cor eMetamodel ................................ 290
30-11S ervices Extension: Extensions to Cor eMetamodel ........................................ 292
30-12 Pr ocess Modeling Extensions: Extensions to Cor eMetamodel ...................... 293
30-13 Data Extensions: Extensions to Cor eMetamodel ............................................. 295
30-14 Infrastr uctur eConsolidation Extensions: Extensions to Core
Metamodel ............................................................................................................. 298
30-15 Motivation Extensions: Extensions to Cor eMetamodel ................................. 299
31-1 Basic Architectural Concepts ............................................................................... 320
31-2 Example Architectur eView — The Open Group Business Domains ........... 321
31-3 Interactions between Metamodel, Building Blocks, Diagrams, and
Stakeholders ........................................................................................................... 327
31-4 Artifacts Associated with the Cor eContent Metamodel and
Extensions .............................................................................................................. 327
33-1 Key ADM Phases/Steps at which Building Blocks are
Evolved/Speciﬁed ................................................................................................ 369
35-1 Enterprise Continuum .......................................................................................... 376
35-2 Ar chitectur eContinuum ...................................................................................... 378
35-3 Solutions Continuum ........................................................................................... 380
35-4 Relationships between Architectur eand Solutions Continua ........................ 383
36-1 Allocation of Teams to Architectur eScope ....................................................... 388
36-2 Ar chitectur eContent Aggr egation ..................................................................... 389
37-1 Overview of Architectur eRepository ................................................................ 391
37-2 Ar chitectur eContinuum ...................................................................................... 393
39-1 Matur eArchitectur eCapability .......................................................................... 405
42-1 Levels of Architectur eConformance .................................................................. 419
42-2 Ar chitectur eCompliance Review Pr ocess ......................................................... 423
44-1 Ar chitectur eGovernance Framework — Conceptual Structur e.................... 449
44-2 Ar chitectur eGovernance Framework — Organizational Structur e.............. 451
The TOGAF®Standard, Version 9.2 xvii
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Contents
List of Tables
4-1 ADM Version Numbering Convention ................................................... 41
20-1 Recommended Format for Deﬁning Principles ..................................... 198
21-1 Example Stakeholder Analysis ................................................................ 216
xviii The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Preface
The TOGAF®standar di sa no pen, industry consensus framework for Enterprise Architecture.
It is a foundational framework, which means that it is applicable to the development of any kind of
architectur ei na ny context. This foundational framework is supplemented by The Open Gr oup T OGAF
Library,1an extensive and growing portfolio of guidance material, providing practical guidance in the
application of the TOGAF framework in speciﬁc contexts.
The TOGAF Standard, V ersion 9.2 is an update to the TOGAF 9.1 standar dt op rovide additional
guidance, correct errors, address some structural challenges, and r emove obsolete content. All of these
changes will make the TOGAF framework easier to use and maintain.2
The TOGAF Documentation
The TOGAF documentation consists of a set of documents:
■The TOGAF standar d(this document) which describes the generally applicable approach to
Enterprise and IT Architecture
■The TOGAF Library ,ap ortfolio of guidance material to support the practical application of the
TOGAF approach
This Document
Ther eare six parts to this document:
PART I (Intr oduction) This part provides a high-level intr oduction to the key concepts of Enterprise
Architectur eand in particular the T OGAF approach. It contains the deﬁnitions of terms
used throughout the TOGAF documentation.
PART II( Architectur eDevelopment Method) This part is the cor eo ft he TOGAF framework. It
describes the TOGAF Ar chitectur eDevelopment Method (ADM) — a step-by-step appr oach
to developing an Enterprise Architecture.
PART III (ADM Guidelines & T echniques) This part contains a collection of guidelines and
techniques available for use in applying the TOGAF approach and the TOGAF ADM.
PART IV( Architectur eContent Framework) This part describes the TOGAF content framework,
including a str uctur ed metamodel for ar chitectural artifacts, the use of r e-usable
Architectur eBuilding Blocks (ABBs), and an overview of typical architectur edeliverables.
1.The TOGAF Library ( https://publications.opengroup.org/togaf-library )provides a publicly a vailable structured list of Guides and White
Papers which provide guidance in the practical application of the TOGAF approach.
2.Afull comparison of this version with the TOGAF Version 9.1 standard may be found in The Open Group White P aper: An Introduction to
the TOGAF®Standard, Version 9.2 ( www.opengroup.org/library/w182 ).
The TOGAF®Standard, Version 9.2 xix
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Preface
PART V (Enterprise Continuum & Tools) This part discusses appropriate taxonomies and tools to
categorize and stor ethe outputs of architectur eactivity within an enterprise.
PART V I( Architectur eCapability Framework) This part discusses the or ganization, processes, skills,
roles, and responsibilities r equir ed to establish and operate an ar chitectur efunction within
an enterprise.
Intended Audience
The TOGAF standar di si ntended for Enterprise Architects, Business Architects, IT Architects, Data
Architects, Systems Architects, Solution Architects, and anyone responsible for the ar chitectur efunction
within an organization.
Keywords
architectur e, ar chitectur eframework, ar chitectur edevelopment method, architect, architecting, enterprise
architectur e, enterprise ar chitectur eframework, enterprise ar chitectur emethod, method, methods, open,
group, technical reference model, standards, standards information base
xx The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
About The Open Group
The Open Group
The Open Group is a global consortium that enables the achievement of business objectives thr ough
technology standar ds. Our diverse membership of mor ethan 580 organizations includes customers,
systems and solutions suppliers, tools vendors, integrators, academics, and consultants acr oss multiple
industries.
The Open Group aims to:
■Captur e, understand, and address current and emer ging r equir ements, establish policies, and shar e
best practices
■Facilitate inter operability ,develop consensus, and evolve and integrate speciﬁcations and open
source technologies
■Operate the industry’s premier certiﬁcation service
Further information on The Open Group is available at www.opengroup.org .
The Open Group publishes a wide range of technical documentation, most of which is focused on
development of Open Group Standards and Guides, but which also includes white papers, technical
studies, certiﬁcation and testing documentation, and business titles.
Full details and a catalog ar eavailable at www.opengroup.org/library .
The TOGAF®Standard, Version 9.2 xxi
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Trademarks
ArchiMate®,DirecNet®,Making Standards W ork®,OpenPegasus®,Platform 3.0®,The Open Gr oup®,
TOGAF®,UNIX®,UNIXWARE®,X/Open®,and the Open Brand X®logo ar eregister ed trademarks and
Boundaryless Information Flow ™,Build with Integrity Buy with Conﬁdence ™,Dependability Thr ough
Assuredness ™,EMMM ™,FACE ™,the F ACE ™logo, IT4IT ™,the IT4IT ™logo, O-DEF ™,O-PAS ™,Open
FAIR™,Open Platform 3.0 ™,Open Process Automation ™,Open T rusted Technology Pr ovider ™,SOSA ™,
the Open O ™logo, and The Open Group Certiﬁcation logo (Open O and check ™)are trademarks of The
Open Group.
CMMI®,IPD-CMM®,P-CMM®,SA-CMM®,SCAMPI®,SE-CMM®,and SW -CMM®areregistered
trademarks of the Softwar eEngineering Institute (SEI), Carnegie Mellon University.
COBIT®is a r egister ed trademark of the Information Systems Audit and Control Association (ISACA)
and the IT Governance Institute.
Energistics®is a registered trademark of Energistics in the United States.
FICO®is a registered trademark of Fair Isaac Corporation in the United States and other countries.
IEEE®is a registered trademark of the Institute of Electrical and Electronics Engineers, Inc.
ITIL®,MSP®,PRINCE®,and PRINCE2®areregistered trademarks of AXELOS Limited.
Java®is a registered trademark of Oracle and/or its afﬁliates.
MDA®,Model-Driven Ar chitecture®,Object Management Gr oup®,OMG®,SysML®,and UML®are
register ed trademarks and BMM ™,BPMN ™,Business Motivation Model ™,Business Process Modeling
Notation ™,ITPMF ™,I TP ortfolio Management Facility ™,SPEM ™,Systems Modeling Language ™,and
Uniﬁed Modeling Language ™aretrademarks of the Object Management Group.
Merriam-Webster Collegiate Dictionary®is a registered trademark of Merriam-Webster ,Incorporated.
OASIS®is a registered trademark of OASIS, the open standards consortium.
PMBOK®is a r egister ed trademark of the Project Management Institute, Inc. which is r egister ed in the
United States and other nations.
The Open Group acknowledges that ther emay be other company names and products that might be
covered by trademark protection and advises the reader to verify them independently.
xxii The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Participants
This document was pr epar ed by The Open Group Ar chitectur eForum. When The Open Group appr oved
the TOGAF Standard, Version 9.2 on March 5, 2018, the Architectur eForum ofﬁcers wer ea sf ollows:
Mike Lambert ,Fellow of The Open Group, Chair
Robert Weisman ,Build The Vision, Vice-Chair
Sonia Gonzalez ,The Open Group, Architectur eand ArchiMate Forum Director
Architecture Forum Technical Reviewers
Technical r eviewers ar ethose individuals who have submitted comments during the company r eview ,or
participated in an issue resolution meeting during the development of the TOGAF Standard, Version 9.2:
Rob Akershoek, DXC Technology
Emmanuel Amamoo-Otchere, Huawei Technologies, Co. Ltd.
Michael Anniss, M.J. Anniss Ltd.
Graham Berrisford, Avancier
Terence Blevins, Fellow of The Open Group
Bill Estrem, Metaplexity Associates Inc.
Abdallah Fateen, Microsoft
Michael Fulton, Nationwide
Sonia Garnica, Intelligent Training de Colombia
Mats Gejnevall, Innovate
Kirk Hansen, Metaplexity Associates Inc.
Laura Hart, The MITRE Corporation
Judith Jones, ATE EnterprisesAndrew Josey ,The Open Group
Rolf Knoll, NovaTec Consulting GmbH
J. Bryan Lail, Raytheon
Mike Lambert, Fellow of The Open Group
Neil Levette, TRM Technologies Inc.
Kenneth Lind, XLENT IT Consulting
Stephen Marshall, IBM
Chalon Mullins, Business Architectur eGuild
Alain Picard, Benchmark Consulting
Sriram Sabesan, Conexiam
Satish Shettar ,IBM
Robert Weisman, Build The Vision
Paul Williams, Capgemini
Architecture Forum Members
An up-to-date list of Forum members can be found at: www.opengroup.org/architecture .
The TOGAF®Standard, Version 9.2 xxiii
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Acknowledgements
The Open Gr oup gratefully acknowledges The Open Group Ar chitectur eForum for developing the
TOGAF standard.
The Open Gr oup gratefully acknowledges the contribution of the US Air Force for its Headquarters Air
Force Principles.
The Open Gr oup gratefully acknowledges those past and present members of the Ar chitectur eForum
who have served as its ofﬁcers (Chairs and Vice-Chairs) since its inception. In alphabetical order:
Mick Adams
Christer Askerfjord
Terence Blevins
Bill Estrem
Hugh Fisher
Chris Forde
Chris Greenslade
Ed Harrington
Peter Haviland
Dave Hornford
David Jackson
Mike LambertStuart Macgregor
Ian McCall
Tara Paider
Barry Smith
Walter Stahlecker
Sheena Thompson
Paul van der Merwe
Dave Van Gelder
Jane Varnus
Vish Viswanathan
Robert Weisman
Hal Wilson
xxiv The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Referenced Documents
The following documents ar ereferenced in the TOGAF standard:
■AGuide to the Project Management Body of Knowledge (PMBOK®)Guide), Project Management
Institute; refer to www.pmi.org/pmbok-guide-standards
■AM ethod for Identifying Process Re-Use Opportunities to Enhance the Operating Model, M. de
Vries, A. van der Merwe, P .Kotze, A. Gerber ,i np roceedings of the 201 1IEEE International
Conference on Industrial Engineering and Engineering Management (IEEM)
■Analysis Patterns — Reusable Object Models, M. Fowler ,ISBN: 0-201-89542-0, Addison-Wesley
■ANSI/IEEE Std 1471-2000: Systems and Softwar eEngineering — Recommended Practice for
Architectural Description of Software-intensive Systems
■APattern Language: Towns, Buildings, Construction, Christopher Alexander ,ISBN: 0-19-501919-9,
Oxfor dUniversity Press, 1979
■Business Capabilities, an Open Group Guide, March 2016 (G161), published by The Open Group;
refer to www.opengroup.org/library/g161
■Business Motivation Model ™(BMM ™), Object Management Group (OMG); refer to
www.omg.org/spec/BMM/About-BMM
■Business Transformation Enablement Program (BTEP), Canadian Government; refer to www.tbs-
sct.gc.ca/btep-pto/index_e.asp
■Business Process Modeling Notation ™(BPMN ™)Speciﬁcation, Object Management Group (OMG);
refer to www.bpmn.org
■Control Objectives for Information and related Technology (COBIT®), Version 4.0, IT Governance
Institute, 2005
■Corporate Governance, Ranami Naidoo, ISBN: 1-919-903-0086, Double Storey ,2002
■Design Patterns: Elements of Reusable Object-Oriented Software, Erich Gamma, Richar dHelm,
Ralph Johnson, John Vlissides, ISBN: 0-201-63361-2, Addison-Wesley ,October 1994
■Enterprise Architectur ea sS trategy ,Jeanne Ross, Peter Weill, David C. Robertson,
ISBN: 1-59139-839-8, Harvar dBusiness School Press, 2006
■Enterprise Architectur eCapability Maturity Model (ACMM), Version 1.2, United States Department
of Commerce, December 2007
■Enterprise Architectur eMaturity Model, Version 1.3, National Association of State CIOs (NASCIO),
December 2003
■Enterprise Architectur ePlanning (EAP): Developing a Blueprint for Data, Applications, and
Technology ,Steven H. Spewak, Steven C. Hill, ISBN: 0-47-159985-9, John Wiley & Sons, 1993
The TOGAF®Standard, Version 9.2 xxv
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Referenced Documents
■Exploring Synergies between TOGAF®and Frameworx, White Paper ,May 201 1(W114), published
by The Open Group; refer to www.opengroup.org/library/w114
■Headquarters Air Force Principles for Information Management, US Air Force, June 29, 1998
■Integrating Risk and Security within a TOGAF®Enterprise Architecture, an Open Group Guide,
January 2016 (G152), published by The Open Group; refer to www.opengroup.org/library/g152
■Integrating the TOGAF®Standar dwith the BIAN Service Landscape, White Paper ,October 2013
(W135), published by The Open Group; refer to www.opengroup.org/library/w135
■ISO/IEC 20000: 2011, Information Technology — Service Management
■ISO/IEC/IEEE 15288: 2015, Systems and Softwar eEngineering — System Life Cycle Processes
■ISO/IEC/IEEE 42010: 2011, Systems and Softwar eEngineering — Architectur eDescription
■IT Portfolio Management Facility ™(ITPMF ™)Speciﬁcation, Object Management Group (OMG);
refer to www.omg.org/spec/ITPMF
■Merriam-Webster Collegiate Dictionary ,Merriam-Webster ,English Language, 11th Edition, April
2008, ISBN-10: 0877798095, ISBN-13: 978-0877798095; refer to www.merriam-webster.com
■Model-Driven Architecture®(MDA®)Speciﬁcation, Object Management (OMG); refer to
www.omg.org/mda
■OECD Principles of Corporate Governance, Organization for Economic Co-operation and
Development, December 2001; refer to www.oecd.org
■Organigraphs: Drawing How Companies Really Work, H. Mintzber gand L. Van der Heyden,
Harvar dBusiness Review ,October 1999; refer to https://hbr.org/1999/09/organigraphs-drawing-
how-companies-really-work
■Pattern-Oriented Softwar eArchitecture: A System of Patterns, F .Buschmann, R. Meunier ,H.
Rohnert, P .Sommerlad, M. Stal, ISBN: 0-471-95869-7, John Wiley & Sons, 1996
■Patterns and Software: Essential Concepts and Terminology ,Brad Appleton, 2000; refer to
www.bradapp.com/docs/patterns-intro.html
■Re-usable Asset Speciﬁcation (RAS), Version 2.2, Object Management Group (OMG), November
2005; refer to www.omg.org/spec/RAS
■Service Component Architectur e(SCA) Speciﬁcation, developed by the Open Service Oriented
Architectur e(OSOA) collaboration; refer to www.oasis-opencsa.org/sca
■Service Data Objects (SDO) Speciﬁcation, developed by the Open Service Oriented Architecture
(OSOA) collaboration; refer to www.oasis-opencsa.org/sdo
■Softwar eProcessing Engineering Metamodel (SPEM ™)Speciﬁcation, Version 2.0, Object
Management Group (OMG), April 2008; refer to www.omg.org/spec/SPEM
■Systems Modeling Language ™(SysML®), Object Management Group (OMG); refer to
www.sysml.org
■The Art of Systems Architecting, Eberhardt Rechtin, Mark W .Maier,2000
■The Open Group IT4IT ™Reference Architecture, Version 2.1, an Open Group Standard, January
2017 (C171), published by The Open Group; refer to www.opengroup.org/library/c171
■The Oregon Experiment, Christopher Alexander ,ISBN: 0-19-501824-9, Oxfor dUniversity Press, 1975
■The Timeless Way of Building, Christopher Alexander ,ISBN: 0-19-502402-8, Oxfor dUniversity
Press, 1979
xxvi The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Referenced Documents
■TOGAF®9and DoDAF 2.0, White Paper ,July 2010 (W105), published by The Open Group; refer to
www.opengroup.org/library/w105
■TOGAF®and SABSA®Integration, White Paper ,October 201 1(W117), published by The Open
Group; refer to www.opengroup.org/library/w117
■TOGAF®Series Guide: Business Scenarios, September 2017 (G176), published by The Open Group;
refer to www.opengroup.org/library/g176
■TOGAF®Series Guide: The TOGAF Integrated Information Infrastructur eReference Model (III-
RM): An Architected Approach to Boundaryless Information Flow ™,November 2017 (G179),
published by The Open Group; refer to www.opengroup.org/library/g179
■TOGAF®Series Guide: The TOGAF Technical Reference Model (TRM), September 2017 (G175),
published by The Open Group; refer to www.opengroup.org/library/g175
■TOGAF®Series Guide: Using the TOGAF®Framework to Deﬁne and Govern Service-Oriented
Architectures, September 2017 (G174), published by The Open Group; refer to
www.opengroup.org/library/g174
■TOGAF®Series Guide: Value Streams, October 2017 (G178), published by The Open Group; refer to
www.opengroup.org/library/g178
■UML Proﬁle and Metamodel for Services (UPMS) RFP (OMG soa/2006-09-09), Object Management
Group (OMG), June 2007
■Uniﬁed Modeling Language ™(UML®)Speciﬁcation, Object Management Group (OMG); refer to
www.uml.org
The following websites provide useful reference material:
■The Cloud Computing Design Patterns community website (refer to www.cloudpatterns.org )
■The Information T echnology Governance Institute: www.isaca.org/About-ISACA/IT-Governance-
Institute
This website has many r esour ces that can help with corporate assessment of both IT and
governance in general.
■The Patterns Home Page: hillside.net/patterns
This website is hosted by The Hillside Group and pr ovides information about patterns, links to
online patterns, papers, and books dealing with patterns, and patterns-related mailing lists.
■The Patterns-Discussion FAQ: g.oswego.edu/dl/pd-FAQ/pd-FAQ.html
This website is maintained by Doug Lea and provides a thor ough and highly readable FAQ about
patterns.
■The SOA Patterns community website (refer to www.soapatterns.org/ ), dedicated to the ongoing
development and expansion of the SOA design pattern catalog
■The Voler ewebsite has a useful list of leading requirements tools www.volere.co.uk/tools.htm
The TOGAF®Standard, Version 9.2 xxvii
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Referenced Documents
xxviii The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
The TOGAF Standard, Version 9.2
Part I:
Introduction
The Open Group
Part I: Introduction 1
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
2 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 1
Introduction
The TOGAF standar di saf ramework for Enterprise Ar chitectur e. It may be used freely by any
organization wishing to develop an Enterprise Ar chitectur efor use within that or ganization (see Section
1.4.1 ).
The T OGAF standar di sd eveloped and maintained by members of The Open Group, working within the
Architectur eForum (refer to www.opengroup.org/architecture ). The original development of T OGAF
Version 1 in 1995 was based on the Technical Ar chitectur eFramework for Information Management
(TAFIM), developed by the US Department of Defense (DoD). The DoD gave The Open Group explicit
permission and encouragement to create V ersion 1 of the TOGAF standar db yb uilding on the T AFIM,
which itself was the result of many years of development ef fort and many millions of dollars of US
Government investment.
Starting from this sound foundation, the members of The Open Gr oup Ar chitectur eForum have
developed successive versions of the T OGAF standar dand published each one on The Open Gr oup
public website.
This version builds on previous versions of the T OGAF standar dand updates the material available to
architectur epractitioners to assist them in building a sustainable Enterprise Ar chitectur e. W ork on White
Papers and Guides describing how to to integrate and use this standar dw ith other frameworks and
architectural styles has highlighted the universal framework parts of the standard, as well as industry ,
architectur estyle, and purpose-speciﬁc tools, techniques, and guidance. This work is embodied in the
TOGAF Library.1
Although all of the TOGAF documentation works together as a whole, it is expected that or ganizations
will customize it during adoption, and deliberately choose some elements, customize some, exclude
some, and cr eate others. For example, an organization may wish to adopt the TOGAF metamodel, but
elect not to use any of the guidance on how to develop an in-house Technology Ar chitectur ebecause they
areheavy consumers of cloud and Open Platform 3.0 ™.
Regar dless of your prior experience, you ar erecommended to r ead the Executive Overview (see Section
1.3), wher eyou will ﬁnd an outline of The Open Group understanding of Enterprise Ar chitectur eand
answers to fundamental questions, such as:
■Why is an Enterprise Architectur eneeded?
■Why use the TOGAF standar da saf ramework for Enterprise Architecture?
1.The TOGAF Library provides an online publicly a vailable structured list of Guides, White Papers, and other resources. Refer to The Open
Group Library at https://publications.opengroup.org/togaf-library .
Part I: Introduction 3
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Structureo fthis Document Introduction
1.1 Structure of this Document
The str uctur eo ft his document reﬂects the str uctur eand content of an Ar chitectur eCapability
within an enterprise, as shown in Figur e1-1.
Needs of the business shape
non-architectural aspects of business operation
TOGAF Capability Framework
Informs the size, structure, and
culture of the capability
Effective operation of the
Architecture Capability ensures
realization of the Business VisionSets targets, KPIs, plans, and
budgets for architecture roles
Business Capability drives the
need for Architecture Capability
Maturity
The Architecture Capability
operates a method
The method delivers new
business solutions
TOGAF ADM &
Content Framework
Operational changes update the
Enterprise Continuum and
RepositoryBusiness need feeds into the
method, identifying problems
to be addressed
The method refines
understanding of business need
The method produces content to be
stored in the Repository, classified
according to the Enterprise Continuum
The Enterprise Continuum and
Repository inform the business
of current state
TOGAF Enterprise Continuum and Tools
Learning from business operation creates
new business needArchitecture Capability
Framework
(Part VI)
Architecture
Development Method
(Part II)
ADM Guidelines and
Techniques (Part III,
TOGAF Library)
Enterprise Continuum
and Tools
(Part V)
TOGAF Reference
Materials
(TOGAF Library)Business
Vision and
DriversBusiness
Capabilities
© The Open GroupArchitecture
Content
Framework
(Part IV)
Figure 1-1 Structur eo ft he TOGAF Standard
Ther eare six parts to this document:
PART I (Intr oduction) This part provides a high-level introduction to the key concepts of
Enterprise Ar chitectur eand in particular the T OGAF approach. It contains the
deﬁnitions of terms used throughout this standard.
PART II( Architectur eD evelopment Method) This part is the cor eo ft he T OGAF
framework. It describes the TOGAF Ar chitectur eDevelopment Method (ADM) —
astep-by-step approach to developing an Enterprise Architecture.
PART III (ADM Guidelines & Techniques) This part contains a collection of guidelines and
techniques available for use in applying the TOGAF approach and the T OGAF
ADM. Additional guidelines and techniques ar eavailable in the TOGAF Library.
PART IV( Architectur eC ontent Framework) This part describes the T OGAF content
framework, including a str uctur ed metamodel for ar chitectural artifacts, the use of
re-usable Ar chitectur eBuilding Blocks (ABBs), and an overview of typical
architectur edeliverables.
4 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Introduction Structur eo fthis Document
PART V (Enterprise Continuum & Tools) This part discusses appropriate taxonomies and
tools to categorize and stor ethe outputs of ar chitectur eactivity within an
enterprise.
PART V I( Architectur eC apability Framework) This part discusses the or ganization,
processes, skills, roles, and responsibilities r equir ed to establish and operate an
architectur efunction within an enterprise.
The intention of dividing the T OGAF standar dinto these independent parts is to allow for
differ ent areas of specialization to be consider ed in detail and potentially addressed in isolation.
Although all parts work together as a whole, it is also feasible to select particular parts for
adoption while excluding others. For example, an organization may wish to adopt the ADM
process, but elect not to use any of the materials relating to Architectur eCapability.
As an open framework, such use is encouraged, particularly in the following situations:
■Organizations that ar enew to the TOGAF approach and wish to incr ementally adopt
TOGAF concepts ar eexpected to focus on particular parts of the speciﬁcation for initial
adoption, with other areas tabled for later consideration
■Organizations that have already deployed ar chitectur eframeworks may choose to mer ge
these frameworks with aspects of the TOGAF standard
1.2 Structure of the TOGAF Library
Accompanying this standar disa p ortfolio of guidance material, known as the TOGAF Library ,
to support the practical application of the TOGAF approach. The T OGAF Library is a r eference
library containing guidelines, templates, patterns, and other forms of r eference material to
accelerate the creation of new architectures for the enterprise.
The TOGAF Library is maintained under the governance of The Open Gr oup Ar chitecture
Forum.
Library resources ar eorganized into four sections:
■Section 1. Foundation Documents
■Section 2. Generic Guidance and Techniques
■Section 3. Industry-Speciﬁc Guidance and Techniques
■Section 4. Organization-Speciﬁc Guidance and Techniques
Wher eresour ces within the Library apply to the deployment of the TOGAF ADM and make
explicit r eference to "anchor points" within the TOGAF standar dthey ar eclassiﬁed within the
Library as Dependent documents. Resources that pr ovide guidance on how to utilize featur es
described in the standar dare classiﬁed as Supporting documents. Resour ces that relate to
Enterprise Ar chitectur ei ng eneral, and that do not make any speciﬁc r eferences to the T OGAF
standard, ar eclassiﬁed as EA General documents.
Part I: Introduction 5
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Executive Overvie wI ntroduction
1.3 Executive Overview
This section provides an executive overview of Enterprise Ar chitectur e, the basic concepts of
what it is (not just another name for IT Ar chitectur e), and why it is needed. It provides a
summary of the beneﬁts of establishing an Enterprise Ar chitectur eand adopting the T OGAF
approach to achieve that.
What is an enterprise?
The TOGAF standar dconsiders an "enterprise" to be any collection of or ganizations that have
common goals.
For example, an enterprise could be:
■Awhole corporation or a division of a corporation
■Agovernment agency or a single government department
■Achain of geographically distant organizations linked together by common ownership
■Groups of countries or governments working together to cr eate common or shar eable
deliverables or infrastructures
■Partnerships and alliances of businesses working together ,such as a consortium or supply
chain
The term "Enterprise" in the context of "Enterprise Ar chitectur e" can be applied to either an
entir eenterprise, encompassing all of its business activities and capabilities, information, and
technology that make up the entir einfrastructur eand governance of the enterprise, or to one or
morespeciﬁc areas of interest within the enterprise. In both cases, the ar chitectur ecrosses
multiple systems, and multiple functional groups within the enterprise.
Confusion often arises from the evolving natur eo ft he term "enterprise". An extended enterprise
nowadays frequently includes partners, suppliers, and customers. If the goal is to integrate an
extended enterprise, then the enterprise comprises the partners, suppliers, and customers, as
well as internal business units.
The enterprise operating model concept is useful to determine the natur eand scope of the
Enterprise Ar chitectur ewithin an or ganization. Many organizations may comprise multiple
enterprises, and may develop and maintain a number of independent Enterprise Ar chitectures
to address each one. These enterprises often have much in common with each other including
processes, functions, and their information systems, and ther ei so ften great potential for wider
gain in the use of a common ar chitectur eframework. For example, a common framework can
provide a basis for the development of common building blocks and solutions, and a shar eable
Architectur eRepository for the integration and r e-use of business models, designs, information,
and data.
Why is an Enterprise Architecture needed?
The purpose of Enterprise Ar chitectur ei st oo ptimize acr oss the enterprise the often fragmented
legacy of processes (both manual and automated) into an integrated environment that is
responsive to change and supportive of the delivery of the business strategy.
Today’s CEOs know that the ef fective management and exploitation of information and Digital
Transformation ar ekey factors to business success, and indispensable means to achieving
competitive advantage. An Enterprise Ar chitectur eaddresses this need, by providing a strategic
context for the evolution and r each of digital capability in response to the constantly changing
needs of the business environment.
6 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Introduction Executive Overview
For example, the rapid development of social media, Internet of Things, and cloud computing
has radically extended the capacity of the enterprise to create new market opportunities.
Furthermor e, a good Enterprise Ar chitectur eenables you to achieve the right balance between
business transformation and continuous operational ef ﬁciency .I ta llows individual business
units to innovate safely in their pursuit of evolving business goals and competitive advantage.
At the same time, the Enterprise Ar chitectur eenables the needs of the organization to be met
with an integrated strategy which permits the closest possible synergies across the enterprise
and beyond.
What are the beneﬁts of an Enterprise Architecture?
An effective Enterprise Ar chitectur ecan bring important beneﬁts to the organization. Speciﬁc
beneﬁts of an Enterprise Architectur einclude:
■Moreeffective and efﬁcient business operations:
—L ower business operation costs
—M oreagile organization
—B usiness capabilities shared across the organization
—L ower change management costs
—M oreﬂexible workforce
—Improved business productivity
■Moreeffective and efﬁcient Digital Transformation and IT operations:
—E xtending effective reach of the enterprise through digital capability
—B ringing all components of the enterprise into a harmonized environment
—L ower softwar edevelopment, support, and maintenance costs
—Increased portability of applications
—Improved interoperability and easier system and network management
—Improved ability to address critical enterprise-wide issues like security
—E asier upgrade and exchange of system components
■Better return on existing investment, reduced risk for futur einvestment:
—R educed complexity in the business and IT
—M aximum return on investment in existing business and IT infrastructure
—T he ﬂexibility to make, buy ,o ro ut-source business and IT solutions
—R educed risk overall in new investments and their cost of ownership
■Faster ,simpler ,and cheaper procurement:
—B uying decisions ar esimpler ,because the information governing pr ocur ement is
readily available in a coherent plan
—T he pr ocur ement process is faster — maximizing pr ocur ement speed and ﬂexibility
without sacriﬁcing architectural coherence
Part I: Introduction 7
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Executive Overvie wI ntroduction
—T he ability to procur eheterogeneous, multi-vendor open systems
—T he ability to secur emoreeconomic capabilities
What speciﬁcally would prompt the development of an Enterprise Architecture?
Typically ,preparation for business transformation needs or for radical infrastr uctur echanges
initiates an Enterprise Ar chitectur ereview or development. Often key people identify ar eas of
change r equir ed in order for new business goals to be met. Such people ar ecommonly r eferred
to as the "stakeholders" in the change. The role of the architect is to address their concerns by:
■Identifying and reﬁning the requirements that the stakeholders have
■Developing views of the ar chitectur ethat show how the concerns and r equir ements ar e
going to be addressed
■Showing the trade-offs that ar egoing to be made in r econciling the potentially conﬂicting
concerns of different stakeholders
Without the Enterprise Ar chitectur e, it is highly unlikely that all the concerns and r equirements
will be considered and met.
What is an architecture framework?
An ar chitectur eframework is a foundational str uctur e, or set of str uctur es, which can be used
for developing a broad range of dif ferent ar chitectur es. It should describe a method for
designing a tar get state of the enterprise in terms of a set of building blocks, and for showing
how the building blocks ﬁt together .I ts hould contain a set of tools and provide a common
vocabulary .I ts hould also include a list of r ecommended standards and compliant products that
can be used to implement the building blocks.
Why use the TOGAF standard as a framework for Enterprise Architecture?
The TOGAF standar dhas been developed thr ough the collaborative efforts of the whole
community .Using the TOGAF standar dresults in Enterprise Ar chitectur ethat is consistent,
reﬂects the needs of stakeholders, employs best practice, and gives due consideration both to
current requirements and the perceived futur eneeds of the business.
Developing and sustaining an Enterprise Ar chitectur ei sat echnically complex process which
involves many stakeholders and decision processes in the organization. The TOGAF standar d
plays an important role in standar dizing and de-risks the ar chitectur edevelopment pr ocess.
The TOGAF standar dprovides a best practice framework for adding value, and enables the
organization to build workable and economic solutions which address their business issues and
needs.
Who would beneﬁt from using the TOGAF standard?
Any or ganization undertaking, or planning to undertake, the development and implementation
of an Enterprise Ar chitectur efor the support of business transformation will beneﬁt fr om use of
the TOGAF standard.
Organizations seeking Boundaryless Information Flow ™can use the TOGAF standar dt od eﬁne
and implement the str uctur es and processes to enable access to integrated information within
and between enterprises.
Organizations that design and implement Enterprise Ar chitectur es using the TOGAF standar d
areassured of a design and a pr ocur ement speciﬁcation that can facilitate an open systems
implementation, thus enabling the beneﬁts of open systems with reduced risk.
8 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Introduction Information on Using the TOGAF Standard
1.4 Information on Using the TOGAF Standard
1.4.1 Conditions of Use
The TOGAF standar di sf reely available for viewing online without a license. Alternatively ,it
can be downloaded and stored under license, as explained on the TOGAF information website.
In either case, the TOGAF standar dcan be used freely by any or ganization wishing to do so to
develop an ar chitectur efor use within that organization. No part of it may be r eproduced, stor ed
in a r etrieval system, or transmitted, in any form or by any means, electronic, mechanical,
photocopying, r ecording, or otherwise, for any other purpose including, but not by way of
limitation, any use for commercial gain, without the prior permission of the copyright owners.
1.4.2 How Much Does the TOGAF Standard Cost?
The Open Group is committed to delivering greater business efﬁciency by bringing together
buyers and suppliers of information systems to lower the barriers of integrating new technology
across the enterprise. Its goal is to realize the vision of Boundaryless Information Flow.
The TOGAF standar disak ey part of its strategy for achieving this goal, and The Open Gr oup
wants it to be taken up and used in practical ar chitectur eprojects, and the experience fr om its
use fed back to help improve it.
The Open Group ther eforepublishes it on its public web server ,and allows and encourages its
reproduction and use fr ee-of-char ge by any or ganization wishing to use it internally to develop
an Enterprise Ar chitectur e. (Ther eare re strictions on its commer cial use, however; see Section
1.4.1 .)
1.4.3 Downloads
Downloads of the TOGAF standar d, including printable PDF ﬁles, ar eavailable under license
from the TOGAF information website (r efer to www.opengroup.org/togaf/downloads ). The
license is free to any or ganization wishing to use the standar dentirely for internal purposes (for
example, to develop an Enterprise Architectur efor use within that organization).
1.5 Why Join The Open Group?
Organizations wishing to reduce the time, cost, and risk of implementing multi-vendor solutions
that integrate within and between enterprises need The Open Group as their key partner.
The Open Gr oup brings together the buyers and suppliers of information systems worldwide,
and enables them to work together ,both to ensur ethat IT solutions meet the needs of customers,
and to make it easier to integrate IT across the enterprise. The TOGAF standar di sak ey enabler
in this task.
Yes, the TOGAF standar ditself is fr eely available. But how much will you spend on developing
or updating your Enterprise Ar chitectur e? And how much will you spend on pr ocurements
based on that ar chitectur e? The price of membership of The Open Group is insigniﬁcant in
comparison with these amounts.
In addition to the general beneﬁts of membership, as a member of The Open Group you will be
eligible to participate in The Open Group Ar chitectur eForum, which is the development
program within which the T OGAF standar di se volved, and in which TOGAF users come
together to exchange information and feedback.
Part I: Introduction 9
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Why Join The Open Gr oup? Intr oduction
Members of the Architectur eForum gain:
■Immediate access to the fr uits of the current TOGAF work program (not publicly available
until publication of the next edition of the TOGAF standard) — in effect, the latest
information on the standard
■Exchange of experience with other customer and vendor or ganizations involved in
Enterprise Ar chitectur ei ng eneral, and networking with ar chitects using the T OGAF
standar di ns igniﬁcant architectur edevelopment projects around the world
■Peer review of speciﬁc architectur ecase study material
10 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 2
CoreConcepts
For the purposes of the TOGAF standard, the cor econcepts provided in this chapter apply.
2.1 What is the TOGAF Standard?
The TOGAF standar di sa na rchitectur eframework. It pr ovides the methods and tools for
assisting in the acceptance, production, use, and maintenance of an Enterprise Ar chitectur e. It is
based on an iterative process model supported by best practices and a re-usable set of existing
architectur eassets.
2.2 What is Architecture in the Context of the TOGAF Standard?
ISO/IEC/IEEE 42010: 201 1deﬁnes "architecture" as:
"The fundamental concepts or pr operties of a system in its environment embodied in its
elements, relationships, and in the principles of its design and evolution."
The TOGAF standar dembraces but does not strictly adher etoISO/IEC/IEEE 42010: 2011
terminology .I na ddition to the ISO/IEC/IEEE 42010: 201 1deﬁnition of "ar chitectur e", the
TOGAF standar ddeﬁnes a second meaning depending upon the context:
"The str uctur eo fc omponents, their inter -relationships, and the principles and guidelines
governing their design and evolution over time."
The T OGAF standar dconsiders the enterprise as a system and endeavors to strike a balance
between promoting the concepts and terminology drawn fr om relevant standards, and
commonly accepted terminology that is familiar to the majority of the T OGAF r eadership. For
moreo nt erminology ,refer to Chapter 3 and Part IV , Chapter 31 .
2.3 What Kind of Architecture Does the TOGAF Standard Deal With?
Ther eare four ar chitectur edomains that ar ecommonly accepted as subsets of an overall
Enterprise Architecture, all of which the TOGAF standar di sd esigned to support:
■The Business Architecture deﬁnes the business strategy ,governance, organization, and
key business processes
■The Data Architecture describes the str uctur eo fa no rganization’s logical and physical
data assets and data management resources
Part I: Introduction 11
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
What Kind of Ar chitectureDoes the TOGAF Standar dDeal With? Cor eConcepts
■The Application Architecture provides a blueprint for the individual applications to be
deployed, their interactions, and their relationships to the cor ebusiness processes of the
organization
■The Technology Architecture describes the logical softwar eand har dwar ecapabilities that
arerequir ed to support the deployment of business, data, and application services; this
includes IT infrastr uctur e, middleware, networks, communications, processing, standar ds,
etc.
2.4 Architecture Development Method
The TOGAF Ar chitectur eDevelopment Method (ADM) provides a tested and repeatable pr ocess
for developing ar chitectur es. The ADM includes establishing an ar chitectur eframework,
developing architectur econtent, transitioning, and governing the realization of architectures.
All of these activities ar ecarried out within an iterative cycle of continuous ar chitecture
deﬁnition and r ealization that allows organizations to transform their enterprises in a contr olled
manner in response to business goals and opportunities.
Phases within the ADM ar ea sf ollows:
■The Preliminary Phase describes the preparation and initiation activities r equir ed to cr eate
an Ar chitectur eCapability including customization of the TOGAF framework and
deﬁnition of Architectur ePrinciples
■Phase A: Architecture V ision describes the initial phase of an ar chitectur edevelopment
cycle
It includes information about deﬁning the scope of the ar chitectur edevelopment initiative,
identifying the stakeholders, creating the Ar chitectur eVision, and obtaining approval to
proceed with the architectur edevelopment.
■Phase B: Business Architecture describes the development of a Business Ar chitectur eto
support the agreed Architectur eVision
■Phase C: Information Systems Architectures describes the development of Information
Systems Architectures to support the agreed Architectur eVision
■Phase D: Technology Architecture describes the development of the T echnology
Architectur et os upport the agreed Architectur eVision
■Phase E: Opportunities & Solutions conducts initial implementation planning and the
identiﬁcation of delivery vehicles for the architectur edeﬁned in the previous phases
■Phase F: Migration Planning addr esses how to move fr om the Baseline to the T arget
Architectures by ﬁnalizing a detailed Implementation and Migration Plan
■Phase G: Implementation Governance provides an architectural oversight of the
implementation
■Phase H: Architecture Change Management establishes pr ocedur es for managing change
to the new architecture
■Requirements Management examines the process of managing ar chitectur erequirements
throughout the ADM
12 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
CoreConcepts Deliver ables, Artifacts, and Building Blocks
2.5 Deliverables, Artifacts, and Building Blocks
Architects executing the ADM will produce a number of outputs as a result of their ef forts, such
as process ﬂows, architectural r equir ements, pr oject plans, project compliance assessments, etc.
The TOGAF Ar chitectur eContent Framework (see Part IV ,Chapter 29 )provides a str uctural
model for architectural content that allows major work pr oducts to be consistently deﬁned,
structured, and presented.
The Ar chitectur eContent Framework uses the following thr ee categories to describe the type of
architectural work product within the context of use:
■Adeliverable is a work pr oduct that is contractually speciﬁed and in turn formally
reviewed, agreed, and signed of fb yt he stakeholders
Deliverables r epresent the output of projects and those deliverables that ar ein
documentation form will typically be ar chived at completion of a project, or transitioned
into an Ar chitectur eRepository as a r eference model, standar d, or snapshot of the
Architectur eLandscape at a point in time.
■Anartifact is an architectural work product that describes an aspect of the architecture
Artifacts ar egenerally classiﬁed as catalogs (lists of things), matrices (showing
relationships between things), and diagrams (pictur es of things). Examples include a
requirements catalog, business interaction matrix, and a use-case diagram. An
architectural deliverable may contain many artifacts and artifacts will form the content of
the Architectur eRepository.
■Abuilding block represents a (potentially r e-usable) component of enterprise capability
that can be combined with other building blocks to deliver architectures and solutions
Building blocks can be deﬁned at various levels of detail, depending on what stage of
architectur edevelopment has been r eached. For instance, at an early stage, a building
block can simply consist of a name or an outline description. Later on, a building block
may be decomposed into multiple supporting building blocks and may be accompanied
by a full speciﬁcation. Building blocks can relate to "architectures" or "solutions".
—Architecture Building Blocks (ABBs) typically describe r equir ed capability and
shape the speciﬁcation of Solution Building Blocks (SBBs); for example, a customer
services capability may be r equir ed within an enterprise, supported by many SBBs,
such as processes, data, and application software
—Solution Building Blocks (SBBs) represent components that will be used to
implement the r equir ed capability; for example, a network is a building block that
can be described thr ough complementary artifacts and then put to use to r ealize
solutions for the enterprise
The relationships between deliverables, artifacts, and building blocks ar eshown in Figur e2-1.
Part I: Introduction 13
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Deliverables, Artifacts, and Building Bloc ks Cor eConcepts
Architecture Deliverables Architecture Repository
Artifacts and Building Blocks
Artifacts
Which areRe-Usable Building
Blocks
Catalogs
DescribingMatrices
Diagrams
Building BlocksCatalogs
DescribingMatrices
Diagrams
Building Blocks
Architecture
DeliverablesOther Deliverables© The Open Group
Figure 2-1 Relationships between Deliverables, Artifacts, and Building Blocks
For example, an Ar chitectur eD eﬁnition Document is a deliverable that documents an
Architectur eDescription. This document will contain a number of complementary artifacts that
areviews of the building blocks relevant to the ar chitectur e. For example, a process ﬂow
diagram (an artifact) may be cr eated to describe the target call handling process (a building
block). This artifact may also describe other building blocks, such as the actors involved in the
process (e.g., a Customer Services Repr esentative). An example of the relationships between
deliverables, artifacts, and building blocks is illustrated in Figur e29-2.
Building Block:
Baseline Call Handling Process
Building Block:
Target Call Handling ProcessBuilding Block:
Customer Services RepresentativeDeliverable: Architecture
Definition Document
Deliverables contain ArtifactsArtifact:
Process Flow Diagram
Artifact:
Process Flow DiagramArtifact:
Use-Case Diagram
Artifact:
Use-Case DiagramArtifacts describe building blocksArtifacts describe building blocks
Describes
DescribesDescribesDescribesDescribes
DescribesDescribes
Describes
© The Open Group
Figure 2-2 Example — Architectur eDeﬁnition Document
14 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
CoreConcepts Deliver ables, Artifacts, and Building Blocks
2.6 Enterprise Continuum
The TOGAF standar dincludes the concept of the Enterprise Continuum, which sets the br oader
context for an ar chitect and explains how generic solutions can be leveraged and specialized in
order to support the r equir ements of an individual or ganization. The Enterprise Continuum is a
view of the Ar chitectur eRepository that provides methods for classifying ar chitectur eand
solution artifacts as they evolve fr om generic Foundation Ar chitectur es to Or ganization-Speciﬁc
Architectur es. The Enterprise Continuum comprises two complementary concepts: the
Architectur eContinuum and the Solutions Continuum.
An overview of the structur eand context for the Enterprise Continuum is shown in Figur e2-3.
External factors
provide context
Architecture Context and Requirements
Guides and
supportsGuides and
supportsGuides and
supportsGuides and
supportsGeneric
ArchitecturesSpecific
ArchitecturesGeneralization for future re-use
Adaptation for useArchitecture Continuum
Generalization for future re-use
Adaptation for useGeneric
SolutionsSpecific
Solutions
Solutions Continuum
Deployed SolutionsContextual factors
shape architectures
Solutions are instantiated
within a deploymentDeployed solutions become
Architecture ContextEnterprise Continuum Enterprise
Repositories
(including
Requirements Repository,
Architecture Repository,
Design Stores,
and CMDB)
The Enterprise Continuum
provides structure and
classification for assets in
Enterprise Repositories.
Enterprise Repositories
provide resources to be
classified within the
Enterprise Continuum.
© The Open Group
Figure 2-3 Enterprise Continuum
Part I: Introduction 15
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Enterprise Continuum CoreConcepts
2.7 Architecture Repository
Supporting the Enterprise Continuum is the concept of an Ar chitectur eRepository which can be
used to stor edifferent classes of ar chitectural output at dif ferent levels of abstraction, created by
the ADM. In this way ,the TOGAF standar dfacilitates understanding and co-operation between
stakeholders and practitioners at different levels.
By means of the Enterprise Continuum and Ar chitectur eRepository ,architects ar eencouraged
to leverage all other relevant architectural r esour ces and assets in developing an Or ganization-
Speciﬁc Architecture.
In this context, the TOGAF ADM can be r egar ded as describing a process lifecycle that operates
at multiple levels within the organization, operating within a holistic governance framework
and producing aligned outputs that reside in an Ar chitectur eRepository .The Enterprise
Continuum provides a valuable context for understanding ar chitectural models: it shows
building blocks and their relationships to each other ,and the constraints and r equir ements on a
cycle of architectur edevelopment.
The structur eo ft he TOGAF Architectur eRepository is shown in Figur e2-4.
Architecture Repository
Artifacts in the
landscape are
structured according
to the metamodelBest practice
creates
reference
architecture
Adopted
by the
enterpriseReference
models
adopted by
the enterprise
The Reference
Library is
governed
Standards
are complied
with
Best
practice
creates
standards
The landscape
is governedCompliance
is governedStandards
adopted by
the enterprise
Visibility and
escalation
Architecture
Board steers
and manages
the capabilityExternal
Reference
Models
External
Standards
Architecture
BoardArchitecture CapabilityArchitecture Metamodel
Standards
Information BaseArchitecture
LandscapeReference
Library
Standards have
reference
implementations
Governance Log© The Open Group
Architecture
Requirements
RepositorySolutions
Landscape Enables the
enterprise
Drivers
for the
enterpriseBusiness
outcomes
delivered
Figure 2-4 TOGAF Architectur eRepository Structure
16 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
CoreConcepts Ar chitectureRepository
The major components within an Architectur eRepository ar ea sf ollows:
■The Architecture Metamodel describes the or ganizationally tailored application of an
architectur eframework, including a metamodel for architectur econtent
■The Architecture Capability deﬁnes the parameters, str uctur es, and processes that support
governance of the Architectur eRepository
■The Architecture Landscape is the ar chitectural r epresentation of assets deployed within
the operating enterprise at a particular point in time — the landscape is likely to exist at
multiple levels of abstraction to suit different architectur eobjectives
■The Standards Information Base (SIB) captur es the standards with which new
architectur es must comply ,which may include industry standar ds, selected products and
services from suppliers, or shared services already deployed within the organization
■The Reference Library provides guidelines, templates, patterns, and other forms of
reference material that can be leveraged in or der to accelerate the creation of new
architectures for the enterprise
■The Governance Log provides a recor do fg overnance activity across the enterprise
■The Architecture Requirements Repository provides a view of all authorized ar chitecture
requirements which have been agreed with the Architectur eBoard
■The Solutions Landscape presents an ar chitectural r epresentation of the SBBs supporting
the Architectur eLandscape which have been planned or deployed by the enterprise
Part I: Introduction 17
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureRepository Cor eConcepts
2.8 Establishing and Maintaining an Enterprise Architecture Capability
In order to carry out ar chitectural activity effectively within an enterprise, it is necessary to put
in place an appropriate business capability for ar chitectur e, through organization str uctures,
roles, responsibilities, skills, and pr ocesses. An overview of the TOGAF Ar chitectur eCapability
is shown in Figur e2-5.
Governance BodiesGovernance BodiesBusiness Capability for Architecture
( )Operating at a level of maturity
DirectSetting priority
and focusMeasuring
success
Skilled Resource Pool
RequiresRequires
AssignedPossess PossessImproves ImprovesProfessional Development
Skills Knowledge
Architecture
ProfessionalsRoles and
Responsibilities
(
)both generic and
specific to a
particular projectParticipate in
Participate in
Populating
the RepositoryProject/Portfolio
Governance
Projects/PortfoliosProjects/
portfolios
governed
against their
contracts
Re-using building
blocks and complying
with standardsContractSettingpriorityand focus
DeliveringalignedsolutionsBusiness
Operations
Architecture RepositoryGovernance Bodies
Enterprise Continuum ( ) used to classify inputs to and outputs from the Repository
© The Open Group© The Open Group
Figure 2-5 TOGAF Architectur eCapability Overview
18 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
CoreConcepts Establishing and Maintaining an Enterprise Ar chitectureCapability
2.9 Establishing the Architecture Capability as an Operational Entity
Barring Ar chitectur eCapabilities set up to purely support change delivery programs, it is
increasingly recognized that a successful Enterprise Ar chitectur epractice must sit on a ﬁrm
operational footing. In effect, an Enterprise Ar chitectur epractice must be r un like any other
operational unit within a business; i.e., it should be treated like a business. T othis end, and over
and above the cor eprocesses deﬁned within the ADM, an Enterprise Ar chitectur epractice
should establish capabilities in the following areas:
■Financial Management
■Performance Management
■Service Management
■Risk Management (see Section A.54 )
■Resource Management
■Communications and Stakeholder Management (see Section 3.33 )
■Quality Management
■Supplier Management (see Section A.60 )
■Conﬁguration Management (see Section A.7 )
■Environment Management
Central to the notion of operating an ongoing ar chitectur ei st he execution of well-deﬁned and
effective governance, whereby all ar chitecturally signiﬁcant activity is controlled and aligned
within a single framework.
As governance has become an incr easingly visible r equir ement for organizational management,
the inclusion of governance within the TOGAF standar daligns the framework with curr ent
business best practice and also ensures a level of visibility ,guidance, and control that will
support all architectur estakeholder requirements and obligations.
The beneﬁts of Architectur eGovernance include:
■Increased transparency of accountability ,and informed delegation of authority
■Controlled risk management
■Protection of the existing asset base thr ough maximizing re-use of existing ar chitectural
components
■Proactive control, monitoring, and management mechanisms
■Process, concept, and component re-use across all organizational business units
■Value creation through monitoring, measuring, evaluation, and feedback
■Increased visibility supporting internal processes and external parties’ r equir ements; in
particular ,increased visibility of decision-making at lower levels ensur es oversight at an
appr opriate level within the enterprise of decisions that may have far -reaching strategic
consequences for the organization
■Greater shareholder value; in particular ,Enterprise Ar chitectur eincreasingly r epresents
the cor eintellectual property of the enterprise — studies have demonstrated a corr elation
between increased shareholder value and well-governed enterprises
Part I: Introduction 19
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Establishing the Ar chitectureCapability as an Operational Entity Cor eConcepts
■Integrates with existing pr ocesses and methodologies and complements functionality by
adding control capabilities
Further detail on establishing an Enterprise Ar chitectur eCapability is given in Part VI,Chapter
39.
2.10 Using the TOGAF Standard with Other Frameworks
Twoo ft he key elements of any Enterprise Architectur eframework are:
■Adeﬁnition of the deliverables that the architecting activity should produce
■Adescription of the method by which this should be done
With some exceptions, the majority of Enterprise Ar chitectur eframeworks focus on the ﬁrst of
these — the speciﬁc set of deliverables — and ar erelatively silent about the methods to be used
to generate them (intentionally so, in some cases).
Because the TOGAF standar di sag eneric framework and intended to be used in a wide variety
of envir onments, it provides a ﬂexible and extensible content framework that underpins a set of
generic architectur edeliverables.
As a result, the T OGAF framework may be used either in its own right, with the generic
deliverables that it describes; or else these deliverables may be r eplaced or extended by a mor e
speciﬁc set, deﬁned in any other framework that the architect considers relevant.
In all cases, it is expected that the ar chitect will adapt and build on the TOGAF framework in
order to deﬁne a tailored method that is integrated into the pr ocesses and or ganization
structur es of the enterprise. This ar chitectur etailoring may include adopting elements fr om
other ar chitectur eframeworks, or integrating T OGAF methods with other standar dframeworks
or best practices, such as ITIL®,CMMI®,COBIT®,PRINCE2®,PMBOK®,and MSP®.Itmay also
include adopting r eference materials from the TOGAF Library ,such as the IT4IT ™Reference
Architectur e. Guidelines for adapting the TOGAF ADM in such a way ar egiven in Part II,
Section 4.3 .
As a generic framework and method for Enterprise Ar chitectur e, the TOGAF standar dprovides
the capability and the collaborative envir onment to integrate with other frameworks.
Organizations ar eable to fully utilize vertical business domains, horizontal technology ar eas
(such as security or manageability), or application areas (such as e-Commerce) to produce a
competitive Enterprise Architectur eframework which maximizes their business opportunities.
20 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 3
Deﬁnitions
For the purposes of the TOGAF standard, the following terms and deﬁnitions apply .Appendix A should
be referenced for supplementary deﬁnitions not deﬁned in this chapter .The Merriam-W ebster®Collegiate
Dictionary should be referenced for terms not deﬁned in this section or Appendix A .
3.1 Abstraction
The technique of pr oviding summarized or generalized descriptions of detailed and complex
content.
Note: Abstraction, as in "level of abstraction", can also mean pr oviding a focus for analysis that is
concerned with a consistent and common level of detail or abstraction. Abstraction in this sense
is typically used in ar chitectur et oa llow a consistent level of deﬁnition and understanding to be
achieved in each area of the ar chitectur ei no rder to support effective communication and
decision-making. It is especially useful when dealing with large and complex ar chitectur es as it
allows relevant issues to be identiﬁed befor efurther detail is attempted.
3.2 Actor
Aperson, organization, or system that has one or mor eroles that initiates or interacts with
activities; for example, a sales r epresentative who travels to visit customers. Actors may be
internal or external to an organization.
Note: In the automotive industry ,a no riginal equipment manufacturer would be considered an actor
by an automotive dealership that interacts with its supply chain activities.
3.3 Application Architecture
Adescription of the str uctur eand interaction of the applications as gr oups of capabilities that
provide key business functions and manage the data assets.
Note: Application Architectur ei sd escribed in Part II, Chapter 10 .
3.4 Application Component
An encapsulation of application functionality aligned to implementation str uctur e, which is
modular and r eplaceable. It encapsulates its behavior and data, pr ovides services, and makes
them available through interfaces.
Note: For example, a business application such as an accounting, payroll, or CRM system.
An application component usually maintains a data component. It is enabled by technology
services provided by technology components.
Part I: Introduction 21
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Application Platform Deﬁnitions
3.5 Application Platform
The collection of technology components of har dwar eand softwar ethat provide the services
used to support applications.
3.6 Architectural Style
The combination of distinctive featur es related to the speciﬁc context within which ar chitecture
is performed or expr essed; a collection of principles and characteristics that steer or constrain
how an architectur ei sf ormed.
3.7 Architecture
1. The fundamental concepts or properties of a system in its envir onment embodied in its
elements, r elationships, and in the principles of its design and evolution. (Sour ce:
ISO/IEC/IEEE 42010: 2011)
2. The structur eo fc omponents, their inter -relationships, and the principles and guidelines
governing their design and evolution over time.
3.8 Architecture Building Block (ABB)
Aconstituent of the architectur emodel that describes a single aspect of the overall model.
See also Section 3.23 .
3.9 Architecture Continuum
Apart of the Enterprise Continuum. A r epository of architectural elements with incr easing
detail and specialization.
Note: This Continuum begins with foundational deﬁnitions like r eference models, cor estrategies, and
basic building blocks. From ther ei ts pans to Industry Ar chitectur es and all the way to an
Organization-Speciﬁc Architecture.
See also Section 3.39 .
3.10 Architecture Development Method (ADM)
The cor eo ft he TOGAF framework. A multi-phase, iterative appr oach to develop and use an
Enterprise Ar chitectur et os hape and govern business transformation and implementation
projects.
Note: The ADM is described in Part II: Architectur eDevelopment Method (ADM).
3.11A rchitecture Domain
The architectural area being considered. The TOGAF framework has four primary ar chitecture
domains: business, data, application, and technology .Other domains may also be consider ed
(e.g., security).
22 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Deﬁnitions Ar chitectureFramework
3.12 Architecture Framework
Aconceptual structur eused to plan, develop, implement, govern, and sustain an architecture.
3.13 Architecture Governance
The practice of monitoring and directing ar chitecture-r elated work. The goal is to deliver
desired outcomes and adher et or elevant principles, standards, and roadmaps.
See also Section 3.43 .
3.14 Architecture Landscape
The architectural r epresentation of assets in use, or planned, by the enterprise at particular
points in time.
3.15 Architecture Model
Arepresentation of a subject of interest.
Note: An ar chitectur emodel provides a smaller scale, simpliﬁed, and/or abstract r epresentation of
the subject matter.
See also Section 3.72 ,Section 3.17 ,andSection 3.18 .
3.16 Architecture Principle
Aqualitative statement of intent that should be met by the architecture.
Note: Asample set of Architectur ePrinciples is deﬁned in Part III, Chapter 20 .
3.17 Architecture View
Arepresentation of a system from the perspective of a related set of concerns.
Note: In some sections of this standard, the term "view" is used as a synonym for "architectur eview".
See also Section 3.72 and Section 3.18 .
3.18 Architecture Viewpoint
Aspeciﬁcation of the conventions for a particular kind of architectur eview.
Note: An ar chitectur eviewpoint can also be seen as the deﬁnition or schema for that kind of
architectur eview.I te stablishes the conventions for constructing, interpreting, and using an
architectur eview to address a speciﬁc concern (or set of concerns) about a system-of-interest.
In some sections of this standard, the term "viewpoint" is used as a synonym for "ar chitecture
viewpoint".
See also Section A.38 .
Part I: Introduction 23
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureVision Deﬁnitions
3.19 Architecture Vision
Asuccinct description of the T arget Ar chitectur ethat describes its business value and the
changes to the enterprise that will r esult from its successful deployment. It serves as an
aspirational vision and a boundary for detailed architectur edevelopment.
Note: Phase A (Architectur eVision) is described in Part II, Chapter 6 .
3.20 Artifact
An architectural work product that describes an aspect of the architecture.
See also Section 3.23 .
3.21 Baseline
Aspeciﬁcation that has been formally reviewed and agreed upon, that thereafter serves as the
basis for further development or change and that can be changed only thr ough formal change
control procedures or a type of procedur esuch as conﬁguration management.
3.22 Boundaryless Information Flow ™
Ashorthand r epresentation of "access to integrated information to support business pr ocess
impr ovements" r epresenting a desired state of an enterprise’s infrastr uctur especiﬁc to the
business needs of the organization.
Note: The need for Boundaryless Information Flow — a trademark of The Open Gr oup — is described
in the T OGAF®Series Guide: The TOGAF Integrated Information Infrastr uctur eReference
Model (III-RM).
3.23 Building Block
A(potentially re-usable) component of enterprise capability that can be combined with other
building blocks to deliver architectures and solutions.
Note: Building blocks can be deﬁned at various levels of detail, depending on what stage of
architectur edevelopment has been reached. For instance, at an early stage, a building block can
simply consist of a name or an outline description. Later on, a building block may be
decomposed into multiple supporting building blocks and may be accompanied by a full
speciﬁcation. Building blocks can relate to "architectures" or "solutions".
Building blocks ar edescribed in Part IV , Chapter 33 .
See also Section 3.20 .
3.24 Business Architecture
Arepresentation of holistic, multi-dimensional business views of: capabilities, end-to-end value
delivery ,information, and organizational str uctur e; and the relationships among these business
views and strategies, products, policies, initiatives, and stakeholders.
Note: Business Ar chitectur erelates business elements to business goals and elements of other
domains.
Business Architectur ei sd escribed in Part II, Chapter 7 .
24 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Deﬁnitions Business Architecture
3.25 Business Capability
Aparticular ability that a business may possess or exchange to achieve a speciﬁc purpose.
3.26 Business Function
Delivers business capabilities closely aligned to an or ganization, but not necessarily explicitly
governed by the organization.
3.27 Business Governance
Concerned with ensuring that the business processes and policies (and their operation) deliver
the business outcomes and adher et or elevant business regulation.
3.28 Business Model
Am odel describing the rationale for how an enterprise creates, delivers, and captures value.
3.29 Business Service
Supports business capabilities thr ough an explicitly deﬁned interface and is explicitly governed
by an organization.
3.30 Capability
An ability that an organization, person, or system possesses.
Note: For example, Enterprise Ar chitectur e, marketing, customer contact, or outbound telemarketing.
3.31 Capability Architecture
Ahighly detailed description of the ar chitectural approach to realize a particular solution or
solution aspect.
3.32 Capability Increment
Adiscrete portion of a capability ar chitectur ethat delivers speciﬁc value. When all incr ements
have been completed, the capability has been realized.
Part I: Introduction 25
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Communications and Stakeholder Mana gement Deﬁnitions
3.33 Communications and Stakeholder Management
The management of needs of stakeholders of the Enterprise Ar chitectur epractice. It also
manages the execution of communication between the practice and the stakeholders and the
practice and the consumers of its services.
Note: Architectur estakeholder management is described in Chapter 21 .
3.34 Concern
An interest in a system relevant to one or mor eo fi ts stakeholders.
Note: Concerns may pertain to any aspect of the system’s functioning, development, or operation,
including considerations such as performance, r eliability ,security ,distribution, and evolvability
and may determine the acceptability of the system.
See also Section 3.72 .
3.35 Course of Action
Direction and focus provided by strategic goals and objectives, often to deliver the value
proposition characterized in the business model.
3.36 Data Architecture
Adescription of the str uctur eand interaction of the enterprise’s major types and sour ces of data,
logical data assets, physical data assets, and data management resources.
Note: Data Architectur ei sd escribed in Part II, Chapter 9 .
3.37 Deliverable
An architectural work pr oduct that is contractually speciﬁed and in turn formally r eviewed,
agreed, and signed of fb yt he stakeholders.
Note: Deliverables r epresent the output of pr ojects and those deliverables that ar ei nd ocumentation
form will typically be ar chived at completion of a project, or transitioned into an Ar chitecture
Repository as a r eference model, standard, or snapshot of the Ar chitectur eLandscape at a point
in time.
3.38 Enterprise
The highest level (typically) of description of an or ganization and typically covers all missions
and functions. An enterprise will often span multiple organizations.
3.39 Enterprise Continuum
Acategorization mechanism useful for classifying ar chitectur eand solution artifacts, both
internal and external to the Ar chitectur eRepository ,a st hey evolve from generic Foundation
Architectures to Organization-Speciﬁc Architectures.
See also Section 3.9 and Section 3.71 .
26 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Deﬁnitions F oundation Ar chitecture
3.40 Foundation Architecture
Generic building blocks, their inter -relationships with other building blocks, combined with the
principles and guidelines that provide a foundation on which mor especiﬁc ar chitectur es can be
built.
3.41 Framework
Astructur efor content or pr ocess that can be used as a tool to str uctur ethinking, ensuring
consistency and completeness.
3.42 Gap
Astatement of dif ference between two states. Used in the context of gap analysis, wher ethe
difference between the Baseline and Target Architectur ei si dentiﬁed.
Note: Gap analysis is described in Part III, Chapter 23 .
3.43 Governance
The discipline of monitoring, managing, and steering a business (or IS/IT landscape) to deliver
the business outcome required.
See also Section 3.13 ,Section 3.27 ,andSection A.40 inAppendix A .
3.44 Information
Any communication or r epresentation of facts, data, or opinions, in any medium or form,
including textual, numerical, graphic, cartographic, narrative, or audio-visual forms.
3.45 Information System Service
1. A discr ete behavior requestable from an application (e.g., log in, book train seat, transfer
money).
Note: It supports and enables business roles and pr ocesses by capturing or providing data or
automating a pr ocess. It can be coarse-grained or ﬁne-grained (cf. a use-case or user
story). It can be found in and invoked via an interface.
2. The automated elements of a business service.
3.46 Information Technology (IT)
1. The lifecycle management of information and r elated technology used by an
organization.
2. An umbr ella term that includes all or some of the subject areas relating to the computer
industry ,such as Business Continuity ,Business IT Interface, Business Process Modeling
and Management, Communication, Compliance and Legislation, Computers, Content
Management, Har dwar e, Information Management, Internet, Of fshoring, Networking,
Programming and Software, Pr ofessional Issues, Project Management, Security ,
Part I: Introduction 27
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Information Technology (IT) Deﬁnitions
Standar ds, Storage, Voice and Data Communications. V arious countries and industries
employ other umbrella terms to describe this same collection.
3. A term commonly assigned to a department within an organization tasked with
provisioning some or all of the domains described in (2) above.
4. Alternate names commonly adopted include Information Services, Information
Management, et al.
3.47 Interoperability
1. The ability to shar einformation and services.
2. The ability of two or mor esystems or components to exchange and use information.
3. The ability of systems to provide and receive services fr om other systems and to use the
services so interchanged to enable them to operate effectively together.
3.48 Logical
An implementation-independent deﬁnition of the ar chitectur e, often gr ouping related physical
entities according to their purpose and structure.
Note: For example, the products from multiple infrastr uctur esoftwar evendors can all be logically
grouped as Java®application server platforms.
3.49 Metadata
Data about data, of any sort in any media, that describes the characteristics of an entity.
3.50 Metamodel
Am odel that describes how and with what the ar chitectur ewill be described in a str uctured
way.
3.51 Method
Adeﬁned, repeatable approach to address a particular type of problem.
3.52 Modeling
Atechnique through construction of models which enables a subject to be r epresented in a form
that enables reasoning, insight, and clarity concerning the essence of the subject matter.
28 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Deﬁnitions Model Kind
3.53 Model Kind
Conventions for a type of modeling.
Note: An ar chitectur eviewpoint r eferences one or mor em odel kinds; an ar chitectur eview
incorporates one or mor emodels.
3.54 Objective
Atime-bounded milestone for an or ganization used to demonstrate pr ogress towards a goal; for
example, "Increase capacity utilization by 30% by the end of 2019 to support the planned
increase in market share".
3.55 Organization Map
An articulation of the r elationships between the primary entities that make up the enterprise, its
partners, and stakeholders.
3.56 Pattern
Atechnique for putting building blocks into context; for example, to describe a r e-usable
solution to a problem.
Note: Building blocks ar ewhat you use: (ar chitectur e) patterns can tell you how you use them, when,
why,and what trade-offs you have to make in doing so.
See also Section 3.23 .
3.57 Physical
Adescription of a real-world entity .Physical elements in an Enterprise Ar chitectur emay still be
considerably abstracted from Solution Architecture, design, or implementation views.
3.58 Principle
SeeSection 3.16 .
3.59 Reference Model (RM)
An abstract framework for understanding signiﬁcant r elationships among the entities of [an]
envir onment, and for the development of consistent standards or speciﬁcations supporting that
environment.
Note: Areference model is based on a small number of unifying concepts and may be used as a basis
for education and explaining standards to a non-specialist. A r eference model is not dir ectly
tied to any standards, technologies, or other concr ete implementation details, but it does seek to
provide common semantics that can be used unambiguously across and between dif ferent
implementations.
Source: OASIS®;refer to www.oasis-open.org/committees/tc_home.php?wg_abbrev=soa-rm .
Part I: Introduction 29
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Repository Deﬁnitions
3.60 Repository
Asystem that manages all of the data of an enterprise, including data and process models and
other enterprise information.
Note: The data in a r epository is much mor eextensive than that in a data dictionary ,which generally
deﬁnes only the data making up a database.
3.61 Requirement
Astatement of need that must be met by a particular architectur eo rw ork package.
3.62 Roadmap
An abstracted plan for business or technology change, typically operating acr oss multiple
disciplines over multiple years. Normally used in the phrases T echnology Roadmap,
Architectur eRoadmap, etc.
3.63 Role
1. The usual or expected function of an actor ,o rt he part somebody or something plays in a
particular action or event. An actor may have a number of roles.
2. The part an individual plays in an organization and the contribution they make thr ough
the application of their skills, knowledge, experience, and abilities.
See also Section 3.2 .
3.64 Segment Architecture
Adetailed, formal description of areas within an enterprise, used at the pr ogram or portfolio
level to organize and align change activity.
See also Section 3.74 .
3.65 Service
1. A repeatable activity; a discrete behavior that a building block may be r equested or
otherwise triggered to perform.
Note: Examples include check customer credit, pr ovide weather data, and consolidate drilling
reports. It serves a client or customer by delivering an output or changing system state.
It can be deﬁned in a logical service contract that deﬁnes input and output ﬂows and/or
state changes. It encapsulates any building block that pr ocesses the input and output
ﬂows. It may be one of several services in a service portfolio or Service-Level Agr eement
(SLA). It may be invoked via an interface. It can be coarse-grained (build a house) or
ﬁne-grained (retrieve an address).
2. An element of behavior that provides speciﬁc functionality in response to requests fr om
actors or other services.
30 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Deﬁnitions Service Orientation
3.66 Service Orientation
Viewing an enterprise, system, or building block in terms of services provided and consumed.
See also Section 3.67 .
3.67 Service-Oriented Architecture (SOA)
An architectural style that supports service orientation.
See also Section 3.6 and Section 3.66 .
3.68 Service Portfolio
Acollection of services, potentially an interface deﬁnition.
Note: It is used in the TOGAF framework to deﬁne the requirement for a building block or system.
3.69 Solution Architecture
Adescription of a discr ete and focused business operation or activity and how IS/IT supports
that operation.
Note: ASolution Ar chitectur etypically applies to a single project or project release, assisting in the
translation of r equir ements into a solution vision, high-level business and/or IT system
speciﬁcations, and a portfolio of implementation tasks.
3.70 Solution Building Block (SBB)
Acandidate solution which conforms to the speciﬁcation of an Ar chitectur eBuilding Block
(ABB).
3.71 Solutions Continuum
Ap art of the Enterprise Continuum. A repository of re-usable solutions for futur e
implementation efforts. It contains implementations of the corr esponding deﬁnitions in the
Architectur eContinuum.
See also Section 3.39 and Section 3.9 .
3.72 Stakeholder
An individual, team, organization, or class thereof, having an interest in a system.
Part I: Introduction 31
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Standards Information Base (SIB) Deﬁnitions
3.73 Standards Information Base (SIB)
Adatabase of standar ds that can be used to deﬁne the particular services and other components
of an Organization-Speciﬁc Architecture.
Note: The Standards Information Base is described in Part V , Section 37.4 .
3.74 Strategic Architecture
Asummary formal description of the enterprise, providing an organizing framework for
operational and change activity ,and an executive-level, long-term view for direction setting.
3.75 T arget Architecture
The description of a futur estate of the architectur ebeing developed for an organization.
Note: Ther emay be several futur estates developed as a roadmap to show the evolution of the
architectur et oat arget state.
3.76 T axonomy of Architecture Views
The organized collection of all architectur eviews pertinent to an architecture.
3.77 T echnology Architecture
Ad escription of the str uctur eand interaction of the technology services and technology
components.
Note: Technology Architectur ei sd escribed in Part II, Chapter 11 .
3.78 T echnology Component
1. A technology building block. A generic infrastr uctur etechnology that supports and
enables application or data components (dir ectly or indirectly) by providing technology
services.
2. An encapsulation of technology infrastr uctur ethat r epresents a class of technology
product or speciﬁc technology product.
3.79 T echnology Service
Atechnical capability r equir ed to provide enabling infrastr uctur ethat supports the delivery of
applications.
32 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Deﬁnitions T ransition Ar chitecture
3.80 T ransition Architecture
Aformal description of one state of the ar chitectur ea ta na rchitecturally signiﬁcant point in
time.
Note: One or mor eTransition Ar chitectur es may be used to describe the pr ogression in time from the
Baseline to the Target Architecture.
Transition Architectur ei sd escribed in Part IV , Section 32.2.3 .
3.81 V alue Stream
Arepresentation of an end-to-end collection of value-adding activities that create an overall
result for a customer ,stakeholder ,o re nd user.
3.82 V iew
SeeSection 3.17 .
3.83 V iewpoint
SeeSection 3.18 .
3.84 V iewpoint Library
Acollection of the speciﬁcations of ar chitectur eviewpoints contained in the Reference Library
portion of the Architectur eRepository.
3.85 W ork Package
Aset of actions identiﬁed to achieve one or mor eobjectives for the business. A work package
can be a part of a project, a complete project, or a program.
Part I: Introduction 33
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Deﬁnitions
34 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
The TOGAF Standard, Version 9.2
Part II:
Architecture Development Method (ADM)
The Open Group
Part II: Architecture De velopment Method (ADM) 35
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
36 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 4
Introduction to Part II
This chapter describes the Ar chitectur eD evelopment Method (ADM) cycle, adapting the ADM,
architectur escope, and architectur eintegration.
4.1 ADM Overview
The TOGAF ADM is the result of continuous contributions fr om a large number of ar chitecture
practitioners. It describes a method for developing and managing the lifecycle of an Enterprise
Architectur e, and forms the cor eofthe TOGAF standard. It integrates elements of the T OGAF
standar ddescribed in this document as well as other available ar chitectural assets, to meet the
business and IT needs of an organization.
4.1.1 The ADM, Enterprise Continuum, and Architecture Repository
The Enterprise Continuum provides a framework and context to support the leverage of
relevant ar chitectur eassets in executing the ADM. These assets may include Ar chitecture
Descriptions, models, and patterns taken from a variety of sources, as explained in Part V:
Enterprise Continuum & Tools.
The Enterprise Continuum categorizes architectural sour ce material — both the contents of the
organization’s own enterprise r epositories and the set of relevant, available r eference models
and standards in the industry.
The practical implementation of the Enterprise Continuum will typically take the form of an
Architectur eRepository (see Part V,Chapter 37 )that includes r eference ar chitectur es, models,
and patterns that have been accepted for use within the enterprise, and actual architectural work
done previously within the enterprise. The architect would seek to re-use as much as possible
from the Ar chitectur eRepository that was relevant to the project at hand. (In addition to the
collection of ar chitectur esource material, the r epository would also contain ar chitecture
development work-in-progress.)
At relevant places throughout the ADM ther eare re minders to consider which, if any ,
architectur eassets from the Ar chitectur eRepository the architect should use. In some cases —
for example, in the development of a Technology Ar chitectur e—t his may be the T OGAF
Foundation Ar chitectur e. In other cases — for example, in the development of a Business
Architectur e—i tm ay be a reference model for e-Commerce taken from the industry at large.
The criteria for including source materials in an organization’s Ar chitectur eRepository will
typically form part of the Enterprise Ar chitectur eGovernance process. These governance
processes should consider available r esour ces both within and outside the enterprise in order to
determine when general r esour ces can be adapted for speciﬁc enterprise needs and also to
determine wher especiﬁc solutions can be generalized to support wider re-use.
Part II: Architecture De velopment Method (ADM) 37
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ADM Overvie wI ntroduction to Part II
While using the ADM, the architect is developing a snapshot of the enterprise’s decisions and
their implications at particular points in time. Each iteration of the ADM will populate an
organization-speciﬁc landscape with all the ar chitectur eassets identiﬁed and leveraged thr ough
the process, including the ﬁnal organization-speciﬁc architectur edelivered.
Architectur edevelopment is a continuous, cyclical process, and in executing the ADM
repeatedly over time, the ar chitect gradually adds mor eand mor econtent to the or ganization’s
Architectur eRepository .Although the primary focus of the ADM is on the development of the
enterprise-speciﬁc ar chitectur e, in this wider context the ADM can also be viewed as the pr ocess
of populating the enterprise’s own Ar chitectur eRepository with relevant re-usable building
blocks taken from the "left", mor egeneric side of the Enterprise Continuum.
In fact, the ﬁrst execution of the ADM will often be the hardest, since the ar chitectur eassets
available for re-use will be relatively scarce. Even at this stage of development, however ,there
will be ar chitectur eassets available from external sources such as the TOGAF standard, as well
as the IT industry at large, that could be leveraged in support of the effort.
Subsequent executions will be easier ,a sm oreand mor earchitectur eassets become identiﬁed,
areused to populate the organization’s Ar chitectur eRepository ,and ar ethus available for futur e
re-use.
4.1.2 The ADM and the Foundation Architecture
The ADM is also useful to populate the Foundation Ar chitectur eo fa ne nterprise. Business
requirements of an enterprise may be used to identify the necessary deﬁnitions and selections in
the Foundation Ar chitectur e. This could be a set of r e-usable common models, policy and
governance deﬁnitions, or even as speciﬁc as overriding technology selections (e.g., if mandated
by law). Population of the Foundation Ar chitectur efollows similar principles as for an
Enterprise Ar chitectur e, with the dif ference that r equir ements for a whole enterprise ar e
restricted to the overall concerns and thus less complete than for a speciﬁc enterprise.
It is important to r ecognize that existing models from these various sources, when integrated,
may not necessarily result in a coher ent Enterprise Ar chitectur e. "Integratability" of Ar chitecture
Descriptions is considered in Section 4.6 .
4.1.3 ADM and Supporting Guidelines and Techniques
The application of the TOGAF ADM is supported by an extended set of r esour ces — guidelines,
templates, checklists, and other detailed materials. These ar eincluded in:
■Part III: ADM Guidelines & Techniques
■White Papers and Guides published by The Open Gr oup, classiﬁed and r eferenced in the
TOGAF Library (see https://publications.opengroup.org/togaf-library )
The individual guidelines and techniques ar edescribed separately ,s ot hat they can be
referenced from the relevant points in the ADM as necessary ,rather than having the detailed
text clutter the description of the ADM itself.
38 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Introduction to Part II ArchitectureDevelopment Cycle
4.2 Architecture Development Cycle
4.2.1 Key Points
The following ar ethe key points about the ADM:
■The ADM is iterative, over the whole process, between phases, and within phases (see
Part III, Chapter 18 )
For each iteration of the ADM, a fresh decision must be taken as to:
—T he breadth of coverage of the enterprise to be deﬁned
—T he level of detail to be deﬁned
—T he extent of the time period aimed at, including the number and extent of any
intermediate time periods
—T he architectural assets to be leveraged, including:
—A ssets created in previous iterations of the ADM cycle within the enterprise
—A ssets available elsewher ei nt he industry (other frameworks, systems models,
vertical industry models, etc.)
■These decisions should be based on a practical assessment of r esour ce and competence
availability ,and the value that can realistically be expected to accrue to the enterprise fr om
the chosen scope of the architectur ework
■As a generic method, the ADM is intended to be used by enterprises in a wide variety of
different geographies and applied in different vertical sectors/industry types
As such, it may be, but does not necessarily have to be, tailor ed to speciﬁc needs. For
example, it may be used in conjunction with the set of deliverables of another framework,
wher ethese have been deemed to be mor eappropriate for a speciﬁc organization. (For
example, many US Federal agencies have developed individual frameworks that deﬁne
the deliverables speciﬁc to their particular departmental needs.)
These issues ar econsidered in detail in Section 4.3 .
4.2.2 Basic Structure
The basic structur eo ft he ADM is shown in Figur e4-1.
Throughout the ADM cycle, ther eneeds to be frequent validation of results against the original
expectations, both those for the whole ADM cycle, and those for the particular phase of the
process.
Part II: Architecture De velopment Method (ADM) 39
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureDevelopment Cycle Introduction to Part II
G.
Implementation
GovernanceRequirements
Management
E.
Opportunities
and
SolutionsD.
Technology
ArchitectureB.
Business
Architecture
F.
Migration
PlanningA.
Architecture
Vision
H.
Architecture
Change
Management
C.
Information
Systems
ArchitecturesPreliminary
© The Open Group
Figure 4-1 Architectur eDevelopment Cycle
The phases of the ADM cycle ar efurther divided into steps; for example, the steps within the
architectur edevelopment phases (B, C, D) ar ea sf ollows:
■Select reference models, viewpoints, and tools
■Develop Baseline Architectur eDescription
■Develop Target Architectur eDescription
■Perform gap analysis
■Deﬁne candidate roadmap components
■Resolve impacts across the Architectur eLandscape
■Conduct formal stakeholder review
40 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Introduction to Part II ArchitectureDevelopment Cycle
■Finalize the Architecture
■Create the Architectur eDeﬁnition Document
The Requirements Management phase is a continuous phase which ensur es that any changes to
requirements ar ehandled through appr opriate governance processes and reﬂected in all other
phases.
An enterprise may choose to r ecordall new r equir ements, including those which ar ei ns cope of
the current Statement of Architectur eWork through a single Requirements Repository.
The phases of the cycle ar edescribed in detail in the following chapters within Part II.
Note that output is generated thr oughout the process, and that the output in an early phase may
be modiﬁed in a later phase. The versioning of output is managed thr ough version numbers. In
all cases, the ADM numbering scheme is provided as an example. It should be adapted by the
architect to meet the r equir ements of the or ganization and to work with the ar chitectur etools
and repositories employed by the organization.
In particular ,aversion numbering convention is used within the ADM to illustrate the evolution
of Baseline and T arget Ar chitectur eDeﬁnitions. Table 4-1 describes how this convention is used.
Phase Deliverable Content V ersion Description
A: Architectur eVision 0.1 Architecture
VisionBusiness
ArchitectureVersion 0.1 indicates that a
high-level outline of the
architectur ei si np lace.
0.1 Data
ArchitectureVersion 0.1 indicates that a
high-level outline of the
architectur ei si np lace.
0.1 Application
ArchitectureVersion 0.1 indicates that a
high-level outline of the
architectur ei si np lace.
0.1 Technology
ArchitectureVersion 0.1 indicates that a
high-level outline of the
architectur ei si np lace.
B: Business Architectur e1 .0 Architecture
Deﬁnition
DocumentBusiness
ArchitectureVersion 1.0 indicates a
formally reviewed, detailed
architecture.
1.0 C: Information Systems
ArchitectureArchitecture
Deﬁnition
DocumentData
ArchitectureVersion 1.0 indicates a
formally reviewed, detailed
architecture.
1.0 Application
ArchitectureVersion 1.0 indicates a
formally reviewed, detailed
architecture.
D: Technology Architectur e1 .0 Architecture
Deﬁnition
DocumentTechnology
ArchitectureVersion 1.0 indicates a
formally reviewed, detailed
architecture.
Table 4-1 ADM Version Numbering Convention
Part II: Architecture De velopment Method (ADM) 41
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Adapting the ADM Introduction to Part II
4.3 Adapting the ADM
The ADM is a generic method for ar chitectur edevelopment, which is designed to deal with
most system and organizational r equir ements. However ,i tw ill often be necessary to modify or
extend the ADM to suit speciﬁc needs. One of the tasks befor eapplying the ADM is to r eview its
components for applicability ,and then tailor them as appr opriate to the circumstances of the
individual enterprise. This activity may well produce an "enterprise-speciﬁc" ADM.
One reason for wanting to adapt the ADM, which it is important to stress, is that the or der of the
phases in the ADM is to some extent dependent on the maturity of the ar chitectur ediscipline
within the enterprise. For example, if the business case for doing ar chitectur ea ta ll is not well
recognized, then creating an Ar chitectur eVision is almost always essential; and a detailed
Business Ar chitectur eoften needs to come next, in order to underpin the Ar chitectur eVision,
detail the business case for r emaining ar chitectur ework, and secur ethe active participation of
key stakeholders in that work. In other cases a slightly dif ferent order may be pr eferr ed; for
example, a detailed inventory of the baseline envir onment may be done befor eundertaking the
Business Architecture.
The order of phases may also be deﬁned by the Ar chitectur ePrinciples and business principles
of an enterprise. For example, the business principles may dictate that the enterprise be
prepar ed to adjust its business processes to meet the needs of a packaged solution, so that it can
be implemented quickly to enable fast r esponse to market changes. In such a case, the Business
Architectur e(or at least the completion of it) may well follow completion of the Information
Systems Architectur eo rt he Technology Architecture.
Another reason for wanting to adapt the ADM is if the T OGAF framework is to be integrated
with another enterprise framework (as explained in Part I,Section 2.10 ). For example, an
enterprise may wish to use the T OGAF framework and its generic ADM in conjunction with the
Zachman Framework, or another Enterprise Ar chitectur eframework that has a deﬁned set of
deliverables speciﬁc to a particular vertical sector: Government, Defense, e-Business,
Telecommunications, etc. The ADM has been speciﬁcally designed with this potential
integration in mind.
Other possible reasons for wanting to adapt the ADM include:
■The ADM is one of the many corporate processes that make up the corporate governance
model
It is complementary to, and supportive of, other standar dprogram management pr ocesses,
such as those for authorization, risk management, business planning and budgeting,
development planning, systems development, and procurement.
■The ADM is being mandated for use by a prime or lead contractor in an outsour cing
situation, and needs to be tailored to achieve a suitable compromise between the
contractor ’s existing practices and the contracting enterprise’s requirements
■The enterprise is a small-to-medium enterprise, and wishes to use a "cut-down" method
moreattuned to the reduced level of r esour ces and system complexity typical of such an
environment
■The enterprise is very large and complex, comprising many separate but interlinked
"enterprises" within an overall collaborative business framework, and the ar chitecture
method needs to be adapted to recognize this
Differ ent appr oaches to planning and integration may be used in such cases, including the
following (possibly in combination):
42 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Introduction to Part II Adapting the ADM
—T op-down planning and development — designing the whole interconnected meta-
enterprise as a single entity (an exercise that typically str etches the limits of
practicality)
—D evelopment of a "generic" or "r eference" ar chitectur e, typical of the enterprises
within the organization, but not r epresenting any speciﬁc enterprise, which
individual enterprises ar ethen expected to adapt in order to produce an ar chitecture
"instance" suited to the particular enterprise concerned
—R eplication — developing a speciﬁc ar chitectur efor one enterprise, implementing it
as a proof-of-concept, and then taking that as a "r eference ar chitectur e" to be cloned
in other enterprises
■In a vendor or production environment, a generic ar chitectur efor a family of r elated
products is often r eferr ed to as a "Product Line Ar chitectur e", and the analogous pr ocess to
that outlined above is termed "(Ar chitectur e-based) Product Line Engineering". The ADM
is targeted primarily at architects in IT user enterprises, but a vendor or ganization whose
products ar eIT-based might well wish to adapt it as a generic method for a Pr oduct Line
Architectur edevelopment.
4.4 Architecture Governance
The ADM, whether adapted by the or ganization or used as documented here, is a key process to
be managed in the same manner as other ar chitectur eartifacts classiﬁed through the Enterprise
Continuum and held in the Ar chitectur eRepository .The Ar chitectur eBoardshould be satisﬁed
that the method is being applied correctly across all phases of an ar chitectur edevelopment
iteration. Compliance with the ADM is fundamental to the governance of the ar chitectur e, to
ensur ethat all considerations ar emade and all required deliverables ar eproduced.
The management of all ar chitectural artifacts, governance, and related processes should be
supported by a controlled environment. T ypically ,this would be based on one or mor e
repositories supporting versioned objects, process control, and status.
The major information areas managed by a governance repository should contain the following
types of information:
■Reference Data (collateral from the or ganization’s own r epositories/Enterprise
Continuum, including external data; e.g., COBIT ,the IT4IT Reference Ar chitectur e): used
for guidance and instruction during project implementation
This includes the details of information outlined above. The r eference data includes a
description of the governance procedures themselves.
■Process Status :all information r egar ding the state of any governance processes will be
managed
Examples of this include outstanding compliance r equests, dispensation requests, and
compliance assessments investigations.
■Audit Information :this will r ecordall completed governance pr ocess actions and will be
used to support:
—K ey decisions and responsible personnel for any ar chitectur eproject that has been
sanctioned by the governance process
—A reference for futur earchitectural and supporting process developments, guidance,
and precedence
Part II: Architecture De velopment Method (ADM) 43
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureGovernance Intr oduction to Part II
The governance artifacts and pr ocess ar ethemselves part of the contents of the Ar chitecture
Repository.
4.5 Scoping the Architecture
Ther eare m any reasons to constrain (or restrict) the scope of the ar chitectural activity to be
undertaken, most of which relate to limits in:
■The organizational authority of the team producing the architecture
■The objectives and stakeholder concerns to be addressed within the architecture
■The availability of people, ﬁnance, and other resources
The scope chosen for the ar chitectur eactivity should ideally allow the work of all ar chitects
within the enterprise to be ef fectively governed and integrated. This r equir es a set of aligned
"architectur epartitions" that ensur earchitects ar enot working on duplicate or conﬂicting
activities. It also r equir es the deﬁnition of re-use and compliance relationships between
architectur epartitions.
The division of the enterprise and its ar chitecture-r elated activity is discussed in mor edetail in
Chapter 36 .
Four dimensions ar etypically used in order to deﬁne and limit the scope of an architecture:
■Breadth :what is the full extent of the enterprise, and what part of that extent will this
architecting effort deal with?
—M any enterprises ar every large, ef fectively comprising a federation of or ganizational
units that could validly be considered enterprises in their own right
—T he modern enterprise incr easingly extends beyond its traditional boundaries, to
embrace a fuzzy combination of traditional business enterprise combined with
suppliers, customers, and partners
■Depth :t ow hat level of detail should the architecting effort go?
How much ar chitectur ei s" enough"? What is the appropriate demarcation between the
architectur eeffort and other ,related activities (system design, system engineering, system
development)?
■Time Period :what is the time period that needs to be articulated for the Ar chitecture
Vision, and does it make sense (in terms of practicality and r esour ces) for the same period
to be covered in the detailed Architectur eDescription?
If not, how many Transition Ar chitectur es ar etob ed eﬁned, and what ar etheir time
periods?
■Architecture Domains :ac omplete Enterprise Ar chitectur edescription should contain all
four ar chitectur edomains (business, data, application, technology), but the realities of
resour ce and time constraints often mean ther ei sn ot enough time, funding, or r esour ces to
build a top-down, all-inclusive Ar chitectur eD escription encompassing all four
architectur edomains, even if the enterprise scope is chosen to be less than the full extent of
the overall enterprise
Typically ,the scope of an ar chitectur ei sﬁ rst expressed in terms of breadth, depth, and time.
Once these dimensions ar eunderstood, a suitable combination of ar chitectur edomains can be
selected that ar eappropriate to the problem being addr essed. Techniques for using the ADM to
develop a number of related architectures ar ediscussed in Chapter 19 .
44 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Introduction to Part II Scoping the Ar chitecture
The four dimensions of ar chitectur escope ar eexplor ed in detail below .Ineach case, particularly
in largescale environments wher earchitectur es ar enecessarily developed in a federated manner ,
therei sad anger of architects optimizing within their own scope of activity ,instead of at the
level of the overall enterprise. It is often necessary to sub-optimize in a particular ar ea, in or der
to optimize at the enterprise level. The aim should always be to seek the highest level of
commonality and focus on scalable and re-usable modules in order to maximize re-use at the
enterprise level.
4.5.1 Breadth
One of the key decisions is the focus of the ar chitectur eeffort, in terms of the breadth of overall
enterprise activity to be cover ed (which speciﬁc business sectors, functions, or ganizations,
geographical areas, etc.).
It is often necessary to have a number of dif ferent ar chitectur es existing acr oss an enterprise,
focused on particular timeframes, business functions, or business requirements.
For large complex enterprises, federated ar chitectur es — independently developed, maintained,
and managed ar chitectur es that ar esubsequently integrated within an integration framework —
aretypical. Such a framework speciﬁes the principles for inter operability ,migration, and
conformance. This allows speciﬁc business units to have ar chitectur es developed and governed
as stand-alone ar chitectur eprojects. Mor edetails and guidance on specifying the inter operability
requirements for different solutions can be found in Part III, Chapter 25 .
The feasibility of a single enterprise-wide ar chitectur efor every business function or purpose
may be rejected as too complex and unwieldy .I nt hese cir cumstances it is suggested that a
number of dif ferent Enterprise Ar chitectur es exist acr oss an enterprise. These Enterprise
Architectur es focus on particular timeframes, business segments or functions, and speciﬁc
organizational r equir ements. In such a case we need to cr eate the overarching Enterprise
Architectur ea sa" federation" of these Enterprise Ar chitectur es. An effective way of managing
and exploiting these Enterprise Ar chitectur es is to adopt a publish-and-subscribe model that
allows ar chitectur et ob eb rought under a governance framework. In such a model, ar chitecture
developers and ar chitectur econsumers in projects (the supply and demand sides of ar chitecture
work) sign up to a mutually beneﬁcial framework of governance that ensures that:
■Architectural material is of good quality ,up-to-date, ﬁt-for -purpose, and published
(reviewed and agreed to be made public)
■Usage of ar chitectur ematerial can be monitored, and compliance with standards, models,
and principles can be exhibited, via:
—A Compliance Assessment pr ocess that describes what the user is subscribing to, and
assesses their level of compliance
—A dispensation process that may grant dispensations fr om adherence to ar chitecture
standar ds and guidelines in speciﬁc cases (usually with a strong business imperative)
Publish and subscribe techniques ar ebeing developed as part of general IT governance and
speciﬁcally for the Defense sphere.
Part II: Architecture De velopment Method (ADM) 45
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Scoping the Ar chitectureI ntroduction to Part II
4.5.2 Depth
Careshould be taken to judge the appropriate level of detail to be captur ed, based on the
intended use of the Enterprise Ar chitectur eand the decisions to be made based on it. It is
important that a consistent and equal level of depth be completed in each ar chitectur edomain
(business, data, application, technology) included in the ar chitectur eeffort. If pertinent detail is
omitted, the ar chitectur emay not be useful. If unnecessary detail is included, the ar chitecture
effort may exceed the time and r esour ces available, and/or the resultant ar chitectur emay be
confusing or cluttered. Developing ar chitectur es at dif ferent levels of detail within an enterprise
is discussed in mor edetail in Chapter 19 .
It is also important to predict the futur euses of the ar chitectur es ot hat, within r esource
limitations, the ar chitectur ecan be str uctur ed to accommodate futur etailoring, extension, or r e-
use. The depth and detail of the Enterprise Ar chitectur eneeds to be sufﬁcient for its purpose,
and no more.
Iterations of the ADM will build on the artifacts and the capabilities created during pr evious
iterations.
Ther eisan eed to document all the models in an enterprise, to the level of detail appropriate to
the need of the current ADM cycle. The key is to understand the status of the enterprise’s
architectur ework, and what can r ealistically be achieved with the r esour ces and competencies
available, and then focus on identifying and delivering the value that is achievable. Stakeholder
value is a key focus: too broad a scope may deter some stakeholders (no return on investment).
4.5.3 T ime Period
The ADM is described in terms of a single cycle of Ar chitectur eVision, and a set of T arget
Architectur es (Business, Data, Application, T echnology) that enable the implementation of the
vision.
In such cases, a wider view may be taken, wher eby an enterprise is r epresented by several
differ ent ar chitectur einstances (for example, strategic, segment, capability), each r epresenting
the enterprise at a particular point in time. One ar chitectur einstance will r epresent the curr ent
enterprise state (the "as-is", or baseline). Another ar chitectur einstance, per haps deﬁned only
partially ,will represent the ultimate target end-state (the "vision"). In-between, intermediate or
"Transition Ar chitectur e" instances may be deﬁned, each comprising its own set of T arget
Architectur eDescriptions. An example of how this might be achieved is given in Part III,
Chapter 19 .
By this approach, the Target Architectur ework is split into two or mor ediscrete stages:
1. First, develop T arget Ar chitectur eD escriptions for the overall (largescale) system,
demonstrating a r esponse to stakeholder objectives and concerns for a relatively distant
timeframe (for example, a six-year period).
2. Then develop one or mor e"Transition Ar chitectur e" descriptions, as increments or
plateaus, each in line with and conver ging on the T arget Ar chitectur eDescriptions, and
describing the speciﬁcs of the increment concerned.
In such an approach, the T arget Ar chitectur es ar eevolutionary in natur e, and r equir eperiodic
review and update according to evolving business r equir ements and developments in
technology ,whereas the Transition Ar chitectur es ar e(by design) incremental in nature, and in
principle should not evolve during the implementation phase of the incr ement, in order to avoid
the "moving target" syndr ome. This, of course, is only possible if the implementation schedule is
under tight control and relatively short (typically less than two years).
46 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Introduction to Part II Scoping the Ar chitecture
The T arget Ar chitectur es remain relatively generic, and because of that ar eless vulnerable to
obsolescence than the Transition Ar chitectur es. They embody only the key strategic ar chitectural
decisions, which should be blessed by the stakeholders fr om the outset, whereas the detailed
architectural decisions in the T ransition Ar chitectur es ar edeliberately postponed as far as
possible (i.e., just befor eimplementation) in or der to improve r esponsiveness vis a vis new
technologies and products.
The enterprise evolves by migrating to each of these Transition Ar chitectur es in turn. As each
Transition Ar chitectur ei si mplemented, the enterprise achieves a consistent, operational state on
the way to the ultimate vision. However ,this vision itself is periodically updated to r eﬂect
changes in the business and technology environment, and in ef fect may never actually be
achieved, as originally described. The whole pr ocess continues for as long as the enterprise
exists and continues to change.
Such a breakdown of the Ar chitectur eDescription into a family of related ar chitectur eproducts
of course requires effective management of the set and their relationships.
4.5.4 Architecture Domains
Acomplete Enterprise Ar chitectur eshould address all four ar chitectur edomains (business, data,
application, technology), but the realities of r esour ce and time constraints often mean ther eis
not enough time, funding, or r esour ces to build a top-down, all-inclusive Ar chitecture
Description encompassing all four architectur edomains.
Architectur edescriptions will normally be built with a speciﬁc purpose in mind — a speciﬁc set
of business drivers that drive the ar chitectur edevelopment — and clarifying the speciﬁc issue(s)
that the Ar chitectur eDescription is intended to help explor e, and the questions it is expected to
help answer ,i sa ni mportant part of the initial phase of the ADM.
For example, if the purpose of a particular ar chitectur eeffort is to deﬁne and examine
technology options for achieving a particular capability ,and the fundamental business pr ocesses
arenot open to modiﬁcation, then a full Business Ar chitectur emay well not be warranted.
However ,because the Data, Application, and Technology Ar chitectur es build on the Business
Architecture, the Business Architectur estill needs to be thought through and understood.
While circumstances may sometimes dictate building an Ar chitectur eDescription not containing
all four ar chitectur edomains, it should be understood that such an ar chitectur ecannot, by
deﬁnition, be a complete Enterprise Ar chitectur e. One of the risks is lack of consistency and
therefor eability to integrate. Integration either needs to come later — with its own costs and
risks — or the risks and trade-of fs involved in not developing a complete and integrated
architectur eneed to be articulated by the ar chitect, and communicated to and understood by the
enterprise management.
4.6 Architecture Integration
Architectur es that ar ecreated to address a subset of issues within an enterprise r equir ea
consistent frame of r eference so that they can be considered as a group as well as point
deliverables. The dimensions that ar eused to deﬁne the scope boundary of a single ar chitecture
(e.g., level of detail, ar chitectur edomain, etc.) ar etypically the same dimensions that must be
addr essed when considering the integration of many ar chitectures. Figur e4-2illustrates how
different types of architectur eneed to co-exist.
At the pr esent time, the state of the art is such that ar chitectur eintegration can be accomplished
only at the lower end of the integratability spectr um. Key factors to consider ar ethe granularity
Part II: Architecture De velopment Method (ADM) 47
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureIntegration Intr oduction to Part II
and level of detail in each artifact, and the maturity of standar ds for the interchange of
architectural descriptions.
Figure 4-2 Integration of Architectur eArtifacts
As organizations address common themes (such as Service-Oriented Ar chitectur e(SOA), and
integrated information infrastr uctur e), and universal data models and standar ddata str uctures
emer ge, integration towar dthe high end of the spectrum will be facilitated. However ,therewill
always be the need for effective standards governance to r educe the need for manual co-
ordination and conﬂict resolution.
4.7 Summary
The TOGAF ADM deﬁnes a r ecommended sequence for the various phases and steps involved
in developing an ar chitectur e, but it cannot r ecommend a scope — this has to be determined by
the organization itself, bearing in mind that the r ecommended sequence of development in the
ADM process is an iterative one, with the depth and breadth of scope and deliverables
increasing with each iteration. Each iteration will add r esour ces to the or ganization’s
Architectur eRepository.
While a complete framework is useful (indeed, essential) to have in mind as the ultimate long-
term goal, in practice ther ei sak ey decision to be made as to the scope of a speciﬁc Enterprise
Architectur eeffort. This being the case, it is vital to understand the basis on which scoping
decisions ar ebeing made, and to set expectations right for what is the goal of the effort.
48 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Introduction to Part II Summary
The main guideline is to focus on what creates value to the enterprise, and to select horizontal
and vertical scope, and time periods, accor dingly .Whether or not this is the ﬁrst time ar ound,
understand that this exercise will be repeated, and that futur eiterations will build on what is
being created in the current effort, adding greater width and depth.
Part II: Architecture De velopment Method (ADM) 49
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Introduction to Part II
50 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 5
Preliminary Phase
This chapter describes the preparation and initiation activities r equir ed to meet the business directive for
anew Enterprise Ar chitectur e, including the deﬁnition of an Organization-Speciﬁc Ar chitecture
framework and the deﬁnition of principles.
G.
Implementation
GovernanceRequirements
Management
E.
Opportunities
and
SolutionsD.
Technology
ArchitectureB.
Business
Architecture
F.
Migration
PlanningA.
Architecture
Vision
H.
Architecture
Change
Management
C.
Information
Systems
ArchitecturesPreliminary
© The Open Group
Figure 5-1 Preliminary Phase
Part II: Architecture De velopment Method (ADM) 51
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Objectives Pr eliminary Phase
5.1 Objectives
The objectives of the Preliminary Phase ar eto:
1. Determine the Architectur eCapability desired by the organization:
■Review the organizational context for conducting Enterprise Architecture
■Identify and scope the elements of the enterprise organizations affected by the
Architectur eCapability
■Identify the established frameworks, methods, and pr ocesses that intersect with the
Architectur eCapability
■Establish Capability Maturity target
2. Establish the Architectur eCapability:
■Deﬁne and establish the Organizational Model for Enterprise Architecture
■Deﬁne and establish the detailed pr ocess and r esour ces for Ar chitectur eGovernance
■Select and implement tools that support the Architectur eCapability
■Deﬁne the Architectur ePrinciples
5.2 Inputs
This section deﬁnes the inputs to the Preliminary Phase.
5.2.1 Reference Materials External to the Enterprise
■The TOGAF Library
■Other architectur eframework(s), if required
5.2.2 Non-Architectural Inputs
■Boar dstrategies and boar dbusiness plans, business strategy ,I Ts trategy ,business
principles, business goals, and business drivers, when pre-existing
■Major frameworks operating in the business; e.g., project/portfolio management
■Governance and legal frameworks, including Ar chitectur eGovernance strategy ,when pr e-
existing
■Architectur ecapability
■Partnership and contract agreements
52 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Preliminary Phase Inputs
5.2.3 Architectural Inputs
Pre-existing models for operating an Enterprise Ar chitectur eCapability can be used as a
baseline for the Preliminary Phase. Inputs would include:
■Organizational Model for Enterprise Architectur e(see Part IV , Section 32.2.16 ), including:
—S cope of organizations impacted
—M aturity assessment, gaps, and resolution approach
—R oles and responsibilities for architectur eteam(s)
—B udget requirements
—G overnance and support strategy
■Existing Architectur eFramework, if any ,including:
—A rchitectur emethod
—A rchitectur econtent
—C onﬁgured and deployed tools
—A rchitectur ePrinciples
—A rchitectur eRepository
5.3 Steps
The TOGAF ADM is a generic method, intended to be used by a wide variety of dif ferent
enterprises, and in conjunction with a wide variety of other ar chitectur eframeworks, if r equired.
The Preliminary Phase ther eforeinvolves doing any necessary work to initiate and adapt the
ADM to deﬁne an organization-speciﬁc framework. The issues involved with adapting the ADM
to a speciﬁc organizational context ar ediscussed in detail in Section 4.3 .
The level of detail addressed in the Pr eliminary Phase will depend on the scope and goals of the
overall architectur eeffort.
The order of the steps in the Pr eliminary Phase as well as the time at which they ar eformally
started and completed should be adapted to the situation at hand in accor dance with the
established Architectur eGovernance.
The steps within the Preliminary Phase ar ea sf ollows:
■Scope the enterprise organizations impacted (see Section 5.3.1 )
■Conﬁrm governance and support frameworks (see Section 5.3.2 )
■Deﬁne and establish Enterprise Architectur eteam and organization (see Section 5.3.3 )
■Identify and establish Architectur ePrinciples (see Section 5.3.4 )
■Tailor the TOGAF framework and, if any ,other selected ar chitectur eframeworks (see
Section 5.3.5 )
■Develop a strategy and implementation plan for tools and techniques (see Section 5.3.6 )
Part II: Architecture De velopment Method (ADM) 53
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Steps Pr eliminary Phase
5.3.1 Scope the Enterprise Organizations Impacted
■Identify cor eenterprise (units) — those who ar emost affected and achieve most value
from the work
■Identify soft enterprise (units) — those who will see change to their capability and work
with cor eunits but ar eotherwise not directly affected
■Identify extended enterprise (units) — those units outside the scoped enterprise who will
be affected in their own Enterprise Architecture
■Identify communities involved (enterprises) — those stakeholders who will be af fected
and who ar ei ng roups of communities
■Identify governance involved, including legal frameworks and geographies (enterprises)
5.3.2 Conﬁrm Governance and Support Frameworks
The ar chitectur eframework will form the keystone to the ﬂavor (centralized or federated, light
or heavy ,etc.) of Ar chitectur eG overnance or ganization and guidelines that need to be
developed. Part of the major output of this phase is a framework for Ar chitectur eGovernance.
We n eed to understand how ar chitectural material (standards, guidelines, models, compliance
reports, etc.) is brought under governance; i.e., what type of governance r epository
characteristics ar egoing to be r equir ed, what relationships and status r ecording ar enecessary to
ascertain which governance process (dispensation, compliance, take-on, r etirement, etc.) has
ownership of an architectural artifact.
It is likely that the existing governance and support models of an organization will need to
change to support the newly adopted architectur eframework.
To m anage the organizational change r equir ed to adopt the new ar chitectural framework, the
current enterprise governance and support models will need to be assessed to understand their
overall shape and content. Additionally ,the sponsors and stakeholders for ar chitectur ewill need
to be consulted on potential impacts that could occur.
Upon completion of this step, the ar chitectur etouch-points and likely impacts should be
understood and agreed by relevant stakeholders.
5.3.3 Deﬁne and Establish Enterprise Architecture Team and Organization
■Determine existing enterprise and business capability
■Conduct an Enterprise Architecture/business change maturity assessment, if required
■Identify gaps in existing work areas
■Allocate key r oles and responsibilities for Enterprise Ar chitectur eCapability management
and governance
■Deﬁne requests for change to existing business programs and projects:
—Inform existing Enterprise Ar chitectur eand IT ar chitectur ework of stakeholder
requirements
—R equest assessment of impact on their plans and work
—Identify common areas of interest
54 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Preliminary Phase Steps
—Identify any critical differences and conﬂicts of interest
—P roduce requests for change to stakeholder activities
■Determine constraints on Enterprise Architectur ework
■Review and agree with sponsors and board
■Assess budget requirements
5.3.4 Identify and Establish Architecture Principles
Architectur ePrinciples (see Part III,Chapter 20 )are based on business principles and ar ecritical
in setting the foundation for Ar chitectur eGovernance. Once the or ganizational context is
understood, deﬁne a set of Architectur ePrinciples that is appropriate to the enterprise.
5.3.5 T ailor the TOGAF Framework and, if any ,Other Selected Architecture Framework(s)
In this step, determine what tailoring of the T OGAF framework is r equir ed. Consider the need
for:
■Terminology T ailoring :architectur epractitioners should use terminology that is generally
understood across the enterprise
Tailoring should produce an agr eed terminology set for description of ar chitectural
content. Consideration should be given to the cr eation of an Enterprise Glossary ,t ob e
updated throughout the architectur eprocess.
■Process T ailoring :the TOGAF ADM provides a generic process for carrying out
architecture
Process tailoring pr ovides the opportunity to remove tasks that ar ealready carried out
elsewher ei nt he organization, add or ganization-speciﬁc tasks (such as speciﬁc
checkpoints), and to align the ADM processes to external pr ocess frameworks and touch-
points. Key touch-points to be addressed would include:
—L inks to (project and service) portfolio management processes
—L inks to project lifecycle
—L inks to operations handover processes
—L inks to operational management processes (including conﬁguration management,
change management, and service management)
—L inks to procurement processes
■Content T ailoring :using the T OGAF Ar chitectur eContent Framework and Enterprise
Continuum as a basis, tailoring of content str uctur eand classiﬁcation appr oach allows
adoption of thir d-party content frameworks and also allows for customization of the
framework to support organization-speciﬁc requirements
Part II: Architecture De velopment Method (ADM) 55
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Steps Pr eliminary Phase
5.3.6 Develop aStrategy and Implementation Plan for Tools and Techniques
Ther eare m any tools and techniques which may be used to develop Enterprise Ar chitecture
across many domains. The development of a tools strategy is r ecommended that reﬂects the
understanding and level of formality r equir ed by the enterprise’s stakeholders. Architecture
content will be highly dependent on the scale, sophistication, and cultur eofboth the
stakeholders and the Ar chitectur eCapability within the organization. A tools strategy which
recognizes the stakeholders’ articulation r equir ements will enable mor eeffective and rapid
decision-making by stakeholders and their ownership of artifacts.
The strategy should encompass management techniques, decision management, workshop
techniques, business modeling, detailed infrastr uctur emodeling, ofﬁce products, languages, and
repository management as well as mor eformal ar chitectur etools. For example, the Balanced
Scorecar dtechnique is a best practice performance measur ement tool used by business schools
and many organizations that can be used successfully in architectur eprojects.
The implementation of the tools strategy may be based on common desktop and of ﬁce tools or
may be based on a customized deployment of specialist management and ar chitectur etools.
Change management of the artifact deliverables is a major consideration and a degree of
management control and governance of artifacts needs to be consider ed. Access to decisions
needs to be managed car efully as many of the artifacts may contain sensitive information.
Therefor ethe tools implementation, access, and security of the content needs to reﬂect the
sensitivity requirements.
Issues in tools standardization ar ediscussed in Part V , Chapter 38 .
5.4 Outputs
The outputs of the Preliminary Phase may include, but ar enot restricted to:
■Organizational Model for Enterprise Architectur e(see Part IV , Section 32.2.16 ), including:
—S cope of organizations impacted
—M aturity assessment, gaps, and resolution approach
—R oles and responsibilities for architectur eteam(s)
—C onstraints on architectur ework
—B udget requirements
—G overnance and support strategy
■Tailored Architectur eFramework (see Part IV , Section 32.2.21 ), including:
—T ailored architectur emethod
—T ailored architectur econtent (deliverables and artifacts)
—A rchitectur ePrinciples (see Part IV , Section 32.2.4 )
—C onﬁgured and deployed tools
■Initial Ar chitectur eRepository (see Part IV ,Section 32.2.5 ), populated with framework
content
■Restatement of, or r eference to, business principles, business goals, and business drivers
(see Part IV , Section 32.2.9 )
56 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Preliminary Phase Outputs
■Request for Architectur eWork (optional) (see Part IV , Section 32.2.17 )
■Architectur eGovernance Framework (see (Part VI, Section 44.2 )
The outputs may include some or all of the following:
■Catalogs:
—P rinciples catalog
5.5 Approach
This Pr eliminary Phase is about deﬁning "where, what, why ,who, and how we do ar chitecture"
in the enterprise concerned. The main aspects ar ea sf ollows:
■Deﬁning the enterprise
■Identifying key drivers and elements in the organizational context
■Deﬁning the requirements for architectur ework
■Deﬁning the Architectur ePrinciples that will inform any architectur ework
■Deﬁning the framework to be used
■Deﬁning the relationships between management frameworks
■Evaluating the Enterprise Architectur ematurity
The Enterprise Ar chitectur eprovides a strategic, top-down view of an organization to enable
executives, planners, architects, and engineers to coher ently co-ordinate, integrate, and conduct
their activities. The Enterprise Ar chitectur eframework provides the strategic context within
which this team can operate.
Therefor e, developing the Enterprise Ar chitectur eisnot a solitary activity and the Enterprise
Architects need to recognize the interoperability between their frameworks and the rest of the
business.
Strategic, interim, and tactical business objectives and aspirations need to be met. Similarly ,the
Enterprise Ar chitectur eneeds to reﬂect this r equir ement and allow for operation of ar chitecture
discipline at different levels within the organization.
Depending on the scale of the enterprise and the level of budgetary commitment to Enterprise
Architectur ediscipline, a number of appr oaches may be adopted to sub-divide or partition
architectur eteams, processes, and deliverables. Approaches for ar chitectur epartitioning ar e
discussed in Part V,Chapter 36 .The Preliminary Phase should be used to determine the desir ed
appr oach to partitioning and to establish the gr oundwork for the selected approach to be put
into practice.
The Preliminary Phase may be r evisited, from the Ar chitectur eVision phase (see Part III,
Chapter 18 ), in order to ensur ethat the organization’s Ar chitectur eCapability is suitable to
address a speciﬁc architectur eproblem.
Part II: Architecture De velopment Method (ADM) 57
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ApproachP reliminary Phase
5.5.1 Enterprise
One of the main challenges of Enterprise Architectur ei st hat of enterprise scope.
The scope of the enterprise, and whether it is federated, will determine those stakeholders who
will derive most beneﬁt from the Enterprise Ar chitectur eCapability .I ti si mperative that a
sponsor is appointed at this stage to ensur ethat the resultant activity has r esour ces to pr oceed
and the clear support of the business management. The enterprise may encompass many
organizations and the duties of the sponsor ar et oe nsur ethat all stakeholders ar eincluded in
deﬁning, establishing, and using the Architectur eCapability.
5.5.2 Organizational Context
In order to make ef fective and informed decisions about the framework for ar chitectur et ob e
used within a particular enterprise, it is necessary to understand the context surr ounding the
architectur eframework. Speciﬁc areas to consider would include:
■The commercial models for Enterprise Ar chitectur eand budgetary plans for Enterprise
Architectur eactivity; wher en os uch plans exist, the Pr eliminary Phase should be used to
develop a budget plan
■The stakeholders for architectur ei nt he enterprise; their key issues and concerns
■The intentions and cultur eo ft he organization, as captured within boar dbusiness
directives, business imperatives, business strategies, business principles, business goals,
and business drivers
■Curr ent processes that support execution of change and operation of the enterprise,
including the str uctur eofthe process and also the level of rigor and formality applied
within the organization
Areas for focus should include:
—C urrent methods for architectur edescription
—C urrent project management frameworks and methods
—C urrent systems management frameworks and methods
—C urrent project portfolio management processes and methods
—C urrent application portfolio management processes and methods
—C urrent technology portfolio management processes and methods
—C urrent information portfolio management processes and methods
—C urrent systems design and development frameworks and methods
■The Baseline Ar chitectur elandscape, including the state of the enterprise and also how the
landscape is currently represented in documentation form
■The skills and capabilities of the enterprise and speciﬁc or ganizations that will be adopting
the framework
Review of the organizational context should provide valuable r equir ements on how to tailor the
architectur eframework in terms of:
■Level of formality and rigor to be applied
58 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Preliminary Phase Approach
■Level of sophistication and expenditur erequired
■Touch-points with other organizations, processes, roles, and responsibilities
■Focus of content coverage
5.5.3 Requirements for Architecture Work
The business imperatives behind the Enterprise Ar chitectur ework drive the r equir ements and
performance metrics for the ar chitectur ework. They should be suf ﬁciently clear so that this
phase may scope the business outcomes and r esour ce requir ements, and deﬁne the outline
enterprise business information r equir ements and associated strategies of the Enterprise
Architectur ework to be done. For example, these may include:
■Business requirements
■Cultural aspirations
■Organization intents
■Strategic intent
■Forecast ﬁnancial requirements
Signiﬁcant elements of these need to be articulated so that the sponsor can identify all the key
decision-makers and stakeholders involved in deﬁning and establishing an Ar chitecture
Capability.
5.5.4 Principles
The Preliminary Phase deﬁnes the Ar chitectur ePrinciples that will form part of the constraints
on any ar chitectur ework undertaken in the enterprise. The issues involved in this ar eexplained
in Part III, Chapter 20 .
The deﬁnition of Ar chitectur ePrinciples is fundamental to the development of an Enterprise
Architectur e. Ar chitectur ework is informed by business principles as well as Ar chitecture
Principles. The Ar chitectur ePrinciples themselves ar ealso normally based in part on business
principles. Deﬁning business principles normally lies outside the scope of the ar chitecture
function. However ,depending on how such principles ar edeﬁned and pr omulgated within the
enterprise, it may be possible for the set of Ar chitectur ePrinciples to also restate, or cr oss-refer
to a set of business principles, business goals, and strategic business drivers deﬁned elsewher e
within the enterprise. Within an ar chitectur eproject, the architect will normally need to ensur e
that the deﬁnitions of these business principles, goals, and strategic drivers ar ecurrent, and to
clarify any areas of ambiguity.
The issue of Ar chitectur eGovernance is closely linked to that of Ar chitectur ePrinciples. The
body r esponsible for governance will also normally be responsible for approving the
Architectur ePrinciples, and for r esolving ar chitectur eissues. The issues involved in governance
areexplained in Part VI, Chapter 44 .
Part II: Architecture De velopment Method (ADM) 59
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ApproachP reliminary Phase
5.5.5 Management Frameworks
The TOGAF Ar chitectur eDevelopment Method (ADM) is a generic method, intended to be used
by enterprises in a wide variety of industry types and geographies. It is also designed for use
with a wide variety of other Enterprise Ar chitectur eframeworks, if r equir ed (although it can be
used perfectly well in its own right, without adaptation).
The TOGAF framework has to co-exist with and enhance the operational capabilities of other
management frameworks that ar epresent within any or ganization either formally or informally .
In addition to these frameworks, most or ganizations have a method for the development of
solutions, most of which have an IT component. The signiﬁcance of systems is that they bring
together the various domains (also known as People, Pr ocesses, and Material/Technology) to
deliver a business capability.
The main frameworks suggested to be co-ordinated with the TOGAF framework are:
■Business Capability Management that determines what business capabilities ar erequired
to deliver business value including the deﬁnition of r eturn on investment and the r equisite
control/performance measures
■Project/Portfolio Management Methods that determine how a company manages its
change initiatives
■Operations Management Methods that describe how a company runs its day-to-day
operations, including IT
■Solution Development Methods that formalize the way that business systems ar e
delivered in accordance with the structures developed in the IT architecture
As illustrated in Figur e5-2,these frameworks ar enot discrete and ther eare signiﬁcant overlaps
between them and the Business Capability Management. The latter includes the delivery of
performance measured business value.
The overall signiﬁcance is that the Enterprise Architect applying the TOGAF framework cannot
narrowly focus on the IT implementation, but must be awar eofthe impact that the ar chitecture
has on the entir eenterprise.
60 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Preliminary Phase Approach
Portfolio, Program,
and Project
Management
MethodsSolution
Development
Methods
Operations
Management
MethodsBusiness
Capability
ManagementArchitecture
Development
Method
© The Open Group
Figure 5-2 Management Frameworks to Co-ordinate with the TOGAF Framework
The Preliminary Phase ther eforeinvolves doing any necessary work to adapt the ADM to deﬁne
an organization-speciﬁc framework, using either the TOGAF deliverables or the deliverables of
another framework. The issues involved in this ar ediscussed in Section 4.3 .
5.5.6 Relating the Management Frameworks
Figur e5-3illustrates a mor edetailed set of dependencies between the various frameworks and
business planning activity that incorporates the enterprise’s strategic plan and dir ection. The
Enterprise Ar chitectur ecan be used to pr ovide a str uctur efor all of the corporate initiatives, the
Portfolio Management Framework can be used to deliver the components of the ar chitecture,
and the Operations Management Framework supports incorporation of these new components
within the corporate infrastructure.
The business planners ar epresent throughout the process and ar einap osition to support and
enfor ce the ar chitectur eb yr etaining approval for r esour ces at the various stages of planning and
development.
The solution development methodology is used within the Portfolio Management Framework to
plan, create, and deliver the ar chitectural components speciﬁed in the project and portfolio
charters. These deliverables include, but ar enot exclusively ,IT; for example, a new building, a
new set of skills, production equipment, hiring, marketing, and so on. Enterprise Ar chitecture
potentially provides the context for all enterprise activities.
The management frameworks ar erequir ed to complement each other and work in close
harmony for the good of the enterprise.
Part II: Architecture De velopment Method (ADM) 61
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ApproachP reliminary Phase
Capability Planning
Operations
ManagementBusiness
PlanningEnterprise
Architecture
Portfolio/Program/Project
ManagementBusiness
Direction
Runs the
EnterpriseStructured
Direction
DeliversProject
Management
GovernanceArchitecture
Governance
Resources
Solution
DevelopmentArchitectural
Direction© The Open Group
Figure 5-3 Interoperability and Relationships between Management Frameworks
Business planning at the strategy level pr ovides the initial direction to Enterprise Ar chitecture.
Updates at the annual planning level provide a ﬁner level of ongoing guidance. Capability-
based planning is one of many popular techniques for business planning.
Enterprise Ar chitectur estructur es the business planning into an integrated framework that
regards the enterprise as a system or system of systems. This integrated approach will validate
the business plan and can provide valuable feedback to the corporate planners. In some
organizations, the Enterprise Architects have been moved to or work very closely with the
strategic direction groups. The TOGAF appr oach delivers a framework for Enterprise
Architecture.
Project/portfolio management is the delivery framework that r eceives the str uctur ed, detailed
direction that enables them to plan and build what is r equir ed, knowing that each assigned
deliverable will be in context (i.e., the piece of the puzzle that they deliver will ﬁt into the
corporate puzzle that is the Enterprise Ar chitectur e). Often this framework is based upon the
Project Management Institute or UK Of ﬁce of Government Commerce (PRINCE2) pr oject
management methodologies. Project ar chitectur es and detailed out-of-context design ar eoften
based upon systems design methodologies.
Operations management r eceives the deliverables and then integrates and sustains them within
the corporate infrastr uctur e. Often the IT service management services ar ebased upon ISO/IEC
20000: 201 1o rB S15000 (ITIL).
5.5.7 Planning for Enterprise Architecture/Business Change Maturity Evaluation
Capability Maturity Models (detailed in Part VI,Chapter 45 )are useful ways of assessing the
ability of an enterprise to exercise different capabilities.
Capability Maturity Models typically identify selected factors that ar erequir ed to exercise a
capability .A no rganization’s ability to execute speciﬁc factors provides a measur eo fm aturity
and can be used to recommend a series of sequential steps to impr ove a capability .I ti sa n
assessment that gives executives an insight into pragmatically improving a capability.
Agood Enterprise Ar chitectur ematurity model covers the characteristics necessary to develop
and consume Enterprise Ar chitectur e. Or ganizations can determine their own factors and derive
the appr opriate maturity models, but it is recommended to take an existing model and
customize it as required.
62 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Preliminary Phase Approach
Several good models exist, including NASCIO, and the US Department of Commer ce
Architectur eCapability Maturity Model.
The use of Capability Maturity Models is detailed in Part VI, Chapter 45 .
Other examples include the US Federal Enterprise Ar chitectur eMaturity Model. Even though
the models ar eoriginally from government, they ar eequally applicable to industry.
Part II: Architecture De velopment Method (ADM) 63
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Preliminary Phase
64 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 6
Phase A: Architectur eVision
This chapter describes the initial phase of the Ar chitectur eDevelopment Method (ADM). It includes
information about deﬁning the scope, identifying the stakeholders, cr eating the Ar chitectur eVision, and
obtaining approvals.
G.
Implementation
GovernanceRequirements
Management
E.
Opportunities
and
SolutionsD.
Technology
ArchitectureB.
Business
Architecture
F.
Migration
PlanningA.
Architecture
Vision
H.
Architecture
Change
Management
C.
Information
Systems
ArchitecturesPreliminary
© The Open Group
Figure 6-1 Phase A: Architectur eVision
Part II: Architecture De velopment Method (ADM) 65
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Objectives Phase A: ArchitectureVision
6.1 Objectives
The objectives of Phase A ar eto:
■Develop a high-level aspirational vision of the capabilities and business value to be
delivered as a result of the proposed Enterprise Architecture
■Obtain approval for a Statement of Ar chitectur eWork that deﬁnes a pr ogram of works to
develop and deploy the architectur eoutlined in the Architectur eVision
6.2 Inputs
This section deﬁnes the inputs to Phase A.
6.2.1 Reference Materials External to the Enterprise
■Architectur ereference materials (see Part IV , Section 32.2.5 )
6.2.2 Non-Architectural Inputs
■Request for Architectur eWork (see Part IV , Section 32.2.17 )
■Business principles, business goals, and business drivers (see Part IV , Section 32.2.9 )
6.2.3 Architectural Inputs
■Organizational Model for Enterprise Architectur e(see Part IV , Section 32.2.16 ), including:
—S cope of organizations impacted
—M aturity assessment, gaps, and resolution approach
—R oles and responsibilities for architectur eteam(s)
—C onstraints on architectur ework
—R e-use requirements
—B udget requirements
—R equests for change
—G overnance and support strategy
■Tailored Architectur eFramework (see Part IV , Section 32.2.21 ), including:
—T ailored architectur emethod
—T ailored architectur econtent (deliverables and artifacts)
—A rchitectur ePrinciples (see Part IV ,Section 32.2.4 ), including business principles,
when pre-existing
—C onﬁgured and deployed tools
■Populated Ar chitectur eRepository (see Part IV ,Section 32.2.5 )—e xisting ar chitectural
documentation (framework description, ar chitectural descriptions, baseline descriptions,
ABBs, etc.)
66 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase A: Ar chitectureVision Inputs
6.3 Steps
The level of detail addressed in Phase A will depend on the scope and goals of the Request for
Architectur eWork, or the subset of scope and goals associated with this iteration of ar chitecture
development.
The or der of the steps in Phase A as well as the time at which they ar eformally started and
completed should be adapted to the situation at hand in accor dance with the established
Architectur eGovernance.
The steps in Phase A ar ea sf ollows:
■Establish the architectur eproject (see Section 6.3.1 )
■Identify stakeholders, concerns, and business requirements (see Section 6.3.2 )
■Conﬁrm and elaborate business goals, business drivers, and constraints (see Section 6.3.3 )
■Evaluate capabilities (see Section 6.3.4 )
■Assess readiness for business transformation (see Section 6.3.5 )
■Deﬁne scope (see Section 6.3.6 )
■Conﬁrm and elaborate Ar chitectur ePrinciples, including business principles (see Section
6.3.7 )
■Develop Architectur eVision (see Section 6.3.8 )
■Deﬁne the Target Architectur evalue propositions and KPIs (see Section 6.3.9 )
■Identify the business transformation risks and mitigation activities (see Section 6.3.10 )
■Develop Statement of Architectur eWork; secur eapproval (see Section 6.3.11 )
6.3.1 Establish the Architecture Project
Enterprise Ar chitectur ei sab usiness capability; each cycle of the ADM should normally be
handled as a project using the pr oject management framework of the enterprise. In some cases,
architectur eprojects will be stand-alone. In other cases, ar chitectural activities will be a subset
of the activities within a larger project. In either case, ar chitectur eactivity should be planned and
managed using accepted practices for the enterprise.
Conduct the necessary pr ocedur es to secur erecognition of the project, the endorsement of
corporate management, and the support and commitment of the necessary line management.
Include r eferences to other management frameworks in use within the enterprise, explaining
how this project relates to those frameworks.
6.3.2 Identify Stakeholders, Concerns, and Business Requirements
Identify the key stakeholders and their concerns/objectives, and deﬁne the key business
requirements to be addressed in the ar chitectur eengagement. Stakeholder engagement at this
stage is intended to accomplish three objectives:
■To identify candidate vision components and r equir ements to be tested as the Ar chitecture
Vision is developed
■To i dentify candidate scope boundaries for the engagement to limit the extent of
architectural investigation required
Part II: Architecture De velopment Method (ADM) 67
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Steps Phase A: ArchitectureVision
■To identify stakeholder concerns, issues, and cultural factors that will shape how the
architectur ei sp resented and communicated
The major product resulting fr om this step is a stakeholder map for the engagement, showing
which stakeholders ar einvolved with the engagement, their level of involvement, and their key
concerns (see Part III,Section 21.3 and Section 21.4 ). The stakeholder map is used to support
various outputs of the Architectur eVision phase, and to identify:
■The concerns and viewpoints that ar erelevant to this project; this is captured in the
Architectur eVision (see Part IV , Section 32.2.8 )
■The stakeholders that ar einvolved with the project and as a result form the starting point
for a Communications Plan (see Part IV , Section 32.2.12 )
■The key r oles and responsibilities within the project, which should be included within the
Statement of Architectur eWork (see Part VI, Section 32.2.20 )
Another key task will be to consider which ar chitectur eviews and viewpoints need to be
developed to satisfy the various stakeholder r equir ements. As described in Part III,Chapter 21 ,
understanding at this stage which stakeholders and which views need to be developed is
important in setting the scope of the engagement.
During the Ar chitectur eVision phase, new r equir ements generated for futur earchitectur ework
within the scope of the selected r equir ements need to be documented within the Ar chitecture
Requir ements Speciﬁcation, and new r equir ements which ar ebeyond the scope of the selected
requirements must be input to the Requirements Repository for management thr ough the
Requirements Management process.
6.3.3 Conﬁrm and Elaborate Business Goals, Business Drivers, and Constraints
Identify the business goals and strategic drivers of the organization.
If these have already been deﬁned elsewher ewithin the enterprise, ensur ethat the existing
deﬁnitions ar ecurrent, and clarify any areas of ambiguity .Otherwise, go back to the originators
of the Statement of Ar chitectur eWork and work with them to deﬁne these essential items and
secur etheir endorsement by corporate management.
Deﬁne the constraints that must be dealt with, including enterprise-wide constraints and
project-speciﬁc constraints (time, schedule, r esour ces, etc.). The enterprise-wide constraints may
be informed by the business and Ar chitectur ePrinciples developed in the Preliminary Phase or
clariﬁed as part of Phase A.
6.3.4 Evaluate Capabilities
It is valuable to understand a collection of capabilities within the enterprise. One part refers to
the capability of the enterprise to develop and consume the ar chitectur e. The second part r efers
to the baseline and target capability level of the enterprise. Gaps identiﬁed in the Ar chitecture
Capability r equir eiteration between Ar chitectur eVision and Preliminary Phase to ensur ethat
the Ar chitectur eCapability is suitable to address the scope of the ar chitectur eproject (see
Part III, Chapter 18 ).
Akey step following from evaluation of business models, or artifacts that clarify priorities of a
business strategy ,i st oi dentify the r equir ed business capabilities the enterprise must possess to
act on the strategic priorities.
68 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase A: Ar chitectureVision Steps
The detailed assessment of business capability gaps belongs in Phase B as a cor easpect of the
Business Ar chitectur e, wher ethe architect can help the enterprise understand gaps thr oughout
the business, of many types, that need to be addressed in later phases of the architecture.
In the Ar chitectur eVision phase, however ,the architect should consider the capability of the
enterprise to develop the Enterprise Ar chitectur eitself, as r equir ed in the speciﬁc initiative or
project underway .Gaps in the ability to pr ogress through the ADM, whether deriving from skill
shortages, information r equir ed, pr ocess weakness, or systems and tools, ar eas erious
consideration in the vision of whether the ar chitectur eeffort should continue. The ar chitect can
ﬁnd guidance in Section 6.5 to gather existing business capability frameworks for the enterprise
in this early assessment.
Gaps, or limitations, identiﬁed in the enterprise’s capability to execute on change will inform the
architect on the description of the T arget Ar chitectur eand on the Implementation and Migration
Plan (see Part IV ,Section 32.2.14 )created in Phase E and Phase F .This step seeks to understand
the capabilities and desir es of the enterprise at an appropriate level of abstraction (see Chapter
19). Consideration of the gap between the baseline and target capability of the enterprise is
critical. Showing the baseline and tar get capabilities within the context of the overall enterprise
can be supported by creating Value Chain diagrams that show the linkage of r elated capabilities.
The results of the assessment ar edocumented in a Capability Assessment (see (see Part IV ,
Section 32.2.10 ).
6.3.5 Assess Readiness for Business Transformation
ABusiness T ransformation Readiness Assessment can be used to evaluate and quantify the
organization’s readiness to under go a change. This assessment is based upon the determination
and analysis/rating of a series of readiness factors, as described in Chapter 26 .
The results of the r eadiness assessment should be added to the Capability Assessment (see
Part IV , Section 32.2.10 ). These results ar ethen used to shape the scope of the ar chitectur e, to
identify activities r equir ed within the ar chitectur eproject, and to identify risk ar eas to be
addressed.
6.3.6 Deﬁne Scope
Deﬁne what is inside and what is outside the scope of the Baseline Ar chitectur eand T arget
Architectur eefforts, understanding that the baseline and tar get need not be described at the
same level of detail. In many cases, the baseline is described at a higher level of abstraction, so
moretime is available to specify the target in suf ﬁcient detail. The issues involved in this ar e
discussed in Section 4.5 .Inparticular ,deﬁne:
■The breadth of coverage of the enterprise
■The level of detail required
■The partitioning characteristics of the architectur e(see Part V , Chapter 36 for mor edetails)
■The speciﬁc architectur edomains to be covered (business, data, application, technology)
■The extent of the time period aimed at, plus the number and extent of any intermediate
time period
■The ar chitectural assets to be leveraged, or considered for use, from the or ganization’s
Enterprise Continuum:
Part II: Architecture De velopment Method (ADM) 69
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Steps Phase A: ArchitectureVision
—A ssets created in previous iterations of the ADM cycle within the enterprise
—A ssets available elsewher ei nt he industry (other frameworks, systems models,
vertical industry models, etc.)
6.3.7 Conﬁrm and Elaborate Architecture Principles, including Business Principles
Review the principles under which the ar chitectur eist ob ed eveloped. Ar chitectur ePrinciples
arenormally based on the principles developed as part of the Pr eliminary Phase. They ar e
explained, and an example set given, in Part III,Chapter 20 .Ensur ethat the existing deﬁnitions
arecurrent, and clarify any areas of ambiguity .Otherwise, go back to the body responsible for
Architectur eGovernance and work with them to deﬁne these essential items for the ﬁrst time
and secur etheir endorsement by corporate management.
6.3.8 Develop Architecture Vision
An understanding of the r equir ed artifacts will enable the stakeholders to start to scope out their
decision-making which will guide subsequent phases. These decisions need to be reﬂected in the
stakeholder map.
Policy development and strategic decisions need to be captur ed in this phase to enable the
subsequent work to be quantiﬁed; for example, rationalization decisions and metrics, r evenue
generation, and targets which meet the business strategy .Thereare also other areas which need
to be addressed; for example, Digital Transformation and IT strategy wher edecisions on the
Architectur eVision will pr ovide leadership and direction for the organization in subsequent
phases.
For the Ar chitectur eVision it is r ecommended that ﬁrst an overall ar chitectur eb ed ecided upon
showing how all of the various ar chitectur edomain deliverables will ﬁt together (based upon
the selected course of action).
Based on the stakeholder concerns, business capability r equir ements, scope, constraints, and
principles, create a high-level view of the Baseline and T arget Ar chitectur es. The Ar chitecture
Vision typically covers the breadth of scope identiﬁed for the project, at a high level. Informal
techniques ar eoften employed. A common practice is to draw a simple solution concept
diagram that illustrates concisely the major components of the solution and how the solution
will result in beneﬁt for the enterprise.
Business scenarios ar ea na ppropriate and useful technique to discover and document business
requirements, and to articulate an Ar chitectur eVision that r esponds to those r equirements.
Business scenarios may also be used at mor edetailed levels of the ar chitectur ework (e.g., in
Phase B) and ar edescribed in the TOGAF®Series Guide: Business Scenarios.
This step generates the ﬁrst, very high-level deﬁnitions of the baseline and tar get envir onments,
from a business, information systems, and technology perspective, as described in Section 6.4 .
These initial versions of the ar chitectur eshould be stored in the Ar chitectur eRepository,
organized according to the standards and guidelines established in the architectur eframework.
70 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase A: Ar chitectureVision Steps
6.3.9 Deﬁne the Target Architecture Value Propositions and KPIs
■Develop the business case for the architectures and changes required
■Produce the value proposition for each of the stakeholder groupings
■Assess and deﬁne the procurement requirements
■Review and agree the value propositions with the sponsors and stakeholders concerned
■Deﬁne the performance metrics and measures to be built into the Enterprise Ar chitecture
to meet the business needs
■Assess the business risk (see Part III, Chapter 27 )
The outputs from this activity should be incorporated within the Statement of Ar chitectur eWork
to allow performance to be tracked accordingly.
6.3.10 Identify the Business Transformation Risks and Mitigation Activities
Identify the risks associated with the Ar chitectur eVision and assess the initial level of risk (e.g.,
catastr ophic, critical, marginal, or negligible) and the potential fr equency associated with it.
Assign a mitigation strategy for each risk. A risk management framework is described in
Part III, Chapter 27 .
Ther eare two levels of risk that should be considered, namely:
■Initial Level of Risk :risk categorization prior to determining and implementing
mitigating actions
■Residual Level of Risk :risk categorization after implementation of mitigating actions (if
any)
Risk mitigation activities should be considered for inclusion within the Statement of
Architectur eWork.
6.3.1 1D evelop Statement of Architecture Work; Secure Approval
Assess the work products that ar erequir ed to be produced (and by when) against the set of
business performance requirements. This will involve ensuring that:
■Performance metrics ar ebuilt into the work products
■Speciﬁc performance-related work products ar eavailable
Then, activities will include:
■Identify new work products that will need to be changed
■Provide direction on which existing work products, including building blocks, will need to
be changed and ensur ethat all activities and dependencies on these ar eco-ordinated
■Identify the impact of change on other work products and dependence on their activities
■Based on the purpose, focus, scope, and constraints, determine which ar chitectur edomains
should be developed, to what level of detail, and which architectur eviews should be built
■Assess the r esour ce requir ements and availability to perform the work in the timescale
required; this will include adhering to the organization’s planning methods and work
products to produce the plans for performing a cycle of the ADM
Part II: Architecture De velopment Method (ADM) 71
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Steps Phase A: ArchitectureVision
■Estimate the r esour ces needed, develop a r oadmap and schedule for the pr oposed
development, and document all these in the Statement of Architectur eWork
■Deﬁne the performance metrics to be met during this cycle of the ADM by the Enterprise
Architectur eteam
■Develop the speciﬁc Enterprise Ar chitectur eCommunications Plan and show where, how ,
and when the Enterprise Ar chitects will communicate with the stakeholders, including
afﬁnity groupings and communities, about the pr ogress of the Enterprise Ar chitecture
developments
■Review and agree the plans with the sponsors, and secur eformal approval of the
Statement of Architectur eWork under the appropriate governance procedures
■Gain sponsor’s sign-of ft op roceed
6.4 Outputs
The outputs of Phase A may include, but ar enot restricted to:
■Appr oved Statement of Ar chitectur eW ork (see Part IV ,Section 32.2.20 ), including in
particular:
—A rchitectur eproject description and scope
—O verview of Architectur eVision
—A rchitectur eproject plan and schedule
■Reﬁned statements of business principles, business goals, and business drivers (see Part IV ,
Section 32.2.9 )
■Architectur ePrinciples (see Part IV , Chapter 20 )
■Capability Assessment (see Part IV , Section 32.2.10 )
■Tailored Ar chitectur eFramework (see Part IV ,Section 32.2.21 )(for the engagement),
including:
—T ailored architectur emethod
—T ailored architectur econtent (deliverables and artifacts)
—C onﬁgured and deployed tools
■Architectur eVision (see Part IV , Section 32.2.8 ), including:
—P roblem description
—O bjective of the Statement of Architectur eWork
—S ummary views
—B usiness Scenario (optional)
—R eﬁned key high-level stakeholder requirements
■Draft Architectur eDeﬁnition Document, including (when in scope):
—B aseline Business Architecture, Version 0.1
—B aseline Technology Architecture, Version 0.1
72 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase A: Ar chitectureVision Outputs
—B aseline Data Architecture, Version 0.1
—B aseline Application Architecture, Version 0.1
—T arget Business Architecture, Version 0.1
—T arget Technology Architecture, Version 0.1
—T arget Data Architecture, Version 0.1
—T arget Application Architecture, Version 0.1
■Communications Plan (see Part IV , Section 32.2.12 )
■Additional content populating the Architectur eRepository (see Part IV , Section 32.2.5 )
Note: Multiple business scenarios may be used to generate a single Architectur eVision.
The outputs may include some or all of the following:
■Matrices:
—S takeholder Map matrix
■Diagrams:
—B usiness Model diagram
—B usiness Capability Map
—V alue Stream Map
—V alue Chain diagram
—S olution Concept diagram
6.5 Approach
6.5.1 General
Phase A starts with receipt of a Request for Ar chitectur eWork from the sponsoring or ganization
to the architectur eorganization.
The issues involved in ensuring pr oper recognition and endorsement from corporate
management, and the support and commitment of line management, ar ediscussed in Part VI,
Section 44.1.4 .
Phase A also deﬁnes what is in and what is outside the scope of the ar chitectur eeffort and the
constraints that must be dealt with. Scoping decisions need to be made on the basis of a
practical assessment of r esour ce and competence availability ,and the value that can r ealistically
be expected to accrue to the enterprise fr om the chosen scope of ar chitectur ework. The issues
involved in this ar ediscussed in Section 4.5 .Scoping issues addressed in the Ar chitectur eVision
phase will be restricted to the speciﬁc objectives for this ADM cycle and will be constrained
within the overall scope deﬁnition for ar chitectur eactivity as established within the Pr eliminary
Phase and embodied within the architectur eframework.
In situations wher ethe ar chitectur eframework in place is not appr opriate to achieve the desir ed
Architectur eVision, r evisit the Preliminary Phase and extend the overall ar chitectur eframework
for the enterprise.
The constraints will normally be informed by the business principles and Ar chitecture
Principles, developed as part of the Preliminary Phase (see Chapter 5 ).
Part II: Architecture De velopment Method (ADM) 73
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ApproachP hase A: Ar chitectureVision
Normally ,the business principles, business goals, and strategic drivers of the or ganization ar e
already deﬁned elsewher ei nt he enterprise. If so, the activity in Phase A is involved with
ensuring that existing deﬁnitions ar ecurrent, and clarifying any areas of ambiguity .Otherwise,
it involves deﬁning these essential items for the ﬁrst time.
Similarly ,the Ar chitectur ePrinciples that form part of the constraints on ar chitectur ework will
normally have been deﬁned in the Preliminary Phase (see Chapter 5 ). The activity in Phase A is
concerned with ensuring that the existing principle deﬁnitions ar ecurrent, and clarifying any
areas of ambiguity .Otherwise, it entails deﬁning the Ar chitectur ePrinciples for the ﬁrst time, as
explained in Part III, Chapter 20 .
6.5.2 Creating the Architecture Vision
The Ar chitectur eVision pr ovides the sponsor with a key tool to sell the beneﬁts of the pr oposed
capability to stakeholders and decision-makers within the enterprise. Ar chitectur eVision
describes how the new capability will meet the business goals and strategic objectives and
address the stakeholder concerns when implemented.
Integral to the Ar chitectur eVision is an understanding of emerging technologies and their
potential impact on industries and enterprises, without which many business opportunities may
be missed.
Clarifying and agreeing the purpose of the ar chitectur eeffort is one of the key parts of this
activity ,and the purpose needs to be clearly r eﬂected in the vision that is created. Ar chitecture
projects ar eoften undertaken with a speciﬁc purpose in mind — a speciﬁc set of business drivers
that r epresent the return on investment for the stakeholders in the ar chitectur edevelopment.
Clarifying that purpose, and demonstrating how it will be achieved by the pr oposed
architectur edevelopment, is the whole point of the Architectur eVision.
Normally ,key elements of the Ar chitectur eVision — such as the enterprise mission, vision,
strategy ,and goals — have been documented as part of some wider business strategy or
enterprise planning activity that has its own lifecycle within the enterprise. In such cases, the
activity in Phase A is concerned with verifying and understanding the documented business
strategy and goals, and possibly bridging between the enterprise strategy and goals on the one
hand, and the strategy and goals implicit within the current architectur ereality.
Business models ar ekey strategy artifacts that can pr ovide such a perspective, by showing how
the organization intends to deliver value to its customers and stakeholders. Section 6.3.4
introduces the application of business models as a step in developing the Architectur eVision.
In other cases, little or no Business Ar chitectur ework may have been done to date. In such cases,
therewill be a need for the ar chitectur eteam to r esear ch, verify ,and gain buy-in to the key
business objectives and processes that the ar chitectur ei st os upport. This may be done as a fr ee-
standing exercise, either preceding ar chitectur edevelopment, or as part of the ADM initiation
phase (Preliminary Phase).
This exercise should examine and sear ch for existing materials on fundamental Business
Architectur econcepts such as:
■Business Capabilities ,which r epresent a particular ability or capacity that a business may
possess or exchange to achieve a speciﬁc purpose or outcome
In this phase, the architect should determine whether a framework exists in the
organization to r epresent business capabilities. If one does not exist, the ar chitect should
consider whether developing a framework is within the scope of the project. For an
introduction to business capabilities, see The Open Group Guide to Business Capabilities.
74 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase A: Ar chitectureVision Appr oach
■Value Streams ,which r epresent an end-to-end collection of value-adding activities that
create an overall result for a customer ,stakeholder ,o re nd user
For an introduction to value streams, see the TOGAF®Series Guide: Value Streams.
■Organization Maps ,which depict the r elationships between the primary entities that
make up the enterprise, its partners, and stakeholders
As traditional or ganizational charts often lack the necessary detail to reﬂect the full scope
of the enterprise’s activities, the ar chitect can help identify and understand the complex
web of relationships between business entities as well as wher ebusiness capabilities ar e
used and connection to value stream stages. These ar ereﬁned and extended in subsequent
phases.
In addition, the Ar chitectur eVision explores other domains which ar eappropriate for the
Enterprise Ar chitectur ei nh and. These domains may include elements of the basic domains, yet
serve an additional purpose for the stakeholders. Example domains may include:
■Information
■Security
■Digital
■Network Management
■Knowledge
■Industry-speciﬁc
■Services
■Partnership
■Cybersecurity
These domains may be free-standing or linked with other domains to pr ovide enterprise-wide
views of the organization vision and structure.
The Ar chitectur eVision phase includes the conduct of a business assessment (using, for
example, business scenarios) wher ecritical factors ar edocumented and various courses of action
areassessed. High-level advantages and disadvantages, including risks and opportunities, ar e
documented and the best course of action selected to serve as the basis for the Ar chitecture
Vision.
The Ar chitectur eVision provides a ﬁrst-cut, high-level description of the Baseline and T arget
Architectur es, covering the business, data, application, and technology domains. These outline
descriptions ar edeveloped in subsequent phases.
Once an Ar chitectur eVision is deﬁned and documented in the Statement of Ar chitectur eWork,
it is critical to use it to build a consensus, as described in Part VI,Section 44.1.4 .Without this
consensus it is very unlikely that the ﬁnal ar chitectur ewill be accepted by the or ganization as a
whole. The consensus is r epresented by the sponsoring organization signing the Statement of
Architectur eWork.
Part II: Architecture De velopment Method (ADM) 75
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase A: Ar chitectureVision
76 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 7
Phase B: Business Architecture
This chapter describes the development of a Business Ar chitectur et os upport an agreed Ar chitecture
Vision.
G.
Implementation
GovernanceRequirements
Management
E.
Opportunities
and
SolutionsD.
Technology
ArchitectureB.
Business
Architecture
F.
Migration
PlanningA.
Architecture
Vision
H.
Architecture
Change
Management
C.
Information
Systems
ArchitecturesPreliminary
© The Open Group
Figure 7-1 Phase B: Business Architecture
Part II: Architecture De velopment Method (ADM) 77
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Objectives Phase B: Business Ar chitecture
7.1 Objectives
The objectives of Phase B ar eto:
■Develop the T arget Business Ar chitectur ethat describes how the enterprise needs to
operate to achieve the business goals, and r espond to the strategic drivers set out in the
Architectur eVision, in a way that addresses the Statement of Ar chitectur eW ork and
stakeholder concerns
■Identify candidate Ar chitectur eRoadmap components based upon gaps between the
Baseline and Target Business Architectures
7.2 Inputs
This section deﬁnes the inputs to Phase B.
7.2.1 Reference Materials External to the Enterprise
■Architectur ereference materials (see Part IV , Section 32.2.5 )
7.2.2 Non-Architectural Inputs
■Request for Architectur eWork (see Part IV , Section 32.2.17 )
■Business principles, business goals, and business drivers (see Part IV , Section 32.2.9 )
■Capability Assessment (see Part IV , Section 32.2.10 )
■Communications Plan (see Part IV , Section 32.2.12 )
7.2.3 Architectural Inputs
■Organizational Model for Enterprise Architectur e(see Part IV , Section 32.2.16 ), including:
—S cope of organizations impacted
—M aturity assessment, gaps, and resolution approach
—R oles and responsibilities for architectur eteam(s)
—C onstraints on architectur ework
—B udget requirements
—G overnance and support strategy
■Tailored Architectur eFramework (see Part IV , Section 32.2.21 ), including:
—T ailored architectur emethod
—T ailored architectur econtent (deliverables and artifacts)
—C onﬁgured and deployed tools
■Approved Statement of Architectur eWork (see Part IV , Section 32.2.20 )
78 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase B: Business Ar chitectureI nputs
■Architectur ePrinciples (see Part IV ,Section 32.2.4 ), including business principles, when
pre-existing
■Enterprise Continuum (see Part V , Chapter 35 )
■Architectur eRepository (see Part IV , Section 32.2.5 ), including:
—R e-usable building blocks
—P ublicly available reference models
—O rganization-speciﬁc reference models
—O rganization standards
■Architectur eVision (see Part IV , Section 32.2.8 ), including:
—P roblem description
—O bjective of the Statement of Architectur eWork
—S ummary views
—B usiness Scenario (optional)
—R eﬁned key high-level stakeholder requirements
■Draft Architectur eDeﬁnition Document, including (when in scope):
—B aseline Business Architecture, Version 0.1
—B aseline Technology Architecture, Version 0.1
—B aseline Data Architecture, Version 0.1
—B aseline Application Architecture, Version 0.1
—T arget Business Architecture, Version 0.1
—T arget Technology Architecture, Version 0.1
—T arget Data Architecture, Version 0.1
—T arget Application Architecture, Version 0.1
7.3 Steps
The level of detail addr essed in Phase B will depend on the scope and goals of the overall
architectur eeffort.
New models characterizing the needs of the business will need to be deﬁned in detail during
Phase B. Existing business artifacts to be carried over and supported in the tar get envir onment
may already have been adequately deﬁned in pr evious architectural work; but, if not, they too
will need to be deﬁned in Phase B.
The or der of the steps in Phase B as well as the time at which they ar eformally started and
completed should be adapted to the situation at hand, in accor dance with the established
Architectur eGovernance. In particular ,determine whether in this situation it is appropriate to
conduct Baseline or Target Architectur edevelopment ﬁrst, as described in Part III, Chapter 18 .
All activities that have been initiated in these steps should be closed during the Finalize the
Business Ar chitectur estep (see Section 7.3.8 ). The documentation generated fr om these steps
must be formally published in the Create the Ar chitectur eDeﬁnition Document step (see Section
7.3.9 ).
Part II: Architecture De velopment Method (ADM) 79
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Steps Phase B: Business Ar chitecture
The steps in Phase B ar ea sf ollows:
■Select reference models, viewpoints, and tools (see Section 7.3.1 )
■Develop Baseline Business Architectur eDescription (see Section 7.3.2 )
■Develop Target Business Architectur eDescription (see Section 7.3.3 )
■Perform gap analysis (see Section 7.3.4 )
■Deﬁne candidate roadmap components (see Section 7.3.5 )
■Resolve impacts across the Architectur eLandscape (see Section 7.3.6 )
■Conduct formal stakeholder review (see Section 7.3.7 )
■Finalize the Business Architectur e(seeSection 7.3.8 )
■Create the Architectur eDeﬁnition Document (see Section 7.3.9 )
7.3.1 Select Reference Models, Viewpoints, and Tools
Select relevant Business Ar chitectur eresour ces (r eference models, patterns, etc.) from the
Architectur eRepository ,o nt he basis of the business drivers, and the stakeholders and concerns.
Select relevant Business Ar chitectur eviewpoints (e.g., operations, management, ﬁnancial); i.e.,
those that will enable the architect to demonstrate how the stakeholder concerns ar ebeing
addressed in the Business Architecture.
Identify appr opriate tools and techniques to be used for capture, modeling, and analysis, in
association with the selected viewpoints. Depending on the degree of sophistication warranted,
these may comprise simple documents or spreadsheets, or mor esophisticated modeling tools
and techniques, such as activity models, business process models, use-case models, etc.
7.3.1.1 Determine Overall Modeling Process
Business modeling and strategy assessments ar eeffective techniques for framing the tar get state
of an organization’s Business Ar chitectur e(seeSection 6.3.4 ). The output from that activity is
then used to articulate the business capabilities, organizational str uctur e, and value str eams
required to close gaps between the current and target state. As addressed in Section 6.5 ,the
frameworks for these maps may already exist and should be leveraged, now using them to
characterize gaps and better mapping of business value to achieve the T arget Business
Architecture.
For each viewpoint, select the models needed to support the speciﬁc view r equir ed, using the
selected tool or method.
Ensur ethat all stakeholder concerns ar ecover ed. If they ar enot, create new models to addr ess
concerns not covered, or augment existing models (see Section 7.5.6 ). Business scenarios ar ea
useful technique to discover and document business r equir ements, and may be used iteratively ,
at dif ferent levels of detail in the hierarchical decomposition of the Business Ar chitecture.
Business scenarios ar edescribed in the TOGAF®Series Guide: Business Scenarios.
80 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase B: Business Ar chitectureS teps
The techniques described in Section 7.5 can be utilized to progressively decompose a business:
■Business Capability Mapping :identiﬁes, categorizes, and decomposes the business
capabilities r equir ed for the business to have the ability to deliver value to one or mor e
stakeholders
■Organization Mapping :ar epresentation of the or ganizational str uctur eo ft he business
(including thir d-party domains), depicting business units, the decomposition of those
units into lower-level functions, and organizational relationships (unit-to-unit and
mapping to business capabilities, locations, and other attributes)
■Value Stream Mapping :the breakdown of activities that an organization performs to
create the value being exchanged with stakeholders
Value stream maps illustrate how an or ganization delivers value and ar ei nt he context of a
speciﬁc set of stakeholders, and leverage business capabilities in order to cr eate
stakeholder value and align to other aspects of the Target Business Architecture.
■Structured Analysis :identiﬁes the key business functions within the scope of the
architecture, and maps those functions onto the organizational units within the business
■Use-case Analysis :the breakdown of business-level functions across actors and
organizations allows the actors in a function to be identiﬁed and permits a br eakdown into
services supporting/delivering that functional capability
■Process Modeling :the breakdown of a function or business service through pr ocess
modeling allows the elements of the pr ocess to be identiﬁed, and permits the identiﬁcation
of lower-level business services or functions
The level and rigor of decomposition needed varies fr om enterprise to enterprise, as well as
within an enterprise, and the architect should consider the enterprise’s goals, objectives, scope,
and purpose of the Enterprise Architectur eeffort to determine the level of decomposition.
7.3.1.2 Identify Required Service Granularity Level, Boundaries, and Contracts
The T OGAF content framework dif ferentiates between the functions of a business and the
services of a business. Business services ar especiﬁc functions that have explicit, deﬁned
boundaries that ar eexplicitly governed. In order to allow the architect ﬂexibility to deﬁne
business services at a level of granularity that is appropriate for and manageable by the
business, the functions ar esplit as follows: micro-level functions will have explicit, deﬁned
boundaries, but may not be explicitly governed. Likewise, macr obusiness functions may be
explicitly governed, but may not have explicit, deﬁned boundaries.
The Business Ar chitectur ephase ther eforeneeds to identify which components of the
architectur eare functions and which ar eservices. Services ar edistinguished from functions
through the explicit deﬁnition of a service contract. When Baseline Ar chitectur es ar ebeing
developed, it may be the case that explicit contracts do not exist and it would ther eforeb ea tt he
discr etion of the ar chitect to determine whether ther ei sm erit in developing such contracts
befor eexamining any Target Architectures.
Aservice contract covers the business/functional interface and also the technology/data
interface. The Business Ar chitectur ewill deﬁne the service contract at the business/functional
level, which will be expanded on in the Application and Technology Architectur ephases.
The granularity of business services should be determined according to the business drivers,
goals, objectives, and measures for this area of the business. Finer-grained services permit closer
management and measur ement (and can be combined to create coarser-grained services), but
requiregreater ef fort to govern. Guidelines for identiﬁcation of services and deﬁnition of their
Part II: Architecture De velopment Method (ADM) 81
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Steps Phase B: Business Ar chitecture
contracts can be found in the T OGAF®Series Guide: Using the T OGAF®Framework to Deﬁne
and Govern Service-Oriented Architectures.
7.3.1.3 Identify Required Catalogs of Business Building Blocks
Catalogs captur einventories of the cor eassets of the business. Catalogs ar ehierar chical in
natur eand captur ethe decomposition of a building block and also decompositions acr oss
related building blocks (e.g., organization/actor).
Catalogs form the raw material for development of matrices and views and also act as a key
resource for managing the business and IT capability.
The following catalogs should be considered for development within a Business Architecture:
■Value Stream catalog
■Business Capabilities catalog
■Value Stream Stages catalog
■Organization/Actor catalog
■Driver/Goal/Objective catalog
■Role catalog
■Business Service/Function catalog
■Location catalog
■Process/Event/Control/Product catalog
■Contract/Measur ecatalog
The str uctur eo fc atalogs is based on the attributes of metamodel entities, as deﬁned in Part IV ,
Chapter 30 .
7.3.1.4 Identify Required Matrices
Matrices show the cor erelationships between related model entities.
Matrices form the raw material for development of views and also act as a key r esour ce for
impact assessment, carried out as a part of gap analysis.
The following matrices should be considered for development within a Business Architecture:
■Value Stream/Capability matrix (displays the capabilities r equir ed to support each stage of
avalue stream)
■Strategy/Capability matrix (displays the capabilities r equir ed to support speciﬁc strategy
statements)
■Capability/Or ganization matrix (displays organization elements that implement each
capability)
■Business Interaction matrix (showing dependency and communication between
organizations and actors)
■Actor/Role matrix (showing the roles undertaken by each actor)
The str uctur eo fm atrices is based on the attributes of metamodel entities, as deﬁned in Part IV ,
Chapter 30 .
82 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase B: Business Ar chitectureS teps
7.3.1.5 Identify Required Diagrams
Diagrams present the Business Ar chitectur einformation from a set of dif ferent perspectives
(viewpoints) according to the requirements of the stakeholders.
The following diagrams should be considered for development within a Business Architecture:
■Business Model diagram
■Business Capability Map
■Value Stream Map
■Organization Map
■Business Footprint diagram
■Business Service/Information diagram
■Functional Decomposition diagram
■Goal/Objective/Service diagram
■Business Use-Case diagram
■Organization Decomposition diagram
■Process Flow diagram
■Event diagram
The str uctur eo fd iagrams is based on the attributes of metamodel entities, as deﬁned in Part IV ,
Chapter 30 .
7.3.1.6 Identify Types of Requirement to be Collected
Once the Business Ar chitectur ecatalogs, matrices, and diagrams have been developed,
architectur em odeling is completed by formalizing the business-focused r equir ements for
implementing the Target Architecture.
These requirements may:
■Relate to the business domain
■Provide requirements input into the Data, Application, and Technology Architectures
■Provide detailed guidance to be reﬂected during design and implementation to ensur ethat
the solution addresses the original architectur erequirements
Within this step, the architect should identify r equir ements that should be met by the
architectur e(seeSection 16.5.2 ).
In many cases, the Ar chitectur eD eﬁnition will not be intended to give detailed or
compr ehensive r equir ements for a solution (as these can be better addressed through general
requirements management discipline). The expected scope of r equir ements content should be
established during the Ar chitectur eVision phase and documented in the appr oved Statement of
Architectur eWork.
Any r equir ement, or change in r equir ement, that is outside of the scope deﬁned in the Statement
of Ar chitectur eW ork must be submitted to the Requir ements Repository for management
through the governed Requirements Management process.
Part II: Architecture De velopment Method (ADM) 83
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Steps Phase B: Business Ar chitecture
7.3.2 Develop Baseline Business Architecture Description
Develop a Baseline Description of the existing Business Ar chitectur e, to the extent necessary to
support the T arget Business Ar chitectur e. The scope and level of detail to be deﬁned will
depend on the extent to which existing business elements ar elikely to be carried over into the
Target Business Ar chitectur e, and on whether Ar chitectur eDescriptions exist, as described in
Section 7.5 .Tothe extent possible, identify the relevant Business Ar chitectur ebuilding blocks,
drawing on the Architectur eRepository (see Part V , Chapter 37 ).
Wher enew ar chitectur emodels need to be developed to satisfy stakeholder concerns, use the
models identiﬁed within Step 1 as a guideline for cr eating new ar chitectur econtent to describe
the Baseline Architecture.
7.3.3 Develop Target Business Architecture Description
Develop a T arget Description for the Business Ar chitectur e, to the extent necessary to support
the Ar chitectur eVision. The scope and level of detail to be deﬁned will depend on the r elevance
of the business elements to attaining the T arget Ar chitectur eVision, and on whether
architectural descriptions exist. T othe extent possible, identify the relevant Business
Architectur ebuilding blocks, drawing on the Architectur eRepository (see Part V , Chapter 37 ).
Wher enew ar chitectur emodels need to be developed to satisfy stakeholder concerns, use the
models identiﬁed within Step 1 as a guideline for cr eating new ar chitectur econtent to describe
the Target Architecture.
7.3.4 Perform Gap Analysis
Verify the architectur emodels for internal consistency and accuracy:
■Perform trade-of fanalysis to resolve conﬂicts (if any) among the different views
■Validate that the models support the principles, objectives, and constraints
■Note changes to the viewpoint r epresented in the selected models from the Ar chitecture
Repository ,and document
■Test architectur emodels for completeness against requirements
Identify gaps between the baseline and tar get, using the gap analysis technique as described in
Part III, Chapter 23 .
7.3.5 Deﬁne Candidate Roadmap Components
Following the creation of a Baseline Ar chitectur e, Target Ar chitectur e, and gap analysis results, a
business roadmap is required to prioritize activities over the coming phases.
This initial Business Ar chitectur eRoadmap will be used as raw material to support mor e
detailed deﬁnition of a consolidated, cr oss-discipline roadmap within the Opportunities &
Solutions phase.
84 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase B: Business Ar chitectureS teps
7.3.6 Resolve Impacts Across the Architecture Landscape
Once the Business Ar chitectur ei sﬁ nalized, it is necessary to understand any wider impacts or
implications.
At this stage, other ar chitectur eartifacts in the Ar chitectur eLandscape should be examined to
identify:
■Does this Business Architectur ecreate an impact on any pre-existing architectures?
■Have recent changes been made that impact on the Business Architecture?
■Arethereany opportunities to leverage work fr om this Business Ar chitectur ei no ther
areas of the organization?
■Does this Business Ar chitectur eimpact other projects (including those planned as well as
those currently in progress)?
■Will this Business Ar chitectur eb ei mpacted by other projects (including those planned as
well as those currently in progress)?
7.3.7 Conduct Formal Stakeholder Review
Check the original motivation for the ar chitectur eproject and the Statement of Ar chitecture
Work against the proposed Business Ar chitectur e, asking if it is ﬁt for the purpose of supporting
subsequent work in the other ar chitectur edomains. Reﬁne the proposed Business Ar chitecture
only if necessary.
7.3.8 Finalize the Business Architecture
■Select standards for each of the building blocks, r e-using as much as possible from the
reference models selected from the Architectur eRepository
■Fully document each building block
■Conduct a ﬁnal cross-check of overall ar chitectur eagainst business goals; document the
rationale for building block decisions in the architectur edocument
■Document the ﬁnal requirements traceability report
■Document the ﬁnal mapping of the ar chitectur ewithin the Ar chitectur eRepository; fr om
the selected building blocks, identify those that might be re-used (working practices, r oles,
business relationships, job descriptions, etc.), and publish via the Architectur eRepository
■Finalize all the work products, such as gap analysis results
7.3.9 Create the Architecture Deﬁnition Document
■Document the rationale for building block decisions in the Ar chitectur eD eﬁnition
Document
■Prepar ethe business sections of the Ar chitectur eDeﬁnition Document, comprising some
or all of:
—A business footprint (a high-level description of the people and locations involved
with key business functions)
Part II: Architecture De velopment Method (ADM) 85
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Steps Phase B: Business Ar chitecture
—A detailed description of business functions and their information needs
—A management footprint (showing span of control and accountability)
—S tandar ds, rules, and guidelines showing working practices, legislation, ﬁnancial
measures, etc.
—A skills matrix and set of job descriptions
If appropriate, use reports and/or graphics generated by modeling tools to demonstrate
key views of the ar chitectur e. Route the document for r eview by relevant stakeholders, and
incorporate feedback.
7.4 Outputs
The outputs of Phase B may include, but ar enot restricted to:
■Reﬁned and updated versions of the Ar chitectur eVision phase deliverables, wher e
applicable, including:
—S tatement of Architectur eWork (see Part IV , Section 32.2.20 ), updated if necessary
—V alidated business principles, business goals, and business drivers (see Part IV ,
Section 32.2.9 ), updated if necessary
—A rchitectur ePrinciples (see Part IV , Section 32.2.4 )
■Draft Architectur eDeﬁnition Document (see Part IV , Section 32.2.3 ), including:
—B aseline Business Architecture, Version 1.0 (detailed), if appropriate
—T arget Business Architecture, Version 1.0 (detailed), including:
—O rganization str uctur e—i dentifying business locations and r elating them to
organizational units
—B usiness goals and objectives — for the enterprise and each organizational unit
—B usiness functions — a detailed, recursive step involving successive
decomposition of major functional areas into sub-functions
—B usiness services — the services that the enterprise and each enterprise unit
provides to its customers, both internally and externally
—B usiness processes, including measures and deliverables
—B usiness roles, including development and modiﬁcation of skills requirements
—B usiness data model
—C orrelation of organization and functions — r elate business functions to
organizational units in the form of a matrix report
—V iews corr esponding to the selected viewpoints addressing key stakeholder concerns
■Draft Ar chitectur eRequir ements Speciﬁcation (see Part IV ,Section 32.2.6 ,o np age 354),
including such Business Architectur erequirements as:
—G ap analysis results
—T echnical r equir ements — identifying, categorizing, and prioritizing the implications
for work in the remaining ar chitectur ed omains; for example, by a
dependency/priority matrix (for example, guiding trade-of fbetween speed of
transaction processing and security); list the speciﬁc models that ar eexpected to be
86 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase B: Business Ar chitectureO utputs
produced (for example, expressed as primitives of the Zachman Framework)
—U pdated business requirements
■Business Ar chitectur ecomponents of an Ar chitectur eRoadmap (see Part IV ,Section 32.2.7 )
The outputs may include some or all of the following:
■Catalogs:
—V alue Stream catalog
—B usiness Capabilities catalog
—V alue Stream Stages catalog
—O rganization/Actor catalog
—D river/Goal/Objective catalog
—R ole catalog
—B usiness Service/Function catalog
—L ocation catalog
—P rocess/Event/Control/Product catalog
—C ontract/Measur ecatalog
■Matrices:
—V alue Stream/Capability matrix
—S trategy/Capability matrix
—C apability/Organization matrix
—B usiness Interaction matrix
—A ctor/Role matrix
■Diagrams:
—B usiness Model diagram
—B usiness Capability Map
—V alue Stream Map
—O rganization Map
—B usiness Footprint diagram
—B usiness Service/Information diagram
—F unctional Decomposition diagram
—P roduct Lifecycle diagram
—G oal/Objective/Service diagram
—B usiness Use-Case diagram
—O rganization Decomposition diagram
Part II: Architecture De velopment Method (ADM) 87
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Outputs Phase B: Business Ar chitecture
—P rocess Flow diagram
—E vent diagram
7.5 Approach
Business Ar chitectur ei sar epresentation of holistic, multi-dimensional business views of:
capabilities, end-to-end value delivery ,information, and organizational str uctur e; and the
relationships among these business views and strategies, pr oducts, policies, initiatives, and
stakeholders.
Business Ar chitectur erelates business elements to business goals and elements of other
domains.
7.5.1 General
Aknowledge of the Business Ar chitectur ei sap rerequisite for ar chitectur ework in any other
domain (Data, Application, Technology), and is ther eforethe ﬁrst ar chitectur eactivity that needs
to be undertaken, if not catered for alr eady in other organizational processes (enterprise
planning, strategic business planning, business process re-engineering, etc.).
In practical terms, the Business Ar chitectur ei sa lso often necessary as a means of demonstrating
the business value of subsequent ar chitectur ework to key stakeholders, and the return on
investment to those stakeholders from supporting and participating in the subsequent work.
The scope of work in Phase B is primarily determined by the Ar chitectur eVision as set out in
Phase A. The business strategy deﬁnes the goals and drivers and metrics for success, but not
necessarily how to get there. That is the r ole of the Business Ar chitectur e, deﬁned in detail in
Phase B.
This will depend to a lar ge extent on the enterprise envir onment. In some cases, key elements of
the Business Ar chitectur emay be done in other activities; for example, the enterprise mission,
vision, strategy ,and goals may be documented as part of some wider business strategy or
enterprise planning activity that has its own lifecycle within the enterprise.
In such cases, ther emay be a need to verify and update the currently documented business
strategy and plans, and/or to bridge between high-level business drivers, business strategy ,and
goals on the one hand, and the speciﬁc business r equir ements that ar erelevant to this
architectur edevelopment ef fort. The business strategy typically deﬁnes what to achieve — the
goals and drivers, and the metrics for success — but not how to get there. That is the role of the
Business Architecture.
In other cases, little or no Business Ar chitectur ework may have been done to date. In such cases,
therewill be a need for the ar chitectur eteam to r esear ch, verify ,and gain buy-in to the key
business objectives and processes that the ar chitectur ei st os upport. This may be done as a fr ee-
standing exercise, either preceding architectur edevelopment, or as part of Phase A.
In both of these cases, the business scenarios technique (see the T OGAF®Series Guide: Business
Scenarios), or any other method that illuminates the key business r equir ements and indicates the
implied technical requirements for IT architecture, may be used.
Akey objective is to re-use existing material as much as possible. In ar chitecturally mor emature
envir onments, ther ewill be existing Ar chitectur eDeﬁnitions, which (hopefully) will have been
maintained since the last ar chitectur edevelopment cycle. Wher eArchitectur eDescriptions exist,
these can be used as a starting point, and veriﬁed and updated if necessary; see Part V,Section
35.4.1 .
88 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase B: Business Ar chitectureA pproach
Gather and analyze only that information that allows informed decisions to be made r elevant to
the scope of this ar chitectur eeffort. If this effort is focused on the deﬁnition of (possibly new)
business processes, then Phase B will necessarily involve a lot of detailed work. If the focus is
moreo nt he T arget Ar chitectur es in other domains (data/information, application systems,
infrastructur e) to support an essentially existing Business Ar chitectur e, then it is important to
build a complete pictur ei nP hase B without going into unnecessary detail.
7.5.2 Developing the Baseline Description
If an enterprise has existing Ar chitectur eDescriptions, they should be used as the basis for the
Baseline Description. This input may have been used alr eady in Phase A in developing the
Architectur eVision, such as the business capability map or a cor eset of value streams as
introduced in Section 6.5.2 ,and may be sufﬁcient in itself for this baseline.
The reasons to update these materials include having a missing business capability ,an ew value
stream, or changed organizational unit that has not pr eviously been assessed within the scope of
the Enterprise Ar chitectur eproject. Section 7.5.3 toSection 7.5.5 addr ess the use of cor eBusiness
Architectur emethods to model the Business Ar chitectur edriven by the strategy scope fr om
Phase A. Note that putting these methods into action to drive a focus and tar get state for later
architectur ework does not mean the fundamental frameworks from Phase A, such as a common
enterprise business capability map, necessarily change but rather that they ar eapplied in a
manner driven by the scope and needs of the speciﬁc Enterprise Architectur eproject.
If no Ar chitectur eDescriptions exist, information should be gather ed and Business Ar chitecture
models developed.
Whatever the scope of the speciﬁc pr oject, it is important to determine whether it is the
fundamental view of the business that is changing or the usage of those views to determine
scope, priorities, and relationships for the speciﬁc project in relation to the rest of the enterprise.
7.5.3 Applying Business Capabilities
The business capability map found or developed in the Ar chitectur eVision phase provides a
self-contained view of the business that is independent of the curr ent organizational str ucture,
business pr ocesses, information systems and applications, and the rest of the product or service
portfolio. Those business capabilities should be mapped back to the or ganizational units, value
streams, information systems, and strategic plans within the scope of the Enterprise Ar chitecture
project. This r elationship mapping provides greater insight into the alignment and optimization
of each of those domains (see Relationship Mapping in The Open Group Guide to Business
Capabilities).
Another common analysis technique involves heat mapping, which can be used to show a range
of dif ferent perspectives on the same set of cor ebusiness capabilities. These include maturity ,
effectiveness, performance, and the value or cost of each capability to the business. Dif ferent
attributes determine the colors of each capability on the business capability map (see Heat
Mapping in The Open Group Guide to Business Capabilities).
For example, a business capability maturity heat map shows the desir ed maturity as green for a
speciﬁc capability ,one level down as yellow ,and two or mor elevels down as r ed. Other colors
may indicate status, such as purple denoting a capability that does not exist yet in the company
but is desired, or perhaps as a capability that is over-funded and has mor eresour ces than
necessary .This gap analysis is directly tied to the Enterprise Ar chitectur eproject underway; a
gap is only r elevant in the context of the business need and provides focus for mor emapping in
this phase or priorities for later architectur ephases.
Part II: Architecture De velopment Method (ADM) 89
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ApproachP hase B: Business Ar chitecture
7.5.4 Applying Value Streams
Value streams provide valuable stakeholder context into why the or ganization needs business
capabilities, while business capabilities provide what the organization needs for a particular
value stage to be successful.
Start with the initial set of value str eam models for the business documented in the Ar chitecture
Vision phase. Within the scope of the speciﬁc Enterprise Ar chitectur eproject, if suf ﬁciently
larger in breadth, ther emay be a need for new value streams not already in the repository.
Anew or existing value stream can be analyzed within the scope of the pr oject through heat
mapping (by value stream stage) or by developing use-cases ar ound a complete deﬁnition of the
value stream (see Baseline Example in the T OGAF®Series Guide: V alue Str eams). A project
might focus on speciﬁc stakeholders, one element of business value, or stress some stages over
others to develop better requirements for solutions in later phases.
The most substantive beneﬁts come fr om mapping relationships between the stages in a value
stream to business capabilities, then performing a gap analysis for capabilities (such as heat
mapping) in the context of the business value achieved by the value str eam for a speciﬁc
stakeholder (see Mapping Value Streams to Business Capabilities in the T OGAF®Series Guide:
Value Streams).
7.5.5 Applying the Organization Map
An or ganization map shows the key organizational units, partners, and stakeholder groups that
make up the enterprise ecosystem. The map should also depict the working r elationship
between those entities, as distinct from an organizational chart that only shows hierar chical
reporting r elationships. The map is typically depicted as a network or web of relationships and
interactions between the various business entities (see Organigraphs: Drawing How Companies
Really Work ,b yM intzber gand Van der Heyden, 1999).
The business unit is the main concept used to establish or ganization maps. In keeping with the
relatively unconstrained view of what constitutes as enterprise, the enterprise may be one
business unit for the project underway ,may include all business units, or also include thir d
parties or other stakeholder groups. The interpretation depends on the scope of the ar chitecture
effort.
This map is a key element of Business Ar chitectur ebecause it provides the or ganizational
context for the whole Enterprise Ar chitectur eeffort. While capability mapping exposes what a
business does and value stream mapping exposes how it delivers value to speciﬁc stakeholders,
the or ganization map identities the business units or thir dparties that possess or use those
capabilities and which participate in the value streams.
Taken together with the methods in Section 7.5.3 ,Section 7.5.4 ,and the associated Guides, the
organization map provides an understanding of which business units to involve in the
architectur eeffort, who and when to talk about a given r equir ement, and how to measur ethe
impact of various decisions.
90 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase B: Business Ar chitectureA pproach
7.5.6 Applying Modeling Techniques
The modeling and mapping techniques provided her eare e xtensions that implement the
business capabilities, value streams, and or ganization maps described above in Phase B into the
practices of the business. They expand the operating model, which is a r epresentation for how
an organization operates across a range of domains in or der to accomplish its function (see A
Method for Identifying Process Re-Use Opportunities to Enhance the Operating Model, M. de
Vries et al.).
In addition to the techniques described above (capability maps, value streams, and or ganization
maps), a variety of other modeling techniques may be employed, if deemed appr opriate. For
example:
■Activity Models (also called Business Process Models )describe the functions associated
with the enterprise’s business activities, the data and/or information exchanged between
activities (internal exchanges), and the data and/or information exchanged with other
activities that ar eoutside the scope of the model (external exchanges)
Activity models ar ehierar chical in nature. They captur ethe activities performed in a
business process, and the ICOMs (inputs, controls, outputs, and mechanisms/r esources
used) of those activities. Activity models can be annotated with explicit statements of
business rules, which r epresent relationships among the ICOMs. For example, a business
rule can specify who can do what under speciﬁed conditions, the combination of inputs
and controls needed, and the r esulting outputs. One technique for creating activity models
is the IDEF (Integrated Computer Aided Manufacturing (ICAM) DEFinition) modeling
technique.
The Object Management Gr oup (OMG) has developed the Business Process Modeling
Notation ™(BPMN ™), a standar dfor business pr ocess modeling that includes a language
with which to specify business processes, their tasks/steps, and the documents produced.
■Use-Case Models can describe either business pr ocesses or systems functions, depending
on the focus of the modeling effort
Ause-case model describes the business processes of an enterprise in terms of use-cases
and actors corresponding to business processes and or ganizational participants (people,
organizations, etc.). The use-case model is described in use-case diagrams and use-case
speciﬁcations.
■Class Models aresimilar to logical data models
Aclass model describes static information and r elationships between information. A class
model also describes informational behaviors. Like many of the other models, it can also
be used to model various levels of granularity .Depending on the intent of the model, a
class model can r epresent business domain entities or systems implementation classes. A
business domain model r epresents key business information (domain classes), their
characteristics (attributes), their behaviors (methods or operations), and r elationships
(often r eferr ed to as multiplicity ,describing how many classes typically participate in the
relationship), and cardinality (describes r equir ed or optional participation in the
relationship). Speciﬁcations further elaborate and detail information that cannot be
represented in the class diagram.
Part II: Architecture De velopment Method (ADM) 91
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ApproachP hase B: Business Ar chitecture
Customer
AddressBill-to Address
Ship-to AddressContact Address
© The Open Group
Figure 7-2 UML Business Class Diagram
All thr ee types of model above can be r epresented in the Uniﬁed Modeling Language ™(UML®),
and a variety of tools exist for generating such models.
Certain industry sectors have modeling techniques speciﬁc to the sector concerned. For example,
the Defense sector uses the following models. These models have to be used car efully ,especially
if the location and conduct of business processes will be altered in the visionary Business
Architecture.
■The Node Connectivity Diagram describes the business locations (nodes), the "needlines"
between them, and the characteristics of the information exchanged
Node connectivity can be described at three levels: conceptual, logical, and physical. Each
needline indicates the need for some kind of information transfer between the two
connected nodes. A node can r epresent a role (e.g., a CIO), an or ganizational unit, a
business location or facility ,and so on. An arrow indicating the direction of information
ﬂow is annotated to describe the characteristics of the data or information — for example,
its content, media, security or classiﬁcation level, timeliness, and r equir ements for
information system interoperability.
■The Information Exchange Matrix documents the information exchange r equir ements for
an Enterprise Architecture
Information exchange r equir ements express the r elationships across three basic entities
(activities, business nodes and their elements, and information ﬂow), and focus on
characteristics of the information exchange, such as performance and security .They
identify who exchanges what information with whom, why the information is necessary ,
and in what manner.
7.5.7 Architecture Repository
As part of Phase B, the ar chitectur eteam will need to consider what relevant Business
Architectur eresour ces ar eavailable from the Ar chitectur eRepository (see Part V,Chapter 37 ), in
particular:
■Industry reference models relevant to the organization’s industry sector
These ar e"Industry Ar chitectur es", in terms of the Enterprise Continuum. They ar eheld in
the Reference Library of the Ar chitectur eRepository (see Part V,Section 37.3 ). For
example:
92 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase B: Business Ar chitectureA pproach
—T he Object Management Group (OMG) — www.omg.org —has a number of vertical
Domain Task For ces developing industry r eference models relevant to speciﬁc
vertical domains such as Healthcare, Transportation, Finance, etc.
—T he TM Forum — www.tmforum.org —h as developed detailed r eference models
relevant to the Telecommunications industry
—G overnment departments and agencies in dif ferent countries have r eference models
and frameworks mandated for use, intended to pr omote cr oss-departmental
integration and interoperability
An example is the Federal Enterprise Ar chitectur eBusiness Reference Model, which
is a function-driven framework for describing the business operations of the Federal
Government independent of the agencies that perform them.
—T he IT4IT Reference Ar chitectur eprovides a high-level IT V alue Chain that can be
used within the IT segment of your architecture
The IT4IT Level 1 Reference Ar chitectur ecan be used to guide the creation of a
Business Capability Map for the IT segment.
■Enterprise-speciﬁc Business Ar chitectur eviews (capability maps, value str eam maps,
organization maps, etc.)
■Enterprise-speciﬁc building blocks (pr ocess components, business rules, job descriptions,
etc.)
■Applicable standards
Part II: Architecture De velopment Method (ADM) 93
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase B: Business Ar chitecture
94 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 8
Phase C: Information Systems Architectures
This chapter describes the Information Systems Ar chitectur es for an ar chitectur eproject, including the
development of Data and Application Architectures.
G.
Implementation
GovernanceRequirements
Management
E.
Opportunities
and
SolutionsD.
Technology
ArchitectureB.
Business
Architecture
F.
Migration
PlanningA.
Architecture
Vision
H.
Architecture
Change
Management
C.
Information
Systems
ArchitecturesPreliminary
© The Open Group
Figure 8-1 Phase C: Information Systems Architectures
Part II: Architecture De velopment Method (ADM) 95
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Objectives Phase C: Information Systems Ar chitectures
8.1 Objectives
The objectives of Phase C ar eto:
■Develop the T arget Information Systems Ar chitectur es, describing how the enterprise’s
Information Systems Ar chitectur ew ill enable the Business Ar chitectur eand the
Architectur eVision, in a way that addresses the Statement of Ar chitectur eW ork and
stakeholder concerns
■Identify candidate Ar chitectur eRoadmap components based upon gaps between the
Baseline and Target Information Systems (Data and Application) Architectures
8.2 Approach
Phase C involves some combination of Data and Application Ar chitectur e, in either or der.
Advocates exist for both sequences. For example, Steven Spewak’s Enterprise Ar chitecture
Planning (EAP) recommends a data-driven approach.
On the other hand, major applications systems — such as those for Enterprise Resour ce
Planning (ERP), Customer Relationship Management (CRM), etc. — often pr ovide a
combination of technology infrastr uctur ea nd business application logic, and some
organizations take an application-driven appr oach, whereby they recognize certain key
applications as forming the cor eunderpinning of the mission-critical business processes, and
take the implementation and integration of those cor eapplications as the primary focus of
architectur eeffort (the integration issues often constituting a major challenge).
Detailed descriptions for Phase C ar egiven separately for each architectur edomain:
■Phase C: Information Systems Architectures — Data Architectur e(seeChapter 9 )
■Phase C: Information Systems Architectures — Application Architectur e(seeChapter 10 )
96 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 9
Phase C: Information Systems Architectures — Data
Architecture
This chapter describes the Data Architectur epart of Phase C.
9.1 Objectives
The objectives of the Data Architectur epart of Phase C ar eto:
■Develop the T arget Data Ar chitectur ethat enables the Business Ar chitectur eand the
Architectur eVision, in a way that addresses the Statement of Ar chitectur eW ork and
stakeholder concerns
■Identify candidate Ar chitectur eRoadmap components based upon gaps between the
Baseline and Target Data Architectures
9.2 Inputs
This section deﬁnes the inputs to Phase C (Data Architecture).
9.2.1 Reference Materials External to the Enterprise
■Architectur ereference materials (see Part IV , Section 32.2.5 )
9.2.2 Non-Architectural Inputs
■Request for Architectur eWork (see Part IV , Section 32.2.17 )
■Capability Assessment (see Part IV , Section 32.2.10 )
■Communications Plan (see Part IV , Section 32.2.12 )
9.2.3 Architectural Inputs
■Organizational Model for Enterprise Architectur e(see Part IV , Section 32.2.16 ), including:
—S cope of organizations impacted
—M aturity assessment, gaps, and resolution approach
Part II: Architecture De velopment Method (ADM) 97
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Inputs Phase C: Information Systems Ar chitectures — Data Ar chitecture
—R oles and responsibilities for architectur eteam(s)
—C onstraints on architectur ework
—B udget requirements
—G overnance and support strategy
■Tailored Architectur eFramework (see Part IV , Section 32.2.21 ,o np age 363), including:
—T ailored architectur emethod
—T ailored architectur econtent (deliverables and artifacts)
—C onﬁgured and deployed tools
■Data principles (see Part III, Section 20.6.2 ), if existing
■Statement of Architectur eWork (see Part IV , Section 32.2.20 )
■Architectur eVision (see Part IV , Section 32.2.8 )
■Architectur eRepository (see Part IV , Section 32.2.5 ), including:
—R e-usable building blocks (in particular ,deﬁnitions of current data)
—P ublicly available reference models
—O rganization-speciﬁc reference models
—O rganization standards
■Draft Architectur eDeﬁnition Document (see Part IV , Section 32.2.3 ), including:
—B aseline Business Architecture, Version 1.0 (detailed), if appropriate
—T arget Business Architecture, Version 1.0 (detailed)
—B aseline Data Architecture, Version 0.1, if available
—T arget Data Architecture, Version 0.1, if available
—B aseline Application Architecture, Version 1.0 (detailed) or Version 0.1 (Vision)
—T arget Application Architecture, Version 1.0 (detailed) or Version 0.1 (Vision)
—B aseline Technology Architecture, Version 0.1 (Vision)
—T arget Technology Architecture, Version 0.1 (Vision)
■Draft Architectur eRequirements Speciﬁcation (see Part IV , Section 32.2.6 ), including:
—G ap analysis results (from Business Architecture)
—R elevant technical requirements that will apply to this phase
■Business Ar chitectur ecomponents of an Ar chitectur eRoadmap (see Part IV ,Section 32.2.7 )
98 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase C: Information Systems Ar chitectures — Data Ar chitectureS teps
9.3 Steps
The level of detail addressed in Phase C will depend on the scope and goals of the overall
architectur eeffort.
New data building blocks being introduced as part of this effort will need to be deﬁned in detail
during Phase C. Existing data building blocks to be carried over and supported in the tar get
envir onment may already have been adequately deﬁned in pr evious architectural work; but, if
not, they too will need to be deﬁned in Phase C.
The order of the steps in this phase as well as the time at which they ar eformally started and
completed should be adapted to the situation at hand in accordance with the established
Architectur eGovernance. In particular ,determine whether in this situation it is appropriate to
conduct Baseline Description or T arget Ar chitectur edevelopment ﬁrst, as described in Part III,
Chapter 18 .
All activities that have been initiated in these steps should be closed during the Finalize the Data
Architectur estep (see Section 9.3.8 ). The documentation generated from these steps must be
formally published in the Create the Architectur eDeﬁnition Document step (see Section 9.3.9 ).
The steps in Phase C (Data Architecture) ar ea sf ollows:
■Select reference models, viewpoints, and tools (see Section 9.3.1 )
■Develop Baseline Data Architectur eDescription (see Section 9.3.2 )
■Develop Target Data Architectur eDescription (see Section 9.3.3 )
■Perform gap analysis (see Section 9.3.4 )
■Deﬁne candidate roadmap components (see Section 9.3.5 )
■Resolve impacts across the Architectur eLandscape (see Section 9.3.6 )
■Conduct formal stakeholder review (see Section 9.3.7 )
■Finalize the Data Architectur e(seeSection 9.3.8 )
■Create the Architectur eDeﬁnition Document (see Section 9.3.9 )
9.3.1 Select Reference Models, Viewpoints, and Tools
Review and validate (or generate, if necessary) the set of data principles. These will normally
form part of an overarching set of Ar chitectur ePrinciples. Guidelines for developing and
applying principles, and a sample set of data principles, ar egiven in Part III, Chapter 20 .
Select relevant Data Ar chitectur eresour ces (r eference models, patterns, etc.) on the basis of the
business drivers, stakeholders, concerns, and Business Architecture.
Select relevant Data Ar chitectur eviewpoints (for example, stakeholders of the data — r egulatory
bodies, users, generators, subjects, auditors, etc.; various time dimensions — real-time, r eporting
period, event-driven, etc.; locations; business pr ocesses); i.e., those that will enable the ar chitect
to demonstrate how the stakeholder concerns ar ebeing addressed in the Data Architecture.
Identify appropriate tools and techniques (including forms) to be used for data captur e,
modeling, and analysis, in association with the selected viewpoints. Depending on the degr ee of
sophistication warranted, these may comprise simple documents or spr eadsheets, or mor e
sophisticated modeling tools and techniques such as data management models, data models,
etc.
Part II: Architecture De velopment Method (ADM) 99
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Steps Phase C: Information Systems Ar chitectures — Data Ar chitecture
Examples of data modeling techniques are:
■Entity-relationship diagram
■Class diagram
9.3.1.1 Determine Overall Modeling Process
For each viewpoint, select the models needed to support the speciﬁc view r equir ed, using the
selected tool or method.
Ensur ethat all stakeholder concerns ar ecover ed. If they ar enot, create new models to addr ess
concerns not covered, or augment existing models (see above).
The recommended process for developing a Data Architectur ei sa sf ollows:
■Collect data-related models from existing Business Ar chitectur eand Application
Architectur ematerials
■Rationalize data r equir ements and align with any existing enterprise data catalogs and
models; this allows the development of a data inventory and entity relationship
■Update and develop matrices across the ar chitectur ebyrelating data to business service,
business function, access rights, and application
■Elaborate Data Ar chitectur eviews by examining how data is created, distributed,
migrated, secured, and archived
9.3.1.2 Identify Required Catalogs of Data Building Blocks
The organization’s data inventory is captur ed as a catalog within the Ar chitectur eRepository.
Catalogs ar ehierar chical in natur eand captur ead ecomposition of a metamodel entity and also
decompositions across related model entities (e.g., logical data component →physical data
component →data entity).
Catalogs form the raw material for development of matrices and diagrams and also act as a key
resource for managing the business and IT capability.
During the Business Ar chitectur ephase, a Business Service/Information diagram was cr eated
showing the key data entities r equir ed by the main business services. This is a pr erequisite to
successful Data Architectur eactivities.
Using the traceability fr om application to business function to data entity inherent in the content
framework, it is possible to cr eate an inventory of the data needed to be in place to support the
Architectur eVision.
Once the data r equir ements ar econsolidated in a single location, it is possible to reﬁne the data
inventory to achieve semantic consistency and to remove gaps and overlaps.
The following catalogs should be considered for development within a Data Architecture:
■Data Entity/Data Component catalog
The str uctur eo fc atalogs is based on the attributes of metamodel entities, as deﬁned in Part IV ,
Chapter 30 .
100 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase C: Information Systems Ar chitectures — Data Ar chitectureS teps
9.3.1.3 Identify Required Matrices
Matrices show the cor erelationships between related model entities.
Matrices form the raw material for development of diagrams and also act as a key r esour ce for
impact assessment.
At this stage, an entity to applications matrix could be pr oduced to validate this mapping. How
data is cr eated, maintained, transformed, and passed to other applications, or used by other
applications, will now start to be understood. Obvious gaps such as entities that never seem to
be created by an application or data cr eated but never used, need to be noted for later gap
analysis.
The rationalized data inventory can be used to update and reﬁne the architectural diagrams of
how data relates to other aspects of the architecture.
Once these updates have been made, it may be appropriate to dr op into a short iteration of the
Application Architectur et or esolve the changes identiﬁed.
The following matrices should be considered for development within a Data Architecture:
■Data Entity/Business Function (showing which data supports which functions and which
business function owns which data)
■Business Service/Information (developed during the Business Architectur ephase)
■Application/Data (developed across the Application Ar chitectur eand Data Ar chitecture
phases)
The str uctur eo fm atrices is based on the attributes of metamodel entities, as deﬁned in Part IV ,
Chapter 30 .
9.3.1.4 Identify Required Diagrams
Diagrams present the Data Ar chitectur einformation from a set of dif ferent perspectives
(viewpoints) according to the requirements of the stakeholders.
Once the data entities have been reﬁned, a diagram of the r elationships between entities and
their attributes can be produced.
It is important to note at this stage that information may be a mixtur eo fe nterprise-level data
(from system service providers and package vendor information) and local-level data held in
personal databases and spreadsheets.
The level of detail modeled needs to be carefully assessed. Some physical system data models
will exist down to a very detailed level; others will only have cor eentities modeled. Not all data
models will have been kept up-to-date as applications wer emodiﬁed and extended over time. It
is important to achieve a balance in the level of detail pr ovided (e.g., r eproducing existing
detailed system physical data schemas or pr esenting high-level process maps and data
requirements, highlight the two extreme views).
The following diagrams should be considered for development within a Data Architecture:
■Conceptual Data diagram
■Logical Data diagram
■Data Dissemination diagram
Part II: Architecture De velopment Method (ADM) 101
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Steps Phase C: Information Systems Ar chitectures — Data Ar chitecture
■Data Lifecycle diagram
■Data Security diagram
■Data Migration diagram
9.3.1.5 Identify Types of Requirement to be Collected
Once the Data Ar chitectur ecatalogs, matrices, and diagrams have been developed, ar chitecture
modeling is completed by formalizing the data-focused r equir ements for implementing the
Target Architecture.
These requirements may:
■Relate to the data domain
■Provide requirements input into the Application and Technology Architectures
■Provide detailed guidance to be reﬂected during design and implementation to ensur ethat
the solution addresses the original architectur erequirements
Within this step, the ar chitect should identify r equir ements that should be met by the
architectur e(seeSection 16.5.2 ).
9.3.2 Develop Baseline Data Architecture Description
Develop a Baseline Description of the existing Data Ar chitectur e, to the extent necessary to
support the T arget Data Ar chitectur e. The scope and level of detail to be deﬁned will depend on
the extent to which existing data elements ar elikely to be carried over into the T arget Data
Architectur e, and on whether ar chitectural descriptions exist, as described in Section 9.5 .Tothe
extent possible, identify the r elevant Data Ar chitectur ebuilding blocks, drawing on the
Architectur eRepository (see Part V , Chapter 37 ).
Wher enew ar chitectur emodels need to be developed to satisfy stakeholder concerns, use the
models identiﬁed within Step 1 as a guideline for cr eating new ar chitectur econtent to describe
the Baseline Architecture.
9.3.3 Develop Target Data Architecture Description
Develop a T arget Description for the Data Ar chitectur e, to the extent necessary to support the
Architectur eVision and T arget Business Ar chitectur e. The scope and level of detail to be deﬁned
will depend on the relevance of the data elements to attaining the T arget Ar chitectur e, and on
whether architectural descriptions exist. T othe extent possible, identify the relevant Data
Architectur ebuilding blocks, drawing on the Architectur eRepository (see Part V , Chapter 37 ).
Wher enew ar chitectur emodels need to be developed to satisfy stakeholder concerns, use the
models identiﬁed within Step 1 as a guideline for cr eating new ar chitectur econtent to describe
the Target Architecture.
102 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase C: Information Systems Ar chitectures — Data Ar chitectureS teps
9.3.4 Perform Gap Analysis
Verify the architectur emodels for internal consistency and accuracy:
■Perform trade-of fanalysis to resolve conﬂicts (if any) among the different views
■Validate that the models support the principles, objectives, and constraints
■Note changes to the viewpoint r epresented in the selected models fr om the Ar chitecture
Repository ,and document
■Test architectur emodels for completeness against requirements
Identify gaps between the Baseline and T arget, using the gap analysis technique as described in
Part III, Chapter 23 .
9.3.5 Deﬁne Candidate Roadmap Components
Following the creation of a Baseline Ar chitectur e, Target Ar chitectur e, and gap analysis, a data
roadmap is required to prioritize activities over the coming phases.
This initial Data Ar chitectur eroadmap will be used as raw material to support mor edetailed
deﬁnition of a consolidated, cross-discipline r oadmap within the Opportunities & Solutions
phase.
9.3.6 Resolve Impacts Across the Architecture Landscape
Once the Data Ar chitectur ei sﬁ nalized, it is necessary to understand any wider impacts or
implications.
At this stage, other ar chitectur eartifacts in the Ar chitectur eLandscape should be examined to
identify:
■Does this Data Architectur ecreate an impact on any pre-existing architectures?
■Have recent changes been made that impact the Data Architecture?
■Arethereany opportunities to leverage work fr om this Data Ar chitectur ei no ther areas of
the organization?
■Does this Data Ar chitectur eimpact other projects (including those planned as well as those
currently in progress)?
■Will this Data Ar chitectur eb ei mpacted by other projects (including those planned as well
as those currently in progress)?
9.3.7 Conduct Formal Stakeholder Review
Check the original motivation for the ar chitectur eproject and the Statement of Ar chitecture
Work against the pr oposed Data Ar chitectur e. Conduct an impact analysis to identify any ar eas
wher ethe Business and Application Ar chitectur es (e.g., business practices) may need to change
to cater for changes in the Data Ar chitectur e(for example, changes to forms or pr ocedures,
applications, or database systems).
If the impact is signiﬁcant, this may warrant the Business and Application Ar chitectur es being
revisited.
Identify any areas wher ethe Application Ar chitectur e(if generated at this point) may need to
Part II: Architecture De velopment Method (ADM) 103
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Steps Phase C: Information Systems Ar chitectures — Data Ar chitecture
change to cater for changes in the Data Ar chitectur e(or to identify constraints on the
Application Architectur eabout to be designed).
If the impact is signiﬁcant, it may be appropriate to dr op into a short iteration of the Application
Architectur ea tt his point.
Identify any constraints on the T echnology Ar chitectur eabout to be designed, reﬁning the
proposed Data Architectur eonly if necessary.
9.3.8 Finalize the Data Architecture
■Select standards for each of the building blocks, r e-using as much as possible from the
reference models selected from the Architectur eRepository
■Fully document each building block
■Conduct a ﬁnal cross-check of overall ar chitectur eagainst business r equirements;
document the rationale for building block decisions in the architectur edocument
■Document the ﬁnal requirements traceability report
■Document the ﬁnal mapping of the ar chitectur ewithin the Ar chitectur eRepository; fr om
the selected building blocks, identify those that might be re-used, and publish via the
Architectur eRepository
■Finalize all the work products, such as gap analysis
9.3.9 Create the Architecture Deﬁnition Document
Document the rationale for building block decisions in the Architectur eDeﬁnition Document.
Prepar ethe Data Ar chitectur esections of the Ar chitectur eDeﬁnition Document, comprising
some or all of:
■Business data model
■Logical data model
■Data management process model
■Data Entity/Business Function matrix
■Data interoperability requirements (e.g., XML schema, security policies)
■If appropriate, use reports and/or graphics generated by modeling tools to demonstrate
key views of the ar chitectur e; route the document for review by r elevant stakeholders, and
incorporate feedback
9.4 Outputs
The outputs of Phase C (Data Architecture) may include, but ar enot restricted to:
■Reﬁned and updated versions of the Ar chitectur eVision phase deliverables, wher e
applicable:
—S tatement of Architectur eWork (see Part IV , Section 32.2.20 ), updated if necessary
104 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase C: Information Systems Ar chitectures — Data Ar chitectureO utputs
—V alidated data principles (see Part III,Section 20.6.2 ), or new data principles (if
generated here)
■Draft Architectur eDeﬁnition Document (see Part IV , Section 32.2.3 ), including:
—B aseline Data Architecture, Version 1.0, if appropriate
—T arget Data Architecture, Version 1.0
—B usiness data model
—L ogical data model
—D ata management process models
—D ata Entity/Business Function matrix
—V iews corr esponding to the selected viewpoints addressing key stakeholder concerns
■Draft Ar chitectur eRequir ements Speciﬁcation (see Part IV ,Section 32.2.6 ), including such
Data Architectur erequirements as:
—G ap analysis results
—D ata interoperability requirements
—R elevant technical r equir ements that will apply to this evolution of the ar chitecture
development cycle
—C onstraints on the Technology Architectur eabout to be designed
—U pdated business requirements, if appropriate
—U pdated application requirements, if appropriate
■Data Architectur ecomponents of an Architectur eRoadmap (see Part IV , Section 32.2.7 )
The outputs may include some or all of the following:
■Catalogs:
—D ata Entity/Data Component catalog
■Matrices:
—D ata Entity/Business Function matrix
—A pplication/Data matrix
■Diagrams:
—C onceptual Data diagram
—L ogical Data diagram
—D ata Dissemination diagram
—D ata Security diagram
—D ata Migration diagram
—D ata Lifecycle diagram
Part II: Architecture De velopment Method (ADM) 105
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ApproachP hase C: Information Systems Ar chitectures — Data Ar chitecture
9.5 Approach
9.5.1 Key Considerations for Data Architecture
9.5.1.1 Data Management
When an enterprise has chosen to undertake largescale architectural transformation, it is
important to understand and addr ess data management issues. A str uctur ed and compr ehensive
appr oach to data management enables the effective use of data to capitalize on its competitive
advantages.
Considerations include:
■Aclear deﬁnition of which application components in the landscape will serve as the
system of recor do rr eference for enterprise master data
■Will ther eb ea ne nterprise-wide standar dthat all application components, including
softwar epackages, need to adopt?
(In the main, packages can be pr escriptive about the data models and may not be ﬂexible.)
■Clearly understand how data entities ar eutilized by business functions, pr ocesses, and
services
■Clearly understand how and wher eenterprise data entities ar ecreated, stor ed,
transported, and reported
■What is the level and complexity of data transformations r equir ed to support the
information exchange needs between applications?
■What will be the r equir ement for softwar ei ns upporting data integration with the
enterprise’s customers and suppliers (e.g., use of ETL tools during the data migration, data
proﬁling tools to evaluate data quality ,etc.)?
9.5.1.2 Data Migration
When an existing application is r eplaced, ther ewill be a critical need to migrate data (master ,
transactional, and r eference) to the new application. The Data Ar chitectur eshould identify data
migration r equir ements and also provide indicators as to the level of transformation, weeding,
and cleansing that will be r equir ed to present data in a format that meets the r equir ements and
constraints of the target application. The objective being that the tar get application has quality
data when it is populated. Another key consideration is to ensur ethat an enterprise-wide
common data deﬁnition is established to support the transformation.
9.5.1.3 Data Governance
Data governance considerations ensur ethat the enterprise has the necessary dimensions in place
to enable the transformation, as follows:
■Structure :this dimension pertains to whether the enterprise has the necessary
organizational str uctur eand the standards bodies to manage data entity aspects of the
transformation
■Management System :hereenterprises should have the necessary management system
and data-related programs to manage the governance aspects of data entities thr oughout
its lifecycle
106 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase C: Information Systems Ar chitectures — Data Ar chitectureA pproach
■People :this dimension addr esses what data-related skills and roles the enterprise r equires
for the transformation
If the enterprise lacks such r esour ces and skills, the enterprise should consider either
acquiring those critical skills or training existing internal r esour ces to meet the
requirements through a well-deﬁned learning program.
9.5.2 Architecture Repository
As part of this phase, the ar chitectur eteam will need to consider what relevant Data
Architectur eresour ces ar eavailable in the or ganization’s Ar chitectur eRepository (see Part V,
Chapter 37 ), in particular ,generic data models relevant to the organization’s industry "vertical"
sector .For example:
■Energistics®—D ata Exchange Standards for the Upstream Oil & Gas Industry
■National Information Exchange Model (US Government)
■The ARTS Operational Data Model and the ARTS Data Warehouse Model (Retail)
Part II: Architecture De velopment Method (ADM) 107
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase C: Information Systems Ar chitectures — Data Ar chitecture
108 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 10
Phase C: Information Systems Architectures —
Application Architecture
This chapter describes the Application Architectur epart of Phase C.
10.1 Objectives
The objectives of the Application Architectur epart of Phase C ar eto:
■Develop the T arget Application Ar chitectur ethat enables the Business Ar chitectur eand the
Architectur eVision, in a way that addresses the Statement of Ar chitectur eW ork and
stakeholder concerns
■Identify candidate Ar chitectur eRoadmap components based upon gaps between the
Baseline and Target Application Architectures
10.2 Inputs
This section deﬁnes the inputs to Phase C (Application Architecture).
10.2.1 Reference Materials External to the Enterprise
■Architectur ereference materials (see Part IV , Section 32.2.5 )
10.2.2 Non-Architectural Inputs
■Request for Architectur eWork (see Part IV , Section 32.2.17 )
■Capability Assessment (see Part IV , Section 32.2.10 )
■Communications Plan (see Part IV , Section 32.2.12 )
10.2.3 Architectural Inputs
■Organizational Model for Enterprise Architectur e(see Part IV , Section 32.2.16 ), including:
—S cope of organizations impacted
—M aturity assessment, gaps, and resolution approach
Part II: Architecture De velopment Method (ADM) 109
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Inputs Phase C: Information Systems Ar chitectures — Application Ar chitecture
—R oles and responsibilities for architectur eteam(s)
—C onstraints on architectur ework
—B udget requirements
—G overnance and support strategy
■Tailored Architectur eFramework (see Part IV , Section 32.2.21 ), including:
—T ailored architectur emethod
—T ailored architectur econtent (deliverables and artifacts)
—C onﬁgured and deployed tools
■Application principles (see Part III, Section 20.6.3 ), if existing
■Statement of Architectur eWork (see Part IV , Section 32.2.20 )
■Architectur eVision (see Part IV , Section 32.2.8 )
■Architectur eRepository (see Part IV , Section 32.2.5 ), including:
—R e-usable building blocks
—P ublicly available reference models
—O rganization-speciﬁc reference models
—O rganization standards
■Draft Architectur eDeﬁnition Document (see Part IV , Section 32.2.3 ), including:
—B aseline Business Architecture, Version 1.0 (detailed), if appropriate
—T arget Business Architecture, Version 1.0 (detailed)
—B aseline Data Architecture, Version 1.0 (detailed), or Version 0.1 (Vision)
—T arget Data Architecture, Version 1.0 (detailed), or Version 0.1 (Vision)
—B aseline Application Architecture, Version 0.1, if appropriate and if available
—T arget Application Architecture, Version 0.1, if available
—B aseline Technology Architecture, Version 0.1 (Vision)
—T arget Technology Architecture, Version 0.1 (Vision)
■Draft Architectur eRequirements Speciﬁcation (see Part IV , Section 32.2.6 ), including:
—G ap analysis results (from Business Architectur eand Data Architecture, if available)
—R elevant technical requirements that will apply to this phase
■Business and Data Ar chitectur ecomponents of an Ar chitectur eRoadmap, if available (see
Part IV , Section 32.2.7 )
110 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase C: Information Systems Ar chitectures — Application Ar chitectureS teps
10.3 Steps
The level of detail addressed in Phase C will depend on the scope and goals of the overall
architectur eeffort.
New application building blocks being introduced as part of this effort will need to be deﬁned in
detail during Phase C. Existing application building blocks to be carried over and supported in
the target environment may already have been adequately deﬁned in pr evious ar chitectural
work; but, if not, they too will need to be deﬁned in Phase C.
The order of the steps in this phase as well as the time at which they ar eformally started and
completed should be adapted to the situation at hand in accordance with the established
Architectur eGovernance. In particular ,determine whether in this situation it is appropriate to
conduct Baseline Description or T arget Ar chitectur edevelopment ﬁrst, as described in Part III,
Chapter 18 .
All activities that have been initiated in these steps should be closed during the Finalize the
Application Ar chitectur estep (see Section 10.3.8 ). The documentation generated from these
steps must be formally published in the Create the Ar chitectur eDeﬁnition Document step (see
Section 10.3.9 ).
The steps in Phase C (Application Architecture) ar ea sf ollows:
■Select reference models, viewpoints, and tools (see Section 10.3.1 )
■Develop Baseline Application Architectur eDescription (see Section 10.3.2 )
■Develop Target Application Architectur eDescription (see Section 10.3.3 )
■Perform gap analysis (see Section 10.3.4 )
■Deﬁne candidate roadmap components (see Section 10.3.5 )
■Resolve impacts across the Architectur eLandscape (see Section 10.3.6 )
■Conduct formal stakeholder review (see Section 10.3.7 )
■Finalize the Application Architectur e(seeSection 10.3.8 )
■Create the Architectur eDeﬁnition Document (see Section 10.3.9 )
10.3.1 Select Reference Models, Viewpoints, and Tools
Review and validate (or generate, if necessary) the set of application principles. These will
normally form part of an overarching set of Ar chitectur ePrinciples. Guidelines for developing
and applying principles, and a sample set of application principles, ar egiven in Part III,Chapter
20.
Select relevant Application Ar chitectur eresour ces (r eference models, patterns, etc.) from the
Architectur eRepository ,o nt he basis of the business drivers, the stakeholders, and their
concerns.
Select relevant Application Ar chitectur eviewpoints (for example, stakeholders of the
applications — viewpoints r elevant to functional and individual users of applications, etc.); i.e.,
those that will enable the architect to demonstrate how the stakeholder concerns ar ebeing
addressed in the Application Architecture.
Part II: Architecture De velopment Method (ADM) 111
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Steps Phase C: Information Systems Ar chitectures — Application Ar chitecture
Identify appr opriate tools and techniques to be used for capture, modeling, and analysis, in
association with the selected viewpoints. Depending on the degree of sophistication warranted,
these may comprise simple documents or spreadsheets, or mor esophisticated modeling tools
and techniques.
Consider using platform-independent descriptions of business logic. For example, the OMG
Model-Driven Ar chitecture®(MDA®)offers an approach to modeling Application Ar chitectures
that preserves the business logic fr om changes to the underlying platform and implementation
technology.
10.3.1.1 Determine Overall Modeling Process
For each viewpoint, select the models needed to support the speciﬁc view r equir ed, using the
selected tool or method.
Ensur ethat all stakeholder concerns ar ecover ed. If they ar enot, create new models to addr ess
concerns not covered, or augment existing models (see above).
The recommended process for developing an Application Architectur ei sa sf ollows:
■Understand the list of applications or application components that ar erequir ed, based on
the baseline Application Portfolio, what the r equir ements are, and the Business
Architectur escope
■Simplify complicated applications by decomposing them into two or mor eapplications
■Ensur ethat the set of application deﬁnitions is internally consistent, by removing duplicate
functionality as far as possible, and combining similar applications into one
■Identify logical applications and the most appropriate physical applications
■Develop matrices across the ar chitectur ebyrelating applications to business service,
business function, data, process, etc.
■Elaborate a set of Application Ar chitectur eviews by examining how the application will
function, capturing integration, migration, development, and operational concerns
The level and rigor of decomposition needed varies fr om enterprise to enterprise, as well as
within an enterprise, and the architect should consider the enterprise’s goals, objectives, scope,
and purpose of the Enterprise Architectur eeffort to determine the level of decomposition.
The level of granularity should be suf ﬁcient to enable identiﬁcation of gaps and the scope of
candidate work packages.
10.3.1.2 Identify Required Catalogs of Application Building Blocks
The organization’s Application Portfolio is captured as a catalog within the Ar chitecture
Repository .Catalogs ar ehierar chical in natur eand captur ead ecomposition of a metamodel
entity and also decompositions across related model entities (e.g., logical application component
→physical application component →information system service).
Catalogs form the raw material for development of matrices and diagrams and also act as a key
resource for managing the business and IT capability.
The str uctur eo fc atalogs is based on the attributes of metamodel entities, as deﬁned in Part IV ,
Chapter 30 .
112 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase C: Information Systems Ar chitectures — Application Ar chitectureS teps
The following catalogs should be consider ed for development within an Application
Architecture:
■Application Portfolio catalog
■Interface catalog
10.3.1.3 Identify Required Matrices
Matrices show the cor erelationships between related model entities.
Matrices form the raw material for development of diagrams and also act as a key r esour ce for
impact assessment.
Once the baseline Application Portfolio has been assembled, it is necessary to map the
applications to their purpose in supporting the business. The initial mapping should focus on
business services within the Business Ar chitectur e, as this is the level of granularity wher e
architecturally signiﬁcant decisions ar emost likely to be needed.
Once applications ar emapped to business services, it will also be possible to make associations
from applications to data, through the business-information diagrams developed during
Business Architecture.
If readily available, baseline application data models may be used to validate the Business
Architectur eand also to identify which data is held locally and which is accessed remotely.
The Data Ar chitectur ephase will focus on these issues, so at this point it may be appropriate to
drop into a short iteration of the Data Ar chitectur ei fi ti sd eemed to be valuable to the scope of
the architectur eengagement.
Using existing information in the baseline application catalog, the Application Ar chitecture
should identify user and or ganizational dependencies on applications. This activity will support
futur estate planning by determining impacted user communities and also facilitating the
grouping of applications by user type or user location.
Akey user community to be speciﬁcally consider ed is the operational support organization. This
activity should examine application dependencies on shared operations capabilities and
produce a diagram on how each application is effectively operated and managed.
Speciﬁcally considering the needs of the operational community may identify r equir ements for
new or extended governance capabilities and applications.
The following matrices should be consider ed for development within an Application
Architecture:
■Application/Organization matrix
■Role/Application matrix
■Application Interaction matrix
■Application/Function matrix
The str uctur eo fm atrices is based on the attributes of metamodel entities, as deﬁned in Part IV ,
Chapter 30 .
Part II: Architecture De velopment Method (ADM) 113
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Steps Phase C: Information Systems Ar chitectures — Application Ar chitecture
10.3.1.4 Identify Required Diagrams
Diagrams pr esent the Application Ar chitectur einformation from a set of dif ferent perspectives
(viewpoints) according to the requirements of the stakeholders.
Once the desired functionality of an application is known, it is necessary to perform an internal
assessment of how the application should be best structured to meet its requirements.
In the case of packaged applications, it is likely to be the case that the application supports a
number of conﬁguration options, add-on modules, or application services that may be applied
to the solution. For custom developed applications, it is necessary to identify the high-level
structur eo ft he application in terms of modules or subsystems as a foundation to or ganize
design activity.
The following diagrams should be consider ed for development within an Application
Architecture:
■Application Communication diagram
■Application and User Location diagram
■Enterprise Manageability diagram
■Process/Application Realization diagram
■Application Migration diagram
■Softwar eDistribution diagram
■Softwar eEngineering diagram
■Application Use-Case diagram
The str uctur eo fd iagrams is based on the attributes of metamodel entities, as deﬁned in Part IV ,
Chapter 30 .
10.3.1.5 Identify Types of Requirement to be Collected
Once the Application Ar chitectur ecatalogs, matrices, and diagrams have been developed,
architectur emodeling is completed by formalizing the application-focused r equir ements for
implementing the Target Architecture.
These requirements may:
■Relate to the application domain
■Provide requirements input into the Data and Technology Architectures
■Provide detailed guidance to be reﬂected during design and implementation to ensur ethat
the solution addresses the original architectur erequirements
Within this step, the architect should identify r equir ements that should be met by the
architectur e(seeSection 16.5.2 ).
114 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase C: Information Systems Ar chitectures — Application Ar chitectureS teps
10.3.2 Develop Baseline Application Architecture Description
Develop a Baseline Description of the existing Application Ar chitectur e, to the extent necessary
to support the T arget Application Ar chitectur e. The scope and level of detail to be deﬁned will
depend on the extent to which existing applications ar elikely to be carried over into the T arget
Application Ar chitectur e, and on whether Ar chitectur eDescriptions exist, as described in
Section 10.5 .Tothe extent possible, identify the relevant Application Ar chitectur ebuilding
blocks, drawing on the Ar chitectur eRepository (see Part V,Chapter 37 ). If not already existing
within the Ar chitectur eRepository ,deﬁne each application in line with the Application Portfolio
catalog (see Part IV , Chapter 30 ).
Wher enew ar chitectur emodels need to be developed to satisfy stakeholder concerns, use the
models identiﬁed within Step 1 as a guideline for cr eating new ar chitectur econtent to describe
the Baseline Architecture.
10.3.3 Develop Target Application Architecture Description
Develop a T arget Description for the Application Ar chitectur e, to the extent necessary to support
the Ar chitectur eVision, T arget Business Ar chitectur e, and T arget Data Ar chitectur e. The scope
and level of detail to be deﬁned will depend on the relevance of the application elements to
attaining the T arget Ar chitectur eVision, and on whether architectural descriptions exist. T othe
extent possible, identify the relevant Application Ar chitectur ebuilding blocks, drawing on the
Architectur eRepository (see Part V , Chapter 37 ).
Wher enew ar chitectur emodels need to be developed to satisfy stakeholder concerns, use the
models identiﬁed within Step 1 as a guideline for cr eating new ar chitectur econtent to describe
the Target Architecture.
10.3.4 Perform Gap Analysis
Verify the architectur emodels for internal consistency and accuracy:
■Perform trade-of fanalysis to resolve conﬂicts (if any) among the different views
■Validate that the models support the principles, objectives, and constraints
■Note changes to the viewpoint r epresented in the selected models fr om the Ar chitecture
Repository ,and document
■Test architectur emodels for completeness against requirements
Identify gaps between the baseline and tar get, using the gap analysis technique as described in
Part III, Chapter 23 .
10.3.5 Deﬁne Candidate Roadmap Components
Following the creation of a Baseline Ar chitectur e, Target Ar chitectur e, and gap analysis, an
application roadmap is required to prioritize activities over the coming phases.
This initial Application Ar chitectur eroadmap will be used as raw material to support mor e
detailed deﬁnition of a consolidated, cr oss-discipline roadmap within the Opportunities &
Solutions phase.
Part II: Architecture De velopment Method (ADM) 115
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Steps Phase C: Information Systems Ar chitectures — Application Ar chitecture
10.3.6 Resolve Impacts Across the Architecture Landscape
Once the Application Ar chitectur ei sﬁ nalized, it is necessary to understand any wider impacts
or implications.
At this stage, other ar chitectur eartifacts in the Ar chitectur eLandscape should be examined to
identify:
■Does this Application Architectur ecreate an impact on any pre-existing architectures?
■Have recent changes been made that impact the Application Architecture?
■Arethereany opportunities to leverage work from this Application Ar chitectur ei no ther
areas of the organization?
■Does this Application Ar chitectur eimpact other projects (including those planned as well
as those currently in progress)?
■Will this Application Ar chitectur eb ei mpacted by other projects (including those planned
as well as those currently in progress)?
10.3.7 Conduct Formal Stakeholder Review
Check the original motivation for the ar chitectur eproject and the Statement of Ar chitecture
Work against the proposed Application Ar chitectur e. Conduct an impact analysis, to identify
any areas wher ethe Business and Data Ar chitectur es (e.g., business practices) may need to
change to cater for changes in the Application Ar chitectur e(for example, changes to forms or
procedur es, applications, or database systems). If the impact is signiﬁcant, this may warrant the
Business and Data Architectures being revisited.
Identify any constraints on the T echnology Ar chitectur e(especially the infrastr uctur e) about to
be designed.
10.3.8 Finalize the Application Architecture
■Select standards for each of the building blocks, r e-using as much as possible from the
reference models selected from the Architectur eRepository
■Fully document each building block
■Conduct a ﬁnal cr oss-check of overall ar chitectur eagainst business r equirements;
document the rationale for building block decisions in the architectur edocument
■Document the ﬁnal requirements traceability report
■Document the ﬁnal mapping of the ar chitectur ewithin the Ar chitectur eRepository; fr om
the selected building blocks, identify those that might be re-used, and publish via the
Architectur eRepository
■Finalize all the work products, such as gap analysis
116 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase C: Information Systems Ar chitectures — Application Ar chitectureS teps
10.3.9 Create the Architecture Deﬁnition Document
■Document the rationale for building block decisions in the Ar chitectur eD eﬁnition
Document
■Prepar ethe Application Ar chitectur esections of the Ar chitectur eDeﬁnition Document; if
appr opriate, use r eports and/or graphics generated by modeling tools to demonstrate key
views of the ar chitectur e; route the document for r eview by relevant stakeholders, and
incorporate feedback
10.4 Outputs
The outputs of Phase C (Application Architecture) may include, but ar enot restricted to:
■Reﬁned and updated versions of the Ar chitectur eVision phase deliverables, wher e
applicable:
—S tatement of Architectur eWork (see Part IV , Section 32.2.20 ), updated if necessary
—V alidated application principles, or new application principles (if generated here)
■Draft Architectur eDeﬁnition Document (see Part IV , Section 32.2.3 ), including:
—B aseline Application Architecture, Version 1.0, if appropriate
—T arget Application Architecture, Version 1.0
—V iews corr esponding to the selected viewpoints, addressing key stakeholder
concerns
■Draft Ar chitectur eRequir ements Speciﬁcation (see Part IV ,Section 32.2.6 ), including such
Application Architectur erequirements as:
—G ap analysis results
—A pplications interoperability requirements
—R elevant technical r equir ements that will apply to this evolution of the ar chitecture
development cycle
—C onstraints on the Technology Architectur eabout to be designed
—U pdated business requirements, if appropriate
—U pdated data requirements, if appropriate
■Application Ar chitectur ecomponents of an Ar chitectur eRoadmap (see Part IV ,Section
32.2.7 )
The outputs may include some or all of the following:
■Catalogs:
—A pplication Portfolio catalog
—Interface catalog
■Matrices:
—A pplication/Organization matrix
—R ole/Application matrix
Part II: Architecture De velopment Method (ADM) 117
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Outputs Phase C: Information Systems Ar chitectures — Application Ar chitecture
—A pplication/Function matrix
—A pplication Interaction matrix
■Diagrams:
—A pplication Communication diagram
—A pplication and User Location diagram
—A pplication Use-Case diagram
—E nterprise Manageability diagram
—P rocess/Application Realization diagram
—S oftwar eEngineering diagram
—A pplication Migration diagram
—S oftwar eDistribution diagram
10.5 Approach
10.5.1 Architecture Repository
As part of this phase, the ar chitectur eteam will need to consider what relevant Application
Architectur eresources ar eavailable in the Architectur eRepository (see Part V , Chapter 37 ).
In particular:
■Generic business models relevant to the or ganization’s industry "vertical" sector; for
example:
—T he Object Management Group (OMG) — www.omg.org —has a number of vertical
Domain Task Forces developing softwar em odels r elevant to speciﬁc vertical
domains such as Healthcare, Transportation, Finance, etc.
—T he Open Group has developed a detailed application ar chitectur ereference model
for the IT segment of organizations (the IT4IT Reference Architecture)
—T he TM Forum — www.tmforum.org —has developed detailed applications models
relevant to the Telecommunications industry
■Application models r elevant to common high-level business functions, such as electr onic
commerce, supply chain management, etc.
The Open Gr oup has a Reference Model for Integrated Information Infrastr uctur e(III-RM) —
see the T OGAF®Series Guide: The TOGAF Integrated Information Infrastr uctur eReference
Model (III-RM) — that focuses on the application-level components and services necessary to
provide an integrated information infrastructure.
118 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 11
Phase D: Technology Architecture
This chapter describes the development of a Technology Architectur efor an architectur eproject.
G.
Implementation
GovernanceRequirements
Management
E.
Opportunities
and
SolutionsD.
Technology
ArchitectureB.
Business
Architecture
F.
Migration
PlanningA.
Architecture
Vision
H.
Architecture
Change
Management
C.
Information
Systems
ArchitecturesPreliminary
© The Open Group
Figure 11-1 Phase D: Technology Architecture
Part II: Architecture De velopment Method (ADM) 119
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Objectives Phase D: Technology Ar chitecture
11.1 Objectives
The objectives of Phase D ar eto:
■Develop the T arget Technology Ar chitectur ethat enables the Ar chitectur eVision, tar get
business, data, and application building blocks to be deliver ed through technology
components and technology services, in a way that addresses the Statement of
Architectur eWork and stakeholder concerns
■Identify candidate Ar chitectur eRoadmap components based upon gaps between the
Baseline and Target Technology Architectures
11.2 Inputs
This section deﬁnes the inputs to Phase D.
11.2.1 Reference Materials External to the Enterprise
■Architectur ereference materials (see Part IV , Section 32.2.5 )
■Product information on candidate products
11.2.2 Non-Architectural Inputs
■Request for Architectur eWork (see Part IV , Section 32.2.17 )
■Capability Assessment (see Part IV , Section 32.2.10 )
■Communications Plan (see Part IV , Section 32.2.12 )
11.2.3 Architectural Inputs
■Organizational Model for Enterprise Architectur e(see Part IV , Section 32.2.16 ), including:
—S cope of organizations impacted
—M aturity assessment, gaps, and resolution approach
—R oles and responsibilities for architectur eteam(s)
—C onstraints on architectur ework
—B udget requirements
—G overnance and support strategy
■Tailored Architectur eFramework (see Part IV , Section 32.2.21 ), including:
—T ailored architectur emethod
—T ailored architectur econtent (deliverables and artifacts)
—C onﬁgured and deployed tools
■Technology principles (see Part III, Section 20.6.4 ), if existing
120 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase D: Technology Ar chitectureI nputs
■Statement of Architectur eWork (see Part IV , Section 32.2.20 )
■Architectur eVision (see Part IV , Section 32.2.8 )
■Architectur eRepository (see Part IV , Section 32.2.5 ), including:
—R e-usable building blocks
—P ublicly available reference models
—O rganization-speciﬁc reference models
—O rganization standards
■Draft Architectur eDeﬁnition Document (see Part IV , Section 32.2.3 ), including:
—B aseline Business Architecture, Version 1.0 (detailed)
—T arget Business Architectur eVersion 1.0 (detailed)
—B aseline Data Architecture, Version 1.0 (detailed)
—T arget Data Architecture, Version 1.0 (detailed)
—B aseline Application Architecture, Version 1.0 (detailed)
—T arget Application Architecture, Version 1.0 (detailed)
—B aseline Technology Architecture, Version 0.1 (vision)
—T arget Technology Architecture, Version 0.1 (vision)
■Draft Architectur eRequirements Speciﬁcation (see Part IV , Section 32.2.6 ), including:
—G ap analysis results (from Business, Data, and Application Architectures)
—R elevant technical requirements from previous phases
■Business, Data, and Application Ar chitectur ecomponents of an Ar chitectur eRoadmap
(see Part IV , Section 32.2.7 )
11.3 Steps
The level of detail addressed in Phase D will depend on the scope and goals of the overall
architectur eeffort.
New technology building blocks being intr oduced as part of this effort will need to be deﬁned in
detail during Phase D. Existing technology building blocks to be supported in the tar get
envir onment may need to be redeﬁned in Phase D to ensur einteroperability and ﬁt-for -purpose
within this speciﬁc Technology Architecture.
The order of the steps in Phase D as well as the time at which they ar eformally started and
completed should be adapted to the situation at hand in accordance with the established
Architectur eGovernance. In particular ,determine whether in this situation it is appropriate to
conduct Baseline Description or T arget Ar chitectur edevelopment ﬁrst, as described in Part III,
Chapter 18 .
All activities that have been initiated in these steps should be closed during the Finalize the
Technology Ar chitectur estep (see Section 1 1.3.8 ). The documentation generated from these
steps must be formally published in the Create the Ar chitectur eDeﬁnition Document step (see
Section 11.3.9 ).
Part II: Architecture De velopment Method (ADM) 121
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Steps Phase D: Technology Ar chitecture
The steps in Phase D ar ea sf ollows:
■Select reference models, viewpoints, and tools (see Section 11.3.1 )
■Develop Baseline Technology Architectur eDescription (see Section 11.3.2 )
■Develop Target Technology Architectur eDescription (see Section 11.3.3 )
■Perform gap analysis (see Section 11.3.4 )
■Deﬁne candidate roadmap components (see Section 11.3.5 )
■Resolve impacts across the Architectur eLandscape (see Section 11.3.6 )
■Conduct formal stakeholder review (see Section 11.3.7 )
■Finalize the Technology Architectur e(seeSection 11.3.8 )
■Create the Architectur eDeﬁnition Document (see Section 11.3.9 )
11.3.1 Select Reference Models, Viewpoints, and Tools
Review and validate the set of technology principles. These will normally form part of an
overar ching set of Ar chitectur ePrinciples. Guidelines for developing and applying principles,
and a sample set of technology principles, ar egiven in Part III, Chapter 20 .
Select relevant Technology Ar chitectur eresour ces (r eference models, patterns, etc.) from the
Architectur eRepository (see Part V,Chapter 37 ,o np age 391), on the basis of the business
drivers, stakeholders, and their concerns.
Select relevant Technology Ar chitectur eviewpoints that will enable the architect to demonstrate
how the stakeholder concerns ar ebeing addressed in the Technology Architecture.
Identify appropriate tools and techniques to be used for capture, modeling, and analysis, in
association with the selected viewpoints. Depending on the degree of sophistication r equired,
these may comprise simple documents and spreadsheets, or mor esophisticated modeling tools
and techniques.
11.3.1.1 Determine Overall Modeling Process
For each viewpoint, select the models needed to support the speciﬁc view r equir ed, using the
selected tool or method. Ensur ethat all stakeholder concerns ar ecover ed. If they ar enot, cr eate
new models to address them, or augment existing models (see above).
The process to develop a Technology Architectur eincorporates the following steps:
■Deﬁne a taxonomy of technology services and logical technology components (including
standards)
■Identify relevant locations wher etechnology is deployed
■Carry out a physical inventory of deployed technology and abstract up to ﬁt into the
taxonomy
■Look at application and business requirements for technology
■Is the technology in place ﬁt-for -purpose to meet new r equir ements (i.e., does it meet
functional and non-functional requirements)?
122 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase D: Technology Ar chitectureS teps
—R eﬁne the taxonomy
—P roduct selection (including dependent products)
■Determine conﬁguration of the selected technology
■Determine impact:
—S izing and costing
—C apacity planning
—Installation/governance/migration impacts
In the earlier phases of the ADM, certain decisions made ar ound service granularity and service
boundaries will have implications on the technology component and the technology service. The
areas wher ethe Technology Architectur emay be impacted will include the following:
■Performance :the granularity of the service will impact on technology service r equirements
Coarse-grained services contain several units of functionality with potentially varying
non-functional r equir ements, so platform performance should be considered. In addition,
coarse-grained services can sometimes contain mor einformation than actually r equir ed by
the requesting system.
■Maintainability :i fs ervice granularity is too coarse, then introducing changes to that
service becomes difﬁcult and impacts the maintenance of the service and the platform on
which it is delivered
■Location and Latency :services might interact with each other over remote links and inter -
service communication will have in-built latency
Drawing service boundaries and setting the service granularity should consider
platform/location impact of these inter-service communications.
■Availability :service invocation is subject to network and/or service failure
So high communication availability is an important consideration during service
decomposition and deﬁning service granularity
Product selection pr ocesses may occur within the Technology Ar chitectur ephase wher eexisting
products ar ere-used, incremental capacity is being added, or product selection decisions ar ea
constraint during project initiation.
Wher eproduct selection deviates from existing standards, involves signiﬁcant ef fort, or has
wide-ranging impact, this activity should be ﬂagged as an opportunity and addressed thr ough
the Opportunities & Solutions phase.
11.3.1.2 Identify Required Catalogs of Technology Building Blocks
Catalogs ar einventories of the cor eassets of the business. Catalogs ar ehierar chical in natur eand
captur ead ecomposition of a metamodel entity and also decompositions acr oss related model
entities (e.g., technology service →logical technology component →physical technology
component).
Catalogs form the raw material for development of matrices and diagrams and also act as a key
resource for managing the business and IT capability.
Part II: Architecture De velopment Method (ADM) 123
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Steps Phase D: Technology Ar chitecture
The Technology Architectur eshould create technology catalogs as follows:
■Based on existing technology catalogs and analysis of applications carried out in the
Application Architectur ephase, collect a list of products in use
■If the r equir ements identiﬁed in the Application Ar chitectur eare n ot met by existing
products, extend the product list by examining pr oducts available on the market that
provide the functionality and meet the required standards
■Classify products against the selected taxonomy if appr opriate, extending the model as
necessary to ﬁt the classiﬁcation of technology products in use
■If technology standards ar ecurrently in place, apply these to the technology component
catalog to gain a baseline view of compliance with technology standards
The following catalogs should be considered for development within a T echnology Ar chitecture:
■Technology standards
■Technology portfolio
The str uctur eo fc atalogs is based on the attributes of metamodel entities, as deﬁned in Part IV ,
Chapter 30 .
11.3.1.3 Identify Required Matrices
Matrices show the cor erelationships between related model entities.
Matrices form the raw material for development of diagrams and also act as a key r esour ce for
impact assessment.
The following matrix should be considered for development within a Technology Architecture:
■Application/Technology matrix
11.3.1.4 Identify Required Diagrams
Diagrams present the T echnology Ar chitectur einformation from a set of dif ferent perspectives
(viewpoints) according to the requirements of the stakeholders.
This activity provides a link between platform r equir ements and hosting r equir ements, as a
single application may need to be physically located in several envir onments to support local
access, development lifecycles, and hosting requirements.
For major baseline applications or application platforms (wher emultiple applications ar ehosted
on the same infrastr uctur estack), pr oduce a stack diagram showing how har dwar e, operating
system, softwar einfrastructure, and packaged applications combine.
If appr opriate, extend the Application Ar chitectur ediagrams of softwar edistribution to show
how applications map onto the technology platform.
For each environment, produce a logical diagram of har dwar eand softwar einfrastructure
showing the contents of the envir onment and logical communications between components.
Wher eavailable, collect capacity information on the deployed infrastructure.
For each environment, produce a physical diagram of communications infrastr uctur e, such as
routers, switches, ﬁrewalls, and network links. Wher eavailable, collect capacity information on
the communications infrastructure.
124 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase D: Technology Ar chitectureS teps
The following diagrams should be consider ed for development within a T echnology
Architecture:
■Environments and Locations diagram
■Platform Decomposition diagram
■Processing diagram
■Networked Computing/Hardwar ediagram
■Network and Communications diagram
The str uctur eo fd iagrams is based on the attributes of metamodel entities, as deﬁned in Part IV ,
Chapter 30 .
11.3.1.5 Identify Types of Requirement to be Collected
Once the Technology Ar chitectur ecatalogs, matrices, and diagrams have been developed,
architectur emodeling is completed by formalizing the technology-focused r equir ements for
implementing the Target Architecture.
These requirements may:
■Relate to the technology domain
■Provide detailed guidance to be reﬂected during design and implementation to ensur ethat
the solution addresses the original architectur erequirements
Within this step, the ar chitect should identify r equir ements that should be met by the
architectur e(seeSection 16.5.2 ).
11.3.1.6 Select Services
The services portfolios ar ecombinations of basic services fr om the service categories in the
deﬁned taxonomy that do not conﬂict. The combination of services ar eagain tested to ensur e
support for the applications. This is a pr erequisite to the later step of deﬁning the ar chitecture
fully.
The previously identiﬁed requirements can provide mor edetailed information about:
■Requirements for organization-speciﬁc elements or pre-existing decisions (as applicable)
■Pre-existing and unchanging organizational elements (as applicable)
■Inherited external environment constraints
Wher erequir ements demand deﬁnition of specialized services that ar enot identiﬁed in the
TOGAF standar d, consideration should be given to how these might be replaced if standar dized
services become available in the future.
For each building block, build up a service description portfolio as a set of non-conﬂicting
services. The set of services must be tested to ensur ethat the functionality provided meets
application requirements.
Part II: Architecture De velopment Method (ADM) 125
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Steps Phase D: Technology Ar chitecture
11.3.2 Develop Baseline Technology Architecture Description
Develop a Baseline Description of the existing Technology Ar chitectur e, to support the T arget
Technology Ar chitectur e. The scope and level of detail to be deﬁned will depend on the extent to
which existing technology components ar elikely to be carried over into the T arget T echnology
Architecture, and on whether architectural descriptions exist, as described in Section 11.5 .
Identify the relevant Technology Ar chitectur ebuilding blocks, drawing on any artifacts held in
the Ar chitectur eRepository .I fn othing exists within the Ar chitectur eRepository ,deﬁne each
application in line with the Technology Portfolio catalog (see Part IV , Chapter 30 ).
Begin by converting the description of the existing environment into the terms of the
organization’s taxonomy of technology services and technology components (e.g., the T OGAF
TRM). This will allow the team developing the ar chitectur etog ain experience and
understanding of the taxonomy .The team may be able to take advantage of a pr evious
architectural deﬁnition, but it is assumed that some adaptation may be r equir ed to match the
architectural deﬁnition techniques described as part of this process. Another important task is to
set down a list of key questions which can be used later in the development process to measur e
the effectiveness of the new architecture.
Wher enew ar chitectur emodels need to be developed to satisfy stakeholder concerns, use the
models identiﬁed within Step 1 as a guideline for cr eating new ar chitectur econtent to describe
the Baseline Architecture.
11.3.3 Develop Target Technology Architecture Description
Develop a T arget Description for the Technology Ar chitectur e, to the extent necessary to support
the Ar chitectur eV ision, T arget Business Ar chitectur e, and T arget Information Systems
Architectur e. The scope and level of detail to be deﬁned will depend on the relevance of the
technology elements to attaining the T arget Ar chitectur e, and on whether ar chitectural
descriptions exist. T othe extent possible, identify the relevant Technology Ar chitectur ebuilding
blocks, drawing on the Architectur eRepository (see Part V , Chapter 37 ).
Ak ey process in the cr eation of a broad architectural model of the target system is the
conceptualization of building blocks. Ar chitectur eBuilding Blocks (ABBs) describe the
functionality and how they may be implemented without the detail intr oduced by conﬁguration
or detailed design. The method of deﬁning building blocks, along with some general guidelines
for their use in creating an architectural model, is described in Part IV , Section 33.3 .
Wher enew ar chitectur emodels need to be developed to satisfy stakeholder concerns, use the
models identiﬁed within Step 1 as a guideline for cr eating new ar chitectur econtent to describe
the Target Architecture.
11.3.4 Perform Gap Analysis
Verify the architectur emodels for internal consistency and accuracy:
■Perform trade-of fanalysis to resolve conﬂicts (if any) among the different views
■Validate that the models support the principles, objectives, and constraints
■Note changes to the viewpoint r epresented in the selected models from the Ar chitecture
Repository ,and document
126 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase D: Technology Ar chitectureS teps
■Test architectur emodels for completeness against requirements
Identify gaps between the baseline and tar get, using the gap analysis technique as described in
Part III, Chapter 23 .
11.3.5 Deﬁne Candidate Roadmap Components
Following the cr eation of a Baseline Ar chitectur e, Target Ar chitectur e, and gap analysis, a
Technology Roadmap is required to prioritize activities over the coming phases.
This initial Technology Ar chitectur eroadmap will be used as raw material to support mor e
detailed deﬁnition of a consolidated, cr oss-discipline roadmap within the Opportunities &
Solutions phase.
11.3.6 Resolve Impacts Across the Architecture Landscape
Once the Technology Ar chitectur ei sﬁ nalized, it is necessary to understand any wider impacts
or implications.
At this stage, other ar chitectur eartifacts in the Ar chitectur eLandscape should be examined to
identify:
■Does this Technology Architectur ecreate an impact on any pre-existing architectures?
■Have recent changes been made that impact the Technology Architecture?
■Arethereany opportunities to leverage work from this Technology Ar chitectur ei no ther
areas of the organization?
■Does this T echnology Ar chitectur eimpact other projects (including those planned as well
as those currently in progress)?
■Will this Technology Ar chitectur eb ei mpacted by other projects (including those planned
as well as those currently in progress)?
11.3.7 Conduct Formal Stakeholder Review
Check the original motivation for the ar chitectur eproject and the Statement of Ar chitecture
Work against the pr oposed Technology Ar chitectur e, asking if it is ﬁt for the purpose of
supporting subsequent work in the other ar chitectur edomains. Reﬁne the proposed T echnology
Architectur eonly if necessary.
11.3.8 Finalize the Technology Architecture
■Select standards for each of the building blocks, r e-using as much as possible from the
reference models selected from the Architectur eRepository
■Fully document each building block
■Conduct a ﬁnal cross-check of overall ar chitectur eagainst business goals; document the
rationale for building block decisions in the architectur edocument
■Document the ﬁnal requirements traceability report
Part II: Architecture De velopment Method (ADM) 127
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Steps Phase D: Technology Ar chitecture
■Document the ﬁnal mapping of the ar chitectur ewithin the Ar chitectur eRepository; fr om
the selected building blocks, identify those that might be re-used (working practices, r oles,
business relationships, job descriptions, etc.), and publish via the Architectur eRepository
■Finalize all the work products, such as gap analysis
11.3.9 Create the Architecture Deﬁnition Document
Document the rationale for building block decisions in the Architectur eDeﬁnition Document.
Prepar ethe technology sections of the Ar chitectur eDeﬁnition Document, comprising some or all
of:
■Fundamental functionality and attributes — semantic, unambiguous including security
capability and manageability
■Dependent building blocks with required functionality and named interfaces
■Interfaces — chosen set, supplied (APIs, data formats, pr otocols, har dwar einterfaces,
standards)
■Map to business/organizational entities and policies
If appropriate, use r eports and/or graphics generated by modeling tools to demonstrate key
views of the ar chitectur e. Route the document for review by relevant stakeholders, and
incorporate feedback.
11.4 Outputs
The outputs of Phase D may include, but ar enot restricted to:
■Reﬁned and updated versions of the Ar chitectur eVision phase deliverables, wher e
applicable:
—S tatement of Architectur eWork (see Part IV , Section 32.2.20 ), updated if necessary
—V alidated technology principles, or new technology principles (if generated here)
■Draft Architectur eDeﬁnition Document (see Part IV , Section 32.2.3 ), including:
—T arget Technology Architecture, Version 1.0 (detailed), including:
—T echnology Components and their relationships to information systems
—T echnology platforms and their decomposition, showing the combinations of
technology required to realize a particular technology "stack"
—E nvironments and locations — a gr ouping of the r equir ed technology into
computing environments (e.g., development, production)
—E xpected processing load and distribution of load acr oss technology
components
—P hysical (network) communications
—H ardwar eand network speciﬁcations
128 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase D: Technology Ar chitectureO utputs
—B aseline Technology Architecture, Version 1.0 (detailed), if appropriate
—V iews corresponding to the selected viewpoints addr essing key stakeholder concerns
■Draft Ar chitectur eRequir ements Speciﬁcation (see Part IV ,Section 32.2.6 ), including such
Technology Architectur erequirements as:
—G ap analysis results
—R equirements output from Phases B and C
—U pdated technology requirements
■Technology Ar chitectur ecomponents of an Ar chitectur eRoadmap (see Part IV ,Section
32.2.7 )
The outputs may include some or all of the following:
■Catalogs:
—T echnology Standards catalog
—T echnology Portfolio catalog
■Matrices:
—A pplication/Technology matrix
■Diagrams:
—E nvironments and Locations diagram
—P latform Decomposition diagram
—P rocessing diagram
—N etworked Computing/Hardwar ediagram
—N etwork and Communications diagram
11.5 Approach
11.5.1 Emerging Technologies
The evolution of new technologies is a major driver for change in enterprises looking for new
innovative ways of operating and improving their business. The T echnology Ar chitectur eneeds
to captur ethe transformation opportunities available to the enterprise through the adoption of
new technology.
While the Enterprise Ar chitectur ei sl ed by the business concerns, drivers for change ar eoften
found within evolving technology capabilities. As mor edigital innovations reach the market,
stakeholders need to both anticipate and be open to technology-driven change. Part of Digital
Transformation has arisen due to the conver gence of telecommunications and computer
capabilities which have opened up new ways of implementing infrastructures.
Solution development methods ar ealso evolving to challenge traditional development methods
and putting pr essur eo nt he shared services and common use beneﬁts of the traditional
Enterprise Ar chitectur eapproach. Yet without a str ong Enterprise Ar chitectur eapproach, the
rapid adoption of changing technologies will cause discontinuities across the enterprise.
Part II: Architecture De velopment Method (ADM) 129
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ApproachP hase D: Technology Ar chitecture
The ﬂexibility of the T OGAF ADM enables technology change to become a driver and strategic
resour ce rather than a recipient of Change Requests. As a result, the T echnology Ar chitecture
may both drive business capabilities and r espond to information system r equir ements at the
same time.
11.5.2 Architecture Repository
As part of Phase D, the ar chitectur eteam will need to consider what relevant T echnology
Architectur eresources ar eavailable in the Architectur eRepository (see Part V , Chapter 37 ).
In particular:
■Existing IT services as documented in the IT repository or IT service catalog
■The adopted technical reference model, if applicable
■Generic technology models relevant to the or ganization’s industry "vertical" sector; for
example:
—T he TM Forum — www.tmforum.org —h as developed detailed technology models
relevant to the Telecommunications industry
■Technology models relevant to Common Systems Architectures
—T he Open Group has a Refer ence Model for Integrated Information Infrastr ucture
(III-RM) — see the T OGAF®Series Guide: The TOGAF Integrated Information
Infrastructur eReference Model (III-RM) — that focuses on the application-level
components and underlying services necessary to provide an integrated information
infrastructure
130 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 12
Phase E: Opportunities & Solutions
This chapter describes the pr ocess of identifying delivery vehicles (projects, programs, or portfolios) that
effectively deliver the Target Architectur eidentiﬁed in previous phases.
G.
Implementation
GovernanceRequirements
Management
E.
Opportunities
and
SolutionsD.
Technology
ArchitectureB.
Business
Architecture
F.
Migration
PlanningA.
Architecture
Vision
H.
Architecture
Change
Management
C.
Information
Systems
ArchitecturesPreliminary
© The Open Group
Figure 12-1 Phase E: Opportunities & Solutions
Part II: Architecture De velopment Method (ADM) 131
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Objectives Phase E: Opportunities & Solutions
12.1 Objectives
The objectives of Phase E ar eto:
■Generate the initial complete version of the Ar chitectur eRoadmap, based upon the gap
analysis and candidate Architectur eRoadmap components from Phases B, C, and D
■Determine whether an incremental approach is r equir ed, and if so identify T ransition
Architectures that will deliver continuous business value
■Deﬁne the overall solution building blocks to ﬁnalize the T arget Ar chitectur ebased on the
Architectur eBuilding Blocks (ABBs)
12.2 Inputs
This section deﬁnes the inputs to Phase E.
12.2.1 Reference Materials External to the Enterprise
■Architectur ereference materials (see Part IV , Section 32.2.5 )
■Product information
12.2.2 Non-Architectural Inputs
■Request for Architectur eWork (see Part IV , Section 32.2.17 )
■Capability Assessment (see Part IV , Section 32.2.10 )
■Communications Plan (see Part IV , Section 32.2.12 )
■Planning methodologies
12.2.3 Architectural Inputs
■Organizational Model for Enterprise Architectur e(see Part IV , Section 32.2.16 ), including:
—S cope of organizations impacted
—M aturity assessment, gaps, and resolution approach
—R oles and responsibilities for architectur eteam(s)
—C onstraints on architectur ework
—B udget requirements
—G overnance and support strategy
■Governance models and frameworks for:
—C orporate Business Planning
—E nterprise Architecture
—P ortfolio, Program, Project Management
132 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase E: Opportunities & Solutions Inputs
—S ystem Development/Engineering
—O perations (Service)
■Tailored Architectur eFramework (see Part IV , Section 32.2.21 ), including:
—T ailored architectur emethod
—T ailored architectur econtent (deliverables and artifacts)
—C onﬁgured and deployed tools
■Statement of Architectur eWork (see Part IV , Section 32.2.20 )
■Architectur eVision (see Part IV , Section 32.2.8 )
■Architectur eRepository (see Part IV , Section 32.2.5 ), including:
—R e-usable building blocks
—P ublicly available reference models
—O rganization-speciﬁc reference models
—O rganization standards
■Draft Architectur eDeﬁnition Document (see Part IV , Section 32.2.3 ), including:
—B aseline Business Architecture, Version 1.0 (detailed)
—T arget Business Architecture, Version 1.0 (detailed)
—B aseline Data Architecture, Version 1.0 (detailed)
—T arget Data Architecture, Version 1.0 (detailed)
—B aseline Application Architecture, Version 1.0 (detailed)
—T arget Application Architecture, Version 1.0 (detailed)
—B aseline Technology Architecture, Version 1.0 (detailed)
—T arget Technology Architecture, Version 1.0 (detailed)
■Draft Architectur eRequirements Speciﬁcation (see Part IV , Section 32.2.6 ), including:
—A rchitectural requirements
—G ap analysis results (from Business, Data, Application, and Technology Ar chitecture)
—ITService Management requirements
■Change Requests for existing business programs and projects (see Part IV , Section 32.2.11 )
■Candidate Architectur eRoadmap components from Phases B, C, and D
12.3 Steps
The level of detail addr essed in Phase E will depend on the scope and goals of the overall
architectur eeffort.
The order of the steps in Phase E as well as the time at which they ar eformally started and
completed should be adapted to the situation at hand in accordance with the established
Architectur eGovernance.
All activities that have been initiated in these steps must be closed during the Cr eate the
Architectur eRoadmap & Implementation and Migration Plan step (see Section 12.3.11 ).
Part II: Architecture De velopment Method (ADM) 133
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Steps Phase E: Opportunities & Solutions
The steps in Phase E ar ea sf ollows:
■Determine/conﬁrm key corporate change attributes (see Section 12.3.1 )
■Determine business constraints for implementation (see Section 12.3.2 )
■Review and consolidate gap analysis results from Phases B to D (see Section 12.3.3 )
■Review consolidated requirements across related business functions (see Section 12.3.4 )
■Consolidate and reconcile interoperability requirements (see Section 12.3.5 )
■Reﬁne and validate dependencies (see Section 12.3.6 )
■Conﬁrm readiness and risk for business transformation (see Section 12.3.7 )
■Formulate Implementation and Migration Strategy (see Section 12.3.8 )
■Identify and group major work packages (see Section 12.3.9 )
■Identify Transition Architectures (see Section 12.3.10 )
■Create the Ar chitectur eRoadmap & Implementation and Migration Plan (see Section
12.3.11 )
12.3.1 Determine/Conﬁrm Key Corporate Change Attributes
This step determines how the Enterprise Ar chitectur ecan be best implemented to take
advantage of the organization’s business cultur e. This should include the creation of an
Implementation Factor Assessment and Deduction matrix (see Part III,Section 24.1 )t os erve as a
repository for ar chitectur eimplementation and migration decisions. The step also includes
assessments of the transition capabilities of the organization units involved (including cultur e
and abilities), and assessments of the enterprise (including cultur eand skill sets).
The resulting factors from the assessments should be documented in the Implementation Factor
Assessment and Deduction matrix. For or ganizations wher eEnterprise Ar chitectur ei sw ell
established, this step can be simple, but the matrix has to be established so that it can be used as
an archive and recor do fd ecisions taken.
12.3.2 Determine Business Constraints for Implementation
Identify any business drivers that would constrain the sequence of implementation. This should
include a review of the business and strategic plans, at both a corporate and line-of-business
level, and a review of the Enterprise Architectur eMaturity Assessment.
12.3.3 Review and Consolidate Gap Analysis Results from Phases B to D
Consolidate and integrate the gap analysis results from the Business, Information Systems, and
Technology Ar chitectur es (created in Phases B to D) and assess their implications with r espect to
potential solutions and inter-dependencies. This should be done by cr eating a Consolidated
Gaps, Solutions, and Dependencies matrix, as shown in Part III,Section 24.2 ,which will enable
the identiﬁcation of Solution Building Blocks (SBBs) that could potentially address one or mor e
gaps and their associated ABBs.
Review the Phase B, C, and D gap analysis r esults and consolidate them in a single list. The gaps
should be consolidated along with potential solutions to the gaps and dependencies. A
recommended technique for determining the dependencies is to use sets of views such as the
134 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase E: Opportunities & Solutions Steps
Business Interaction matrix, the Data Entity/Business Function matrix, and the
Application/Function matrix to completely relate elements from dif ferent architectural domains.
Rationalize the Consolidated Gaps, Solutions, and Dependencies matrix. Once all of the gaps
have been documented, r e-organize the gap list and place similar items together .When
grouping the gaps, refer to the Implementation Factor Assessment and Deduction matrix and
review the implementation factors. Any additional factors should be added to the
Implementation Factor Assessment and Deduction matrix.
12.3.4 Review Consolidated Requirements Across Related Business Functions
Assess the r equir ements, gaps, solutions, and factors to identify a minimal set of r equirements
whose integration into work packages would lead to a mor eefﬁcient and ef fective
implementation of the T arget Ar chitectur eacross the business functions that ar eparticipating in
the ar chitectur e. This functional perspective leads to the satisfaction of multiple r equirements
through the provision of shar ed solutions and services. The implications of this consolidation of
requirements with respect to architectural components can be signiﬁcant with r espect to the
provision of r esour ces. For example, several r equir ements raised by several lines of business can
be resolved through the provision of a shared set of Business Services and Information System
Services within a work package or project.
12.3.5 Consolidate and Reconcile Interoperability Requirements
Consolidate the interoperability r equir ements identiﬁed in pr evious phases. The Ar chitecture
Vision and T arget Ar chitectur es, as well as the Implementation Factor Assessment and
Deduction matrix and Consolidated Gaps, Solutions, and Dependencies matrix, should be
consolidated and reviewed to identify any constraints on inter operability r equir ed by the
potential set of solutions.
Akey outcome is to minimize interoperability conﬂicts, or to ensur esuch conﬂicts ar eaddressed
in the ar chitectur e. Re-used SBBs, Commer cial Off-The-Shelf (COTS) products, and thir d-party
service providers typically impose interoperability r equir ements that conﬂict. Any such conﬂicts
must be addressed in the ar chitectur e, and conﬂicts must be considered across all ar chitecture
domains (Business, Applications, Data, and Technology).
Ther eare two basic approaches to inter operability conﬂicts; either create a building block that
transforms or translates between conﬂicting building blocks, or make a change to the
speciﬁcation of the conﬂicting building blocks.
12.3.6 Reﬁne and Validate Dependencies
Reﬁne the initial dependencies, ensuring that any constraints on the Implementation and
Migration Plans ar eidentiﬁed. Ther eare several key dependencies that should be taken into
account, such as dependencies on existing implementations of Business Services and
Information System Services or changes to them. Dependencies should be used for determining
the sequence of implementation and identifying the co-or dination r equir ed. A study of the
dependencies should group activities together ,creating a basis for pr ojects to be established.
Examine the relevant pr ojects and see whether logical increments of deliverables can be
identiﬁed. The dependencies will also help to identify when the identiﬁed increments can be
deliver ed. Once ﬁnished, an assessment of these dependencies should be documented as part of
the Architectur eRoadmap and any necessary Transition Architectures.
Addressing dependencies serves as the basis for most migration planning.
Part II: Architecture De velopment Method (ADM) 135
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Steps Phase E: Opportunities & Solutions
12.3.7 Conﬁrm Readiness and Risk for Business Transformation
Review the ﬁndings of the Business T ransformation Readiness Assessment pr eviously
conducted in Phase A and determine their impact on the Ar chitectur eRoadmap and the
Implementation and Migration Strategy .I ti si mportant to identify ,classify ,and mitigate risks
associated with the transformation ef fort. Risks should be documented in the Consolidated
Gaps, Solutions, and Dependencies matrix.
12.3.8 Formulate Implementation and Migration Strategy
Create an overall Implementation and Migration Strategy that will guide the implementation of
the T arget Ar chitectur e, and str uctur eany Transition Ar chitectur es. The ﬁrst activity is to
determine an overall strategic appr oach to implementing the solutions and/or exploiting
opportunities. Ther eare three basic approaches as follows:
■Greenﬁeld: a completely new implementation
■Revolutionary: a radical change (i.e., switch on, switch off)
■Evolutionary: a strategy of convergence, such as parallel r unning or a phased approach to
introduce new capabilities
Next, determine an approach for the overall strategic direction that will address and mitigate the
risks identiﬁed in the Consolidated Gaps, Solutions, and Dependencies matrix. The most
common implementation methodologies are:
■Quick win (snapshots)
■Achievable targets
■Value chain method
These approaches and the identiﬁed dependencies should become the basis for the cr eation of
the work packages. This activity terminates with agreement on the Implementation and
Migration Strategy for the enterprise.
12.3.9 Identify and Group Major Work Packages
Key stakeholders, planners, and the Enterprise Ar chitects should assess the missing business
capabilities identiﬁed in the Architectur eVision and Target Architecture.
Using the Consolidated Gaps, Solutions, and Dependencies matrix together with the
Implementation Factor Assessment and Deduction matrix, logically gr oup the various activities
into work packages.
Fill in the "Solution" column in the Consolidated Gaps, Solutions, and Dependencies matrix to
recommend the proposed solution mechanisms. Indicate for every gap/activity whether the
solution should be oriented towar ds a new development, or be based on an existing pr oduct,
and/or use a solution that can be purchased. An existing system may resolve the r equirement
with minor enhancements. For new development this is a good time to determine whether the
work should be conducted in-house or through a contract.
Classify every current system that is under consideration as:
■Mainstream: part of the futur einformation system
136 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase E: Opportunities & Solutions Steps
■Contain: expected to be replaced or modiﬁed in the planning horizon (next three years)
■Replace: to be replaced in the planning horizon
Supporting top-level work packages should then in turn be decomposed into incr ements to
deliver the capability increments. Analyze and r eﬁne these work packages or increments with
respect to their business transformation issues and the strategic implementation appr oach.
Finally ,group the work packages into portfolios and pr ojects within a portfolio, taking into
consideration the dependencies and the strategic implementation approach.
12.3.10 Identify Transition Architectures
Wher ethe scope of change to implement the T arget Ar chitectur erequir es an incr emental
appr oach, then one or mor eTransition Ar chitectur es may be necessary .These provide an ability
to identify clear targets along the r oadmap to realizing the T arget Ar chitectur e. The T ransition
Architectur es should provide measurable business value. The time-span between successive
Transition Architectures does not have to be of uniform duration.
Development of Transition Ar chitectur es must be based upon the pr eferr ed implementation
appr oach, the Consolidated Gaps, Solutions, and Dependencies matrix, the listing of pr ojects
and portfolios, as well as the enterprise’s capacity for creating and absorbing change.
Determine wher ethe difﬁcult activities are, and unless ther eare compelling reasons, implement
them after other activities that most easily deliver missing capability.
12.3.1 1C reate the Architecture Roadmap & Implementation and Migration Plan
Consolidate the work packages and T ransition Ar chitectur es into the Ar chitectur eRoadmap,
Version 0.1, which describes a timeline of the pr ogression from the Baseline Ar chitectur et ot he
Target Ar chitectur e. The timeline informs the Implementation and Migration Plan. The
Architectur eRoadmap frames the migration planning in Phase F .Identiﬁed T ransition
Architectur es and work packages should have a clear set of outcomes. The Ar chitecture
Roadmap must demonstrate how the selection and timeline of T ransition Ar chitectur es and
work packages realizes the Target Architecture.
The detail of the Ar chitectur eRoadmap, Version 0.1 should be expr essed at a similar level of
detail to the Ar chitectur eDeﬁnition Document developed in Phases B, C, and D. Wher e
signiﬁcant additional detail is r equir ed befor eimplementation the ar chitectur ei sl ikely
transitioning to a dif ferent level. See Part III,Chapter 18 and Chapter 19 for techniques to
manage iteration and different levels of detail.
The Implementation and Migration Plan must demonstrate the activity necessary to realize the
Architectur eRoadmap. The Implementation and Migration Plan forms the basis of the migration
planning in Phase F .The detail of the Implementation and Migration Plan, Version 0.1 must be
aligned to the detail of the Ar chitectur eRoadmap and be suf ﬁcient to identify the necessary
projects and resource requirements to realize the roadmap.
When creating the Implementation and Migration Plan ther eare m any approaches to consider ,
such as a data-driven sequence, wher eapplication systems that cr eate data ar eimplemented
ﬁrst, then applications that process the data. A clear understanding of the dependencies and
lifecycle of in-place SBBs is required for an effective Implementation and Migration Plan.
Finally ,update the Ar chitectur eVision, Ar chitectur eDeﬁnition Document, and Ar chitecture
Requirements Speciﬁcation with any additional relevant outcomes from this phase.
Part II: Architecture De velopment Method (ADM) 137
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Outputs Phase E: Opportunities & Solutions
12.4 Outputs
The outputs of Phase E may include, but ar enot restricted to:
■Reﬁned and updated version of the Ar chitectur eVision phase deliverables, wher e
applicable, including:
—A rchitectur eVision, including deﬁnition of types and degrees of interoperability
—S tatement of Architectur eWork (see Part IV , Section 32.2.20 ), updated if necessary
■Draft Architectur eDeﬁnition Document (see Part IV , Section 32.2.3 ), including:
—B aseline Business Architecture, Version 1.0 updated if necessary
—T arget Business Architecture, Version 1.0 updated if necessary
—B aseline Data Architecture, Version 1.0 updated if necessary
—T arget Data Architecture, Version 1.0 updated if necessary
—B aseline Application Architecture, Version 1.0 updated if necessary
—T arget Application Architecture, Version 1.0 updated if necessary
—B aseline Technology Architecture, Version 1.0 updated if necessary
—T arget Technology Architecture, Version 1.0 updated if necessary
—T ransition Architecture, number and scope as necessary
—V iews corresponding to the selected viewpoints addr essing key stakeholder concerns
■Draft Architectur eRequirements Speciﬁcation (see Part IV , Section 32.2.6 ), including:
—C onsolidated Gaps, Solutions, and Dependencies Assessment
■Capability Assessments, including:
—B usiness Capability Assessment
—ITCapability Assessment
■Architectur eRoadmap (see Part IV , Section 32.2.7 ), including:
—W ork package portfolio:
—W ork package description (name, description, objectives)
—F unctional requirements
—D ependencies
—R elationship to opportunity
—R elationship to Ar chitectur eD eﬁnition Document and Ar chitecture
Requirements Speciﬁcation
—R elationship to any capability increments
—B usiness value
—Implementation Factor Assessment and Deduction Matrix
—Impact
138 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase E: Opportunities & Solutions Outputs
—Identiﬁcation of Transition Architectures, if any ,including:
—R elationship to Architectur eDeﬁnition Document
—Implementation recommendations:
—C riteria measures of effectiveness
—R isks and issues
—S olution Building Blocks (SBBs)
■Implementation and Migration Plan, Version 0.1, including:
—Implementation and Migration Strategy
The outputs may include some or all of the following:
■Diagrams:
—P roject Context diagram
—B eneﬁts diagram
12.5 Approach
Phase E concentrates on how to deliver the ar chitectur e. It takes into account the complete set of
gaps between the T arget and Baseline Ar chitectur es in all ar chitectur edomains, and logically
groups changes into work packages within the enterprise’s portfolios. This is an ef fort to build a
best-ﬁt r oadmap that is based upon the stakeholder r equir ements, the enterprise’s business
transformation readiness, identiﬁed opportunities and solutions, and identiﬁed implementation
constraints. The key is to focus on the ﬁnal target while realizing incremental business value.
Phase E is the initial step on the creation of the Implementation and Migration Plan which is
completed in Phase F .I tp rovides the basis of a well consider ed Implementation and Migration
Plan that is integrated into the enterprise’s portfolio in Phase F.
The following four concepts ar ekey to transitioning from developing to delivering a T arget
Architecture:
■Architectur eRoadmap
■Work Packages
■Transition Architectures
■Implementation and Migration Plan
The Ar chitectur eRoadmap lists individual work packages in a timeline that will r ealize the
Target Architecture.
Each work package identiﬁes a logical group of changes necessary to realize the T arget
Architecture.
ATransition Ar chitectur edescribes the enterprise at an architecturally signiﬁcant state between
the Baseline and T arget Ar chitectur es. Transition Ar chitectur es provide interim T arget
Architectures upon which the organization can converge.
The Implementation and Migration Plan provides a schedule of the projects that will realize the
Target Architecture.
Part II: Architecture De velopment Method (ADM) 139
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase E: Opportunities & Solutions
140 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 13
Phase F: Migration Planning
This chapter addresses migration planning; that is, how to move fr om the Baseline to the T arget
Architectures by ﬁnalizing a detailed Implementation and Migration Plan.
G.
Implementation
GovernanceRequirements
Management
E.
Opportunities
and
SolutionsD.
Technology
ArchitectureB.
Business
Architecture
F.
Migration
PlanningA.
Architecture
Vision
H.
Architecture
Change
Management
C.
Information
Systems
ArchitecturesPreliminary
© The Open Group
Figure 13-1 Phase F: Migration Planning
Part II: Architecture De velopment Method (ADM) 141
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Objectives Phase F: Migration Planning
13.1 Objectives
The objectives of Phase F ar eto:
■Finalize the Ar chitectur eRoadmap and the supporting Implementation and Migration
Plan
■Ensur ethat the Implementation and Migration Plan is co-ordinated with the enterprise’s
appr oach to managing and implementing change in the enterprise’s overall change
portfolio
■Ensur ethat the business value and cost of work packages and Transition Ar chitectur es is
understood by key stakeholders
13.2 Inputs
This section deﬁnes the inputs to Phase F.
13.2.1 Reference Materials External to the Enterprise
■Architectur ereference materials (see Part IV , Section 32.2.5 )
13.2.2 Non-Architectural Inputs
■Request for Architectur eWork (see Part IV , Section 32.2.17 )
■Capability Assessment (see Part IV , Section 32.2.10 )
■Communications Plan (see Part IV , Section 32.2.12 )
13.2.3 Architectural Inputs
■Organizational Model for Enterprise Architectur e(see Part IV , Section 32.2.16 ), including:
—S cope of organizations impacted
—M aturity assessment, gaps, and resolution approach
—R oles and responsibilities for architectur eteam(s)
—C onstraints on architectur ework
—B udget requirements
—G overnance and support strategy
■Governance models and frameworks for:
—C orporate Business Planning
—E nterprise Architecture
—P ortfolio, Program, Project Management
142 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase F: Migration Planning Inputs
—S ystem Development/Engineering
—O perations (Service)
■Tailored Architectur eFramework (see Part IV , Section 32.2.21 ), including:
—T ailored architectur emethod
—T ailored architectur econtent (deliverables and artifacts)
—C onﬁgured and deployed tools
■Statement of Architectur eWork (see Part IV , Section 32.2.20 )
■Architectur eVision (see Part IV , Section 32.2.8 )
■Architectur eRepository (see Part IV , Section 32.2.5 ), including:
—R e-usable building blocks
—P ublicly available reference models
—O rganization-speciﬁc reference models
—O rganization standards
■Draft Architectur eDeﬁnition Document (see Part IV , Section 32.2.3 ), including:
—B aseline Business Architecture, Version 1.0 (detailed)
—T arget Business Architecture, Version 1.0 (detailed)
—B aseline Data Architecture, Version 1.0 (detailed)
—T arget Data Architecture, Version 1.0 (detailed)
—B aseline Application Architecture, Version 1.0 (detailed)
—T arget Application Architecture, Version 1.0 (detailed)
—B aseline Technology Architecture, Version 1.0 (detailed)
—T arget Technology Architecture, Version 1.0 (detailed)
—T ransition Architectures, if any
■Draft Architectur eRequirements Speciﬁcation (see Part IV , Section 32.2.6 ), including:
—A rchitectural requirements
—G ap analysis results (from Business, Data, Application, and Technology Ar chitecture)
—ITService Management requirements
■Change Requests for existing business programs and projects (see Part IV , Section 32.2.11 )
■Architectur eRoadmap, Version 0.1 (see Part IV , Section 32.2.7 ), including:
—Identiﬁcation of work packages
—Identiﬁcation of Transition Architectures
—Implementation Factor Assessment and Deduction Matrix
Part II: Architecture De velopment Method (ADM) 143
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Inputs Phase F: Migration Planning
■Capability Assessment (see Part IV , Section 32.2.10 ), including:
—B usiness Capability Assessment
—ITCapability Assessment
■Implementation and Migration Plan, Version 0.1 (see Part IV ,Section 32.2.14 )including the
high-level Implementation and Migration Strategy
13.3 Steps
The level of detail addr essed in Phase F will depend on the scope and goals of the overall
architectur eeffort.
The order of the steps in Phase F as well as the time at which they ar eformally started and
completed should be adapted to the situation at hand in accordance with the established
Architectur eGovernance.
All activities that have been initiated in these steps must be closed during the "Complete the
architectur edevelopment cycle and document lessons learned step" (see Section 13.3.7 ).
The steps in Phase F ar ea sf ollows:
■Conﬁrm management framework interactions for Implementation and Migration Plan (see
Section 13.3.1 )
■Assign a business value to each work package (see Section 13.3.2 )
■Estimate r esour ce requir ements, project timings, and availability/delivery vehicle (see
Section 13.3.3 )
■Prioritize the migration projects thr ough the conduct of a cost/beneﬁt assessment and risk
validation (see Section 13.3.4 )
■Conﬁrm Ar chitectur eRoadmap and update Ar chitectur eDeﬁnition Document (see Section
13.3.5 )
■Complete the Implementation and Migration Plan (see Section 13.3.6 )
■Complete the ar chitectur edevelopment cycle and document lessons learned (see Section
13.3.7 )
13.3.1 Conﬁrm Management Framework Interactions for the Implementation and
Migration Plan
This step is about co-ordinating the Implementation and Migration Plan with the management
frameworks within the organization. Ther eare typically four management frameworks that
have to work closely together for the Implementation and Migration Plan to succeed:
■Business Planning that conceives, directs, and provides the r esour ces for all of the
activities required to achieve concrete business objectives/outcomes
■Enterprise Architecture that str uctur es and gives context to all enterprise activities
delivering concrete business outcomes primarily but not exclusively in the IT domain
■Project/Portfolio Management that co-or dinates, designs, and builds the business systems
that deliver the concrete business outcomes
144 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase F: Migration Planning Steps
■Operations Management that integrates, operates, and maintains the deliverables that
deliver the concrete business outcomes
The Implementation and Migration Plan will impact the outputs of each of these frameworks
and consequently has to be reﬂected in them. In the course of this step, understand the
frameworks within the organization and ensur ethat these plans ar eco-ordinated and inserted
(in a summary format) within the plans of each one of these frameworks.
The outcome of this step may well be that the Implementation and Migration Plan could be part
of a dif ferent plan produced by another one of the frameworks with Enterprise Ar chitecture
participation.
13.3.2 Assign aBusiness Value to Each Work Package
Establish and assign a business value to each of the work packages. The intent is to ﬁrst
establish what constitutes business value within the or ganization, how value can be measur ed,
and then apply this to each one of the projects and project increments.
If Capability-Based Planning has been used, then the business values associated with the
capabilities and associated capability increments should be used to assign the business values
for deliverables.
Ther eare several issues to address in this activity:
■Performance Evaluation Criteria areused by portfolio and capability managers to
approve and monitor the progress of the architectur etransformation
■Return-on-Investment Criteria have to be detailed and signed of fb yt he various executive
stakeholders
■Business V alue has to be deﬁned as well as techniques, such as the value chain, which ar e
to be used to illustrate the role in achieving tangible business outcomes
Business value will be used by portfolio and capability managers to allocate r esour ces and,
in cases wher ethereare cutbacks, business value in conjunction with r eturn on investment
can be used to determine whether an endeavor proceeds, is delayed, or is canceled.
■Critical Success Factors (CSFs) should be established to deﬁne success for a pr oject
and/or project increment
These will provide managers and implementers with a gauge as to what constitutes a
successful implementation.
■Measures of Effectiveness (MOE) areoften performance criteria and many corporations
include them in the CSFs
Wher ethey ar etreated discr etely ,i ts hould be clear as to how these criteria ar et ob e
grouped.
■Strategic Fit based upon the overall Enterprise Ar chitectur e(all tiers) will be the critical
factor for allowing the approval of any new project or initiative and for determining the
value of any deliverable
Use the work packages as a basis of identifying projects that will be in the Implementation and
Migration Plan. The identiﬁed projects will be fully developed in other steps in Phase F .The
projects, and project increments, may r equir eadjustment of the Ar chitectur eRoadmap and
Architectur eDeﬁnition Document.
Risks should then be assigned to the projects and project increments by aggr egating risks
identiﬁed in the Consolidated Gaps, Solutions, and Dependencies Matrix (from Phase E).
Part II: Architecture De velopment Method (ADM) 145
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Steps Phase F: Migration Planning
Estimate the business value for each project using the Business Value Assessment Technique (see
Part III, Section 24.5 ).
13.3.3 Estimate Resource Requirements, Project Timings, and Availability/Delivery Vehicle
This step determines the r equir ed resour ces and times for each project and their increments and
provides the initial cost estimates. The costs should be br oken down into capital (to create the
capability) and operations and maintenance (to run and sustain the capability). Opportunities
should be identiﬁed wher ethe costs associated with delivering new and/or better capability can
be offset by decommissioning existing systems. Assign r equir ed resour ces to each activity and
aggregate them at the project increment and project level.
13.3.4 Prioritize the Migration Projects through the Conduct of a Cost/Beneﬁt Assessment
and Risk Validation
Prioritize the pr ojects by ascertaining their business value against the cost of delivering them.
The approach is to ﬁrst determine, as clearly as possible, the net beneﬁt of all of the SBBs
deliver ed by the projects, and then verify that the risks have been effectively mitigated and
factor ed in. Afterwards, the intent is to gain the requisite consensus to cr eate a prioritized list of
projects that will provide the basis for resource allocation.
It is important to discover all costs, and to ensur ethat decision-makers understand the net
beneﬁt over time.
Review the risks to ensur ethat the risks for the pr oject deliverables have been mitigated as
much as possible. The project list is then updated with risk-related comments.
Have the stakeholders agr ee upon a prioritization of the pr ojects. Prioritization criteria will use
elements identiﬁed in creation of the draft Ar chitectur eRoadmap in Phase E as well as those
relating to individual stakeholders’ agendas. Notice that it is possible for a pr oject to earn a high
priority if it provides a critical deliverable on the path to some large beneﬁt, even if the
immediate beneﬁt of the project itself is small.
Formally review the risk assessment and revise it as necessary ensuring that ther ei saf ull
understanding of the residual risk associated with the prioritization and the pr ojected funding
line.
13.3.5 Conﬁrm Architecture Roadmap and Update Architecture Deﬁnition Document
Update the Ar chitectur eRoadmap including any T ransition Ar chitectur es. Review the work to
date to assess what the time-spans between Transition Ar chitectur eshould be, taking into
consideration the increments in business value and capability and other factors, such as risk.
Once the capability increments have been ﬁnalized, consolidate the deliverables by pr oject. This
will result in a revised Architectur eRoadmap.
This is needed in order to co-ordinate the development of several concurr ent instances of the
various ar chitectur es. A T ransition Ar chitectur eState Evolution Table (see Part III,Section 24.4 )
can be used to show the proposed state of the domain architectures at various levels of detail.
If the implementation approach has shifted as a r esult of conﬁrming the implementation
increments, update the Ar chitectur eDeﬁnition Document. This may include assigning pr oject
objectives and aligning pr ojects and their deliverables with the Transition Ar chitectur es to cr eate
an Architectur eDeﬁnition Increments Table (see Part III, Section 24.3 ).
146 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase F: Migration Planning Steps
13.3.6 Complete the Implementation and Migration Plan
Generate the completed Implementation and Migration Plan. Much of the detail for the plan has
already been gather ed and this step brings it all together using accepted planning and
management techniques.
This should include integrating all of the pr ojects and activities as well as dependencies and
impact of change into a project plan. Any Transition Ar chitectur es will act as portfolio
milestones.
All external dependencies should be captured and included, and the overall availability of
resour ces assessed. Pr oject plans may be included within the Implementation and Migration
Plan.
13.3.7 Complete the Architecture Development Cycle and Document Lessons Learned
This step transitions governance from the development of the ar chitectur et ot he realization of
the ar chitectur e. If the maturity of the Ar chitectur eCapability warrants, an Implementation
Governance Model may be produced (see Part IV , Section 32.2.15 ).
Lessons learned during the development of the ar chitectur eshould be documented and
captur ed by the appr opriate governance process in Phase H as inputs to managing the
Architectur eCapability.
The detail of the Ar chitectur eRoadmap and the Implementation and Migration Plan should be
expr essed at a similar level of detail to the Ar chitectur eDeﬁnition Document developed in
Phases B, C, and D. Wher esigniﬁcant additional detail is r equir ed by the next phase the
architectur ei sl ikely transitioning to a dif ferent level. Depending upon the level of the T arget
Architectur eand Implementation and Migration Plan it may be necessary to iterate another
ADM cycle at a lower level of detail. See Part III,Chapter 18 and Chapter 19 for techniques to
manage iteration and different levels of detail.
13.4 Outputs
The outputs of Phase F may include, but ar enot restricted to:
■Implementation and Migration Plan, Version 1.0 (see Part IV , Section 32.2.14 ), including:
—Implementation and Migration Strategy
—P roject and portfolio breakdown of the implementation:
—A llocation of work packages to project and portfolio
—C apabilities delivered by projects
—R elationship to Target Architectur eand any Transition Architectures
—M ilestones and timing
—W ork breakdown structure
—P roject charters (optional):
—R elated work packages
—B usiness value
Part II: Architecture De velopment Method (ADM) 147
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Outputs Phase F: Migration Planning
—R isk, issues, assumptions, dependencies
—R esource requirements and costs
—B eneﬁts of migration
—E stimated costs of migration options
■Finalized Architectur eDeﬁnition Document (see Part IV , Section 32.2.3 ), including:
—F inalized Transition Architectures, if any
■Finalized Architectur eRequirements Speciﬁcation (see Part IV , Section 32.2.6 )
■Finalized Architectur eRoadmap (see Part IV , Section 32.2.7 )
■Re-Usable Architectur eBuilding Blocks (see Part IV , Section 32.2.1 )
■Requests for Ar chitectur eWork (see Part IV ,Section 32.2.17 )for a new iteration of the
ADM cycle (if any)
■Implementation Governance Model (if any) (see Part IV , Section 32.2.15 )
■Change Requests for the Architectur eCapability arising from lessons learned
13.5 Approach
The focus of Phase F is the creation of an Implementation and Migration Plan in co-operation
with the project and portfolio managers.
Phase E provides an incomplete Ar chitectur eRoadmap and Implementation and Migration Plan
that address the Statement of Ar chitectur eW ork. In Phase F this Roadmap and the
Implementation and Migration Plan ar eintegrated with the enterprise’s other change activity.
Activities include assessing the dependencies, costs, and beneﬁts of the various migration
projects within the context of the enterprise’s other activity .The Ar chitectur eRoadmap, V ersion
0.1 and Implementation and Migration Plan, Version 0.1 from Phase E will form the basis of the
ﬁnal Implementation and Migration Plan that will include portfolio and project-level detail.
The ar chitectur edevelopment cycle should then be completed and lessons learned documented
to enable continuous process improvement.
148 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 14
Phase G: Implementation Governance
This chapter provides an architectural oversight of the implementation.
G.
Implementation
GovernanceRequirements
Management
E.
Opportunities
and
SolutionsD.
Technology
ArchitectureB.
Business
Architecture
F.
Migration
PlanningA.
Architecture
Vision
H.
Architecture
Change
Management
C.
Information
Systems
ArchitecturesPreliminary
© The Open Group
Figure 14-1 Phase G: Implementation Governance
Part II: Architecture De velopment Method (ADM) 149
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Objectives Phase G: Implementation Governance
14.1 Objectives
The objectives of Phase G ar eto:
■Ensur econformance with the Target Architectur eb yi mplementation projects
■Perform appropriate Ar chitectur eG overnance functions for the solution and any
implementation-driven architectur eChange Requests
14.2 Inputs
This section deﬁnes the inputs to Phase G.
14.2.1 Reference Materials External to the Enterprise
■Architectur ereference materials (see Part IV , Section 32.2.5 )
14.2.2 Non-Architectural Inputs
■Request for Architectur eWork (see Part IV , Section 32.2.17 )
■Capability Assessment (see Part IV , Section 32.2.10 )
14.2.3 Architectural Inputs
■Organizational Model for Enterprise Architectur e(see Part IV , Section 32.2.16 ), including:
—S cope of organizations impacted
—M aturity assessment, gaps, and resolution approach
—R oles and responsibilities for architectur eteam(s)
—C onstraints on architectur ework
—B udget requirements
—G overnance and support strategy
■Tailored Architectur eFramework (see Part IV , Section 32.2.21 ), including:
—T ailored architectur emethod
—T ailored architectur econtent (deliverables and artifacts)
—C onﬁgured and deployed tools
■Statement of Architectur eWork (see Part IV , Section 32.2.20 )
■Architectur eVision (see Part IV , Section 32.2.8 )
■Architectur eRepository (see Part IV , Section 32.2.5 ), including:
—R e-usable building blocks
—P ublicly available reference models
150 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase G: Implementation Go vernance Inputs
—O rganization-speciﬁc reference models
—O rganization standards
■Architectur eDeﬁnition Document (see Part IV , Section 32.2.3 )
■Architectur eRequirements Speciﬁcation (see Part IV , Section 32.2.6 ), including:
—A rchitectural requirements
—G ap analysis results (fr om Business, Data, Application, and T echnology
Architectures)
■Architectur eRoadmap (see Part IV , Section 32.2.7 )
■Implementation Governance Model (see Part IV , Section 32.2.15 )
■Architectur eContract (standard) (see Part VI, Chapter 43 )
■Request for Ar chitectur eWork (see Part IV ,Section 32.2.17 )identiﬁed during Phases E and
F
■Implementation and Migration Plan (see Part IV , Section 32.2.14 )
14.3 Steps
The level of detail addressed in Phase G will depend on the scope and goals of the overall
architectur eeffort.
The order of the steps in Phase G as well as the time at which they ar eformally started and
completed should be adapted to the situation at hand in accordance with the established
Architectur eGovernance.
The steps in Phase G ar ea sf ollows:
■Conﬁrm scope and priorities for deployment with development management (see Section
14.3.1 )
■Identify deployment resources and skills (see Section 14.3.2 )
■Guide development of solutions deployment (see Section 14.3.3 )
■Perform Enterprise Architectur eCompliance reviews (see Section 14.3.4 )
■Implement business and IT operations (see Section 14.3.5 )
■Perform post-implementation review and close the implementation (see Section 14.3.6 )
14.3.1 Conﬁrm Scope and Priorities for Deployment with Development Management
■Review migration planning outputs and produce recommendations on deployment
■Identify Enterprise Architectur epriorities for development teams
■Identify deployment issues and make recommendations
■Identify building blocks for replacement, update, etc.
■Perform gap analysis on Enterprise Architectur eand solutions framework
The gaps in the existing enterprise solutions framework need to be identiﬁed and the
speciﬁc Solution Building Blocks (SBBs) r equir ed to ﬁll these gaps will be identiﬁed by the
Solution Architects. These SBBs may have a one-to-one or many-to-one r elationship with
Part II: Architecture De velopment Method (ADM) 151
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Steps Phase G: Implementation Governance
the projects. The Solution Ar chitects need to deﬁne exactly how this will be done. Ther e
may be other projects working on these same capabilities and the Solution Ar chitects need
to ensur ethat they can leverage best value from these investments.
■Produce a gap analysis report
14.3.2 Identify Deployment Resources and Skills
The project r esour ces will include the development r esour ces which will need to be educated in
the overall Enterprise Ar chitectur edeliverables and expectations from the speciﬁc development
and implementation projects.
The following considerations should be addressed in this step:
■Identify system development methods required for solutions development
Note: Ther eare a r ange of systems development methods and tools available to the pr oject
teams. The method should ideally be able to inter operate with the ar chitectur eoutputs;
for example, generate code from ar chitectur eartifacts delivered to date. This could be
achieved thr ough the use of modeling languages used for the Enterprise Ar chitecture
development that may be captur ed as inputs to the systems development tools and
thereby reduce the cost of solutions development.
■Ensur ethat the systems development method enables feedback to the ar chitectur eteam on
designs
14.3.3 Guide Development of Solutions Deployment
■Formulate project recommendation
For each separate implementation and deployment project, do the following:
—D ocument scope of individual project in impact analysis
—D ocument strategic r equir ements (from the ar chitectural perspective) in impact
analysis
—D ocument Change Requests (such as support for a standar dinterface) in impact
analysis
—D ocument rules for conformance in impact analysis
—D ocument timeline requirements from roadmap in impact analysis
■Document Architectur eContract
—O btain signatur efromall developing organizations and sponsoring organization
■Update Enterprise Continuum directory and repository for solutions
■Guide development of business & IT operating models for services
■Provide service requirements derived from Enterprise Architecture
■Guide deﬁnition of business & IT operational requirements
■Carry out gap analysis between the Solution Architectur eand operations
■Produce Implementation Plan
152 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase G: Implementation Go vernance Steps
14.3.4 Perform Enterprise Architecture Compliance Reviews
■Review ongoing implementation governance and Ar chitectur eCompliance for each
building block
■Conduct post-development reviews
■Close development part of deployment projects
14.3.5 Implement Business and IT Operations
■Carry out the deployment projects including: IT services delivery implementation;
business services delivery implementation; skills development & training implementation;
communications documentation publication
■Publish new Baseline Ar chitectur es to the Ar chitectur eRepository and update other
impacted repositories, such as operational conﬁguration management stores
14.3.6 Perform Post-Implementation Review and Close the Implementation
■Conduct post-implementation reviews
■Publish reviews and close projects
Closur eo nP hase G will be when the solutions ar efully deployed once.
14.4 Outputs
The outputs of Phase G may include, but ar enot restricted to:
■Architectur eC ontract (signed) (see Part VI, Chapter 43 ), as recommended in the
architecture-compliant implemented architectures
■Compliance Assessments (see Part IV , Section 32.2.13 )
■Change Requests (see Part IV , Section 32.2.11 )
■Architecture-compliant solutions deployed including:
—T he architecture-compliant implemented system
Note: The implemented system is actually an output of the development pr ocess.
However ,given the importance of this output, it is stated her ea sa no utput of the
ADM. The direct involvement of ar chitectur estaffi ni mplementation will vary
according to organizational policy ,a sd escribed in Part VI, Chapter 44 .
—P opulated Architectur eRepository
—A rchitectur ecompliance recommendations and dispensations
—R ecommendations on service delivery requirements
—R ecommendations on performance metrics
—S ervice-Level Agreements (SLAs)
—A rchitectur eVision, updated post-implementation
Part II: Architecture De velopment Method (ADM) 153
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Outputs Phase G: Implementation Governance
—A rchitectur eDeﬁnition Document, updated post-implementation
—B usiness and IT operating models for the implemented solution
14.5 Approach
It is her ethat all the information for successful management of the various implementation
projects is brought together .Note that, in parallel with Phase G, ther ei st he execution of an
organizational-speciﬁc development process, wher ethe actual development happens.
To e nable early realization of business value and beneﬁts, and to minimize the risk in the
transformation and migration pr ogram, the favored approach is to deploy the T arget
Architectur ea sas eries of transitions. Each transition r epresents an incr emental step towards the
target, and each delivers business beneﬁt in its own right. Ther efore, the overall approach in
Phase G is to:
■Establish an implementation pr ogram that will enable the delivery of the T ransition
Architectures agreed for implementation during the Migration Planning phase
■Adopt a phased deployment schedule that r eﬂects the business priorities embodied in the
Architectur eRoadmap
■Follow the organization’s standar dfor corporate, IT ,and Architectur eGovernance
■Use the organization’s established portfolio/pr ogram management approach, wher ethis
exists
■Deﬁne an operations framework to ensur ethe effective long life of the deployed solution
Phase G establishes the connection between ar chitectur eand implementation or ganization,
through the Architectur eContract.
Project details ar edeveloped, including:
■Name, description, and objectives
■Scope, deliverables, and constraints
■Measures of effectiveness
■Acceptance criteria
■Risks and issues
Implementation governance is closely allied to overall Ar chitectur eGovernance, which is
discussed in Part VI, Chapter 44 .
Akey aspect of Phase G is ensuring compliance with the deﬁned ar chitectur e(s), not only by the
implementation projects, but also by other ongoing pr ojects within the enterprise. The
considerations involved with this ar eexplained in detail in Part VI, Chapter 42 .
154 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 15
Phase H: Architectur eChange Management
This chapter looks at establishing procedures for managing change to the new architecture.
G.
Implementation
GovernanceRequirements
Management
E.
Opportunities
and
SolutionsD.
Technology
ArchitectureB.
Business
Architecture
F.
Migration
PlanningA.
Architecture
Vision
H.
Architecture
Change
Management
C.
Information
Systems
ArchitecturesPreliminary
© The Open Group
Figure 15-1 Phase H: Architectur eChange Management
Part II: Architecture De velopment Method (ADM) 155
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Objectives Phase H: ArchitectureChangeManagement
15.1 Objectives
The objectives of Phase H ar eto:
■Ensur ethat the architectur elifecycle is maintained
■Ensur ethat the Architectur eGovernance Framework is executed
■Ensur ethat the Enterprise Architectur eCapability meets current requirements
15.2 Inputs
This section deﬁnes the inputs to Phase H.
15.2.1 Reference Materials External to the Enterprise
■Architectur ereference materials (see Part IV , Section 32.2.5 )
15.2.2 Non-Architectural Inputs
■Request for Architectur eWork (see Part IV , Section 32.2.17 )
15.2.3 Architectural Inputs
■Organizational Model for Enterprise Architectur e(see Part IV , Section 32.2.16 ), including:
—S cope of organizations impacted
—M aturity assessment, gaps, and resolution approach
—R oles and responsibilities for architectur eteam(s)
—C onstraints on architectur ework
—B udget requirements
—G overnance and support strategy
■Tailored Architectur eFramework (see Part IV , Section 32.2.21 ), including:
—T ailored architectur emethod
—T ailored architectur econtent (deliverables and artifacts)
—C onﬁgured and deployed tools
■Statement of Architectur eWork (see Part IV , Section 32.2.20 )
■Architectur eVision (see Part IV , Section 32.2.8 )
■Architectur eRepository (see Part IV , Section 32.2.5 ), including:
—R e-usable building blocks
—P ublicly available reference models
156 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase H: Ar chitectureChangeManagement Inputs
—O rganization-speciﬁc reference models
—O rganization standards
■Architectur eDeﬁnition Document (see Part IV , Section 32.2.3 )
■Architectur eRequirements Speciﬁcation (see Part IV , Section 32.2.6 ), including:
—G ap analysis results (fr om Business, Data, Application, and T echnology
Architectures)
—A rchitectural requirements
■Architectur eRoadmap (see Part IV , Section 32.2.7 )
■Change Request (see Part IV , Section 32.2.11 ), — technology changes:
—N ew technology reports
—A sset management cost reduction initiatives
—T echnology withdrawal reports
—S tandards initiatives
■Change Request (see Part IV , Section 32.2.11 ), — business changes:
—B usiness developments
—B usiness exceptions
—B usiness innovations
—B usiness technology innovations
—S trategic change developments
■Change Request (see Part IV , Section 32.2.11 ), — from lessons learned
■Implementation Governance Model (see Part IV , Section 32.2.15 )
■Architectur eContract (signed) (see Part VI, Chapter 43 )
■Compliance Assessments (see Part IV , Section 32.2.13 )
■Implementation and Migration Plan (see Part IV , Section 32.2.14 )
15.3 Steps
The level of detail addr essed in Phase H will depend on the scope and goals of the overall
architectur eeffort.
The order of the steps in Phase H as well as the time at which they ar eformally started and
completed should be adapted to the situation at hand in accor dance with the established
Architectur eGovernance.
The steps in Phase H ar ea sf ollows:
■Establish value realization process (see Section 15.3.1 )
■Deploy monitoring tools (see Section 15.3.2 )
■Manage risks (see Section 15.3.3 )
Part II: Architecture De velopment Method (ADM) 157
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Steps Phase H: ArchitectureChangeManagement
■Provide analysis for architectur echange management (see Section 15.3.4 )
■Develop change requirements to meet performance targets (see Section 15.3.5 )
■Manage governance process (see Section 15.3.6 )
■Activate the process to implement change (see Section 15.3.7 )
15.3.1 Establish Value Realization Process
Inﬂuence business projects to exploit the Enterprise Ar chitectur efor value r ealization
(outcomes).
15.3.2 Deploy Monitoring Tools
Ensur emonitoring tools ar edeployed and applied to enable the following:
■Monitor technology changes which could impact the Baseline Architecture
■Monitor business changes which could impact the Baseline Architecture
■Business value tracking; e.g., investment appraisal method to determine value metrics for
the business objectives
■Monitor Enterprise Architectur eCapability maturity
■Track and assess asset management programs
■Track the QoS performances and usage
■Determine and track business continuity requirements
15.3.3 Manage Risks
Manage Enterprise Architectur erisks and provide recommendations for IT strategy.
15.3.4 Provide Analysis for Architecture Change Management
Provide analysis for architectur echange management:
■Analyze performance
■Conduct Enterprise Architectur eperformance reviews with service management
■Assess Change Requests and r eporting to ensur ethat the expected value realization and
Service-Level Agreement (SLA) expectations of the customers ar emet
■Undertake a gap analysis of the performance of the Enterprise Architecture
■Ensur echange management requests adher et ot he Enterprise Ar chitectur eGovernance
and framework
158 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase H: Ar chitectureChangeManagement Steps
15.3.5 Develop Change Requirements to Meet Performance Targets
Make recommendations on change r equir ements to meet performance targets and development
of position to act.
15.3.6 Manage Governance Process
Manage governance process and framework for architecture:
■Arrange meeting of Architectur eBoard(or other Governing Council)
■Hold meeting of the Ar chitectur eBoardwith the aim of the meeting to decide on handling
changes (technology and business and dispensations)
15.3.7 Activate the Process to Implement Change
Activate the architectur eprocess to implement change:
■Produce a new Request for Architectur eWork and request for investment
■Ensur eany changes implemented in this phase ar ecaptur ed and documented in the
Architectur eRepository
15.4 Outputs
The outputs of Phase H may include, but ar enot restricted to:
■Architectur eupdates (for maintenance changes)
■Changes to architectur eframework and principles (for maintenance changes)
■New Request for Ar chitectur eWork (see Part IV ,Section 32.2.17 ), to move to another cycle
(for major changes)
■Statement of Architectur eWork (see Part IV , Section 32.2.20 ), updated if necessary
■Architectur eContract (see Part IV , Chapter 43 ), updated if necessary
■Compliance Assessments (see Part IV , Section 32.2.13 ), updated if necessary
15.5 Approach
The goal of an ar chitectur echange management process is to ensur ethat the ar chitecture
achieves its original target business value. This includes managing changes to the ar chitecture
in a cohesive and architected way.
This process will typically pr ovide for the continual monitoring of such things as governance
requests, new developments in technology ,and changes in the business envir onment. When
changes ar eidentiﬁed, change management will determine whether to formally initiate a new
architectur eevolution cycle.
Additionally ,the ar chitectur echange management process aims to establish and support the
implemented Enterprise Ar chitectur ea sad ynamic ar chitectur e; that is, one having the ﬂexibility
to evolve rapidly in response to changes in the technology and business environment.
Monitoring business growth and decline is a critical aspect of this phase. Usage of the Enterprise
Part II: Architecture De velopment Method (ADM) 159
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ApproachP hase H: Ar chitectureChangeManagement
Architectur ei st he most important part of the ar chitectur edevelopment cycle. All too often the
business has been left with an Enterprise Ar chitectur ethat works for the organization of
yester day but may not give back suf ﬁcient capability to meet the needs of the enterprise of today
and tomorrow.
In many cases the ar chitectur econtinues to ﬁt, but the solutions underlying them may not, and
some changes ar erequir ed. The Enterprise Architect needs to be awar eo ft hese change
requirements and considers this an essential part of constant renewal of the architecture.
Capacity measurement and r ecommendations for planning ar eak ey aspect of this phase. While
the ar chitectur ehas been built to deliver a steady state Business Ar chitectur ewith agr eed
capacity during the lifecycle of this Enterprise Ar chitectur e, the growth or decline in usage
needs to be continually assessed to ensur ethat maximum business value is achieved.
For example, some Solution Ar chitectur es may not lend themselves to be scalable by a lar ge
factor — say 10 — or alternative solutions may be mor eeconomic when scaled up. While the
architectur especiﬁcations may not change, the solutions or their operational context may
change.
If the performance management and r eporting has been built into the work products thr ough
previous phases, then this phase is about ensuring the effectiveness of these. If ther eneeds to be
additional monitoring or reporting, then this phase will handle the changes.
The value and change management process, once established, will determine:
■The cir cumstances under which the Enterprise Ar chitectur e, or parts of it, will be
permitted to change after deployment, and the process by which that will happen
■The circumstances under which the ar chitectur edevelopment cycle will be initiated again
to develop a new architecture
The ar chitectur echange management process is very closely related to the Ar chitecture
Governance pr ocesses of the enterprise, and to the management of the Ar chitectur eContract
(see Part VI,Chapter 43 )between the ar chitectur efunction and the business users of the
enterprise.
In Phase H it is critical that the governance body establish criteria to judge whether a Change
Request warrants just an ar chitectur eupdate or whether it warrants starting a new cycle of the
Architectur eD evelopment Method (ADM). It is especially important to avoid "cr eeping
elegance", and the governance body must continue to look for changes that relate directly to
business value.
An Ar chitectur eCompliance report should state whether the change is compliant to the curr ent
architectur e. If it is non-compliant, an exemption may be granted with valid rationale. If the
change has high impact on the ar chitectur e, then a strategy to manage its impact should be
deﬁned.
Guidelines for establishing these criteria ar edifﬁcult to prescribe, as many companies accept risk
differently ,but as the ADM is exercised, the maturity level of the governance body will impr ove,
and criteria will become clear for speciﬁc needs.
160 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase H: Ar chitectureChangeManagement Appr oach
15.5.1 Drivers for Change
The main purpose for the development of the Enterprise Ar chitectur es of ar has been strategic
direction and top-down ar chitectur eand pr oject generation to achieve corporate capabilities.
However ,Enterprise Ar chitectur edoes not operate in a vacuum. Ther ei su sually an existing
infrastructur eand business which is already providing value.
Ther eare also probably drivers for change which ar eoften bottom-up, based upon modifying
the existing infrastr uctur et oe nhance functionality .Enterprise Ar chitectur echanges this
paradigm by a strategic top-down approach to a degr ee, although the delivery of incr ements
makes the equation mor ecomplex.
Ther eare three ways to change the existing infrastructur ethat have to be integrated:
■Strategic, top-down directed change to enhance or create new capability (capital)
■Bottom-up changes to corr ect or enhance capability (operations and maintenance) for
infrastructur eunder operations management
■Experiences with the previously delivered project increments in the car eo fo perations
management, but still being delivered by ongoing projects
Governance will have to handle the co-ordination of these Requests for Change, plus ther e
needs to be a lessons learned pr ocess to allow for problems with the recently deliver ed
increments to be r esolved and changes made to the T arget Ar chitectur es being designed and
planned.
Alessons learned process ensur es that mistakes ar emade once and not repeated. They can come
from anywher eand anyone and cover any aspect of the Enterprise Ar chitectur ea ta ny level
(strategic, Enterprise Ar chitectur edeﬁnition, transition, or pr oject). Often an Enterprise
Architecture-r elated lesson may be an indirect outcome of a lesson learned elsewher ei nt he
organization.
The Ar chitectur eBoard(see Part VI,Chapter 41 )assesses and approves Requests for Change
(RFC). An RFC is typically in response to known problems but can also include impr ovements.
Achallenge for the Ar chitectur eBoardwhen handling an RFC is to determine whether it should
be approved or whether a project in a Transition Architectur ewill resolve the issue.
When assessing project or solution ﬁt into the ar chitectur e, ther emay also be the case when an
innovative solution or RFC drives a change in the architecture.
In addition, ther eare m any technology-related drivers for ar chitectur eChange Requests. For
example:
■New technology reports
■Asset management cost reductions
■Technology withdrawal
■Standards initiatives
This type of Change Request is normally manageable primarily through an enterprise’s change
management and Architectur eGovernance processes.
In addition, ther eare business drivers for architectur echange, including:
■Business-as-usual developments
■Business exceptions
Part II: Architecture De velopment Method (ADM) 161
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ApproachP hase H: Ar chitectureChangeManagement
■Business innovations
■Business technology innovations
■Strategic change
This type of Change Request often results in a complete r e-development of the ar chitectur e, or at
least in an iteration of a part of the architectur edevelopment cycle, as explained below.
15.5.2 Enterprise Architecture Change Management Process
The Enterprise Ar chitectur echange management process needs to determine how changes ar eto
be managed, what techniques ar et ob ea pplied, and what methodologies used. The pr ocess also
needs a ﬁltering function that determines which phases of the ar chitectur edevelopment pr ocess
areimpacted by r equir ements. For example, changes that af fect only migration may be of no
interest in the architectur edevelopment phases.
Ther eare m any valid approaches to change management, and various management techniques
and methodologies that can be used to manage change; for example, project management
methods such as PRINCE2, service management methods such as ITIL, management
consultancy methods such as Catalyst, and many others. An enterprise that already has a
change management process in place in a ﬁeld other than ar chitectur e(for example, in systems
development or project management) may well be able to adapt it for use in r elation to
architecture.
The following describes an appr oach to change management, aimed particularly at the support
of a dynamic Enterprise Ar chitectur e, which may be considered for use if no similar pr ocess
currently exists.
The approach is based on classifying required architectural changes into one of three categories:
■Simpliﬁcation change :as impliﬁcation change can normally be handled via change
management techniques
■Incremental change :a ni ncremental change may be capable of being handled via change
management techniques, or it may r equir epartial r e-architecting, depending on the natur e
of the change (see Section 15.5.3 for guidelines)
■Re-architecting change :ar e-architecting change r equir es putting the whole ar chitecture
through the architectur edevelopment cycle again
Another way of looking at these three choices is to say that a simpliﬁcation change to an
architectur ei so ften driven by a r equir ement to r educe investment; an incremental change is
driven by a r equir ement to derive additional value from existing investment; and a r e-
architecting change is driven by a r equir ement to incr ease investment in order to create new
value for exploitation.
To d etermine whether a change is simpliﬁcation, incremental, or r e-architecting, the following
activities ar eundertaken:
1. Registration of all events that may impact the architecture
2. Resour ce allocation and management for architectur etasks
3. The process or role responsible for ar chitectur eresour ces has to make assessment of what
should be done
4. Evaluation of impacts
162 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase H: Ar chitectureChangeManagement Appr oach
15.5.3 Guidelines for Maintenance versus Architecture Redesign
Agood guideline is:
■If the change impacts two stakeholders or more, then it is likely to r equir ea na rchitecture
redesign and re-entry to the ADM
■If the change impacts only one stakeholder ,then it is mor elikely to be a candidate for
change management
■If the change can be allowed under a dispensation, then it is mor elikely to be a candidate
for change management
For example:
■If the impact is signiﬁcant for the business strategy ,then ther emay be a need to redo the
whole Enterprise Architectur e—t hus a re-architecting approach
■If a new technology or standards emerge, then ther em ay be a need to r efresh the
Technology Ar chitectur e, but not the whole Enterprise Ar chitectur e—t hus an incr emental
change
■If the change is at an infrastr uctur elevel — for example, ten systems reduced or changed
to one system — this may not change the ar chitectur eabove the physical layer ,but it will
change the Baseline Description of the Technology Ar chitectur e; this would be a
simpliﬁcation change handled via change management techniques
In particular ,arefreshment cycle (partial or complete re-architecting) may be required if:
■The Foundation Architectur eneeds to be re-aligned with the business strategy
■Substantial change is r equir ed to components and guidelines for use in deployment of the
architecture
■Signiﬁcant standards used in the product ar chitectur eare changed which have signiﬁcant
end-user impact; e.g., regulatory changes
If ther ei san eed for a r efreshment cycle, then a new Request for Ar chitectur eWork must be
issued (to move to another cycle).
Part II: Architecture De velopment Method (ADM) 163
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase H: Ar chitectureChangeManagement
164 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 16
ADM Architectur eRequirements Management
This chapter looks at the process of managing architectur erequirements throughout the ADM.
G.
Implementation
GovernanceRequirements
Management
E.
Opportunities
and
SolutionsD.
Technology
ArchitectureB.
Business
Architecture
F.
Migration
PlanningA.
Architecture
Vision
H.
Architecture
Change
Management
C.
Information
Systems
ArchitecturesPreliminary
© The Open Group
Figure 16-1 ADM Architectur eRequirements Management
Part II: Architecture De velopment Method (ADM) 165
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Objectives ADM ArchitectureRequirements Mana gement
16.1 Objectives
The objectives of the Requirements Management phase ar eto:
■Ensur ethat the Requirements Management pr ocess is sustained and operates for all
relevant ADM phases
■Manage ar chitectur erequir ements identiﬁed during any execution of the ADM cycle or a
phase
■Ensur ethat relevant ar chitectur erequir ements ar eavailable for use by each phase as the
phase is executed
16.2 Inputs
Inputs to the Requirements Management phase are:
■Apopulated Architectur eRepository (see Part IV , Section 32.2.5 )
■Organizational Model for Enterprise Architectur e(see Part IV , Section 32.2.16 ), including:
—S cope of organizations impacted
—M aturity assessment, gaps, and resolution approach
—R oles and responsibilities for architectur eteam(s)
—C onstraints on architectur ework
—B udget requirements
—G overnance and support strategy
■Tailored Architectur eFramework (see Part IV , Section 32.2.21 ), including:
—T ailored architectur emethod
—T ailored architectur econtent (deliverables and artifacts)
—C onﬁgured and deployed tools
■Statement of Architectur eWork (see Part IV , Section 32.2.20 )
■Architectur eVision (see Part IV , Section 32.2.8 )
■Architectur erequir ements, populating an Ar chitectur eRequir ements Speciﬁcation (see
Part IV , Section 32.2.6 )
■Requirements Impact Assessment (see Part IV , Section 32.2.18 )
16.3 Steps
The steps in the Requirements Management phase ar edescribed in the table below:
Requirements Management Steps ADM Phase Steps
Step 1 Identify/document requirements —
use business scenarios, or an analogous
technique.
166 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ADM ArchitectureRequirements Mana gement Steps
Requirements Management Steps ADM Phase Steps
Step 2 Baseline requirements:
a. Determine priorities arising
from current phase of ADM
b. Conﬁrm stakeholder buy-in to
resultant priorities
c. Recor drequirements priorities
and place in Architecture
Requirements Repository
Step 3 Monitor baseline requirements.
Step 4 Identify changed requirements:
a. Remove or re-assess priorities
b. Add requirements and re-assess
priorities
c. Modify existing requirements
Part II: Architecture De velopment Method (ADM) 167
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Steps ADM ArchitectureRequirements Mana gement
Requirements Management Steps ADM Phase Steps
Step 5 Identify changed requirements and
recordpriorities:
a. Identify changed requirements
and ensur ethe requirements are
prioritized by the architect(s)
responsible for the current
phase, and by the relevant
stakeholders
b. Recor dnew priorities
c. Ensur ethat any conﬂicts are
identiﬁed and managed
through the phases to a
successful conclusion and
prioritization
d. Generate Requirements Impact
Statement (see Section 32.2.18 )
for steering the architecture
team
Notes
■Changed requirements can come
in through any route
To ensur ethat the requirements
areproperly assessed and
prioritized, this process needs to
direct the ADM phases and
recordthe decisions related to
the requirements.
■The Requirements Management
phase needs to determine
stakeholder satisfaction with the
decisions
Wher etherei sd issatisfaction,
the phase remains accountable to
ensur ethe resolution of the
issues and determine next steps.
168 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ADM ArchitectureRequirements Mana gement Steps
Requirements Management Steps ADM Phase Steps
Step 6a. Assess impact of changed
requirements on current (active)
phase
b. Assess impact of changed
requirements on previous
phases
c. Determine whether to
implement change, or defer to
later ADM cycle; if decision is to
implement, assess timescale for
change management
implementation
d. Issue Requirements Impact
Statement, Version n+1
Step 7 Implement requirements arising from
Phase H.
The architectur ecan be changed
through its lifecycle by the Architecture
Change Management phase (Phase H).
The Requirements Management
process ensures that new or changing
requirements that ar ederived from
Phase H ar emanaged accordingly.
Step 8 Update the Architectur eRequirements
Repository with information relating
to the changes requested, including
stakeholder views affected.
Step 9 Implement change in the current phase.
Part II: Architecture De velopment Method (ADM) 169
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Steps ADM ArchitectureRequirements Mana gement
Requirements Management Steps ADM Phase Steps
Step 10 Assess and revise gap analysis for past
phases.
The gap analysis in the ADM Phases B
through D identiﬁes the gaps between
Baseline and Target Architectures.
Certain types of gap can give rise to
gap requirements.
The ADM describes two kinds of gap:
■Something that is present in the
baseline, but not in the target (i.e.,
eliminated — by accident or
design)
■Something not in the baseline,
but present in the target (i.e.,
new)
A"gap requirement" is anything that
has been eliminated by accident, and
therefor erequires a change to the
Target Architecture.
If the gap analysis generates gap
requirements, then this step will ensure
that they ar eaddressed, documented,
and recorded in the Architecture
Requirements Repository ,and that the
Target Architectur ei sr evised
accordingly.
16.4 Outputs
The outputs of the Requirements Management process may include, but ar enot restricted to:
■Requirements Impact Assessment (see Part IV , Section 32.2.18 )
■Updated Architectur eRequirements Speciﬁcation (see Part IV , Section 32.2.6 ), if necessary
The Ar chitectur eRequir ements Repository will be updated as part of the Requir ements
Management phase and should contain all requirements information.
When new r equir ements arise, or existing ones ar echanged, a Requirements Impact Statement is
generated, which identiﬁes the phases of the ADM that need to be revisited to address the
changes. The statement goes thr ough various iterations until the ﬁnal version, which includes
the full implications of the r equir ements (e.g., costs, timescales, and business metrics) on the
architectur edevelopment. Once r equir ements for the curr ent ADM cycle have been ﬁnalized
then the Architectur eRequirements Speciﬁcation should be updated.
170 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ADM ArchitectureRequirements Mana gement Appr oach
16.5 Approach
16.5.1 General
As indicated by the "Requirements Management" cir cle at the center of the ADM graphic, the
ADM is continuously driven by the Requirements Management process.
It is important to note that the Requirements Management circle denotes not a static set of
requirements, but a dynamic process wher eby r equir ements for Enterprise Ar chitectur eand
subsequent changes to those r equir ements ar eidentiﬁed, stored, and fed into and out of the
relevant ADM phases, and also between cycles of the ADM.
The ability to deal with changes in r equir ements is crucial. Ar chitectur ei sa na ctivity that by its
very natur edeals with uncertainty and change — the "gr ey area" between what stakeholders
aspir et oa nd what can be speciﬁed and engineered as a solution. Ar chitectur erequir ements ar e
therefor einvariably subject to change in practice. Mor eover ,architectur eoften deals with drivers
and constraints, many of which by their very natur eare beyond the control of the enterprise
(changing market conditions, new legislation, etc.), and which can produce changes in
requirements in an unforeseen manner.
Note also that the Requir ements Management process itself does not dispose of, address, or
prioritize any r equir ements; this is done within the r elevant phase of the ADM. It is merely the
process for managing requirements throughout the overall ADM.
It is recommended that an Ar chitectur eRequir ements Repository (see Part IV ,Section 37.6 )is
used to r ecordand manage all ar chitectur erequir ements. Unlike the Ar chitectur eRequirements
Speciﬁcation, and the Requirements Impact Assessment, the Ar chitectur eR equirements
Repository can hold information from multiple ADM cycles.
16.5.2 Requirements Development
The ﬁrst high-level r equir ements ar earticulated as part of the Ar chitectur eVision, generated by
means of the business scenario or analogous technique.
Each phase of the ADM, from Pr eliminary to Phase H, must select the approved r equirements
for that phase as held in the Ar chitectur eR equir ements Repository and Ar chitecture
Requir ements Speciﬁcation. At the completion of the phase the status of all such r equirements
needs to be updated. During the phase execution, new r equir ements generated for futur e
architectur ework within the scope of the current Statement of Ar chitectur eWork need to be
documented within the Ar chitectur eRequir ements Speciﬁcation, and new r equir ements which
areoutside of the scope of the current Statement of Ar chitectur eWork must be input to the
Architectur eRequir ements Repository for management through the Requirements Management
process.
In each relevant phase of the ADM the ar chitect should identify types of r equir ement that must
be met by the architecture, including applicable:
■Functional requirements
■Non-functional requirements
When deﬁning requirements the architect should take into account:
■Assumptions for requirements
■Constraints for requirements
Part II: Architecture De velopment Method (ADM) 171
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ApproachA DM ArchitectureRequirements Mana gement
■Domain-speciﬁc principles that drive requirements
■Policies affecting requirements
■Standards that requirements must meet
■Organization guidelines for requirements
■Speciﬁcations for requirements
Deliverables in later ADM phases also contain mappings to the design r equir ements, and may
also generate new types of r equir ements (for example, conformance r equir ements, time
windows for implementation).
16.5.3 Resources
The world of r equir ements engineering is rich with emerging recommendations and pr ocesses
for Requirements Management. The TOGAF standar ddoes not mandate or recommend any
speciﬁc pr ocess or tool; it simply states what an effective Requirements Management pr ocess
should achieve (i.e., the "requirements for requirements", if you like).
16.5.3.1 Business Scenarios
The business scenarios technique is an appr opriate and effective technique to discover and
document business r equir ements. Business scenarios ar edescribed in detail in the T OGAF®
Series Guide: Business Scenarios.
16.5.3.2 Requir ements Tools
Ther eisalarge, and increasing, number of Commercial Off-The-Shelf (COTS) tools available for
the support of Requir ements Management, albeit not necessarily designed for ar chitecture
requirements. The V olerewebsite has a very useful list of leading r equir ements tools (see
www.volere.co.uk/tools.htm ).
172 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
The TOGAF Standard, Version 9.2
Part III:
ADM Guidelines and Techniques
The Open Group
Part III: ADM Guidelines and Techniques 173
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
174 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 17
Introduction to Part III
This chapter provides an intr oduction to the guidelines and techniques provided in Part III: ADM
Guidelines & Techniques.2
17.1 Guidelines for Adapting the ADM Process
The Ar chitectur eDevelopment Method (ADM) pr ocess can be adapted to deal with a number of
differ ent usage scenarios, including dif ferent process styles (e.g., the use of iteration) and also
speciﬁc specialist ar chitectur es (such as security). Guidelines included within this part ar eas
follows:
■Applying Iteration to the ADM (see Chapter 18 )discusses the concept of iteration and
shows potential strategies for applying iterative concepts to the ADM
■Applying the ADM across the Ar chitectur eLandscape (see Chapter 19 )discusses the
differ ent types of ar chitectur eengagement that may occur at dif ferent levels of the
enterprise — this section then also discusses how the ADM process can be focused to
support different types of engagement
17.2 T echniques for Architecture Development
The following techniques ar edescribed within Part III: ADM Guidelines & Techniques to
support speciﬁc tasks within the ADM:
■Architectur ePrinciples (see Chapter 20 )—p rinciples for the use and deployment of IT
resour ces acr oss the enterprise — describes how to develop the set of general rules and
guidelines for the architectur ebeing developed
■Stakeholder Management (see Chapter 21 )describes stakeholder management, an
important discipline that successful ar chitectur epractitioners can use to win support for
their projects
■Architectur ePatterns (see Chapter 22 )provides guidance on using architectural patterns
■Gap Analysis (see Chapter 23 )describes the technique known as gap analysis; it is widely
used in the TOGAF ADM to validate an architectur ethat is being developed
■Migration Planning Techniques (see Chapter 24 )describes a number of techniques to
support migration planning in Phases E and F
2. Additional guidelines and techniques are a vailable in the TOGAF Library.
Part III: ADM Guidelines and Techniques 175
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Techniques for Ar chitectureDevelopment Intr oduction to Part III
■Inter operability Requirements (see Chapter 25 )describes a technique for determining
interoperability requirements
■Business Transformation Readiness Assessment (see Chapter 26 )describes a technique for
identifying business transformation issues
■Risk Management (see Chapter 27 )describes a technique for managing risk during an
architecture/business transformation project
■Capability-Based Planning (see Chapter 28 )describes the technique of capability-based
planning
17.3 Using the TOGAF Framework with Different Architectural Styles
The T OGAF framework is designed to be ﬂexible and it can be used with various ar chitectural
styles. Further information can be found in the following Guides:
■Integrating Risk and Security within a TOGAF®Enterprise Architecture
■TOGAF®Series Guide: Using the T OGAF®Framework to Deﬁne and Govern Service-
Oriented Architectures
Architectural styles dif fer in terms of focus, form, techniques, materials, subject, and time
period. Some styles can be considered as fashionable, others focused on particular aspects of
Enterprise Ar chitectur e. The TOGAF standar di sag eneric framework intended to be used in a
wide variety of environments. It is a ﬂexible and extensible framework that can be r eadily
adapted to a number of architectural styles.
An or ganization’s Ar chitectur eLandscape can be expected to contain ar chitectur ework that is
developed in many architectural styles. The TOGAF standar densur es that the needs of each
stakeholder ar eappropriately addressed in the context of other stakeholders and the Baseline
Architecture.
When using the TOGAF standar dt os upport a speciﬁc architectural style the practitioner must
take into account the combination of distinctive features in which ar chitectur ei sp erformed or
expressed. As a ﬁrst step, the distinctive features of a style must be identiﬁed.
For example, The Open Group deﬁnition for SOA identiﬁes the following distinctive features:
■It is based on the design of the services — which mirror real-world business activities —
comprising the enterprise (or inter-enterprise) business processes
■Service r epresentation utilizes business descriptions to provide context (i.e., business
process, goal, rule, policy ,service interface, and service component) and implements
services using service orchestration
■It places unique r equir ements on the infrastr uctur e—i ti sr ecommended that
implementations use open standards to realize interoperability and location transparency
■Implementations ar eenvironment-speciﬁc — they ar econstrained or enabled by context
and must be described within that context
The second step is determining how these distinctive features will be addr essed. Addressing a
distinctive style should not call for signiﬁcant changes to the T OGAF framework; instead it
should adjust the models, viewpoints, and tools used by the practitioner.
In Phase B, Phase C, and Phase D the practitioner is expected to select the relevant ar chitecture
resour ces, including models, viewpoints, and tools, to properly describe the ar chitectur edomain
and demonstrate that stakeholder concerns ar eaddressed (see Part II,Section 7.3.1 ,Section 9.3.1 ,
Section 10.3.1 ,and Section 1 1.3.1 ). Depending upon the distinctive features, dif ferent
176 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Introduction to Part III Using the TOGAF F ramework with Different Ar chitectural Styles
architectural styles will add new elements that must be described, highlight existing elements,
adjust the notation used to describe the ar chitectur e, and focus the ar chitect on some
stakeholders or stakeholder concerns.
Addr essing the distinctive featur es will usually include extensions to the Ar chitectur eContent
Metamodel and the use of speciﬁc notation or modeling techniques and the identiﬁcation of
viewpoints. Whether the style is dominant will determine whether it is necessary to r evisit the
Preliminary Phase and make changes to the Ar chitectur eCapability or whether support for the
distinctive featur ei sp ossible within the scope of selection expected within a single ADM cycle.
Style-speciﬁc r eference models and maturity models ar ecommonly used tools that support a
practitioner.
During the lifetime of the T OGAF framework many architectural styles have been developed to
addr ess key pr oblems facing practitioners and to demonstrate how the TOGAF framework can
be made mor erelevant within deﬁned contexts.
Some of these have been developed by The Open Gr oup Forums and Work Groups working in
speciﬁc ar eas and have been published in Guides, White Papers, and Standards. Examples
include:
■TOGAF®Series Guide: Using the T OGAF®Framework to Deﬁne and Govern Service-
Oriented Architectures
■Integrating Risk and Security within a TOGAF®Enterprise Architecture
Some of these have been developed collaboratively between The Open Gr oup and other bodies.
Examples include:
■TOGAF®and SABSA®Integration
■Integrating the TOGAF®Standar dwith the BIAN Service Landscape
■Exploring Synergies between TOGAF®and Frameworx
■TOGAF®9and DoDAF 2.0
The TOGAF Library (see https://publications.opengroup.org/togaf-library )includes an
evolving list of documents pr oviding advice and guidance for the application of the T OGAF
framework within speciﬁc contexts.
Part III: ADM Guidelines and Techniques 177
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Introduction to Part III
178 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 18
Applying Iteration to the ADM
18.1 Overview
The graphical r epresentation of the TOGAF ADM, as shown in Figur e4-1,and the description of
the ADM phases discretely in order in Part II, can be read to imply a deterministic waterfall
methodology .This method of pr esentation is provided for the purpose of quickly
communicating the basics of ar chitectur edevelopment and the ar chitectur elifecycle. In practice,
two key concepts ar eused to manage the complexity of developing an Enterprise Ar chitecture
and managing its lifecycle — iteration and levels (see Chapter 19 ). The two concepts ar etightly
linked.
The ADM supports a number of concepts that ar echaracterized as iteration. First, iteration
describes the process of both describing a compr ehensive Ar chitectur eLandscape thr ough
multiple ADM cycles based upon individual initiatives bound to the scope of the Request for
Architectur eW ork. Second, iteration describes the integrated pr ocess of developing an
architectur ewherethe activities described in dif ferent ADM phases interact to produce an
integrated ar chitectur e. In order to concisely describe the activity and outputs, this latter
iteration is described in sequential terms. Third, iteration describes the pr ocess of managing
change to the organization’s Architectur eCapability.
Iteration to develop a comprehensive Architectur eLandscape:
■Projects will exercise through the entir eADM cycle, commencing with Phase A
Each cycle of the ADM will be bound by a Request for Ar chitectur eWork. The architecture
output will populate the Ar chitectur eLandscape, either extending the landscape
described, or changing the landscape wher erequired.
■Separate projects may operate their own ADM cycles concurr ently ,with r elationships
between the different projects
■One project may trigger the initiation of another project
Typically ,this is used when higher -level ar chitectur einitiatives identify opportunities or
solutions that r equir emoredetailed ar chitectur e, or when a project identiﬁes landscape
impacts outside the scope of its Request for Architectur eWork.
Iteration within an ADM cycle (Architectur eDevelopment iteration):
■Projects may operate multiple ADM phases concurrently
Typically ,this is used to manage the inter -relationship between Business Ar chitecture,
Information Systems Architecture, and Technology Architecture.
■Projects may cycle between ADM phases, in planned cycles covering multiple phases
Typically ,this is used to converge on a detailed T arget Ar chitectur ewhen higher -level
Part III: ADM Guidelines and Techniques 179
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
OverviewA pplying Iteration to the ADM
architectur edoes not exist to provide context and constraint.
■Projects may return to previous phases in or der to circle back and update work pr oducts
with new information
Typically ,this is used to conver ge on an executable Ar chitectur eR oadmap or
Implementation and Migration Plan, when the implementation details and scope of
change trigger a change or re-prioritization of stakeholder requirements.
Iteration to manage the Architectur eCapability (Architectur eCapability iteration):
■Projects may r equir ean ew iteration of the Preliminary Phase to (r e-)establish aspects of
the Ar chitectur eCapability identiﬁed in Phase A to address a Request for Ar chitecture
Work
■Projects may r equir ean ew iteration of the Pr eliminary Phase to adjust the or ganization’s
Architectur eCapability as a result of identifying new or changed r equir ements for
Architectur eCapability as a result of a Change Request in Phase H
18.2 Iteration Cycles
The suggested iteration cycles for the TOGAF ADM ar eshown in Figur e18-1,and can be used
to effectively group related ar chitectural activities to achieve a speciﬁc purpose. These iteration
cycles ar ereferenced in Section 18.3 and Section 18.5 .
Architecture
Governance
IterationArchitecture
Capability
Iteration
Architecture
Development
Iteration
Transition
Planning
Iteration
© The Open GroupG.
Implementation
GovernanceRequirements
Management
E.
Opportunities
and
SolutionsD.
Technology
ArchitectureB.
Business
Architecture
F.
Migration
PlanningA.
Architecture
Vision
H.
Architecture
Change
Management
C.
Information
Systems
ArchitecturesPreliminary
Figure 18-1 Iteration Cycles
180 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Applying Iteration to the ADM Iteration Cycles
■Architecture Capability iterations support the cr eation3and evolution of the r equired
Architectur eCapability
This includes the initial mobilization of the ar chitectur eactivity for a given purpose or
architectur eengagement type by establishing or adjusting the ar chitectur eapproach,
principles, scope, vision, and governance.
■Architecture Development iterations allow the cr eation of ar chitectur econtent by cycling
through, or integrating, Business, Information Systems, and Technology Ar chitecture
phases
These iterations ensur ethat the ar chitectur ei sc onsider ed as a whole. In this type of
iteration stakeholder r eviews ar etypically br oader .Asthe iterations converge on a tar get,
extensions into the Opportunities & Solutions and Migration Planning phases ensur ethat
the architecture’s implementability is considered as the architectur ei sﬁ nalized.
■Transition Planning iterations support the creation of formal change r oadmaps for a
deﬁned architecture
■Architecture Governance iterations support governance of change activity pr ogressing
towards a deﬁned Target Architecture
18.3 Classes of Architecture Engagement
An ar chitectur efunction or services or ganization may be called upon to assist an enterprise in a
number of dif ferent contexts, as the ar chitectur es developed can range from summary to detail,
broad to narrow coverage, and curr ent state to futur estate. In these contexts the concept of
iteration should be used in developing the architecture.
Typically ,thereare three areas of engagement for architects:
■Identiﬁcation of Required Change :outside the context of any change initiative,
architectur ecan be used as a technique to provide visibility of the IT capability in order to
support strategic decision-making and alignment of execution
■Deﬁnition of Change :wherean eed to change has been identiﬁed, ar chitectur ecan be
used as a technique to deﬁne the natur eand extent of change in a structured fashion
Within largescale change initiatives, ar chitectur es can be developed to provide detailed
Architectur eDeﬁnition for change initiatives that ar ebounded by the scope of a pr ogram
or portfolio.
■Implementation of Change :architectur ea ta ll levels of the enterprise can be used as a
technique to pr ovide design governance to change initiatives by providing big-pictur e
visibility ,supplying str uctural constraints, and deﬁning criteria on which to evaluate
technical decisions
Figur e18-2and the following table show the classes of Enterprise Architectur eengagement.
3.Guidance on ho wt ouse a full ADM cycle for initially establishing an or ganization’sArchitecture Capability is found in P art VI,Chapter
40.
Part III: ADM Guidelines and Techniques 181
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Classes of Ar chitectureEngagement Applying Iteration to the ADM
Identification of Required Change Definition of Change
Implementation of ChangeThe business
strategy sets
priority for
the portfolioThe business
strategy sets
priority for
the portfolioThe business strategy
identifies need to
change where the
target  is well understoodAspects of large
change initiatives
require their own
architectures
Escalated
issues
influence the
portfolioImplementation of
the architecture
must be governedImplementation of
the architecture
must be governed
Portfolio assessment
identifies specific
need to change
The portfolio
provides context
for governanceArchitectural Portfolio
Management of ProjectsArchitectural Portfolio
Management of the LandscapeThe business strategy
identifies a need to change
where the target is not
understood
Architectural Governance of
Change ImplementationSupporting Business Strategy
Architectural Definition of
Bounded Change InitiativesArchitectural Definition of
Foundational Change Initiatives
Architecture activities that support the identification of a need to change.
Architecture activities that support the definition of how change can be achieved.
Architecture activities that govern the implementation of change.© The Open Group
Figure 18-2 Classes of Enterprise Architectur eEngagement
Each of these architectur eengagement types is described in the table below.
Area of Architecture
Engagement Engagement Description
Identiﬁcation of
Required ChangeSupporting
Business StrategyAs the business strategies, objectives, goals,
and drivers change, it is necessary for the
enterprise to change in order to maintain
alignment.
The creation of new business strategies can be
supported by Enterprise Architectur eby:
■Providing visibility of change
opportunities
■Providing elaboration on the practical
impacts of a particular strategic choice
■Providing tests on the feasibility or
viability of a particular strategic direction
182 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Applying Iteration to the ADM Classes of Ar chitectureEngagement
Area of Architecture
Engagement Engagement Description
Architectural
Portfolio
Management of the
LandscapeIt is common practice across large
organizations for a service management
organization to provide operational reporting
and management of the IT portfolio.
Enterprise Architectur ecan add a further
dimension to service management reporting,
by supporting a linkage between operational
performance and the strategic need for IT.
Using the traceability between IT and business
inherent in Enterprise Architecture, it is
possible to evaluate the IT portfolio against
operational performance data and business
needs (e.g., cost, functionality ,availability,
responsiveness) to determine areas where
misalignment is occurring and change needs to
take place.
Architectural
Portfolio
Management of
ProjectsIt is common practice across large
organizations for a program management
organization to provide operational reporting
and management of the change portfolio.
Enterprise Architectur ecan add a further
dimension to project portfolio management
reporting, by supporting a linkage between
project scope, architectural impact, and
business value.
Architectural factors can be added to other
quantitative project factors to support strategic
decision-making on project priority and
funding levels.
Deﬁnition of
ChangeArchitectural
Deﬁnition of
Foundational
Change InitiativesFoundational change initiatives ar echange
efforts that have a known objective, but ar enot
strictly scoped or bounded by a shared vision
or requirements.
In foundational change initiatives, the initial
priority is to understand the natur eo ft he
problem and to bring structur et ot he
deﬁnition of the problem.
Once the problem is mor eeffectively
understood, it is possible to deﬁne appropriate
solutions and to align stakeholders around a
common vision and purpose.
Part III: ADM Guidelines and Techniques 183
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Classes of Ar chitectureEngagement Applying Iteration to the ADM
Area of Architecture
Engagement Engagement Description
Architectural
Deﬁnition of
Bounded Change
InitiativesBounded change initiatives ar echange efforts
that typically arise as the outcome of a prior
architectural strategy ,evaluation, or vision.
In bounded change initiatives, the desired
outcome is already understood and agreed
upon. The focus of architectural effort in this
class of engagement is to effectively elaborate a
baseline solution that addresses the identiﬁed
requirements, issues, drivers, and constraints.
Implementation of
ChangeArchitectural
Governance of
Change
ImplementationOnce an architectural solution model has been
deﬁned, it provides a basis for design and
implementation.
In order to ensur ethat the objectives and value
of the deﬁned architectur eare appropriately
realized, it is necessary for continuing
Architectur eGovernance of the
implementation process to support design
review ,architectur ereﬁnement, and issue
escalation.
Differ ent classes of ar chitectur eengagement at dif ferent levels of the enterprise will r equire
focus in speciﬁc areas, as shown below.
Engagement T ype Focus Iteration Cycles Scope Focus
Supporting Business
StrategyArchitectur eCapability
Architecture
Development
(Baseline First)Broad, shallow consideration given to
the Architectur eLandscape in order to
address a speciﬁc strategic question
and deﬁne terms for mor edetailed
architectur eefforts to address strategy
realization.
Architectural Portfolio
Management of the
LandscapeArchitectur eCapability
Architecture
Development
(Baseline First)Focus on physical assessment of
baseline applications and technology
infrastructur et oi dentify improvement
opportunities, typically within the
constraints of maintaining business as
usual.
Architectural Portfolio
Management of ProjectsTransition Planning
Architecture
GovernanceFocus on projects, project
dependencies, and landscape impacts
to align project sequencing in a way
that is architecturally optimized.
Architectural Deﬁnition
of Foundational Change
InitiativesArchitectur eCapability
Architecture
Development
(Baseline First)
Transition PlanningFocus on elaborating a vision through
deﬁnition of baseline and identifying
what needs to change to transition the
baseline to the target.
184 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Applying Iteration to the ADM Classes of Ar chitectureEngagement
Engagement T ype Focus Iteration Cycles Scope Focus
Architectural Deﬁnition
of Bounded Change
InitiativesArchitecture
Development
(Target First)
Transition PlanningFocus on elaborating the target to meet
apreviously deﬁned and agreed
vision, scope, or set of constraints. Use
the target as a basis for analysis to
avoid perpetuation of baseline, sub-
optimal architectures.
Architectural
Governance of Change
ImplementationArchitecture
GovernanceUse the Architectur eVision,
constraints, principles, requirements,
Target Architectur edeﬁnition, and
transition roadmap to ensur ethat
projects realize their intended beneﬁt,
arealigned with each other ,and are
aligned with wider business need.
18.4 Approaches to Architecture Development
Twoapproaches can be adopted within the ADM for the development of architectures:
■Baseline First :i nt his style, an assessment of the baseline landscape is used to identify
problem areas and improvement opportunities
This process is most suitable when the baseline is complex, not clearly understood, or
agreed upon. This approach is common wher eorganizational units have had a high degr ee
of autonomy.
■Target First :i nt his style, the tar get solution is elaborated in detail and then mapped back
to the baseline, in order to identify change activity
This process is suitable when a target state is agreed at a high level and wher ethe
enterprise wishes to effectively transition to the target model.
Typically ,i fthe baseline is br oadly understood a higher value will be obtained focusing on the
target ﬁrst then baseline to the extent necessary to identify changes.
In practical terms, an ar chitectur eteam will always give informal consideration to the baseline
when analyzing the target (and vice versa ). In situations wher ebaseline and target ar eexpected
to be consider ed in parallel by stakeholders, it is recommended that the ar chitectur eteam
focuses priority on one state in order to maintain focus and consistency of execution.
18.5 Iteration Considerations
Some iteration cycles can be executed once, whereas others have a natural minimum number of
cycles. For some iteration cycles, each iteration follows the same pr ocess; wher etherei sm ore
than one iteration within a cycle, the process differs slightly for each of the iterations.
When considering the usage of iteration cycles, it is also necessary to consider wher et op lace
appr opriate checkpoints within the pr ocess. If the expected level of stakeholder involvement is
high, it may be sensible to carry out very fr equent but informal checkpoints to ensur ethat the
process is moving in the intended direction. If stakeholders ar eless closely involved, then
checkpoints may be less frequent but mor eformal. Checkpoints at the completion of each
iteration cycle, or at the end of several iteration cycles, ar ecommon.
Part III: ADM Guidelines and Techniques 185
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Iteration Consider ations Applying Iteration to the ADM
18.5.1 Iteration between ADM Cycles
Each iteration completes an ADM cycle at a single level of Ar chitectur eDescription. This
appr oach to the ADM uses Phase F (Migration Planning) to initiate new mor edetailed
architectur edevelopment projects. This appr oach is illustrated in Figur e18-3.This type of
iteration highlights the need for higher-level ar chitectur etoguide and constrain mor edetailed
architectur e. It also highlights that the complete Ar chitectur eLandscape is developed by
multiple ADM iterations.
Strategic Architecture
Segment Architecture
Capability Architecture
© The Open GroupG.
Implementation
GovernanceRequirements
Management
E.
Opportunities
and
SolutionsD.
Technology
ArchitectureB.
Business
Architecture
F.
Migration
PlanningA.
Architecture
Vision
H.
Architecture
Change
Management
C.
Information
Systems
ArchitecturesPreliminaryG.
Implementation
GovernanceRequirements
Management
E.
Opportunities
and
SolutionsD.
Technology
ArchitectureB.
Business
Architecture
F.
Migration
PlanningA.
Architecture
Vision
H.
Architecture
Change
Management
C.
Information
Systems
ArchitecturesPreliminary
G.
Implementation
GovernanceRequirements
Management
E.
Opportunities
and
SolutionsD.
Technology
ArchitectureB.
Business
Architecture
F.
Migration
PlanningA.
Architecture
Vision
H.
Architecture
Change
Management
C.
Information
Systems
ArchitecturesPreliminary
Figure 18-3 AHierarchy of ADM Processes Example
186 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Applying Iteration to the ADM Iteration Considerations
18.5.2 Iteration within an ADM Cycle
Each iteration cycle cr osses multiple TOGAF ADM phases. The following tables show at a high
level which phases should be completed for which iteration cycle, showing activity that is cor e
(i.e., the primary focus of the iteration), activity that is light (i.e., the secondary focus of the
iteration), and activity that may be informally conducted (i.e., some activity may be carried out,
but it is not explicitly mentioned in the ADM).
TOGAF Phase
Preliminary
Architecture Vision
Business
Architecture
Application
Architecture
Data
Architecture
Technology
Architecture
Opportunities and Solutions
Migration Planning
Implementation Governance
Change ManagementBaseline
Target
Baseline
Target
Baseline
Target
Baseline
TargetInformal
Informal
Informal
Informal
Informal Informal Informal Informal InformalInformalInformal Informal Informal
Informal Informal Informal
Informal
Informal
Informal
Informal
Informal
Informal
Informal
Informal
InformalInformalInformal
InformalInformalInformal
Informal
Informal
Informal
Informal
Informal
Informal
Informal
InformalInformalLight
Light
Light
Light
Light
Light
Light
Light
Light
Light
Light
LightLightLightLightLightLight
LightLight
LightCore
Core
Core
CoreCore
Core
Core
Core CoreCoreCoreCoreCoreCoreCoreCore
CoreCore
CoreCore
CoreCore
CoreCoreIteration 1 Iteration 2 Iteration nIteration 1 Iteration nIteration 1 Iteration nArchitecture
GovernanceTransition
PlanningArchitecture
Development
Core: primary focus activity for the iteration
Light: secondary focus activity for the iteration
Informal: potential activity for the iteration, not formally mentioned in the method© The Open Group
Figure 18-4 Activity by Iteration for Baseline First Architectur eDeﬁnition
Part III: ADM Guidelines and Techniques 187
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Iteration Consider ations Applying Iteration to the ADM
TOGAF Phase
Preliminary
Architecture Vision
Business
Architecture
Application
Architecture
Data
Architecture
Technology
Architecture
Opportunities and Solutions
Migration Planning
Implementation Governance
Change ManagementBaseline
Target
Baseline
Target
Baseline
Target
Baseline
TargetInformal
Informal
Informal
Informal
Informal Informal Informal Informal InformalInformalInformal Informal Informal
Informal Informal Informal
Informal
Informal
Informal
Informal
Informal
Informal
Informal
Informal
InformalInformalInformal
InformalInformalInformal
Informal
Informal
Informal
Informal
Informal
Informal
Informal
InformalInformalLight
Light
Light
Light
Light
Light
Light
Light
Light
Light
Light
LightLightLight
Light
Light
Light
LightLight
LightCore
Core
Core
CoreCoreCore
Core
Core
CoreCoreCoreCoreCoreCoreCoreCore
CoreCore
CoreCore
CoreCore
CoreCoreIteration 1 Iteration 2 Iteration nIteration 1 Iteration nIteration 1 Iteration nArchitecture
GovernanceTransition
PlanningArchitecture
Development
Core: primary focus activity for the iteration
Light: secondary focus activity for the iteration
Informal: potential activity for the iteration, not formally mentioned in the method© The Open Group
Figure 18-5 Activity by Iteration for Target First Architectur eDeﬁnition
The suggested iteration cycles mapped to the T OGAF phases ar edescribed in the following
table:
Iteration Cycle Iteration Purpose Description
Iteration 1 Architecture
Development
(Baseline First)Deﬁne the Baseline
Architecture.This iteration comprises a pass
through the Business
Architecture, Information
Systems Architecture, and
Technology Architectur ephases
of the ADM, focusing on
deﬁnition of the baseline.
Opportunities, solutions, and
migration plans ar ealso
considered to drive out the
focus for change and test
feasibility.
188 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Applying Iteration to the ADM Iteration Considerations
Iteration Cycle Iteration Purpose Description
Iteration 2 Deﬁne the Target
Architectur eand
gaps.This iteration comprises a pass
through the Business
Architecture, Information
Systems Architecture, and
Technology Architectur ephases
of the ADM, focusing on
deﬁnition of the target and
analyzing gaps against the
baseline.
Opportunities, solutions, and
migration plans ar ealso
considered to test viability.
Iteration n Reﬁne baseline,
target, and gaps.Subsequent Architecture
Development iterations attempt
to correct and reﬁne the target
to achieve an outcome that is
beneﬁcial, feasible, and viable.
Iteration 1 Architecture
Development
(Target First)Deﬁne the Target
Architecture.This iteration comprises a pass
through the Business
Architecture, Information
Systems Architecture, and
Technology Architectur ephases
of the ADM, focusing on
deﬁnition of the target.
Opportunities, solutions, and
migration plans ar ealso
considered to drive out the
focus for change and test
feasibility.
Iteration 2 Deﬁne the Baseline
Architectur eand
gaps.This iteration comprises a pass
through the Business
Architecture, Information
Systems Architecture, and
Technology Architectur ephases
of the ADM, focusing on
deﬁnition of the baseline and
analyzing gaps against the
target.
Opportunities, solutions, and
migration plans ar ealso
considered to test viability.
Iteration n Reﬁne baseline,
target, and gaps.Subsequent Architecture
Development iterations attempt
to correct and reﬁne the target
to achieve an outcome that is
beneﬁcial, feasible, and viable.
Part III: ADM Guidelines and Techniques 189
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Iteration Consider ations Applying Iteration to the ADM
Iteration Cycle Iteration Purpose Description
Iteration 1 Transition Planning Deﬁne and agree a
set of improvement
opportunities,
aligned against a
provisional
Transition
Architecture.The initial iteration of Transition
Planning seeks to gain buy-in to
aportfolio of solution
opportunities in the
Opportunities & Solutions
phase of ADM.
This iteration also delivers a
provisional Migration Plan.
Iteration n Agree the Transition
Architecture,
reﬁning the
identiﬁed
improvement
opportunities to ﬁt.Subsequent iterations of
Transition Planning seek to
reﬁne the Migration Plan,
feeding back issues into the
Opportunities & Solutions
phase for reﬁnement.
Iteration 1 Architecture
GovernanceMobilize
Architecture
Governance and
change management
processes.The initial Architecture
Governance iteration establishes
aprocess for governance of
change and also puts in place
the appropriate people,
processes, and technology to
support managed access to and
change of the deﬁned
architecture.
Iteration n Carry out
Architecture
Governance and
change control.Subsequent iterations of the
Architectur eGovernance cycle
focus on periodic reviews of
change initiatives to resolve
issues and ensur ecompliance.
Results of a Change Request
may trigger another phase to be
revisited; for example, feeding
back a new requirement to the
Preliminary Phase to improve
the Architectur eCapability ,o ra
new requirement for the
architectur einto the
Architectur eDevelopment
phases.
18.6 Conclusions
All of these techniques ar evalid applications of the ADM. Combined together ,they r epresent
how the ADM can be used in practice. The ADM should always be used in an iterative pr ocess.
How this process is exer cised is dependent upon organizational factors. Particular factors for
consideration include:
■The formality and nature of established process checkpoints within the organization
Does the organization mandate that certain gr oups of activities ar ecarried out between
checkpoints? Does the organization mandate that certain activities must be ﬁnalized befor e
other activities can be carried out?
190 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Applying Iteration to the ADM Conclusions
■The level of stakeholder involvement expected within the process
Arestakeholders expecting to be closely involved within the development of a solution, or
arethey expecting to see a complete set of deliverables for review and approval?
■The number of teams involved and the relationships between different teams
Is the entir earchitectur ebeing developed by a speciﬁc team, or is ther eah ierar chy of
teams with governance relationships between them?
■The maturity of the solution area and the expected amount of rework and reﬁnement
required to arrive at an acceptable solution
Can the solution be achieved in a single pass, or does it r equir eextensive pr oof-of-concept
and prototyping work to evolve a suitable outcome?
■Attitude to risk
Does the organizational cultur ereact negatively to partially complete work products being
circulated? Does the organizational cultur erequir esolutions to be proved in a trial
environment befor ethey can be implemented for mainstream application?
■The class of engagement
What is the context for development of the Enterprise Architecture?
Part III: ADM Guidelines and Techniques 191
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Applying Iteration to the ADM
192 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 19
Applying the ADM Across the Architectur eLandscape
19.1 Overview
In a typical enterprise, many ar chitectur es will be described in the Ar chitectur eLandscape at
any point in time. Some ar chitectur es will addr ess very speciﬁc needs; others will be mor e
general. Some will address detail; some will provide a big picture. T oaddress this complexity ,
the TOGAF standar duses the concepts of levels and the Enterprise Continuum to pr ovide a
conceptual framework for organizing the Ar chitectur eLandscape. These concepts ar etightly
linked with organizing actual content in the Ar chitectur eRepository and any ar chitecture
partitions discussed in Part V .
19.2 Architecture Landscape
Levels provide a framework for dividing the Ar chitectur eLandscape into three levels of
granularity:
1.Strategic Architecture provides an or ganizing framework for operational and change
activity and allows for direction setting at an executive level.
2.Segment Architecture provides an organizing framework for operational and change
activity and allows for direction setting and the development of ef fective ar chitecture
roadmaps at a program or portfolio level.
3.Capability Architecture provides an or ganizing framework for change activity and the
development of effective architectur eroadmaps realizing capability increments.
Figur e19-1shows a summary of the classiﬁcation model for Architectur eLandscapes.
Part III: ADM Guidelines and Techniques 193
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureLandscape Applying the ADM Across the Ar chitectureLandscape
BreadthLevel
Segment
ArchitectureSegment 
ArchitectureEnterprise Strategic ArchitectureTime
Capability
ArchitectureCapability
ArchitectureCapability
Architecture© The Open Group 
Figure 19-1 Summary Classiﬁcation Model for Architectur eLandscapes
The Ar chitectur eContinuum pr ovides a method of dividing each level of the Ar chitecture
Landscape (see Section 35.4.1 )b ya bstraction. It offers a consistent way to deﬁne and understand
the generic rules, r epresentations, and relationships in an ar chitectur e, including traceability and
derivation relationships. The Ar chitectur eContinuum shows the relationships fr om foundation
elements to organization-speciﬁc architecture, as shown in Figur e19-2.
The Ar chitectur eContinuum is a useful tool to discover commonality and eliminate unnecessary
redundancy.
Generic
ArchitecturesSpecific
ArchitecturesGeneralization for future re-use
Adaptation for useArchitecture Continuum © The Open Group
Figure 19-2 Summary of Architectur eContinuum
Levels and the Ar chitectur eContinuum provide a comprehensive mechanism to describe and
classify the Ar chitectur eLandscape. These concepts can be used to or ganize the Ar chitecture
Landscape into a set of related architectures with:
■Manageable complexity for each individual architectur eo rs olution
■Deﬁned groupings
194 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Applying the ADM Across the Ar chitectureLandscape Ar chitectureLandscape
■Deﬁned hierarchies and navigation structures
■Appropriate processes, roles, and responsibilities attached to each grouping
Ther ei sn od eﬁnitive organizing model for ar chitectur e, as each enterprise should adopt a
model that reﬂects its own operating model.
19.3 Organizing the Architecture Landscape to Understand the State of the
Enterprise
The following characteristics ar etypically used to organize the Architectur eLandscape:
■Breadth :the breadth (subject matter) ar ea is generally the primary or ganizing
characteristic for describing an Architectur eLandscape
Architectur es ar efunctionally decomposed into a hierarchy of speciﬁc subject ar eas or
segments.
■Depth :with broader subject areas, less detail is needed to ensur ethat the ar chitectur ehas a
manageable size and complexity
Morespeciﬁc subject matter ar eas will generally permit (and r equir e) mor edetailed
architectures.
■Time:for a speciﬁc breadth and depth an enterprise can cr eate a Baseline Ar chitectur eand
aset of Target Architectures that stretch into the future
Broader and less detailed ar chitectur es will generally be valid for longer periods of time
and can provide a vision for the enterprise that stretches further into the future.
■Recency :ﬁnally ,each ar chitectur eview will pr ogress through a development cycle wher e
it increases in accuracy until ﬁnally approved
After approval, an ar chitectur ew ill begin to decr ease in accuracy if not actively
maintained. In some cases recency may be used as an or ganizing factor for historic
architectures.
Using the criteria above, ar chitectur es can be grouped into Strategic, Segment, and Capability
Architectur elevels, as described in Figur e19-1.
19.4 Developing Architectures at Different Levels
The previous sections have identiﬁed that dif ferent types of ar chitectur eare re quired to addr ess
differ ent stakeholder needs at dif ferent levels of the or ganization. Each ar chitectur etypically
does not exist in isolation and must ther eforesit within a governance hierar chy.Broad, summary
architectures set the direction for narrow and detailed architectures.
Anumber of techniques can be employed to use the ADM as a process that supports such
hierarchies of architectures. Essentially ther eare two strategies that can be applied:
1. Ar chitectur es at dif ferent levels can be developed thr ough iterations within a single cycle
of the ADM process
2. Ar chitectur es at dif ferent levels can be developed through a hierarchy of ADM pr ocesses,
executed concurrently
Part III: ADM Guidelines and Techniques 195
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Using the ADM Applying the ADM Across the Ar chitectureLandscape
At the extr eme ends of the scale, either of these two options can be fully adopted. In practice, an
architect is likely to need to blend elements of each to ﬁt the exact r equir ements of their Request
for Architectur eWork. Each of these approaches is described in Chapter 18 .
196 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 20
Architectur ePrinciples
This chapter describes principles for use in the development of an Enterprise Architecture.
20.1 Introduction
Principles ar egeneral rules and guidelines, intended to be enduring and seldom amended, that
inform and support the way in which an organization sets about fulﬁlling its mission.
In their turn, principles may be just one element in a str uctur ed set of ideas that collectively
deﬁne and guide the organization, from values through to actions and results.
Depending on the organization, principles may be established within dif ferent domains and at
different levels. Two key domains inform the development and utilization of architecture:
■Enterprise Principles provide a basis for decision-making thr oughout an enterprise, and
inform how the organization sets about fulﬁlling its mission
Such principles ar ecommonly found as a means of harmonizing decision-making acr oss
an organization. In particular ,they ar eak ey element in a successful Ar chitecture
Governance strategy (see Chapter 44 ).
Within the br oad domain of enterprise principles, it is common to have subsidiary
principles within a business or organizational unit. Examples include IT ,HR, domestic
operations, or overseas operations. These principles pr ovide a basis for decision-making
within the subsidiary domain and will inform ar chitectur edevelopment within the
domain. Car emust be taken to ensur ethat the principles used to inform ar chitecture
development align to the organizational context of the Architectur eCapability.
■Architecture Principles areas et of principles that relate to architectur ework
They reﬂect a level of consensus across the enterprise, and embody the spirit and thinking
of existing enterprise principles. Architectur ePrinciples govern the ar chitectur eprocess,
affecting the development, maintenance, and use of the Enterprise Architecture.
It is common to have sets of principles form a hierar chy,inthat segment principles will be
informed by ,and elaborate on, the principles at the enterprise level. Ar chitectur ePrinciples will
be informed and constrained by enterprise principles.
Architectur ePrinciples may restate other enterprise guidance in terms and form that ef fectively
guide architectur edevelopment.
The remainder of this section deals exclusively with Architectur ePrinciples.
Part III: ADM Guidelines and Techniques 197
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Characteristics of Ar chitecturePrinciples Ar chitecturePrinciples
20.2 Characteristics of Architecture Principles
Architectur ePrinciples deﬁne the underlying general rules and guidelines for the use and
deployment of all IT r esour ces and assets across the enterprise. They reﬂect a level of consensus
among the various elements of the enterprise, and form the basis for making futur eI Td ecisions.
Each Ar chitectur ePrinciple should be clearly r elated back to the business objectives and key
architectur edrivers.
20.3 Components of Architecture Principles
It is useful to have a standar dway of deﬁning principles. In addition to a deﬁnition statement,
each principle should have associated rationale and implications statements, both to pr omote
understanding and acceptance of the principles themselves, and to support the use of the
principles in explaining and justifying why speciﬁc decisions ar emade.
Arecommended template is given in Table 20-1 .
Name Should both represent the essence of the rule as well as be easy to remember.
Speciﬁc technology platforms should not be mentioned in the name or
statement of a principle. Avoid ambiguous words in the Name and in the
Statement such as: "support", "open", "consider", and for lack of good
measur ethe wor d"avoid", itself, be careful with "manage(ment)", and look
for unnecessary adjectives and adverbs (ﬂuff).
Statement Should succinctly and unambiguously communicate the fundamental rule.
For the most part, the principles statements for managing information are
similar from one organization to the next. It is vital that the principles
statement is unambiguous.
Rationale Should highlight the business beneﬁts of adhering to the principle, using
business terminology .Point to the similarity of information and technology
principles to the principles governing business operations. Also describe the
relationship to other principles, and the intentions regarding a balanced
interpretation. Describe situations wher eone principle would be given
precedence or carry mor eweight than another for making a decision.
Implications Should highlight the requirements, both for the business and IT ,for carrying
out the principle — in terms of resources, costs, and activities/tasks. It will
often be apparent that current systems, standards, or practices would be
incongruent with the principle upon adoption. The impact to the business
and consequences of adopting a principle should be clearly stated. The
reader should readily discern the answer to: "How does this affect me?". It is
important not to oversimplify ,trivialize, or judge the merit of the impact.
Some of the implications will be identiﬁed as potential impacts only ,and
may be speculative rather than fully analyzed.
Table 20-1 Recommended Format for Deﬁning Principles
An example set of Architectur ePrinciples following this template is given in Section 20.6 .
198 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitecturePrinciples De veloping Ar chitecturePrinciples
20.4 Developing Architecture Principles
Architectur ePrinciples ar etypically developed by the Enterprise Architects, in conjunction with
the key stakeholders, and ar eapproved by the Architectur eBoard.
Architectur ePrinciples will be informed by principles at the enterprise level, if they exist.
Architectur ePrinciples must be clearly traceable and clearly articulated to guide decision-
making. They ar echosen so as to ensur ealignment of the ar chitectur eand implementation of the
Target Architectur ewith business strategies and visions.
Speciﬁcally ,the development of Architectur ePrinciples is typically inﬂuenced by the following:
■Enterprise mission and plans :the mission, plans, and organizational infrastr uctur eo ft he
enterprise
■Enterprise strategic initiatives :the characteristics of the enterprise — its str engths,
weaknesses, opportunities, and threats — and its curr ent enterprise-wide initiatives (such
as process improvement and quality management)
■External constraints :market factors (time-to-market imperatives, customer expectations,
etc.); existing and potential legislation
■Current systems and technology :the set of information r esour ces deployed within the
enterprise, including systems documentation, equipment inventories, network
conﬁguration diagrams, policies, and procedures
■Emerging industry trends :predictions about economic, political, technical, and market
factors that inﬂuence the enterprise environment
20.4.1 Qualities of Principles
Merely having a written statement that is called a principle does not mean that the principle is
good, even if everyone agrees with it.
Agood set of principles will be founded in the beliefs and values of the organization and
expr essed in language that the business understands and uses. Principles should be few in
number ,futur e-oriented, and endorsed and championed by senior management. They provide a
ﬁrm foundation for making ar chitectur eand planning decisions, framing policies, pr ocedures,
and standards, and supporting resolution of contradictory situations. A poor set of principles
will quickly become disused, and the r esultant ar chitectur es, policies, and standards will appear
arbitrary or self-serving, and thus lack credibility .Essentially ,principles drive behavior.
Ther eare ﬁve criteria that distinguish a good set of principles:
■Understandable :the underlying tenets can be quickly grasped and understood by
individuals throughout the organization
The intention of the principle is clear and unambiguous, so that violations, whether
intentional or not, ar eminimized.
■Robust :enable good quality decisions about ar chitectur es and plans to be made, and
enforceable policies and standards to be created
Each principle should be suf ﬁciently deﬁnitive and precise to support consistent decision-
making in complex, potentially controversial situations.
■Complete :every potentially important principle governing the management of
information and technology for the organization is deﬁned — the principles cover every
situation perceived
Part III: ADM Guidelines and Techniques 199
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Developing Ar chitecturePrinciples Ar chitecturePrinciples
■Consistent :strict adherence to one principle may r equir eal oose interpretation of another
principle
The set of principles must be expr essed in a way that allows a balance of interpr etations.
Principles should not be contradictory to the point wher eadhering to one principle would
violate the spirit of another .Every wor di nap rinciple statement should be car efully
chosen to allow consistent yet ﬂexible interpretation.
■Stable :principles should be enduring, yet able to accommodate changes
An amendment process should be established for adding, r emoving, or altering principles
after they ar eratiﬁed initially.
20.5 Applying Architecture Principles
Architectur ePrinciples ar eused to captur ethe fundamental truths about how the enterprise will
use and deploy IT resources and assets. The principles ar eused in a number of different ways:
1. T oprovide a framework within which the enterprise can start to make conscious
decisions about Enterprise Ar chitectur eand pr ojects that implement the target Enterprise
Architecture
2. As aguide to establishing relevant evaluation criteria, thus exerting str ong inﬂuence on
the selection of products, solutions, or solution ar chitectur es in the later stages of
managing compliance to the Enterprise Architecture
3. As drivers for deﬁning the functional requirements of the architecture
4. As an input to assessing both existing implementations and the strategic portfolio, for
compliance with the deﬁned ar chitectur es; these assessments will pr ovide valuable
insights into the transition activities needed to implement an ar chitectur e, in support of
business goals and priorities
5. The Rationale statements within an Ar chitectur ePrinciple highlight the business value of
implementations consistent with the principle and pr ovide guidance for dif ﬁcult
decisions with conﬂicting drivers or objectives
6. The Implications statements within an Ar chitectur ePrinciple provide an outline of the
key tasks, r esour ces, and potential costs to the enterprise of following the principle; they
also provide valuable inputs to futur etransition initiative and planning activities
7. Support the Architectur eGovernance activities in terms of:
—P roviding a "back-stop" for the standar dA rchitectur eCompliance assessments
wher esome interpretation is allowed or required
—S upporting the decision to initiate a dispensation request wher ethe implications of
aparticular ar chitectur eamendment cannot be resolved within local operating
procedure
Principles ar einter-related, and need to be applied as a set.
Principles will sometimes compete; for example, the principles of "accessibility" and "security"
tend towar ds conﬂicting decisions. Each principle must be considered in the context of "all other
things being equal".
At times a decision will be r equir ed as to which principle will take precedence on a particular
issue. The rationale for such decisions should always be documented.
Acommon r eaction on ﬁrst reading of a principle is "this is obvious and does not need to be
200 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitecturePrinciples Applying ArchitecturePrinciples
documented". The fact that a principle seems self-evident does not mean that the guidance in a
principle is followed. Having principles that appear obvious helps ensur ethat decisions actually
follow the desired outcome.
Although speciﬁc penalties ar enot prescribed in a declaration of principles, violations of
principles generally cause operational problems and inhibit the ability of the or ganization to
fulﬁl its mission.
20.6 Example Set of Architecture Principles
Toomany principles can r educe the ﬂexibility of the ar chitectur e. Many organizations prefer to
deﬁne only high-level principles, and to limit the number to between 10 and 20.
The following example illustrates both the typical content of a set of Ar chitectur ePrinciples, and
the recommended format for deﬁning them, as explained above.
20.6.1 Business Principles
Principle 1: Primacy of Principles
Statement: These principles of information management apply to all organizations within
the enterprise.
Rationale: The only way we can pr ovide a consistent and measurable level of quality
information to decision-makers is if all organizations abide by the principles.
Implications: ■Without this principle, exclusions, favoritism, and inconsistency would
rapidly undermine the management of information
■Information management initiatives will not begin until they ar e
examined for compliance with the principles
■Aconﬂict with a principle will be resolved by changing the framework
of the initiative
Principle 2: Maximize Beneﬁt to the Enterprise
Statement: Information management decisions ar emade to provide maximum beneﬁt to
the enterprise as a whole.
Rationale: This principle embodies "service above self". Decisions made from an
enterprise-wide perspective have greater long-term value than decisions made
from any particular organizational perspective. Maximum r eturn on
investment r equir es information management decisions to adher eto
enterprise-wide drivers and priorities. No minority group will detract fr om
the beneﬁt of the whole. However ,this principle will not preclude any
minority group from getting its job done.
Implications: ■Achieving maximum enterprise-wide beneﬁt will r equir echanges in the
way we plan and manage information — technology alone will not bring
about this change
■Some organizations may have to concede their own pr eferences for the
greater beneﬁt of the entir eenterprise
Part III: ADM Guidelines and Techniques 201
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Example Set of Ar chitecturePrinciples Ar chitecturePrinciples
■Application development priorities must be established by the entir e
enterprise for the entir eenterprise
■Applications components should be shar ed across or ganizational
boundaries
■Information management initiatives should be conducted in accor dance
with the enterprise plan
Individual organizations should pursue information management
initiatives which conform to the blueprints and priorities established by
the enterprise. The plan will be changed as needed.
■As needs arise, priorities must be adjusted; a for um with compr ehensive
enterprise representation should make these decisions
Principle 3: Information Management is Everybody’ sBusiness
Statement: All organizations in the enterprise participate in information management
decisions needed to accomplish business objectives.
Rationale: Information users ar ethe key stakeholders, or customers, in the application of
technology to address a business need. In or der to ensur einformation
management is aligned with the business, all or ganizations in the enterprise
must be involved in all aspects of the information environment. The business
experts from across the enterprise and the technical staf fresponsible for
developing and sustaining the information envir onment need to come
together as a team to jointly deﬁne the goals and objectives of IT.
Implications: ■To o perate as a team, every stakeholder ,o rc ustomer ,will need to accept
responsibility for developing the information environment
■Commitment of resources will be required to implement this principle
Principle 4: Business Continuity
Statement: Enterprise operations ar emaintained in spite of system interruptions.
Rationale: As system operations become mor epervasive, we become mor edependent on
them; ther efore, we must consider the r eliability of such systems thr oughout
their design and use. Business pr emises throughout the enterprise must be
provided with the capability to continue their business functions r egar dless of
external events. Har dwar efailur e, natural disasters, and data corr uption
should not be allowed to disrupt or stop enterprise activities. The enterprise
business functions must be capable of operating on alternative information
delivery mechanisms.
Implications: ■Dependency on shared system applications mandates that the risks of
business interruption must be established in advance and managed
Management includes but is not limited to periodic r eviews, testing for
vulnerability and exposur e, or designing mission-critical services to
ensur ebusiness function continuity thr ough redundant or alternative
capabilities.
■Recoverability ,redundancy ,and maintainability should be addr essed at
the time of design
202 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitecturePrinciples Example Set of ArchitecturePrinciples
■Applications must be assessed for criticality and impact on the
enterprise mission, in or der to determine what level of continuity is
required and what corresponding recovery plan is necessary
Principle 5: Common Use Applications
Statement: Development of applications used acr oss the enterprise is pr eferr ed over the
development of similar or duplicative applications which ar eonly provided to
aparticular organization.
Rationale: Duplicative capability is expensive and proliferates conﬂicting data.
Implications: ■Organizations which depend on a capability which does not serve the
entir eenterprise must change over to the replacement enterprise-wide
capability; this will r equir eestablishment of and adherence to a policy
requiring this
■Organizations will not be allowed to develop capabilities for their own
use which ar esimilar/duplicative of enterprise-wide capabilities; in this
way,expenditur es of scarce r esour ces to develop essentially the same
capability in marginally different ways will be reduced
■Data and information used to support enterprise decision-making will
be standardized to a much greater extent than previously
This is because the smaller ,organizational capabilities which pr oduced
differ ent data (which was not shar ed among other organizations) will be
replaced by enterprise-wide capabilities. The impetus for adding to the
set of enterprise-wide capabilities may well come from an or ganization
making a convincing case for the value of the data/information
previously pr oduced by its organizational capability ,but the r esulting
capability will become part of the enterprise-wide system, and the data
it produces will be shared across the enterprise.
Principle 6: Service Orientation
Statement: The architectur ei sb ased on a design of services which mirror r eal-world
business activities comprising the enterprise (or inter -enterprise) business
processes.
Rationale: Service orientation delivers enterprise agility and Boundaryless Information
Flow.
Implications: ■Service r epresentation utilizes business descriptions to pr ovide context
(i.e., business process, goal, rule, policy ,service interface, and service
component) and implements services using service orchestration
■Service orientation places unique r equir ements on the infrastr ucture,
and implementations should use open standar ds to r ealize
interoperability and location transparency
■Implementations ar eenvironment-speciﬁc; they ar econstrained or
enabled by context and must be described within that context
■Strong governance of service r epresentation and implementation is
required
Part III: ADM Guidelines and Techniques 203
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Example Set of Ar chitecturePrinciples Ar chitecturePrinciples
■A"Litmus Test", which determines a "good service", is required
Principle 7: Compliance with Law
Statement: Enterprise information management processes comply with all relevant laws,
policies, and regulations.
Rationale: Enterprise policy is to abide by laws, policies, and r egulations. This will not
preclude business process impr ovements that lead to changes in policies and
regulations.
Implications: ■The enterprise must be mindful to comply with laws, r egulations, and
external policies r egar ding the collection, retention, and management of
data
■Education and access to the rules
Efﬁciency ,need, and common sense ar enot the only drivers. Changes in
the law and changes in r egulations may drive changes in our pr ocesses
or applications.
Principle 8: IT Responsibility
Statement: The IT organization is r esponsible for owning and implementing IT pr ocesses
and infrastr uctur ethat enable solutions to meet user -deﬁned r equir ements for
functionality ,service levels, cost, and delivery timing.
Rationale: Ef fectively align expectations with capabilities and costs so that all projects ar e
cost-ef fective. Efﬁcient and effective solutions have r easonable costs and clear
beneﬁts.
Implications: ■Aprocess must be created to prioritize projects
■The IT function must deﬁne processes to manage business unit
expectations
■Data, application, and technology models must be cr eated to enable
integrated quality solutions and to maximize results
Principle 9: Protection of Intellectual Property
Statement: The enterprise’s Intellectual Property (IP) must be protected. This pr otection
must be r eﬂected in the IT ar chitectur e, implementation, and governance
processes.
Rationale: A major part of an enterprise’s IP is hosted in the IT domain.
Implications: ■While protection of IP assets is everybody’s business, much of the actual
protection is implemented in the IT domain — even trust in non-IT
processes can be managed by IT pr ocesses (email, mandatory notes, etc.)
■Asecurity policy ,governing human and IT actors, will be r equir ed that
can substantially improve protection of IP; this must be capable of both
avoiding compromises and reducing liabilities
■Resour ces on such policies can be found at the SANS Institute (r efer to
www.sans.org/security-resources/policies )
204 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitecturePrinciples Example Set of ArchitecturePrinciples
20.6.2 Data Principles
Principle 10: Data is an Asset
Statement: Data is an asset that has value to the enterprise and is managed accordingly.
Rationale: Data is a valuable corporate r esour ce; it has real, measurable value. In simple
terms, the purpose of data is to aid decision-making. Accurate, timely data is
critical to accurate, timely decisions. Most corporate assets ar ecarefully
managed, and data is no exception. Data is the foundation of our decision-
making, so we must also car efully manage data to ensur ethat we know wher e
it is, can rely upon its accuracy ,and can obtain it when and wher ew en eed it.
Implications: ■This is one of three closely-related principles r egar ding data: data is an
asset; data is shared; and data is easily accessible
The implication is that ther ei sa ne ducation task to ensur ethat all
organizations within the enterprise understand the relationship between
value of data, sharing of data, and accessibility to data.
■Stewar ds must have the authority and means to manage the data for
which they ar eaccountable
■We m ust make the cultural transition fr om "data ownership" thinking to
"data stewardship" thinking
■The role of data stewar discritical because obsolete, incorrect, or
inconsistent data could be passed to enterprise personnel and adversely
affect decisions across the enterprise
■Part of the role of data steward, who manages the data, is to ensur edata
quality
Procedur es must be developed and used to prevent and corr ect errors in
the information and to impr ove those processes that produce ﬂawed
information. Data quality will need to be measur ed and steps taken to
impr ove data quality — it is probable that policy and pr ocedur es will
need to be developed for this as well.
■Aforum with compr ehensive enterprise-wide r epresentation should
decide on process changes suggested by the steward
■Since data is an asset of value to the entir eenterprise, data stewar ds
accountable for pr operly managing the data must be assigned at the
enterprise level
Principle 11: Data is Shared
Statement: Users have access to the data necessary to perform their duties; ther efore, data
is shared across enterprise functions and organizations.
Rationale: T imely access to accurate data is essential to impr oving the quality and
efﬁciency of enterprise decision-making. It is less costly to maintain timely ,
accurate data in a single application, and then shar eit, than it is to maintain
duplicative data in multiple applications. The enterprise holds a wealth of
data, but it is stor ed in hundreds of incompatible stovepipe databases. The
speed of data collection, cr eation, transfer ,and assimilation is driven by the
ability of the organization to efﬁciently shar ethese islands of data across the
organization.
Part III: ADM Guidelines and Techniques 205
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Example Set of Ar chitecturePrinciples Ar chitecturePrinciples
Shar ed data will result in improved decisions since we will rely on fewer
(ultimately one virtual) sources of mor eaccurate and timely managed data for
all of our decision-making. Electronically shar ed data will result in incr eased
efﬁciency when existing data entities can be used, without re-keying, to cr eate
new entities.
Implications: ■This is one of three closely-r elated principles r egar ding data: data is an
asset; data is shared; and data is easily accessible
The implication is that ther ei sa ne ducation task to ensur ethat all
organizations within the enterprise understand the r elationship between
value of data, sharing of data, and accessibility to data.
■To enable data sharing we must develop and abide by a common set of
policies, pr ocedur es, and standards governing data management and
access for both the short and the long term
■For the short term, to pr eserve our signiﬁcant investment in legacy
systems, we must invest in softwar ecapable of migrating legacy system
data into a shared data environment
■We w ill also need to develop standar ddata models, data elements, and
other metadata that deﬁnes this shared environment and develop a
repository system for storing this metadata to make it accessible
■For the long term, as legacy systems ar ereplaced, we must adopt and
enfor ce common data access policies and guidelines for new application
developers to ensur ethat data in new applications remains available to
the shared environment and that data in the shar ed environment can
continue to be used by the new applications
■For both the short term and the long term we must adopt common
methods and tools for creating, maintaining, and accessing the data
shared across the enterprise
■Data sharing will requir eas igniﬁcant cultural change
■This principle of data sharing will continually "bump up against" the
principle of data security — under no cir cumstances will the data
sharing principle cause conﬁdential data to be compromised
■Data made available for sharing will have to be r elied upon by all users
to execute their respective tasks
This will ensur ethat only the most accurate and timely data is r elied
upon for decision-making. Shared data will become the enterprise-wide
"virtual single source" of data.
Principle 12: Data is Accessible
Statement: Data is accessible for users to perform their functions.
Rationale: W ide access to data leads to ef ﬁciency and effectiveness in decision-making,
and af fords a timely r esponse to information requests and service delivery .
Using information must be considered fr om an enterprise perspective to allow
access by a wide variety of users. Staf ftime is saved and consistency of data is
improved.
206 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitecturePrinciples Example Set of ArchitecturePrinciples
Implications: ■This is one of three closely-r elated principles r egar ding data: data is an
asset; data is shared; and data is easily accessible
The implication is that ther ei sa ne ducation task to ensur ethat all
organizations within the enterprise understand the r elationship between
value of data, sharing of data, and accessibility to data.
■Accessibility involves the ease with which users obtain information
■The way information is accessed and displayed must be suf ﬁciently
adaptable to meet a wide range of enterprise users and their
corresponding methods of access
■Access to data does not constitute understanding of the data —
personnel should take caution not to misinterpret information
■Access to data does not necessarily grant the user access rights to modify
or disclose the data
This will r equir ea ne ducation pr ocess and a change in the
organizational culture, which curr ently supports a belief in "ownership"
of data by functional units.
Principle 13: Data Trustee
Statement: Each data element has a trustee accountable for data quality.
Rationale: One of the beneﬁts of an architected envir onment is the ability to shar edata
(e.g., text, video, sound, etc.) acr oss the enterprise. As the degree of data
sharing grows and business units r ely upon common information, it becomes
essential that only the data trustee makes decisions about the content of data.
Since data can lose its integrity when it is entered multiple times, the data
trustee will have sole r esponsibility for data entry which eliminates r edundant
human effort and data storage resources.
Note: Atrustee is dif ferent than a stewar d—at rustee is r esponsible for accuracy
and currency of the data, while responsibilities of a stewar dmay be br oader
and include data standardization and deﬁnition tasks.
Implications: ■Real tr usteeship dissolves the data "ownership" issues and allows the
data to be available to meet all users’ needs
This implies that a cultural change fr om data "ownership" to data
"trusteeship" may be required.
■The data trustee will be r esponsible for meeting quality r equirements
levied upon the data for which the trustee is accountable
■It is essential that the trustee has the ability to provide user conﬁdence in
the data based upon attributes such as "data source"
■It is essential to identify the tr ue source of the data in order that the data
authority can be assigned this trustee responsibility
This does not mean that classiﬁed sour ces will be revealed nor does it
mean the source will be the trustee.
■Information should be captured electronically once and immediately
validated as close to the source as possible
Quality control measures must be implemented to ensur ethe integrity of
the data.
Part III: ADM Guidelines and Techniques 207
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Example Set of Ar chitecturePrinciples Ar chitecturePrinciples
■As a result of sharing data across the enterprise, the trustee is
accountable and r esponsible for the accuracy and currency of their
designated data element(s) and, subsequently ,must then r ecognize the
importance of this trusteeship responsibility
Principle 14: Common Vocabulary and Data Deﬁnitions
Statement: Data is deﬁned consistently thr oughout the enterprise, and the deﬁnitions ar e
understandable and available to all users.
Rationale: The data that will be used in the development of applications must have a
common deﬁnition thr oughout the Headquarters to enable sharing of data. A
common vocabulary will facilitate communications and enable dialog to be
effective. In addition, it is required to interface systems and exchange data.
Implications: ■We a re lulled into thinking that this issue is adequately addr essed
because ther eare people with "data administration" job titles and for ums
with charters implying responsibility
Signiﬁcant additional energy and r esour ces must be committed to this
task. It is key to the success of efforts to improve the information
envir onment. This is separate from but r elated to the issue of data
element deﬁnition, which is addressed by a br oad community — this is
morelike a common vocabulary and deﬁnition.
■The enterprise must establish the initial common vocabulary for the
business; the deﬁnitions will be used uniformly throughout the
enterprise
■Whenever a new data deﬁnition is r equir ed, the deﬁnition effort will be
co-or dinated and reconciled with the corporate "glossary" of data
descriptions
The enterprise data administrator will provide this co-ordination.
■Ambiguities r esulting from multiple parochial deﬁnitions of data must
give way to accepted enterprise-wide deﬁnitions and understanding
■Multiple data standardization initiatives need to be co-ordinated
■Functional data administration responsibilities must be assigned
Principle 15: Data Security
Statement: Data is protected fr om unauthorized use and disclosure. In addition to the
traditional aspects of national security classiﬁcation, this includes, but is not
limited to, protection of pr e-decisional, sensitive, source selection-sensitive,
and proprietary information.
Rationale: Open sharing of information and the r elease of information via r elevant
legislation must be balanced against the need to r estrict the availability of
classiﬁed, proprietary ,and sensitive information.
Existing laws and r egulations r equir ethe safeguarding of national security
and the privacy of data, while permitting fr ee and open access. Pr e-decisional
(work-in-progr ess, not yet authorized for release) information must be
protected to avoid unwarranted speculation, misinterpretation, and
inappropriate use.
208 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitecturePrinciples Example Set of ArchitecturePrinciples
Implications: ■Aggr egation of data, both classiﬁed and not, will create a large tar get
requiring review and de-classiﬁcation pr ocedur es to maintain
appropriate control
Data owners and/or functional users must determine whether the
aggr egation r esults in an increased classiﬁcation level. Appropriate
policy and pr ocedur es will be needed to handle this review and de-
classiﬁcation. Access to information based on a need-to-know policy will
force regular reviews of the body of information.
■The current practice of having separate systems to contain dif ferent
classiﬁcations needs to be rethought
Is ther eas oftwar esolution to separating classiﬁed and unclassiﬁed
data? The current har dwar esolution is unwieldy ,inefﬁcient, and costly .
It is mor eexpensive to manage unclassiﬁed data on a classiﬁed system.
Currently ,the only way to combine the two is to place the unclassiﬁed
data on the classiﬁed system, wher ei tm ust remain.
■In or der to adequately provide access to open information while
maintaining secur einformation, security needs must be identiﬁed and
developed at the data level, not the application level
■Data security safeguar ds can be put in place to restrict access to "view
only" or "never see"
Sensitivity labeling for access to pre-decisional, decisional, classiﬁed,
sensitive, or proprietary information must be determined.
■Security must be designed into data elements fr om the beginning; it
cannot be added later
Systems, data, and technologies must be pr otected from unauthorized
access and manipulation. Headquarters information must be
safeguar ded against inadvertent or unauthorized alteration, sabotage,
disaster ,o rd isclosure.
■New policies ar eneeded on managing duration of protection for pr e-
decisional information and other works-in-pr ogress, in consideration of
content freshness
20.6.3 Application Principles
Principle 16: Technology Independence
Statement: Applications areindependent of speciﬁc technology choices and ther eforecan
operate on a variety of technology platforms.
Rationale: Independence of applications fr om the underlying technology allows
applications to be developed, upgraded, and operated in the most cost-
effective and timely way .Otherwise technology ,which is subject to continual
obsolescence and vendor dependence, becomes the driver rather than the user
requirements themselves.
Realizing that every decision made with respect to IT makes us dependent on
that technology ,the intent of this principle is to ensur ethat Application
Softwar ei sn ot dependent on speciﬁc har dwar eand operating systems
software.
Part III: ADM Guidelines and Techniques 209
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Example Set of Ar chitecturePrinciples Ar chitecturePrinciples
Implications: ■This principle will requir estandards which support portability
■For Commer cial Off-The-Shelf (COTS) and Government Of f-The-Shelf
(GOTS) applications, ther emay be limited curr ent choices, as many of
these applications ar etechnology and platform-dependent
■Subsystem interfaces will need to be developed to enable legacy
applications to inter operate with applications and operating
environments developed under the Enterprise Architecture
■Middlewar eshould be used to decouple applications from speciﬁc
softwar esolutions
■As an example, this principle could lead to use of Java, and futur eJava-
like protocols, which give a high degr ee of priority to platform-
independence
Principle 17: Ease-of-Use
Statement: Applications areeasy to use. The underlying technology is transparent to
users, so they can concentrate on tasks at hand.
Rationale: The moreau ser has to understand the underlying technology ,the less
productive that user is. Ease-of-use is a positive incentive for use of
applications. It encourages users to work within the integrated information
envir onment instead of developing isolated systems to accomplish the task
outside of the enterprise’s integrated information environment. Most of the
knowledge r equir ed to operate one system will be similar to others. Training is
kept to a minimum, and the risk of using a system improperly is low.
Using an application should be as intuitive as driving a different car.
Implications: ■Applications will be r equir ed to have a common "look-and-feel" and
support er gonomic r equir ements; hence, the common look-and-feel
standar dmust be designed and usability test criteria must be developed
■Guidelines for user interfaces should not be constrained by narr ow
assumptions about user location, language, systems training, or physical
capability
Factors such as linguistics, customer physical inﬁrmities (visual acuity ,
ability to use keyboard/mouse), and pr oﬁciency in the use of technology
have broad ramiﬁcations in determining the ease-of-use of an
application.
20.6.4 T echnology Principles
Principle 18: Requirements-Based Change
Statement: Only in response to business needs ar echanges to applications and
technology made.
Rationale: This principle will foster an atmospher ewherethe information envir onment
changes in response to the needs of the business, rather than having the
business change in response to IT changes. This is to ensur ethat the purpose
of the information support — the transaction of business — is the basis for any
proposed change.
Unintended effects on business due to IT changes will be minimized.
210 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitecturePrinciples Example Set of ArchitecturePrinciples
Achange in technology may pr ovide an opportunity to improve the business
process and, hence, change business needs.
Implications: ■Changes in implementation will follow full examination of the pr oposed
changes using the Enterprise Architecture
■Ther ei sn of unding for a technical impr ovement or system development
unless a documented business need exists
■Change management processes conforming to this principle will be
developed and implemented
■This principle may bump up against the responsive change principle
We m ust ensur ethe r equir ements documentation pr ocess does not
hinder responsive change to meet legitimate business needs. The
purpose of this principle is to keep the focus on business, not technology
needs — responsive change is also a business need.
Principle 19: Responsive Change Management
Statement: Changes to the enterprise information environment ar eimplemented in a
timely manner.
Rationale: If people ar et ob ee xpected to work within the enterprise information
envir onment, that information envir onment must be responsive to their needs.
Implications: ■Processes for managing and implementing change must be developed
that do not create delays
■Auser who feels a need for change will need to connect with a "business
expert" to facilitate explanation and implementation of that need
■If changes ar egoing to be made, the architectures must be kept updated
■Adopting this principle might requir eadditional resources
■This will conﬂict with other principles (e.g., maximum enterprise-wide
beneﬁt, enterprise-wide applications, etc.)
Principle 20: Control Technical Diversity
Statement: T echnological diversity is controlled to minimize the non-trivial cost of
maintaining expertise in and connectivity between multiple pr ocessing
environments.
Rationale: Ther eisa real, non-trivial cost of infrastr uctur erequir ed to support alternative
technologies for pr ocessing environments. Ther eare further infrastr ucture
costs incurr ed to keep multiple processor constructs interconnected and
maintained.
Limiting the number of supported components will simplify maintainability
and reduce costs.
The business advantages of minimum technical diversity include: standar d
packaging of components; predictable implementation impact; pr edictable
valuations and returns; r edeﬁned testing; utility status; and incr eased
ﬂexibility to accommodate technological advancements. Common technology
across the enterprise brings the beneﬁts of economies of scale to the enterprise.
Technical administration and support costs ar ebetter controlled when limited
resources can focus on this shared set of technology.
Part III: ADM Guidelines and Techniques 211
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Example Set of Ar chitecturePrinciples Ar chitecturePrinciples
Implications: ■Policies, standards, and pr ocedur es that govern acquisition of
technology must be tied directly to this principle
■Technology choices will be constrained by the choices available within
the technology blueprint
Procedur es for augmenting the acceptable technology set to meet
evolving requirements will have to be developed and put in place.
■The technology baseline is not being frozen
Technology advances ar ewelcomed and will change the technology
blueprint when compatibility with the curr ent infrastr ucture,
impr ovement in operational ef ﬁciency ,o rar equir ed capability has been
demonstrated.
Principle 21: Interoperability
Statement: Softwar eand har dwar eshould conform to deﬁned standards that pr omote
interoperability for data, applications, and technology.
Rationale: Standar ds help ensur econsistency ,thus improving the ability to manage
systems and improve user satisfaction, and protect existing IT investments,
thus maximizing return on investment and r educing costs. Standar ds for
inter operability additionally help ensur esupport from multiple vendors for
their products, and facilitate supply chain integration.
Implications: ■Inter operability standards and industry standards will be followed
unless ther ei sac ompelling business r eason to implement a non-
standar dsolution
■Ap rocess for setting standards, r eviewing and revising them
periodically ,and granting exceptions must be established
■The existing IT platforms must be identiﬁed and documented
212 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 21
Stakeholder Management
21.1 Introduction
Stakeholder management is an important discipline that successful ar chitectur epractitioners can
use to win support from others. It helps them ensur ethat their projects succeed wher eothers
fail.
The beneﬁts of successful stakeholder management ar ethat:
■The most powerful stakeholders can be identiﬁed early and their input can then be used to
shape the ar chitectur e; this ensures their support and impr oves the quality of the models
produced
■Support from the mor epowerful stakeholders will help the engagement win mor e
resources, thus making the architectur eengagement mor elikely to succeed
■By communicating with stakeholders early and fr equently ,the ar chitectur eteam can
ensur ethat they fully understand the ar chitectur eprocess, and the beneﬁts of Enterprise
Architectur e; this means they can support the ar chitectur eteam mor eactively when
necessary
■The ar chitectur eteam can mor eeffectively anticipate likely reactions to the ar chitecture
models and reports, and can build into the plan the actions that will be needed to
capitalize on positive reaction while avoiding or addressing any negative reactions
■The ar chitectur eteam can identify conﬂicting or competing objectives among stakeholders
early and develop a strategy to resolve the issues arising from them
It is essential in any initiative to identify the individuals and gr oups within the or ganization
who will contribute to the development of the ar chitectur e, identify those that will gain and
those that will lose from its introduction, and then develop a strategy for dealing with them.
21.2 Approach to Stakeholder Management
Stakeholder analysis should be used during Phase A (Ar chitectur eVision) to identify the key
players in the engagement, and also be updated thr oughout each phase; dif ferent stakeholders
may be uncovered as the engagement pr ogresses through into Opportunities & Solutions,
Migration Planning, and Architectur eChange Management.
Complex ar chitectur es ar eextremely har dt om anage, not only in terms of the ar chitecture
development process itself, but also in terms of obtaining agr eement from the large numbers of
stakeholders touched by it.
For example, just as a building architect will cr eate wiring diagrams, ﬂoor plans, and elevations
to describe dif ferent facets of a building to its dif ferent stakeholders (electricians, owners,
Part III: ADM Guidelines and Techniques 213
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Approacht oStakeholder Mana gement Stak eholder Mana gement
planning ofﬁcials), so an Enterprise Architect must create dif ferent ar chitectur eviews of the
Business, Information Systems, and Technology Ar chitectur efor the stakeholders who have
concerns related to these aspects.
The T OGAF standar dspeciﬁcally identiﬁes this issue throughout the ADM through the
following concepts (see Section 31.1 ):
■Architectur eView
■Architectur eViewpoint
■Concern
■Stakeholder
21.3 Steps in the Stakeholder Management Process
The following sections detail recommended stakeholder management activity.
21.3.1 Identify Stakeholders
Identify the key stakeholders of the Enterprise Architecture.
The ﬁrst task is to brainstorm who the main Enterprise Ar chitectur estakeholders are. As part of
this, think of all the people who ar eaffected by it, who have inﬂuence or power over it, or have
an interest in its successful or unsuccessful conclusion.
It might include senior executives, project organization roles, client organization r oles, system
developers, alliance partners, suppliers, IT operations, customers, etc.
When identifying stakeholders ther ei sad anger of concentrating too heavily on the formal
structur eo fa no rganization as the basis for identiﬁcation. Informal stakeholder gr oups may be
just as powerful and inﬂuential as the formal ones.
Most individuals will belong to mor ethan one stakeholder group, and these groups tend to arise
as a result of speciﬁc events.
Look at who is impacted by the Enterprise Architectur eproject:
■Who gains and who loses from this change?
■Who controls change management of processes?
■Who designs new systems?
■Who will make the decisions?
■Who procures IT systems and who decides what to buy?
■Who controls resources?
■Who has specialist skills the project needs?
■Who has inﬂuence?
In particular ,inﬂuencers need to be identiﬁed. These will be well r espected and moving up,
participate in important meetings and committees (look at meeting minutes), know what’s going
on in the company ,b ev alued by their peers and superiors, and not necessarily be in any formal
position of power.
Although stakeholders may be both or ganizations and people, ultimately the Enterprise
214 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Stakeholder Mana gement Steps in the Stakeholder Mana gement Process
Architectur eteam will need to communicate with people. It is the corr ect individual
stakeholders within a stakeholder organization that need to be formally identiﬁed.
21.3.1.1 Sample Stakeholder Analysis
Asample stakeholder analysis that distinguishes 22 types of stakeholder ,i nﬁ ve br oad
categories, is shown in Figur e21-1.Any particular ar chitectur eproject may have more, fewer ,or
different stakeholders; and they may be grouped into more, fewer ,o rd ifferent categories.
Corporate Functions
CxO
End-user
OrganizationProject
OrganizationSystem
Operations
Suppliers Regulatory Bodies
ExternalEnterprise
Security
Data/Voice
CommunicationsInfrastructure
ManagementApplication
ManagementService DeskIT Service
Management
Technical SpecialistProduct SpecialistBusiness Process/
Functional ExpertsLine ManagementExecutives
Executives
Line Management
Business Domain
Experts
Data OwnersHR ProcurementQA/Standards
GroupsProgram
Management Office
© The Open Group
Figure 21-1 Sample Stakeholders and Categories
Consider both the Visible team — those obviously associated with the pr oject/change — and the
Invisible team — those who must make a r eal contribution to the project/change for it to be
successful but who ar enot obviously associated with it (e.g., providers of support services).
Part III: ADM Guidelines and Techniques 215
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Steps in the Stakeholder Mana gement Process Stak eholder Mana gement
21.3.2 Classify Stakeholder Positions
Develop a good understanding of the most important stakeholders and r ecordthis analysis for
reference and r efresh during the pr oject. An example stakeholder analysis is shown in Table
21-1.
Ability to Current Required Current Required
Stakeholder Disrupt Under -U nder -C ommit- Commit- Required
Group Stakeholder Change standing standing ment ment Support
CIO John Smith H MH L MH
CFO Jef fBrown M MM L M M
Table 21-1 Example Stakeholder Analysis
It is also important to assess the r eadiness of each stakeholder to behave in a supportive manner
(i.e., demonstrate commitment to the Enterprise Architectur einitiative).
This can be done by asking a series of questions:
■Is that person ready to change dir ection and begin moving towards the T arget
Architecture? If so, how ready?
■Is that person capable of being a credible advocate or agent of the proposed Enterprise
Architectur einitiative? If so, how capable?
■How involved is the individual in the Enterprise Ar chitectur einitiative? Ar ethey simply
an interested observer ,o rd ot hey need to be involved in the details?
■Has that person made a contractual commitment to the development of the Enterprise
Architecture, and its role in the governance of the development of the organization?
Then, for each person whose commitment is critical to ensur esuccess, make a judgment as to
their current level of commitment and the desired futur elevel of commitment.
21.3.3 Determine Stakeholder Management Approach
The previous steps identiﬁed a long list of people and organizations that ar eaffected by the
Enterprise Architectur eproject.
Some of these may have the power either to block or advance. Some may be interested in what
the Enterprise Ar chitectur einitiative is doing; others may not care. This step enables the team to
easily see which stakeholders ar eexpected to be blockers or critics, and which stakeholders ar e
likely to be advocates and supporters of the initiative.
Work out stakeholder power ,inﬂuence, and interest, so as to focus the Enterprise Ar chitecture
engagement on the key individuals. These can be mapped onto a power/inter est matrix, which
also indicates the strategy to adopt for engaging with them. Figur e21-2shows an example
power grid matrix.
216 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Stakeholder Mana gement Steps in the Stakeholder Mana gement Process
Power
Level of InterestHigh
Low
Low HighC
Keep SatisfiedD
Key Players
A
Minimal EffortB
Keep Informed© The Open Group
Figure 21-2 Stakeholder Power Grid
21.3.4 T ailor Engagement Deliverables
Identify catalogs, matrices, and diagrams that the ar chitectur eengagement needs to pr oduce
and validate with each stakeholder group to deliver an effective architectur emodel.
It is important to pay particular attention to stakeholder inter ests by deﬁning speciﬁc catalogs,
matrices, and diagrams that ar erelevant for a particular Enterprise Ar chitectur emodel. This
enables the ar chitectur etob ec ommunicated to, and understood by ,all the stakeholders, and
enables them to verify that the Enterprise Architectur einitiative will address their concerns.
21.4 T emplate Stakeholder Map
The following table pr ovides an example stakeholder map for a TOGAF ar chitectur eproject
which has stakeholders as identiﬁed in Figur e21-1.
Part III: ADM Guidelines and Techniques 217
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Template Stakeholder Map Stakeholder Mana gement
Catalogs, Matrices,
Stakeholder Key Concerns Class and Diagrams
CxO
(Corporate
Functions);
e.g., CEO, CFO,
CIO, COOThe high-level drivers,
goals, and objectives of the
organization, and how these
aretranslated into an
effective process and IT
architectur et oa dvance the
business.KEEP
SATISFIEDBusiness Footprint diagram
Goal/Objective/ Service
diagram
Organization
Decomposition diagram
Business Capabilities
catalog
Capability/Organization
matrix
Business Capability Map
Strategy/Capability matrix
Capability/Organization
matrix
Business Model diagram
Value Stream catalog
Value Stream Stages catalog
Value Stream/Capability
matrix
Value Stream Map
218 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Stakeholder Mana gement T emplate Stakeholder Map
Catalogs, Matrices,
Stakeholder Key Concerns Class and Diagrams
Program
Management Ofﬁce
(Corporate
Functions);
e.g., Project
Portfolio ManagersPrioritizing, funding, and
aligning change activity .An
understanding of project
content and technical
dependencies between
projects supports portfolio
management decision-
making.KEEP
SATISFIEDRequirements catalog
Project Context diagram
Beneﬁts diagram
Business Footprint diagram
Application
Communication diagram
Functional Decomposition
diagram
Business Capabilities
catalog
Capability/Organization
matrix
Business Capability Map
Strategy/Capability matrix
Capability/Organization
matrix
Business Model diagram
Value Stream catalog
Value Stream Stages catalog
Value Stream/Capability
matrix
Value Stream Map
Procurement
(Corporate
Functions);
e.g., AcquirersUnderstanding what
building blocks of the
architectur ecan be bought,
and what constraints (or
rules) ar erelevant to the
purchase. Acquirers will
shop with multiple vendors
looking for the best cost
solution while adhering to
the constraints (or rules)
derived from the
architecture, such as
standards. The key concern
is to make purchasing
decisions that ﬁt the
architecture.KEY
PLAYERSTechnology Portfolio
catalog
Technology Standards
catalog
Part III: ADM Guidelines and Techniques 219
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Template Stakeholder Map Stakeholder Mana gement
Catalogs, Matrices,
Stakeholder Key Concerns Class and Diagrams
Human Resources
(HR)
(Corporate
Functions);
e.g., HR Managers,
Training &
Development
ManagersThe roles and actors are
required to support the
architectur eand changes to
it. The key concern is
managing people
transitions.KEEP
INFORMEDOrganization
Decomposition diagram
Organization/Actor catalog
Location catalog
Application and User
Location diagram
Business Capabilities
catalog
Capability/Organization
matrix
Business Capability Map
Strategy/Capability matrix
Capability/Organization
matrix
Business Model diagram
Enterprise Security
(Corporate
Functions);
e.g., Corporate Risk
Management,
Security Ofﬁcers, IT
Security ManagersEnsuring that the
information, data, and
systems of the organization
areavailable to only those
that have permission, and
protecting the information,
data, and systems from
unauthorized tampering.KEY
PLAYERSProduct Lifecycle diagram
Data Dissemination
diagram
Data Security diagram
Actor/Role matrix
Networked Computing
Hardwar ediagram
Network and
Communications diagram
220 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Stakeholder Mana gement T emplate Stakeholder Map
Catalogs, Matrices,
Stakeholder Key Concerns Class and Diagrams
QA/Standards
Group
(Corporate
Functions);
e.g., Data Owners,
Process Owners,
Technical Standards
BodiesEnsuring the consistent
governance of the
organization’s business,
data, application, and
technology assets.KEY
PLAYERSProcess/Event/
Control/Product catalog
Contract/Measur ecatalog
Application Portfolio
catalog
Interface catalog
Technology Standards
catalog
Technology Portfolio
catalog
Value Stream catalog
Value Stream Stages catalog
Value Stream/Capability
matrix
Value Stream Map
Executive
(End-user
Organization);
e.g., Business Unit
Directors, Business
Unit CxOs, Business
Unit Head of
IT/ArchitectureThe high-level drivers,
goals, and objectives of the
organization, and how these
aretranslated into an
effective process and
architectur et oa dvance the
business.KEEP
SATISFIEDBusiness Footprint diagram
Goal/Objective/ Service
diagram
Organization
Decomposition diagram
Process Flow diagram
Application
Communication diagram
Business Capabilities
catalog
Capability/Organization
matrix
Business Capability Map
Strategy/Capability matrix
Capability/Organization
matrix
Business Model diagram
Value Stream catalog
Value Stream Stages catalog
Value Stream/Capability
matrix
Value Stream Map
Part III: ADM Guidelines and Techniques 221
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Template Stakeholder Map Stakeholder Mana gement
Catalogs, Matrices,
Stakeholder Key Concerns Class and Diagrams
Line Management
(End-user
Organization);
e.g., Senior Business
Managers,
Operations
Regional Managers,
IT ManagersTop-level functions and
processes of the
organization, and how the
key applications support
these processes.KEY
PLAYERSBusiness Footprint diagram
Organization
Decomposition diagram
Functional Decomposition
diagram
Process Flow diagram
Application
Communication diagram
Application and User
Location diagram
Business Capabilities
catalog
Capability/Organization
matrix
Business Capability Map
Strategy/Capability matrix
Capability/Organization
matrix
Business Model diagram
Value Stream catalog
Value Stream Stages catalog
Value Stream/Capability
matrix
Value Stream Map
222 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Stakeholder Mana gement T emplate Stakeholder Map
Catalogs, Matrices,
Stakeholder Key Concerns Class and Diagrams
Business Domain
Experts
(End-user
Organization);
e.g., Business
Process Experts,
Business/Process
Analyst, Process
Architect, Process
Designer,
Functional
Managers, Business
AnalystFunctional aspects of
processes and supporting
systems. This can cover the
human actors involved in
the system, the user
processes involved in the
system, the functions
required to support the
processes, and the
information required to
ﬂow in support of the
processes.KEY
PLAYERSBusiness Interaction matrix
Actor/Role matrix
Business Service/
Information diagram
Functional Decomposition
diagram
Product Lifecycle diagram
Business Use-Case diagram
Application Use-Case
diagram
Application
Communication diagram
Data Entity/Business
Function matrix
Value Stream catalog
Value Stream Stages catalog
Value Stream/Capability
matrix
Value Stream Map
IT Service
Management
(Systems
Operations);
e.g., Service
Delivery ManagerEnsuring that IT services
provided to the
organization meet the
service levels required by
that organization to succeed
in business.KEEP
INFORMEDTechnology Standards
catalog
Technology Portfolio
catalog
Contract/Measur ecatalog
Process/Application
Realization diagram
Enterprise Manageability
diagram
Part III: ADM Guidelines and Techniques 223
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Template Stakeholder Map Stakeholder Mana gement
Catalogs, Matrices,
Stakeholder Key Concerns Class and Diagrams
IT Operations —
Applications
(System
Operations);
e.g., Application
Architecture,
System & Software
EngineersDevelopment approach,
softwar emodularity and re-
use, portability migration,
and interoperability.KEY
PLAYERSProcess/Application
Realization diagram
Application/Data matrix
Application Migration
diagram
Softwar eEngineering
diagram
Platform decomposition
Diagram
Networked Computing/
Hardwar ediagram
Softwar edistribution
Diagram
IT Operations —
Infrastructure
(System
Operations);
e.g., Infrastructure
Architect, Wintel
support, Mid-range
support,
Operational DBA,
Service DeskLocation, modiﬁability ,re-
usability ,and availability of
all components of the
system. Ensuring that the
appropriate components are
developed and deployed
within the system in an
optimal manner.KEY
PLAYERSPlatform Decomposition
diagram
Technology Standards
catalog
Technology Portfolio
catalog
Enterprise Manageability
diagram
Networked Computing/
Hardwar ediagram
Processing diagram
Environments and
Locations diagram
IT Operations —
Data/Voice
Communications
(System
Operations);
e.g., Network
ManagementLocation, modiﬁability ,re-
usability ,and availability of
communications and
networking services.
Ensuring that the
appropriate
communications and
networking services are
developed and deployed
within the system in an
optimal manner.KEY
PLAYERSNetwork and
Communications diagram
224 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Stakeholder Mana gement T emplate Stakeholder Map
Catalogs, Matrices,
Stakeholder Key Concerns Class and Diagrams
Executive
(Project
Organization);
e.g., Sponsor,
Program ManagerOn-time, on-budget
delivery of a change
initiative that will realize
expected beneﬁts for the
organization.KEEP
INFORMEDRequirements catalog
Principles catalog
Value Chain diagram
Solution Concept diagram
Functional Decomposition
diagram
Application and User
Location diagram
Business Capabilities
catalog
Capability/Organization
matrix
Business Capability Map
Strategy/Capability matrix
Capability/Organization
matrix
Business Model diagram
Value Stream catalog
Value Stream Stages catalog
Value Stream/Capability
matrix
Value Stream Map
Part III: ADM Guidelines and Techniques 225
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Template Stakeholder Map Stakeholder Mana gement
Catalogs, Matrices,
Stakeholder Key Concerns Class and Diagrams
Line Management
(Project
Organization);
e.g., Project
ManagerOperationally achieving on-
time, on-budget delivery of
achange initiative with an
agreed scope.KEEP
INFORMEDApplication
Communication diagram
Functional Decomposition
diagram
Environments and
Locations diagram
Business Capabilities
catalog
Capability/Organization
matrix
Business Capability Map
Strategy/Capability matrix
Capability/Organization
matrix
Business Model diagram
Value Stream catalog
Value Stream Stages catalog
Value Stream/Capability
matrix
Value Stream Map
226 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Stakeholder Mana gement T emplate Stakeholder Map
Catalogs, Matrices,
Stakeholder Key Concerns Class and Diagrams
Business
Process/Functional
Expert
(Project
Organization);
e.g., Financials
FICO®Functional
Consultant, HR
Functional
ConsultantAdding mor edetail to the
functional requirements of a
change initiative based on
experience and interaction
with business domain
experts in the end-user
organization.KEY
PLAYERSProcess Flow diagram
Business Use-Case diagram
Business
Service/Information
diagram
Functional Decomposition
diagram
Application
Communication diagram
Business Capabilities
catalog
Capability/Organization
matrix
Business Capability Map
Strategy/Capability matrix
Capability/Organization
matrix
Business Model diagram
Value Stream catalog
Value Stream Stages catalog
Value Stream/Capability
matrix
Value Stream Map
Product Specialist
(Project
Organization);
e.g., Portal Product
SpecialistSpecifying technology
product designs in order to
meet project requirements
and comply with the
Architectur eVision of the
solution.
In a packages and packaged
services environment,
product expertise can be
used to identify product
capabilities that can be
readily leveraged and can
provide guidance on
strategies for product
customization.KEY
PLAYERSSoftwar eEngineering
diagram
Application/Data matrix
Part III: ADM Guidelines and Techniques 227
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Template Stakeholder Map Stakeholder Mana gement
Catalogs, Matrices,
Stakeholder Key Concerns Class and Diagrams
Technical Specialist
(Project
Organization);
e.g., Application
ArchitectSpecifying technology
product designs in order to
meet project requirements
and comply with the
Architectur eVision of the
solution.KEY
PLAYERSSoftwar eEngineering
diagram
Platform Decomposition
diagram
Process/Application
Realization diagram
Application/Data matrix
Application Migration
diagram
Regulatory Bodies
(Outside Services);
e.g., Financial
Regulator ,Industry
RegulatorReceipt of the information
they need in order to
regulate the client
organization, and ensuring
that their information
requirements ar eproperly
satisﬁed. Interested in
reporting processes, and the
data and applications used
to provide regulatory return
information.KEEP
SATISFIEDBusiness Footprint diagram
Application
Communication diagram
Suppliers
(Outside Services);
e.g., Alliance
Partners, Key
SuppliersEnsuring that their
information exchange
requirements ar emet in
order that agreed service
contracts with the client
organizations can be
fulﬁlled.KEEP
SATISFIEDBusiness Footprint diagram
Business
Service/Information
diagram
Application
Communication diagram
Business Capabilities
catalog
Capability/Organization
matrix
Business Capability Map
Strategy/Capability matrix
Capability/Organization
matrix
Business Model diagram
Value Stream catalog
Value Stream Stages catalog
Value Stream/Capability
matrix
Value Stream Map
228 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 22
Architectur ePatterns
This chapter provides guidelines for using architectur epatterns.
22.1 Introduction
Patterns for describing Enterprise Ar chitectur es ar ebecoming increasingly important to
practitioners. The diverse and multi-disciplinary natur eo fE nterprise Ar chitectur erequir es that
patterns be developed in different disciplines, domains, and levels of detail.
Previous versions of this standar ddid not fully embrace ar chitectur epatterns due to their
perceived lack of maturity .Today ,many organizations ar eusing patterns to describe their
architectur es at various levels ranging from softwar edesign patterns to business patterns. It
remains true that ther ei sn os ingle standar dfor describing Enterprise Ar chitectur epatterns.
However ,i tcan be said that ther ei sap attern for describing patterns.
22.1.1 Background
A"pattern" has been deﬁned as: "an idea that has been useful in one practical context and will
probably be useful in others" (Source: Analysis Patterns — Re-usable Object Models, by M.
Fowler).
In the TOGAF standard, patterns ar econsider ed to be a way of putting building blocks into
context; for example, to describe a re-usable solution to a problem. Building blocks ar ewhat you
use: patterns can tell you how you use them, when, why ,and what trade-offs you have to make
in doing so.
Patterns offer the promise of helping the architect to identify combinations of Ar chitecture
and/or Solution Building Blocks (ABBs/SBBs) that have been pr oven to deliver ef fective
solutions in the past, and may provide the basis for effective solutions in the future.
Pattern techniques ar egenerally acknowledged to have been established as a valuable
architectural design technique by Christopher Alexander ,ab uildings architect, who described
this approach in his book The Timeless W ay of Building ,published in 1979. This book provides an
introduction to the ideas behind the use of patterns, and Alexander followed it with two further
books ( APattern Language and The Oregon Experiment )i nw hich he expanded on his description
of the features and beneﬁts of a patterns approach to architecture.
Softwar eand buildings architects have many similar issues to addr ess, and so it was natural for
softwar earchitects to take an interest in patterns as an architectural tool. Many papers and
books have been published on them since Alexander ’s 1979 book, perhaps the most r enowned
being Design Patterns: Elements of Re-usable Object-Oriented Softwar e(Gamma et al., 1994). This
book describes simple and elegant solutions to speciﬁc pr oblems in object-oriented softwar e
design.
Part III: ADM Guidelines and Techniques 229
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Introduction Ar chitecturePatterns
22.1.2 Content of a Pattern
Several dif ferent formats ar eused in the literatur efor describing patterns, and no single format
has achieved widespread acceptance. However ,therei sb road agreement on the types of things
that a pattern should contain. The headings which follow ar etaken fr om Pattern-Oriented
Softwar eArchitectur e: A System of Patterns (Buschmann et al., 1996). The elements described
below will be found in most patterns, even if different headings ar eused to describe them.
Name A meaningful and memorable way to r efer to the pattern, typically a single wor d
or short phrase.
Problem A description of the pr oblem indicating the intent in applying the pattern — the
intended goals and objectives to be r eached within the context and for ces
described below (perhaps with some indication of their priorities).
Context The preconditions under which the pattern is applicable — a description of the
initial state befor ethe pattern is applied.
Forces A description of the r elevant forces and constraints, and how they interact/conﬂict
with each other and with the intended goals and objectives. The description
should clarify the intricacies of the problem and make explicit the kinds of trade-
offs that must be consider ed. (The need for such trade-offs is typically what makes
the problem dif ﬁcult, and generates the need for the pattern in the ﬁrst place.) The
notion of "forces" equates in many ways to the "qualities" that architects seek to
optimize, and the concerns they seek to addr ess, in designing ar chitectur es. For
example:
—S ecurity ,robustness, reliability ,fault-tolerance
—M anageability
—E fﬁciency ,performance, throughput, bandwidth r equir ements, space
utilization
—S calability (incremental growth on-demand)
—E xtensibility ,evolvability ,maintainability
—M odularity ,independence, r e-usability ,openness, composability (plug-and-
play), portability
—C ompleteness and correctness
—E ase-of-construction
—E ase-of-use
—e tc., . ..
Solution A description, using text and/or graphics, of how to achieve the intended goals
and objectives. The description should identify both the solution’s static str ucture
and its dynamic behavior — the people and computing actors, and their
collaborations. The description may include guidelines for implementing the
solution. Variants or specializations of the solution may also be described.
Resulting Context
The post-conditions after the pattern has been applied. Implementing the solution
normally requires trade-offs among competing forces.
This element describes which forces have been resolved and how ,and which
remain unr esolved. It may also indicate other patterns that may be applicable in
the new context. (A pattern may be one step in accomplishing some lar ger goal.)
230 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitecturePatterns Intr oduction
Any such other patterns will be described in detail under Related Patterns.
Examples One or mor esample applications of the pattern which illustrate each of the other
elements: a speciﬁc problem, context, and set of for ces; how the pattern is applied;
and the resulting context.
Rationale An explanation/justiﬁcation of the pattern as a whole, or of individual
components within it, indicating how the pattern actually works, and why — how
it resolves the forces to achieve the desired goals and objectives, and why this is
"good". The Solution element of a pattern describes the external str uctur eand
behavior of the solution: the Rationale provides insight into its internal workings.
Related Patterns
The r elationships between this pattern and others. These may be pr edecessor
patterns, whose resulting contexts correspond to the initial context of this one; or
successor patterns, whose initial contexts corr espond to the resulting context of
this one; or alternative patterns, which describe a dif ferent solution to the same
problem, but under dif ferent for ces; or co-dependent patterns, which may/must be
applied along with this pattern.
Known Uses Known applications of the pattern within existing systems, verifying that the
pattern does indeed describe a proven solution to a recurring pr oblem. Known
Uses can also serve as Examples.
Patterns may also begin with an Abstract providing an overview of the pattern and indicating
the types of problems it addr esses. The Abstract may also identify the target audience and what
assumptions ar emade of the reader.
22.1.3 T erminology
Although design patterns have been the focus of widespread inter est in the softwar eindustry
for several years, particularly in the object-oriented and component-based softwar eﬁelds, it is
only recently that ther ehas been incr easing interest in ar chitectur epatterns — extending the
principles and concepts of design patterns to the architectur edomain.
The technical literatur erelating to this ﬁeld is complicated by the fact that many people in the
softwar eﬁeld use the term "ar chitectur e" to refer to software, and many patterns described as
"architectur epatterns" ar ehigh-level softwar edesign patterns. This simply makes it all the mor e
important to be precise in the use of terminology.
22.1.3.1 Ar chitectur ePatterns and Design Patterns
The term "design pattern" is often used to r efer to any pattern which addresses issues of
softwar earchitectur e, design, or programming implementation. In Pattern-Oriented Softwar e
Architecture: A System of Patterns ,the authors deﬁne these three types of patterns as follows:
■AnArchitecture Pattern expr esses a fundamental str uctural organization or schema for
softwar esystems
It provides a set of predeﬁned subsystems, speciﬁes their r esponsibilities, and includes
rules and guidelines for organizing the relationships between them.
Part III: ADM Guidelines and Techniques 231
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Introduction Ar chitecturePatterns
■ADesign Pattern provides a scheme for reﬁning the subsystems or components of a
softwar esystem, or the relationships between them
It describes a commonly recurring str uctur eo fc ommunicating components that solves a
general design problem within a particular context.
■AnIdiom is a low-level pattern speciﬁc to a programming language
An idiom describes how to implement particular aspects of components or the
relationships between them using the features of the given language.
These distinctions ar euseful, but it is important to note that ar chitectur epatterns in this context
still refers solely to softwar earchitectur e. Softwar earchitectur ei sc ertainly an important part of
the focus of the TOGAF standard, but it is not its only focus.
In this section we ar econcerned with patterns for enterprise system architecting. These ar e
analogous to softwar earchitectur eand design patterns, and borr ow many of their concepts and
terminology ,but focus on providing re-usable models and methods speciﬁcally for the
architecting of enterprise information systems — comprising softwar e, har dwar e, networks, and
people — as opposed to purely softwar esystems.
22.1.3.2 Patterns and the Architectur eContinuum
Although ar chitectur epatterns have not (as yet) been integrated into the TOGAF standard, each
of the ﬁrst four main phases of the ADM (Phases A through D) gives an indication of the stage at
which relevant re-usable ar chitectur eassets fr om the Enterprise Ar chitectur eContinuum should
be considered for use. Architectur epatterns ar eone such asset.
An enterprise that adopts a formal approach to the use and r e-use of ar chitectur epatterns will
normally integrate their use into the Enterprise Architectur eContinuum.
22.1.3.3 Patterns and Views
Architectur eviews ar eselected parts of one or mor emodels r epresenting a complete system
architectur e, focusing on those aspects that addr ess the concerns of one or mor estakeholders.
Patterns can provide help in designing such models, and in composing views based on them.
22.1.3.4 Patterns and Business Scenarios
Relevant architectur epatterns may well be identiﬁed in the work on business scenarios.
22.2 Some Pattern Resources
■The Patterns Home Page (refer to hillside.net/patterns )hosted by the Hillside Gr oup
provides information about patterns, links to online patterns, papers, and books dealing
with patterns, and patterns-related mailing lists
■The Patterns-Discussion FAQ (refer to g.oswego.edu/dl/pd-FAQ/pd-FAQ.html )
maintained by Doug Lea pr ovides a very thorough and highly readable FAQ about
patterns
■Patterns and Software: Essential Concepts and T erminology by Brad Appleton (refer to
www.bradapp.com/docs/patterns-intro.html )provides another thorough and r eadable
account of the patterns ﬁeld
232 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitecturePatterns Some Pattern Resources
■The SOA Patterns community website (r efer to www.soapatterns.org/ ), dedicated to the
ongoing development and expansion of the SOA design pattern catalog
■The Cloud Computing Design Patterns community website (r efer to
www.cloudpatterns.org )
Part III: ADM Guidelines and Techniques 233
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitecturePatterns
234 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 23
Gap Analysis
The technique known as gap analysis is widely used in the T OGAF Ar chitectur eDevelopment Method
(ADM) to validate an ar chitectur ethat is being developed. The basic premise is to highlight a shortfall
between the Baseline Ar chitectur eand the T arget Ar chitectur e; that is, items that have been deliberately
omitted, accidentally left out, or not yet deﬁned.
23.1 Introduction
Akey step in validating an ar chitectur ei st oc onsider what may have been forgotten. The
architectur emust support all of the essential information pr ocessing needs of the or ganization.
The most critical source of gaps that should be considered is stakeholder concerns that have not
been addressed in prior architectural work.
Potential sources of gaps include:
■Business domain gaps:
—P eople gaps (e.g., cross-training requirements)
—P rocess gaps (e.g., process inefﬁciencies)
—T ools gaps (e.g., duplicate or missing tool functionality)
—Information gaps
—M easurement gaps
—F inancial gaps
—F acilities gaps (buildings, ofﬁce space, etc.)
■Data domain gaps:
—D ata not of sufﬁcient currency
—D ata not located wher ei ti sn eeded
—N ot the data that is needed
—D ata not available when needed
—D ata not created
—D ata not consumed
—D ata relationship gaps
Part III: ADM Guidelines and Techniques 235
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Introduction Gap Analysis
■Applications impacted, eliminated, or created
■Technologies impacted, eliminated, or created
23.2 Suggested Steps
The suggested steps ar ea sf ollows:
■Draw up a matrix with all the Ar chitectur eBuilding Blocks (ABBs) of the Baseline
Architectur eo nt he vertical axis, and all the ABBs of the T arget Ar chitectur eo nt he
horizontal axis
■Add to the Baseline Ar chitectur eaxis a ﬁnal row labeled "New", and to the T arget
Architectur eaxis a ﬁnal column labeled "Eliminated"
■Wher eanABB is available in both the Baseline and T arget Ar chitectur es, recordthis with
"Included" at the intersecting cell
■Wher ea nA BB from the Baseline Ar chitectur ei sm issing in the T arget Ar chitectur e, each
must be reviewed
If it was correctly eliminated, mark it as such in the appr opriate "Eliminated" cell. If it was
not, an accidental omission in the T arget Ar chitectur ehas been uncovered that must be
addr essed by reinstating the ABB in the next iteration of the ar chitectur edesign — mark it
as such in the appropriate "Eliminated" cell.
■Wher ea nA BB from the T arget Ar chitectur ecannot be found in the Baseline Ar chitecture,
mark it at the intersection with the "New" r ow as a gap that needs to ﬁlled, either by
developing or procuring the building block
When the exercise is complete, anything under "Eliminated" or "New" is a gap, which should
either be explained as correctly eliminated, or marked as to be addr essed by reinstating or
developing/procuring the function.
23.3 Example
Figur e23-1shows an example analysis for ABBs that ar eservices from the Network Services
category of the T OGAF TRM, and shows a number of services from the Baseline Ar chitecture
missing from the Target Architecture.
236 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Gap Analysis Example
Target
Architecture
Baseline
ArchitectureVideo
Conferencing
ServicesEnhanced
Telephony
ServicesMailing List
ServicesEliminated
Services
Broadcast
Services
Video
Conferencing
Services
Enhanced
Telephony
Services
Shared Screen
Services
NewIncluded
Potential match
Gap: Enhanced
services to be
developed or
producedGap: To be
developed or
producedUnintentionally
excluded -
a gap in Target
ArchitectureIntentionally
eliminated
© The Open Group
Figure 23-1 Gap Analysis Example
Part III: ADM Guidelines and Techniques 237
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Gap Analysis
238 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 24
Migration Planning Techniques
This chapter contains a number of techniques used to support migration planning in Phases E and F.
24.1 Implementation Factor Assessment & Deduction Matrix
The technique of cr eating an Implementation Factor Assessment and Deduction matrix can be
used to document factors impacting the architectur eImplementation and Migration Plan.
The matrix should include a list of the factors to be considered, their descriptions, and the
deductions that indicate the actions or constraints that have to be taken into consideration when
formulating the plans.
Factors typically include:
■Risks
■Issues
■Assumptions
■Dependencies
■Actions
■Impacts
An example matrix is shown in Figur e24-1.
Change in Technology Shut down the message
centers, saving 700
personnel, and have
them replaced by email.• Need for personnel
training, re-assignment
• Email has major
personnel savings and
should be given priority
Consolidation of Services
Introduction of New
Customer Service<Name of Factor>FactorImplementation Factor Assessment and Deduction Matrix
Description Deduction
<Description of Factor> <Impact on Migration Plan>
© The Open Group
Figure 24-1 Implementation Factor Assessment and Deduction Matrix
Part III: ADM Guidelines and Techniques 239
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Implementation Factor Assessment & Deduction Matrix Migration Planning Techniques
24.2 Consolidated Gaps, Solutions, & Dependencies Matrix
The technique of cr eating a Consolidated Gaps, Solutions, and Dependencies matrix allows the
architect to gr oup the gaps identiﬁed in the domain ar chitectur egap analysis results and assess
potential solutions and dependencies to one or mor egaps.
This matrix can be used as a planning tool when creating work packages. The identiﬁed
dependencies will drive the creation of projects and migration planning in Phases E and F.
An example matrix is shown in Figur e24-2.
BusinessArchitecture No.Consolidated Gaps, Solutions, and Dependencies Matrix
Gap Potential Solutions Dependencies
New Order Processing
Process
New Order Processing
ApplicationUse COTS software tool
process
Implement custom
solution1
2
3Application COTS software tool X
Develop in-house
Information Consolidated Customer
Information BaseUse COTS customer
base
Develop customer data
martDrives applications (2)
© The Open Group
Figure 24-2 Consolidated Gaps, Solutions, and Dependencies Matrix
24.3 Architecture Deﬁnition Increments Table
The technique of creating an Ar chitectur eDeﬁnition Increments table allows the architect to plan
aseries of Transition Ar chitectur es outlining the status of the Enterprise Ar chitectur ea ts peciﬁed
times.
Atable should be drawn up, as shown in Figur e24-3,listing the projects and then assigning
their incremental deliverables across the Transition Architectures.
240 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Migration Planning Tec hniques Ar chitectureDeﬁnition Increments Table
ProjectArchitecture Definition - Project Objectives by Increment
(Example Only)
Transition
Architecture 1:
PreparationTransition
Architecture 2:
Initial Operational
CapabilityTransition
Architecture 3:
Benefits CommentsApril 2018/2019 April 2019/2020 April 2020/2021
Enterprise
e-Services
CapabilityTraining and Business
Processe-Licensing
Capabilitye-Employment
Benefits
IT e-Forms Design and Build
IT e-Information
EnvironmentDesign and Build
Information
EnvironmentClient Common Data
Web Content
Design and BuildEnterprise Common
Data Component
Management
Design and Build
.  .  . .  .  . .  .  . .  .  . .  .  .
© The Open Group
Figure 24-3 Architectur eDeﬁnition Increments Table
24.4 T ransition Architecture State Evolution Table
The technique of cr eating the Transition Ar chitectur eState Evolution table allows the architect to
show the proposed state of the ar chitectur es at various levels using the deﬁned taxonomy (e.g.,
the TOGAF TRM).
Atable should be drawn, listing the services from the taxonomy used in the enterprise, the
Transition Architectures, and proposed transformations, as shown in Figur e24-4.
All Solution Building Blocks (SBBs) should be described with r espect to their delivery and
impact on these services. They should also be marked to show the pr ogression of the Enterprise
Architectur e. In the example, wher etarget capability has been r eached, this is shown as "new" or
"retain"; wher ecapability is transitioned to a new solution, this is marked as "transition"; and
wher eac apability is to be replaced, this is marked as "replace".
Sub-DomainArchitectural State using the Technical Reference Model
Transition
Architecture 1Transition
Architecture 2Service
.  .  . .  .  . .  .  . .  .  . .  .  .Transition
Architecture 3
Infrastructure
ApplicationsInformation
Exchange Services
Data Management
ServicesSolution System A
(replace)
Solution System D
(retain)Solution System B-1
(transition)
Solution System D
(retain)Solution System B-2
(new)
Solution System D
(retain)
© The Open Group
Figure 24-4 Transition Architectur eState Evolution Table
Another technique (not shown here) is to use color coding in the matrix; for example:
Part III: ADM Guidelines and Techniques 241
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Tr ansition Ar chitectureState Evolution T able Migr ation Planning Techniques
■Green: service SBB in place (either new or retained)
■Yellow: service being transitioned into a new solution
■Red: service to be replaced
24.5 Business Value Assessment Technique
Atechnique to assess business value is to draw up a matrix based on a value index dimension
and a risk index dimension. An example is shown in Figur e24-5.The value index should
include criteria such as compliance to principles, ﬁnancial contribution, strategic alignment, and
competitive position. The risk index should include criteria such as size and complexity ,
technology ,organizational capacity ,and impact of a failur e. Each criterion should be assigned an
individual weight.
The index and its criteria and weighting should be developed and appr oved by senior
management. It is important to establish the decision-making criteria befor ethe options ar e
known.
Project B
Project EProject A
Project C
Project D
Project F
Project G
Project HValue
RiskOn targetAt riskIn trouble(Project size indicated by size of circle.)
© The Open Group
Figure 24-5 Sample Project Assessment with Respect to Business Value and Risk
242 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 25
Interoperability Requirements
This chapter provides guidelines for deﬁning and establishing interoperability requirements.
25.1 Overview
Adeﬁnition of inter operability is "the ability to shar einformation and services". Deﬁning the
degr ee to which the information and services ar et ob es hared is a very useful ar chitectural
requirement, especially in a complex organization and/or extended enterprise.
The determination of interoperability is present throughout the Ar chitectur eDevelopment
Method (ADM) as follows:
■In the Ar chitectur eVision (Phase A), the natur eand security considerations of the
information and service exchanges ar eﬁrst revealed within the business scenarios
■In the Business Ar chitectur e(Phase B), the information and service exchanges ar efurther
deﬁned in business terms
■In the Data Ar chitectur e(Phase C), the content of the information exchanges is detailed
using the corporate data and/or information exchange model
■In the Application Ar chitectur e(Phase C), the way that the various applications ar eto
shar ethe information and services is speciﬁed
■In the Technology Ar chitectur e(Phase D), the appr opriate technical mechanisms to permit
the information and service exchanges ar especiﬁed
■In Opportunities & Solutions (Phase E), the actual solutions (e.g., Commercial Of f-The-
Shelf (COTS) packages) ar eselected
■In Migration Planning (Phase F), the interoperability is logically implemented
25.2 Deﬁning Interoperability
Ther eare m any ways to deﬁne interoperability and the aim is to deﬁne one that is consistently
applied within the enterprise and extended enterprise. It is best that both the enterprise and the
extended enterprise use the same deﬁnitions.
Many organizations ﬁnd it useful to categorize interoperability as follows:
■Operational or Business Interoperability deﬁnes how business processes ar et ob es hared
■Information Interoperability deﬁnes how information is to be shared
■Technical Interoperability deﬁnes how technical services ar et ob es hared or at least
connect to one another
Part III: ADM Guidelines and Techniques 243
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Deﬁning Interoper ability Inter operability Requirements
From an IT perspective, it is also useful to consider inter operability in a similar vein to
Enterprise Application Integration (EAI); speciﬁcally:
■Presentation Integration/Interoperability is wher eac ommon look-and-feel appr oach
through a common portal-like solution guides the user to the underlying functionality of
the set of systems
■Information Integration/Interoperability is wher ethe corporate information is seamlessly
shar ed between the various corporate applications to achieve, for example, a common set
of client information
Normally this is based upon a commonly accepted corporate ontology and shar ed services
for the structure, quality ,access, and security/privacy for the information.
■Application Integration/Interoperability is wher ethe corporate functionality is integrated
and shareable so that the applications ar enot duplicated (e.g., one change of addr ess
service/component; not one for every application) and ar eseamlessly linked together
through functionality such as workﬂow
This impacts the business and infrastr uctur eapplications and is very closely linked to
corporate business process uniﬁcation/interoperability.
■Technical Integration/Interoperability includes common methods and shared services for
the communication, storage, pr ocessing, and access to data primarily in the application
platform and communications infrastructur edomains
This interoperability is premised upon the degree of rationalization of the corporate IT
infrastructur e, based upon standar ds and/or common IT platforms. For example, multiple
applications sharing one infrastr uctur eo r1 0,000 corporate websites using one centralized
content management/web server (rather than thousands of servers and webmasters
spread throughout the country/globe).
Many organizations create their own interoperability models, such as illustrated in the example
below from the Canadian Government. They have a high-level deﬁnition of the thr ee classes of
inter operability and identify the natur eo ft he information and services that they wish to shar e.
Inter operability is coined in terms of e-enablers for e-Government. Their inter operability
breakdown is as follows:
■Information Interoperability:
—K nowledge management
—B usiness intelligence
—Information management
—T rusted identity
■Business Interoperability:
—D elivery networks
—e -Democracy
—e -Business
—E nterprise resource management
—R elationship and case management
244 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Interoperability Requir ements Deﬁning Interoperability
■Technical Interoperability:
—ITinfrastructure
In certain architectural approaches, such as system of systems or a federated model,
inter operability is a str ongly recommended best practice that will determine how the systems
interact with each other .Ak ey consideration will be the enterprise’s business operating model.
25.3 Enterprise Operating Model
Key to establishing interoperability is the determination of the corporate operating model,
wher ethe operating model is "the necessary level of business process integration and
standar dization for delivering goods and services to customers. An operating model describes
how a company wants to thrive and gr ow.B yp roviding a mor estable and actionable view of
the company than strategy ,the operating model drives the design of the foundation for
execution."4
For example, if lines of business or business units only need to shar edocuments, then the
Architectur eand Solution Building Blocks (ABBs and SBBs) may be simpler than if ther ei sa
need to shar estructur ed transaction data. Similarly ,i fthe Ar chitectur eVision includes a shar ed
services environment, then it is useful to deﬁne the level the services ar et ob es hared.
The corporate operating model will normally indicate what type of interoperability appr oach
will be appropriate. This model should be determined in Phase A (Ar chitectur eVision) if not in
Phase B (Business Architecture), and deﬁnitely by Phase E (Opportunities & Solutions).
Complex enterprises and/or extended enterprises (e.g., supply chain) may have mor ethan one
type of operating model. For example, it is common for the internal operating model (and
supporting interoperability model) to differ from the one used for the extended enterprise.
25.4 Reﬁning Interoperability
Implementing interoperability r equir es the cr eation, management, acceptance, and enfor cement
of realistic standards that ar eSMAR T(Speciﬁc, Measurable, Actionable, Realistic, and T ime-
bound). Clear measures of interoperability ar ekey to success.
Architectur ei st he key for identifying standards and facilitated sessions (brainstorming) will
examine potential pragmatic ways (that ﬁt within the curr ent or emerging business culture) to
achieve the requisite degree of interoperability.
Inter operability should be r eﬁned so that it meets the needs of the enterprise and/or extended
enterprise in an unambiguous way .The reﬁned interoperability measures (degrees, types, and
high-level tar gets) should be part of or r eferr ed to the Enterprise Ar chitectur estrategic dir ection.
These measures ar einstantiated within a transformation strategy that should be embedded
within the T arget Ar chitectur edeﬁnition and pragmatically implemented in the T ransition
Architectur es. Upon completion, also update the consolidated gap analysis r esults and
dependencies to ensur ethat all of the brainstorming nuggets ar ecaptured.
An example of specifying inter operability is the Degrees of Interoperability (used within the
Canadian Department of National Defense and NA TO). These or ganizations wer efocused on
the sharing of information and came up with four degrees of interoperability as follows:
4.Enterprise Ar chitecturea sStrategy(Ross et al., 2006) provides potential models.
Part III: ADM Guidelines and Techniques 245
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Reﬁning Interoper ability Inter operability Requirements
■Degree 1: Unstructured Data Exchange involves the exchange of human-interpr etable
unstructur ed data, such as the free text found in operational estimates, analysis, and
papers
■Degree 2: Structured Data Exchange involves the exchange of human-interpr etable
structur ed data intended for manual and/or automated handling, but r equir es manual
compilation, receipt, and/or message dispatch
■Degree 3: Seamless Sharing of Data involves the automated sharing of data amongst
systems based on a common exchange model
■Degree 4: Seamless Sharing of Information is an extension of Degree 3 to the universal
interpretation of information through data processing based on co-operating applications
These degrees should be further reﬁned and made technically meaningful for each of the
degrees. An example reﬁnement of Degree 3 with four subclassiﬁcations follows:
■3A: Formal Message Exchange
■3B: Common Data Exchange
■3C: Complete Data Exchange
■3D: Real-time Data Exchange
The intent is to specify the detailed degr ees of interoperability to the requisite level of detail so
that they ar etechnically meaningful.
These degrees ar every useful for specifying the way that information has to be exchanged
between the various systems and pr ovide critical direction to the projects implementing the
systems.
Similar measures should be established to determine service/business and technical
interoperability.
25.5 Determining Interoperability Requirements
Co-existence between emer ging and existing systems, especially during transformation, will be a
major challenge and brainstorming should attempt to ﬁgur eout what has to be done to r educe
the pain. It is imperative to involve the operations management staf fand architects in this step
as they will be responsible for operating the portfolio deliverables.
For example, ther emight be a need for a "wrapper" application (an application that acts as the
interface [a.k.a. interpr eter] between the legacy application and the emerging infrastr ucture).
Indeed, pragmatically ,i nt he "if it works do not ﬁx it" world, the "wrapper" might become a
permanent solution.
Regar dless, using the gap analysis results and business scenarios as a foundation, brainstorm the
IT issues and work them through to ensur ethat all of the gaps ar eclearly identiﬁed and
addressed and verify that the organization-speciﬁc requirements will be met.
It is important to note that the ensuing development pr ocess must include recognition of
dependencies and boundaries for functions and should take account of what pr oducts ar e
available in the marketplace. An example of how this might be expr essed can be seen in the
building blocks example (see Part III, Chapter 33 ).
If a mechanism such as the Degrees of Inter operability is used, then a matrix showing the
inter operability r equir ements is a useful tool, as illustrated in Figur e25-1and Figur e25-2,noting
that the degr ee of information sharing is not necessarily symmetrical or bidirectional between
systems and/or stakeholders.
246 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Interoperability Requir ements Determining Interoperability Requirements
The matrix below can be used within the enterprise and/or within the extended enterprise as a
way of detailing that information and/or services can be shar ed. The matrix should start in the
Business Ar chitectur e(Phase B) to captur ethe natur eo ft he sharing of information between
stakeholders, and evolve to determine the what systems shar ewhat information in Phase C.
Phase B: Inter-stakeholder Information Interoperability Requirements
(Using degrees of information interoperability)
Stakeholders
A
B
C
D
E
F
GA B C D E F G
2 3 2 3 3 3
2
3 33 2 3 2 2
2 2 2 3
2 2 2 3 3 3
4 4 2 3 3 3
4 4 2 3 3 2
2 2 3 3 3 3
© The Open Group
Figure 25-1 Business Information Interoperability Matrix
Figur e25-1 shows that Stakeholder A r equir es str uctur ed data exchange (Degree 2) with
Stakeholders/Systems B and D, and seamless sharing of data (Degr ee 3) with
Stakeholders/Systems C, E, F ,and G.
The business information interoperability matrix should be r eﬁned within the Information
Systems Ar chitectur eusing reﬁned measur es and specifying the actual systems used by the
stakeholders. A sample is shown in Figur e25-2.
Phase C: Inter-system Interoperability Requirements
System A
System B
System C
System D
System E
System F
System GSystem
ASystem
BSystem
CSystem
DSystem
ESystem
FSystem
G
2A 3D 2B 3A 3A 3B
2E
3E 3F3F 2C 3A 2B 2C
2B 2A 2A 3B
2B 2B 2B 3A 3A 3B
4A 4B 2B 3A 3B 3B
4A 4A 2B 3B 3A 2D
2B 2B 3A 3A 3B 3B
© The Open Group
Figure 25-2 Information Systems Interoperability Matrix
InFigur e25-2,both the natur eo ft he exchange is mor edetailed (e.g., Degree 3A versus only
Degr ee 3) and the sharing is between speciﬁc systems rather than stakeholders. For example,
System A shar es information with the other systems in accordance with enterprise technical
standards.
In many organizations the Business Ar chitectur es describe the natur eo ft he information shar ed
Part III: ADM Guidelines and Techniques 247
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Determining Interoperability Requir ements Inter operability Requirements
between stakeholders and/or organizations (e.g., in defense the term is "operational node"), and
the Data Architectur especiﬁes the information shared between systems.
Update the deﬁned tar get data and Application Ar chitectur e(Version 1.0) with the
interoperability issues that wer eraised.
25.6 Reconciling Interoperability Requirements with Potential Solutions
The Enterprise Architect will have to ensur ethat ther eare n ointeroperability conﬂicts,
especially if ther ei sa ni ntention to re-use existing SBBs and/or COTS.
The most signiﬁcant issue to be addr essed is in fact business inter operability .Most SBBs or
COTS will have their own business pr ocesses embedded. Changing the embedded business
processes will often r equir es om uch work that the advantages of r e-using solutions will be lost.
Ther eare numerous examples of this in the past.
Furthermor e, ther ei st he workﬂow aspect between the various systems that has to be taken into
account. The Enterprise Ar chitect will have to ensur ethat any change to the business
inter operability r equir ements is signed of fb yt he Business Architects and ar chitectur esponsors
in a revised Statement of Architectur eWork.
248 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 26
Business Transformation Readiness Assessment
This chapter describes a technique known as Business T ransformation Readiness Assessment, used for
evaluating and quantifying an organization’s readiness to undergo change.
This chapter builds on work by the Canadian Government and its Business Transformation Enablement
Program (BTEP).5
26.1 Introduction
Enterprise Ar chitectur ei sam ajor endeavor within an organization and most often an
innovative Ar chitectur eVision (Phase A) and supporting Ar chitectur eDeﬁnition (Phases B to D)
will entail considerable change. Ther eare m any dimensions to change, but by far the most
important is the human element. For example, if the enterprise envisages a consolidation of
information holdings and a move to a new paradigm such as service orientation for integrated
service delivery ,then the human r esour ce implications ar emajor.Potentially coupled with a
change-averse cultur eand a narr owly skilled workforce, the most sound and innovative
architectur ecould go nowhere.
Understanding the readiness of the or ganization to accept change, identifying the issues, and
then dealing with them in the Implementation and Migration Plans is key to successful
architectur etransformation in Phases E and F .This will be a joint effort between corporate
(especially human resources) staff, lines of business, and IT planners.
The recommended activities in an assessment of an organization’s readiness to addr ess business
transformation are:
■Determine the readiness factors that will impact the organization
■Present the readiness factors using maturity models
■Assess the readiness factors, including determination of readiness factor ratings
■Assess the risks for each readiness factor and identify improvement actions to mitigate the
risk
■Work these actions into Phase E and F Implementation and Migration Plan
5. Refer to www.tbs-sct.gc.ca/btep-pto/index_e.asp .
Part III: ADM Guidelines and Techniques 249
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Introduction Business Tr ansformation Readiness Assessment
26.1.1 Business Transformation Enablement Program (BTEP)
The Canadian Government Business Transformation Enablement Pr ogram (BTEP) pr ovides
guidance on how to identify the business transformation-related issues.
The BTEP recommends that all projects conduct a transformation r eadiness assessment to at
least uncover the business transformation issues. This assessment is based upon the
determination and analysis/rating of a series of readiness factors. The outcome is a deeper
understanding of the challenges and opportunities that could be pr esented in the course of the
endeavor .Many of the challenges translate directly into risks that have to be addr essed,
monitored, and, if possible, mitigated.
The following sections describe Business T ransformation Readiness Assessment using the BTEP
method, including some lessons learned. Readers should keep in mind that most or ganizations
will have their own unique set of factors and criteria, but most ar esimilar.
26.2 Determine Readiness Factors
The ﬁrst step is to determine what factors will impact on the business transformation associated
with the migration from the Baseline to Target Architectures.
This can be best achieved thr ough the conduct of a facilitated workshop with individuals fr om
differ ent parts of the or ganization. It is important that all perspectives ar esought as the issues
will be varied. In this workshop it is very useful to start of fwith a tentative list of factors that
participants can re-use, reject, augment, or replace.
An example set of factors drawn from the BTEP follows:
■Vision is the ability to clearly deﬁne and communicate what is to be achieved
This is wher emanagement is able to clearly deﬁne the objectives, in both strategic and
speciﬁc terms. Leadership in deﬁning vision and needs comes from the business side with
IT input. Predictable and proven pr ocesses exist for moving from vision to statement of
requirements. The primary drivers for the initiative ar eclear.The scope and approach of
the transformation initiative have been clearly deﬁned throughout the organization.
■Desire, Willingness, and Resolve is the presence of a desir et oa chieve the r esults,
willingness to accept the impact of doing the work, and the r esolve to follow through and
complete the endeavor
Ther ei sa ctive discussion r egar ding the impact that executing the pr oject may have on the
organization, with clear indication of the intent to accept the impacts. Key r esour ces (e.g.,
ﬁnancial, human, etc.) ar eallocated for the endeavor and top executives project the clear
message that the organization will follow thr ough; a message that identiﬁes the effort as
well as the beneﬁts. Organizationally ther ei sah istory of ﬁnishing what is started and of
coming to closur eonissues in the timeframes needed and ther ei sa greement thr oughout
the organization that the transformation initiative is the "right" thing to do.
■Need ,i nt hat ther ei sac ompelling need to execute the endeavor
Ther eare clear statements r egar ding what the organization will not be able to do if the
project does not proceed, and equally clear statements of what the project will enable the
organization to do. Ther eare visible and br oadly understood consequences of endeavor
failur eand success criteria have been clearly identiﬁed and communicated.
■Business Case exists that cr eates a strong focus for the project, identifying beneﬁts that
must be achieved and thereby creating an imperative to succeed
250 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Business T ransformation Readiness Assessment Determine Readiness Factors
The business case document identiﬁes concr ete beneﬁts (revenues or savings) that the
organization is committed to deliver and clearly and unquestionably points to goals that
the organization is committed to achieving.
■Funding ,i nt he form of a clear source of ﬁscal r esour ces, exists that meets the endeavor ’s
potential expenditures
■Sponsorship and Leadership exists and is br oadly shared, but not so broad as to dif fuse
accountability
Leadership keeps everyone "on board" and keeps all focused on the strategic goals. The
endeavor is sponsor ed by an executive who is appropriately aligned to provide the
leadership the endeavor needs and able to articulate and defend the needs of the endeavor
at the senior management level. These executive sponsors ar eand will remain engaged
throughout.
■Governance is the ability to engage the involvement and support of all parties with an
inter est in or responsibility to the endeavor with the objective of ensuring that the
corporate interests ar eserved and the objectives achieved
Ther eare c learly identiﬁed stakeholders and a clear sense of their interest in and
responsibility to the project; a cultur ethat encourages participation towards corporate
rather than local objectives; a history of being able to successfully manage activities that
cross interest areas; a cultur ethat fosters meaningful, as opposed to symbolic, participation
in management pr ocesses; and a commitment to ongoing project review and challenge and
openness to outside advice.
■Accountability is the assignment of speciﬁc and appr opriate r esponsibility ,recognition of
measurable expectations by all concerned parties, and alignment of decision-making with
areas of responsibility and with wher ethe impact of the decisions will be felt
Accountability is aligned with the ar ea wher ethe beneﬁts of success or consequences of
failur eo ft he endeavor will be felt as well as with the responsibility areas.
■Workable Approach and Execution Model is an approach that makes sense relative to the
task, with a supporting environment, modeled after a proven approach
Ther eare clear notions of the client and the client’s role r elative to the builder or prime
contractor and the organization is experienced with endeavors of this type so that the
processes, disciplines, expertise, and governance ar ealready in place, proven, and
available to apply to the transformation endeavor .All the players know their roles because
they have played them befor ewith success. In particular ,the roles of "client" and "systems
builder" ar ematureand stable. Ther ei sac ommunication plan covering all levels of the
organization and meeting the needs ranging fr om awareness to availability of technical
detail. Ther eisa r ewar dand recognition plan in place to recognize teams and individuals
who use good change management practices, planning and pr evention of crisis behaviors,
and who r einfor ce behaviors appropriate to the new way of doing business. It is clear to
everyone how implementation will occur ,how it will be monitored, and how r ealignment
actions will be made and ther eare a dequate r esour ces dedicated for the life of the
transformation.
■IT Capacity to Execute is the ability to perform all the IT tasks r equir ed by the pr oject,
including the skills, tools, processes, and management capability
Ther ehas been a r ecent successful execution of a similar endeavor of similar size and
complexity and ther eexist appropriate processes, discipline, skills, and a rationale model
for deciding what skills and activities to source externally.
Part III: ADM Guidelines and Techniques 251
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Determine Readiness Factor sB usiness Transformation Readiness Assessment
■Enterprise Capacity to Execute is the ability of the enterprise to perform all the tasks
required by the endeavor ,i na reas outside of IT ,including the ability to make decisions
within the tight time constraints typical to pr oject environments based upon the r ecent
successful execution of a similar endeavor of at least half the size and complexity
Ther eexist non-IT-speciﬁc processes, discipline, and skills to deal with this type of
endeavor .The enterprise has a demonstrated ability to deal with the type of ongoing
project/portfolio management issues and r equir ements. Ther ei sar ecognition of the need
for knowledge and skill-building for the new way of working as well as the value of a
formal gap analysis for skills and behavior.
■Enterprise Ability to Implement and Operate the transformation elements and their
related business processes, absorb the changes arising fr om implementation, and ongoing
ability to operate in the new environment
The enterprise has a recent proven ability to deal with the change management issues
arising from new pr ocesses and systems and has in place a solid disciplined and pr ocess-
driven service management program that provides operations, maintenance, and support
for existing systems.
Once the factors have been identiﬁed and deﬁned, it is useful to call a follow-on workshop
wher ethe factors shall be assessed in some detail in terms of their impact/risk. The next section
will deal with preparing for an effective assessment of these factors.
26.3 Present Readiness Factors
Once the factors ar edetermined, it is necessary to pr esent them in such a way that the
assessment is clear and the maximum value is derived from the participants.
One such presentation is thr ough the use of maturity models. If each factor is converted into a
maturity model (a r e-usable governance asset as well) accompanied by a standar dworksheet
template containing all of the information and deductions that have to be gathered, it can be a
very useful tool.
The maturity model should enable participants to:
■Assess their current (Baseline Architecture) maturity level
■Determine the tar get maturity level that would have to be achieved to realize the T arget
Architecture
■Determine an intermediate target that would be achievable in a lesser timeframe
The car espent pr eparing the models (which is not insigniﬁcant) will be recouped by a focused
workshop that will rapidly go through a signiﬁcant number of factors.
It is important that each factor be well-deﬁned and that the scope of the Enterprise Ar chitecture
endeavor (preliminary planning) be r eﬂected in the models to keep the workshop participants
focused and productive.
Circulating the models befor ethe workshop for comments would be useful, if only to ensur e
that they ar ecomplete as well as allowing the participants to pr epar efor the workshop. Note
that the model shown below also has a r ecommended target state put in by the Enterprise
Architect; this again acts as governance.
An example of a maturity model is shown in Figur e26-1for one of the BTEP factors.
252 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Business T ransformation Readiness Assessment Present Readiness Factors
0
Not defined1
Ad Hoc2
Repeatable3
Defined4
Managed5
Optimized
Information is not
recognized as an
asset.
There is no clear
stewardship of data.Data Management (DM)
concepts are intuitively
understood and practiced
on an basis.
Stewardship of the data
is informal.
Data is recognized by
certain internal experts
and senior management
as being of strategic
importance to the
organization.
Focus is primarily on
technically managing
redundant data at the
applications level.ad hocMany parts of the
organization value
information/data as a
strategic asset.
Internal DM experts
maintain clear lines of
responsibility and
stewardship of the data,
organized along lines of
business and at all senior
levels.
Staff put into practice
DM principles and
standards in their daily
activities.Data is recognized as a
strategic asset in most
parts of the organization,
and throughout most
levels from operations to
senior management.
Resources are committed
to ensuring strong
stewardship of data at the
lower management and
information expert levels.Data is recognized as a
strategic asset in all
parts of the organization,
and throughout most
levels from operations to
senior management.
Resources are committed
to ensuring strong
stewardship of data at the
senior management and
information expert levels.Data is treated in all
levels throughout the
organization as a
strategic asset to be
exploited and re-used.
Data products and
services are strongly
integrated with the
management practice
of the organization.
All staff are empowered
and equipped to take
stewardship of
information, and are
seen as “knowledge
workers ”.
Recommended
Target StateDefinitionBusiness Transformation Readiness Assessment - Maturity Model
Maturity Model LevelsThere is recognition by the organization that information is a strategic corporate asset requiring stewardship.
There is also recognition that the data is not universally understandable, of requisite quality, and accessible.Factor 2: Need for Enterprise
Information ArchitectureClass
BTEP Readiness FactorOrganizational Context
YES
© The Open Group
Figure 26-1 Business Transformation Readiness Assessment — Maturity Model
26.4 Assess Readiness Factors
Ideally ,the factors should be assessed in a multi-disciplinary workshop. Using a mechanism
such as maturity models, Enterprise Architects will normally have to cover a gr eat deal of
ground in little time.
The use of a series of templates for each factor would expedite the assessment, and ensur e
consistency across the wide range of factors.
The assessment should address three things, namely:
■Readiness Factor Vision
■Readiness Factor Rating
■Readiness Factor Risks & Actions
26.4.1 Readiness Factor Vision
The vision for a r eadiness factor is the determination of wher ethe enterprise has to evolve to
addr ess the factor .First, the factor should be assessed with r espect to its base state and then its
target state.
For example, if the "IT capacity to execute" factor is rated as low ,the factor should ideally be at
"high" to realize the T arget Ar chitectur eVision. An intermediate tar get might be useful to dir ect
the implementation. Maturity models ar eexcellent vehicles to guide this determination.
Part III: ADM Guidelines and Techniques 253
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Assess Readiness Factor sB usiness Transformation Readiness Assessment
26.4.2 Readiness Factor Rating
Once the factor visions ar eestablished, then it is useful to determine how important each factor
is to the achievement of the T arget Ar chitectur ea sw ell as how challenging it will be to migrate
the factor into an acceptable visionary state.
The BTEP uses a Readiness Rating Scheme that can be used as a start point for any or ganization
in any vertical. Each one of the readiness factors ar erated with respect to:
■Urgency ,whereby if a r eadiness factor is urgent, it means that action is needed befor ea
transformation initiative can begin
■Readiness Status ,which is rated as either Low (needs substantial work befor e
proceeding), Fair (needs some work befor eproceeding), Acceptable (some readiness issues
exist; no showstoppers), Good (relatively minor issues exist), or High (no readiness issues)
■Degree of Difﬁculty to Fix rates the effort r equir ed to overcome any issues identiﬁed as
either No Action Needed, Easy ,Moderate, or Difﬁcult
Although a mor eextensive template can be used in the workshop, it is useful to create a
summary table of the ﬁndings to consolidate the factors and pr ovide a management overview .A
like summary is shown in Figur e26-2.
Ser Readiness Factor Urgency Readiness StatusDegree of
Difficulty to FixBusiness Factor Assessment Summary
1
2
3
4
5
6
7
8
9
10
11
12 Ability to implement and operateDepartmental capacity to executeIT capacity to executeWorkable approach and execution modelAccountabilityGovernanceSponsorship and leadershipFundingBusiness caseNeedDesire/willingness/resolveVision
© The Open Group
Figure 26-2 Summary Table of Business Transformation Readiness Assessment
254 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Business T ransformation Readiness Assessment Assess Readiness Factors
26.4.3 Readiness Factor Risks & Actions
Once the factors have been rated and assessed, derive a series of actions that will enable the
factors to change to a favorable state.
Each factor should be assessed with r espect to risk using the process highlighted in Part III,
Chapter 27 ,including an estimate of impact and frequency.
Each factor should be discretely assessed and a series of impr ovement actions outlined. Befor e
starting anew ,existing actions outlined in the ar chitectur es should be checked ﬁrst befor e
creating new ones.
These newly identiﬁed actions should then be formally incorporated into the emer ging
Implementation and Migration Plan.
From a risk perspective, these actions ar edesigned to mitigate the risks and pr oduce an
acceptable residual risk. As risks, they should be part of the risk management pr ocess and
closely monitored as the Enterprise Architectur ei sb eing implemented.
26.5 Readiness and Migration Planning
The assessment exercise will provide a realistic assessment of the organization and will be a key
input into the strategic migration planning that will be initiated in Phase E and completed in
Phase F .I ti si mportant to note whether the business transformation actions will be on the
vision’s critical path and, if so, determine how they will impact implementation. Ther ei sn o
point deploying new IT capability without employees trained to use it and support staf fready to
sustain it.
The readiness factors, as part of an overall Implementation and Migration Plan, will have to be
continuously monitored (Phase G) and rapid corr ective actions taken through the IT governance
framework to ensur ethat the deﬁned architectures can be implemented.
The r eadiness factors assessment will be a living document and during the migration planning
and execution of the Transition Ar chitectur es, the business transformation activities will play a
key role.
26.6 Marketing the Implementation Plan
The Ar chitectur eDeﬁnition should not be widely circulated until the business transformation
issues ar eidentiﬁed and mitigated, and the associated actions part of an overall "marketing"
plan for the vision and the Implementation and Migration Plan.
For example, the consolidation of information holdings could result in hundr eds of lost jobs and
this vision should not be announced befor eas upporting business transformation/human
resources plan is formulated to retrain or support the workers’ quest for new employment.
The business transformation workshops ar eac ritical part of the Communications Plan wher eby
key individuals fr om within the organization gather to assess the implications of transforming
the enterprise. T od ot his they will become awar eo ft he Ar chitectur eVision and ar chitecture
deﬁnition (if they wer enot alr eady involved through the business scenarios and Business
Architectur e). This group will feel ownership of the Enterprise Ar chitectur e, recognizing the
Enterprise Architect as a valuable steward.
Part III: ADM Guidelines and Techniques 255
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Marketing the Implementation Plan Business T ransformation Readiness Assessment
Their determination of the factors will again create a cultur eo fu nderstanding across the
enterprise and provide useful insights for the Implementation and Migration Plan.
The latter plan should include a Communications Plan, especially to keep the affected personnel
informed. In many cases collaborating with the unions and shop stewards will further assist a
humane (and peaceful) transition to the target state.
26.7 Conclusion
In short, Enterprise Ar chitectur eimplementation will r equir eadeep knowledge and awar eness
of all of the business transformation factors that impact transitioning to the visionary state. W ith
the evolution of IT ,the actual technology is not the real issue any mor ei nE nterprise
Architectur e, but the critical factors ar emost often the cultural ones. Any Implementation and
Migration Plan has to take both into consideration. Neglecting these and focusing on the
technical aspects will invariably r esult in an implementation that falls short of realizing the r eal
promise of a visionary Enterprise Architecture.
256 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 27
Risk Management
This chapter describes risk management, which is a technique used to mitigate risk when implementing
an architectur eproject.
27.1 Introduction
Ther ewill always be risk with any ar chitectur e/business transformation effort. It is important to
identify ,classify ,and mitigate these risks befor estarting so that they can be tracked thr oughout
the transformation effort.
Mitigation is an ongoing effort and often the risk triggers may be outside the scope of the
transformation planners (e.g., mer ger,acquisition) so planners must monitor the transformation
context constantly.
It is also important to note that the Enterprise Ar chitect may identify the risks and mitigate
certain ones, but it is within the governance framework that risks have to be ﬁrst accepted and
then managed.
Ther eare two levels of risk that should be considered, namely:
1.Initial Level of Risk :risk categorization prior to determining and implementing
mitigating actions
2.Residual Level of Risk :risk categorization after implementation of mitigating actions (if
any)
The pr ocess for risk management is described in the following sections and consists of the
following activities:
■Risk classiﬁcation
■Risk identiﬁcation
■Initial risk assessment
■Risk mitigation and residual risk assessment
■Risk monitoring
Part III: ADM Guidelines and Techniques 257
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Risk Classiﬁcation Risk Mana gement
27.2 Risk Classiﬁcation
Risk is pervasive in any Enterprise Ar chitectur eactivity and is present in all phases within the
Architectur eDevelopment Method (ADM). From a management perspective, it is useful to
classify the risks so that the mitigation of the risks can be executed as expeditiously as possible.
One common way for risks to be classiﬁed is with r espect to impact on the organization (as
discussed in Section 27.4 ), whereby risks with certain impacts have to be addressed by certain
levels of governance.
Risks ar enormally classiﬁed as time (schedule), cost (budget), and scope but they could also
include client transformation r elationship risks, contractual risks, technological risks, scope and
complexity risks, environmental (corporate) risks, personnel risks, and client acceptance risks.
Another way of delegating risk management is to further classify risks by ar chitectur edomains.
Classifying risks as business, information, applications, and technology is useful but ther emay
be organizationally-speciﬁc ways of expr essing risk that the corporate Enterprise Ar chitecture
directorate should adopt or extend rather than modify.
Ultimately ,Enterprise Ar chitectur erisks ar ecorporate risks and should be classiﬁed and as
appropriate managed in the same or extended way.
27.3 Risk Identiﬁcation
The maturity and transformation readiness assessments will generate a great many risks.
Identify the risks and then determine the strategy to address them throughout the
transformation.
The use of Capability Maturity Models (CMMs) is suitable for speciﬁc factors associated with
architectur edelivery to ﬁrst identify baseline and tar get states and then identify the actions
required to move to the target state. The implications of notachieving the target state can r esult
in the discovery of risks. Refer to Chapter 26 for speciﬁc details.
Risk documentation is completed in the context of a Risk Management Plan, for which templates
exist in standar dproject management methodologies — e.g., Project Management Book of
Knowledge (PMBOK) and PRINCE2 — as well as with the various government methodologies.
Normally these methodologies involve pr ocedur es for contingency planning, tracking and
evaluating levels of risk, r eacting to changing risk level factors, as well as processes for
documenting, reporting, and communicating risks to stakeholders.
27.4 Initial Risk Assessment
The next step is to classify risks with r espect to effect and frequency in accordance with scales
used within the organization. Combine effect and fr equency to come up with a preliminary risk
assessment.
Ther eare nohardand fast r ules with respect to measuring effect and fr equency .The following
guidelines ar ebased upon existing risk management best practices. Effect could be assessed
using the following example criteria:
■Catastrophic infers critical ﬁnancial loss that could result in bankr uptcy of the
organization
258 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Risk Mana gement Initial Risk Assessment
■Critical infers serious ﬁnancial loss in mor ethan one line of business leading to a loss in
productivity and no return on investment on the IT investment
■Marginal infers a minor ﬁnancial loss in a line of business and a reduced return on
investment on the IT investment
■Negligible infers a minimal impact on a line of business’ ability to deliver services and/or
products
Frequency could be indicated as follows:
■Frequent :likely to occur very often and/or continuously
■Likely :occurs several times over the course of a transformation cycle
■Occasional :occurs sporadically
■Seldom :remotely possible and would pr obably occur not mor ethan once in the course of
atransformation cycle
■Unlikely :will probably not occur during the course of a transformation cycle
Combining the two factors to infer impact would be conducted using a heuristically-based but
consistent classiﬁcation scheme for the risks. A potential scheme to assess corporate impact
could be as follows:
■Extremely High Risk (E) :the transformation ef fort will most likely fail with sever e
consequences
■High Risk (H) :signiﬁcant failur eo fp arts of the transformation effort resulting in certain
goals not being achieved
■Moderate Risk (M) :noticeable failur eo fp arts of the transformation effort thr eatening the
success of certain goals
■Low Risk (L) :certain goals will not be wholly successful
These impacts can be derived using a classiﬁcation scheme, as shown in Figur e27-1.
Likely Occasional Seldom Unlikely Frequent EffectCorporate Risk Impact Assessment
Frequency
NegligibleMarginalCriticalCatastrophic
EE E H H
H
HH
M MMM
M L L L LL LL
© The Open Group
Figure 27-1 Risk Classiﬁcation Scheme
Part III: ADM Guidelines and Techniques 259
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Risk Mitigation and Residual Risk Assessment Risk Mana gement
27.5 Risk Mitigation and Residual Risk Assessment
Risk mitigation r efers to the identiﬁcation, planning, and conduct of actions that will reduce the
risk to an acceptable level.
The mitigation ef fort could be a simple monitoring and/or acceptance of the risk to a full-blown
contingency plan calling for complete redundancy in a Business Continuity Plan (with all of the
associated scope, cost, and time implications).
Due to the implications of this risk assessment, it has to be conducted in a pragmatic but
systematic manner .With priority going to fr equent high impact risks, each risk has to be
mitigated in turn.
27.6 Conduct Residual Risk Assessment
Once the mitigation effort has been identiﬁed for each one of the risks, r e-assess the effect and
frequency and then recalculate the impacts and see whether the mitigation effort has r eally
made an acceptable dif ference. The mitigation efforts will often be r esour ce-intensive and a
major outlay for little or no residual risk should be challenged.
Once the initial risk is mitigated, then the risk that remains is called the "r esidual risk". The key
consideration is that the mitigating ef fort actually reduces the corporate impact and does not just
move the risk to another similarly high quadrant. For example, changing the risk fr om
frequent/catastr ophic to frequent/critical still delivers an Extremely high risk. If this occurs,
then the mitigation effort has to be re-considered.
The ﬁnal deliverable should be a transformation risk assessment that could be str uctur ed as a
worksheet, as shown in Figur e27-2.
Mitigation Risk Risk ID Frequency Impact EffectPreliminary Risk
Frequency Impact EffectResidual Risk
© The Open Group
Figure 27-2 Sample Risk Identiﬁcation and Mitigation Assessment Worksheet
27.7 Risk Monitoring and Governance (Phase G)
The residual risks have to be approved by the IT governance framework and potentially in
corporate governance wher ebusiness acceptance of the residual risks is required.
Once the r esidual risks have been accepted, then the execution of the mitigating actions has to be
carefully monitored to ensur ethat the enterprise is dealing with residual rather than initial risk.
The risk identiﬁcation and mitigation assessment worksheets ar emaintained as governance
artifacts and ar ekept up-to-date in Phase G (Implementation Governance) wher erisk
monitoring is conducted.
Implementation governance can identify critical risks that ar enot being mitigated and might
requireanother full or partial ADM cycle.
260 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Risk Mana gement Summary
27.8 Summary
Risk management is an integral part of Enterprise Ar chitectur e. Practitioners areencouraged to
use their corporate risk management methodology or extend it using the guidance in this
chapter .I nt he absence of a formal corporate methodology ,architects can use the guidance in
this chapter as a best practice.
Part III: ADM Guidelines and Techniques 261
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Risk Mana gement
262 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 28
Capability-Based Planning
This chapter provides an overview of capability-based planning, a business planning technique that
focuses on business outcomes. It also copes well with the friction of co-or dinating projects acr oss
corporate functional domains that together enable the enterprise to achieve that capability (for example,
electronic service delivery).
28.1 Overview
Capability-based planning focuses on the planning, engineering, and delivery of strategic
business capabilities to the enterprise. It is business-driven and business-led and combines the
requisite efforts of all lines of business to achieve the desired capability .Capability-based
planning accommodates most, if not all, of the corporate business models and is especially
useful in organizations wher eal atent capability to respond (e.g., an emer gency pr eparedness
unit) is r equir ed and the same r esour ces ar einvolved in multiple capabilities. Often the need for
these capabilities ar ediscover ed and r eﬁned using business scenarios (see the T OGAF®Series
Guide: Business Scenarios).
From an IT perspective, capability-based planning is particularly r elevant. For example, setting
up a data center is really about consolidating corporate data and pr oviding the related services.
Lead Enterprise Architects for this capability will ﬁnd themselves involved in managing
constr uction, personnel training, and other change management tasks as well as IT ar chitecture
tasks. In the past, many IT projects wer eless than successful even though the actual IT
implementation was brilliant, but the associated other tasks (business pr ocess r e-engineering,
client training, support training, infrastr uctur e, and so on) wer enot controlled by the Enterprise
Architects and planners and often wer enot satisfactorily completed.
On the other hand, IT pr ojects wer eoften described in terms of technical deliverables not as
business outcomes, making it difﬁcult for business to appr eciate what was being delivered and
often the IT architects lost sight of the ultimate business goal. Capability-based planning frames
all phases of the ar chitectur edevelopment in the context of business outcomes, clearly linking
the IT vision, ar chitectur es (ABBs and SBBs), and the Implementation and Migration Plans with
the corporate strategic, business, and line-of-business plans.
In many governments, horizontal interoperability and shar ed services ar eemerging as
cornerstones of their e-Government implementations and capability-based management is also
prominent although under many guises. In the private sector ,the concepts of supply chain
management and Service-Oriented Ar chitectur e( SOA) ar ei ncreasingly for cing
planners/managers to govern horizontally as well as vertically.
Part III: ADM Guidelines and Techniques 263
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Capability-Based Planning Par adigm Capability-Based Planning
28.2 Capability-Based Planning Paradigm
Capability-based planning has long been entr enched in the Defense realm in the US, UK,
Australia, and Canada. The associated governance mechanisms, as well as rigorous capability
derivation (capability engineering), ar eemerging primarily in the systems engineering domain.
These concepts ar ereadily transferable into other domains, such as IT.
28.3 Concept of Capability-Based Planning
From an Enterprise Ar chitectur eand IT perspective, capability-based planning is a powerful
mechanism to ensur ethat the strategic business plan drives the enterprise from a top-down
appr oach. It is also adaptable with capability engineering to leverage emerging bottom-up
innovations.
No matter how the corporation str uctur es itself, it will have to cope with the delivery of business
capabilities whose delivery will requir eco-ordination and alignment across business verticals.
Capabilities ar ebusiness-driven and ideally business-led. One of the main challenges is that the
beneﬁts ar eoften r eaped at the enterprise and not the line-of-business level. Consequently ,
projects within line-of-business-led portfolios tend to take a line-of-business rather than
corporate perspective. Managing the delivery of a capability is challenging, but the
entrenchment of a capability-based perspective within an or ganization is a powerful mechanism
to deliver synergistically derived business value that will r esonate in proﬁtability and stock
value.
Capabilities should be speciﬁed using the same discipline in the speciﬁcation of objectives as in
business scenarios; speciﬁcally ,they should follow the SMAR Tguidelines to avoid ambiguity.
As shown in Figur e28-1,many capabilities ar e"horizontal" and go against the grain of normal
vertical corporate governance. Most often, management dir ection as well as the corporate
management accountability framework ar ebased upon line of business metrics, not enterprise
metrics. Enterprise Ar chitectur ei sa lso a horizontal function that looks at enterprise-level (as
well as line of business-level) optimization and service delivery .Not surprisingly ,capability-
based planning and Enterprise Ar chitectur eare m utually supportive. Both often operate against
the corporate grain and both have to cope with challenging business envir onments. Business
support of Enterprise Ar chitectur ei sc rucial for its success and it is logical that it aligns with the
corporate capability planners as well as pr oviding support for those within the vertical lines of
business.
264 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Capability-Based Planning Concept of Capability-Based Planning
Corporate Governance
(including Corporate IT)
Line-of-Business
PortfolioCorporate
Portfolio
(HR, Finance, ...)IT
Portfolio
Capability 1: (Electronic Service Delivery)
Capability 2: (Sarbanes-Oxley Compliance)
Project Project
Operations Management - Corporate IT InfrastructureCapability
Management
(Horizontal)Functional
Management
(Vertical)
© The Open Group
Figure 28-1 Capability-Based Planning Concept
Capabilities can also be vertical and handled in the context of the business or ganizational
structur e. In fact, capability r equir ements often drive or ganizational design, but within an
organization in the pr ocess of business transformation, the organization may be trailing the
capability needs.
Vertical capabilities ar eeasier to handle and support by the Enterprise Ar chitectur efunction, but
still challenging when services ar erationalized at the enterprise level and lines of business
receive shar ed services that they do not directly control (they provide indirect control through IT
governance in the Ar chitectur eBoarda sc reated in pr eliminary planning and used in Phase G
(Implementation Governance).
For capability-based planning to succeed, it has to be managed with r espect to dimensions and
increments, as explained in the following two sections.
28.3.1 Capability Dimensions
Capabilities ar eengineer ed/generated taking into consideration various dimensions that
straddle the corporate functional portfolios.
Every organization has a dif ferent but similar set of dimensions. An example set (based upon the
Canadian Department of National Defense) could include personnel, r esear ch & development,
infrastructur e/facilities, concepts/pr ocesses, information management, and material. Whatever
dimensions ar eselected, they should be well explained and understood.
Part III: ADM Guidelines and Techniques 265
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Concept of Capability-Based Planning Capability-Based Planning
Capability
Capability IncrementCapability IncrementCapability Increment
Process Dimension
Concepts
Business Processes
Information ManagementPeople Dimension
Individual Training
Collective Training
Professional DevelopmentMaterial Dimension
Infrastructure
Information Technology
Equipment
© The Open Group
Figure 28-2 Capability Increments and Dimensions
28.3.2 Capability Increments
Acapability will take an extended time to deliver (speciﬁcs will be a function of the or ganization
and industry vertical) and will normally involve many pr ojects delivering numerous incr ements.
In addition, the capability needs to pr ovide real business value to stakeholders as soon as
possible and maintain momentum to achieve the T arget Ar chitectur ea sw ell as the associated
executive support and corporate funding. Ther efore, it is useful to br eak the capability into
capability incr ements that deliver discrete, visible, and quantiﬁable outcomes as well as
providing the focus for T ransition Ar chitectur es and the deliverables from numerous inter -
dependent projects. These outcomes ar ethe Critical Success Factors (CSFs) for continued
capability support.
Communicating the potentially complex incr emental evolution of a capability to the stakeholder
community is essential to establish buy-in at the start and to maintain their buy-in during the
transition. The Capability Increment "Radar" diagram (see Figur e28-3)isap roven approach to
describing how a capability will evolve over time. The ar chitect selects the aspects of capability
that ar eimportant to the stakeholder community as lines radiating from the center .Against each
line, the architect draws points that r epresent signiﬁcant "capability points" ("lower" capability
points nearest the center; "higher" capability points farthest fr om the center). With these
"markers" in place the architect can, by joining up the capability points into a closed loop,
demonstrate in a simple form how each "capability increment" will extend on the pr evious
increment. This, of course, r equir es that each capability point is formally deﬁned and "labeled"
in a way that is meaningful to the stakeholders. In Figur e28-3,w eh ave depicted Capability
Increment 0 as the starting capability.
266 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Capability-Based Planning Concept of Capability-Based Planning
Capability Increment 0Capability Increment 1Capability Increment 2Capability Increment 3
Capability
Dimension 1
Capability
Dimension 2
Capability
Dimension 3Capability
Dimension 4Capability
Dimension n
Capability
Points
© The Open Group
Figure 28-3 Capability Increment Radar
28.4 Capabilities in an Enterprise Architecture Context
The capabilities ar edirectly derived fr om the corporate strategic plan by the corporate strategic
planners that ar eand/or include the Enterprise Ar chitects and satisfy the enterprise goals,
objectives, and strategies. Most or ganizations will also have an annual business plan that
describes how the organization intends to proceed over the next ﬁscal period in or der to meet
the enterprise strategic goals.
Figur e28-4illustrates the crucial relationships between capability-based planning, Enterprise
Architectur e, and pr oject/portfolio management. On the left-hand side, capability management
is aligned with Enterprise Ar chitectur e. The key is that all of the ar chitectur es will be expr essed
in terms of business outcomes and value rather than in IT terms (e.g., establishment of a server
farm), thereby ensuring IT alignment with the business.
The intent is that the corporate strategic dir ection drives the Ar chitectur eVision in Phase A, as
well as the corporate organization which will be the basis for the creation of portfolios.
Speciﬁc capabilities targeted for completion will be the focus of the Ar chitectur eDeﬁnition
(Phases B, C, and D) and, based upon the identiﬁed work packages, Phase E projects will be
conceived.
The capability increments will be the drivers for the Transition Ar chitectur es (Phase E) that will
structur ethe project incr ements. The actual delivery will be co-ordinated through the
Implementation and Migration Plans (Phase F).
Part III: ADM Guidelines and Techniques 267
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Capabilities in an Enterprise Ar chitectureContext Capability-Based Planning
Capability
(outcome-oriented)
Capability IncrementCapability IncrementCapability Increment
Building Blocks
(Deliverables)Corporate Strategic Plan
Business Transformation
Goals and Objectives
Consists of
DesignatesManages & CreatesArchitecture Vision
(Phase A)
Architecture Definition
(Phase B, C, D)
Basis for
Transition Architectures
(Phase E, F)
All deliver
Architecture
and Solution
Building BlocksBasis for
Work
PackagesWork
Packages
Basis forCorporate Project
Portfolios
Broken down
into
Corporate Projects
(across Portfolios)
Consist of
Corporate Project
Increments
(across Portfolios)
Deliver
Capability Increment
SolutionsBasis for
© The Open Group
Figure 28-4 Relationship Between Capabilities, Enterprise Architecture, and Projects
Capability managers will perform similar tasks to that of the portfolio managers, but across the
portfolios aligning the projects and project incr ements to deliver continuous business value.
Wher eas the portfolio managers will be concerned with the co-or dination of their projects to
optimally design, build, and deliver the Solution Building Blocks (SBBs). Ideally ,capability
managers will also manage funding that can use the Transition Ar chitectur es as gates. Co-
ordination between the portfolio and capability managers will have to be provided at the
corporate level.
28.5 Summary
Capability-based planning is a versatile business planning paradigm that is very useful fr om an
Enterprise Ar chitectur eperspective. It assists in aligning IT with the business and helps focus IT
architects on the continuous creation of business value.
268 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
The TOGAF Standard, Version 9.2
Part IV:
Architecture Content Framework
The Open Group
Part IV:Architecture Content Frame work 269
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
270 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 29
Introduction to Part IV
29.1 Overview
Architects executing the Ar chitectur eDevelopment Method (ADM) will pr oduce a number of
outputs as a r esult of their efforts, such as process ﬂows, architectural r equir ements, pr oject
plans, pr oject compliance assessments, etc. The content framework provides a structural model
for ar chitectural content that allows the major work products that an architect creates to be
consistently deﬁned, structured, and presented.
The content framework provided her eisintended to allow the TOGAF framework to be used as
astand-alone framework for ar chitectur ew ithin an enterprise. However ,other content
frameworks exist (such as the Zachman Framework) and it is anticipated that some enterprises
may opt to use an external framework in conjunction with the T OGAF framework. In these
cases, the T OGAF content framework provides a useful r eference and starting point for T OGAF
content to be mapped to other content frameworks.
The Ar chitectur eContent Framework uses the following thr ee categories to describe the type of
architectural work product within the context of use:
■Adeliverable is a work pr oduct that is contractually speciﬁed and in turn formally
reviewed, agreed, and signed of fb yt he stakeholders
Deliverables r epresent the output of projects and those deliverables that ar ein
documentation form will typically be ar chived at completion of a project, or transitioned
into an Ar chitectur eRepository as a r eference model, standard, or snapshot of the
Architectur eLandscape at a point in time.
■Anartifact is an architectural work product that describes an aspect of the architecture
Artifacts ar egenerally classiﬁed as catalogs (lists of things), matrices (showing
relationships between things), and diagrams (pictur es of things). Examples include a
requirements catalog, business interaction matrix, and a use-case diagram. An
architectural deliverable may contain many artifacts and artifacts will form the content of
the Architectur eRepository.
■Abuilding block represents a (potentially r e-usable) component of enterprise capability
that can be combined with other building blocks to deliver architectures and solutions
Building blocks can be deﬁned at various levels of detail, depending on what stage of
architectur edevelopment has been r eached. For instance, at an early stage, a building
block can simply consist of a name or an outline description. Later on, a building block
may be decomposed into multiple supporting building blocks and may be accompanied
by a full speciﬁcation. Building blocks can relate to "architectures" or "solutions".
Part IV:Architecture Content Frame work 271
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
OverviewI ntroduction to Part IV
—Architecture Building Blocks (ABBs) typically describe r equir ed capability and
shape the speciﬁcation of Solution Building Blocks (SBBs); for example, a customer
services capability may be r equir ed within an enterprise, supported by many SBBs,
such as processes, data, and application software
—Solution Building Blocks (SBBs) represent components that will be used to
implement the r equir ed capability; for example, a network is a building block that
can be described thr ough complementary artifacts and then put to use to r ealize
solutions for the enterprise
The relationships between deliverables, artifacts, and building blocks ar eshown in Figur e29-1.
Architecture Deliverables Architecture Repository
Artifacts and Building Blocks
Artifacts
Which areRe-Usable Building
Blocks
Catalogs
DescribingMatrices
Diagrams
Building BlocksCatalogs
DescribingMatrices
Diagrams
Building Blocks
Architecture
DeliverablesOther Deliverables© The Open Group
Figure 29-1 Relationships between Deliverables, Artifacts, and Building Blocks
For example, an Ar chitectur eD eﬁnition Document is a deliverable that documents an
Architectur eDescription. This document will contain a number of complementary artifacts that
arearchitectur eviews of the building blocks relevant to the ar chitectur e. For example, a pr ocess
ﬂow diagram (an artifact) may be cr eated to describe the target call handling process (a building
block). This artifact may also describe other building blocks, such as the actors involved in the
process (e.g., a Customer Services Representative). An example of the r elationships between
deliverables, artifacts, and building blocks is illustrated in Figur e29-2.
272 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Introduction to Part IV Overview
Building Block:
Baseline Call Handling Process
Building Block:
Target Call Handling ProcessBuilding Block:
Customer Services RepresentativeDeliverable: Architecture
Definition Document
Deliverables contain ArtifactsArtifact:
Process Flow Diagram
Artifact:
Process Flow DiagramArtifact:
Use-Case Diagram
Artifact:
Use-Case DiagramArtifacts describe building blocksArtifacts describe building blocks
Describes
DescribesDescribesDescribesDescribes
DescribesDescribes
Describes
© The Open Group
Figure 29-2 Example — Architectur eDeﬁnition Document
29.2 Content Metamodel
The content metamodel provides a deﬁnition of all the types of building blocks that may exist
within an ar chitectur e, showing how these building blocks can be described and related to one
another .For example, when creating an ar chitectur e, an architect will identify applications, "data
entities" held within applications, and technologies that implement those applications. These
applications will in turn support particular gr oups of business user or actor ,and will be used to
fulﬁl "business services".
The content metamodel identiﬁes all of these concerns (i.e., application, data entity ,technology,
actor ,and business service), shows the r elationships that ar epossible between them (e.g., actors
consume business services), and ﬁnally identiﬁes artifacts that can be used to represent them.
Figur e29-3shows an overview of the content metamodel.
Part IV:Architecture Content Frame work 273
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Content Metamodel Introduction to Part IV
Architecture Principles, Vision, and Requirements
Preliminary
Architecture Realization
Implementation Governance Opportunities, Solutions, & Migration PlanningBusiness Architecture Information Systems Architecture Technology 
Architecture
Motivation
Organization
BehaviorApplication Data
Technology 
Services
Logical 
Technology 
Components
Physical 
Technology 
ComponentsData Entities
Logical 
Data 
Components
Physical 
Data 
ComponentsInformation 
System 
Services
Logical 
Application 
Components
Physical 
Application 
ComponentsBusiness Services, 
Contracts,
Service QualitiesProcesses,
Events,
Controls,
ProductsFunctions,
Business
Capabilities,
Course of Action, 
Value StreamsOrganization Actor, RoleDrivers Goals Objectives MeasuresArchitecture RequirementsArchitecture Vision
Requirements Constraints Assumptions Gaps
Work PackagesBusiness 
StrategyTechnology 
StrategyBusiness Principles, 
Objectives, and DriversArchitecture 
PrinciplesArchitecture 
Vision
Standards Guidelines SpecificationsArchitecture 
ContractsStakeholders
CapabilitiesLocations© The Open Group
Figure 29-3 Content Metamodel Overview
29.3 Content Framework and the TOGAF ADM
The TOGAF ADM describes the process of moving from a baseline state of the enterprise to a
target state of the enterprise. The ADM will address a business need thr ough a process of
visioning, ar chitectur edeﬁnition, transformation planning, and Ar chitectur eGovernance. At
each stage in this pr ocess, the ADM r equir es information as inputs and will create outputs as a
result of executing a number of steps. The content framework provides an underlying str ucture
for the ADM that deﬁnes inputs and outputs in mor edetail and puts each deliverable into the
context of the holistic architectur eview of the enterprise.
The content framework should ther eforebeused as a companion to the ADM. The ADM
describes what needs to be done to create an ar chitectur eand the content framework describes
what the architectur eshould look like once it is done.
274 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Introduction to Part IV Structureo fPart IV
29.4 Structure of Part IV
Part IV :Architectur eContent Framework is structured as follows:
■Introduction (this chapter)
■Content Metamodel (see Chapter 30 )
■Architectural Artifacts (see Chapter 31 )
■Architectur eDeliverables (see Chapter 32 )
■Building Blocks (see Chapter 33 )
Part IV:Architecture Content Frame work 275
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Introduction to Part IV
276 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 30
Content Metamodel
30.1 Overview
The TOGAF Ar chitectur eDevelopment Method (ADM) provides a pr ocess lifecycle to cr eate
and manage ar chitectur es within an enterprise. At each phase within the ADM, a discussion of
inputs, outputs, and steps describes a number of ar chitectural work products or artifacts, such as
process and application. The content metamodel provided her edeﬁnes a formal str uctur efor
these terms to ensur econsistency within the ADM and also to provide guidance for
organizations that wish to implement their architectur ewithin an architectur etool.
30.2 Content Metamodel Vision and Concepts
This section provides an overview of the objectives of the content metamodel, the concepts that
support the metamodel, and an overview of the metamodel itself. Subsequent sections then go
on to discuss each area of the metamodel in mor edetail. Contents of this section ar ea sf ollows:
■Corecontent metamodel concepts (see Section 30.2.1 )identiﬁes the key concepts within the
corecontent metamodel, including:
—C oreand extension content
—F ormal and informal modeling
—C oremetamodel entities
■Overview of the TOGAF content metamodel (see Section 30.2.2 )provides a high-level
overview of the content of the metamodel
30.2.1 Core Content Metamodel Concepts
ATOGAF ar chitectur ei sb ased on deﬁning a number of ar chitectural building blocks within
architectur ecatalogs, specifying the r elationships between those building blocks in ar chitecture
matrices, and then presenting communication diagrams that show in a pr ecise and concise way
what the architectur eis.
This section introduces the cor econcepts that make up the TOGAF content metamodel, thr ough
the following subsections:
■Core and Extension Content provides an introduction to the way in which the T OGAF
framework employs a basic cor emetamodel and then applies a number of extension
modules to address speciﬁc architectural issues in mor edetail
Part IV:Architecture Content Frame work 277
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Content Metamodel Vision and Concepts Content Metamodel
■Core Metamodel Entities introduces the cor eTOGAF metamodel entities, showing the
purpose of each entity and the key relationships that support architectural traceability
Core and Extension Content
The role of the TOGAF framework is to provide an open standar dfor ar chitectur ethat is
applicable in many scenarios and situations. In or der to meet this vision, it is necessary to
provide a fully featured Enterprise Ar chitectur emetamodel for content and also to pr ovide the
ability to avoid carrying out unnecessary activities by supporting tailoring.
The metamodel must provide a basic model with the minimum featur eset and then support the
inclusion of optional extensions during engagement tailoring.
The cor eTOGAF content metamodel and its extensions ar eillustrated in Figur e30-1.
Core Content MetamodelGovernance
ExtensionsServices
ExtensionsProcess
Modeling
ExtensionsData
ExtensionsInfrastructure
Consolidation
ExtensionsMotivation
ExtensionsExtension to support
in-depth operational
governanceExtension to support
definition of discrete
business & application
servicesExtension to support
process modelingExtension to support
data modelingExtension to support
consolidation of
applications & 
technology
across locationsExtension to support
linkage of drivers, 
goals, & objectives to
organizations & 
services
© The Open Group
Figure 30-1 TOGAF Content Metamodel and its Extensions
The cor emetamodel pr ovides a minimum set of architectural content to support traceability
across artifacts. Additional metamodel concepts to support mor especiﬁc or mor ein-depth
modeling ar econtained within a gr oup of extensions that logically cluster extension catalogs,
matrices, and diagrams, allowing focus in areas of speciﬁc interest and focus.
All extension modules ar eoptional and should be selected during the Preliminary Phase of the
architectur edevelopment to meet the needs of the or ganization. Additionally ,the extension
groupings described by the content metamodel ar eonly a suggestion and further tailoring may
be carried out to suit the speciﬁc needs at the discretion of the architects.
This cor eand extension concept is intended as a move towards supporting formal method
extension appr oaches within the TOGAF framework, such as the method plug-in concept found
within the Softwar eProcess Engineering Metamodel (SPEM ™)developed by the Object
Management Group (OMG).6
6. Refer to www.omg.org/spec/SPEM .
278 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Content Metamodel Content Metamodel Vision and Concepts
Core Metamodel Entities
The content metamodel uses the terminology discussed within the T OGAF ADM as the basis for
aformal metamodel. The following cor eterms ar eused:
■Actor :ap erson, or ganization, or system that is outside the consideration of the
architectur emodel, but interacts with it
■Application Component :a ne ncapsulation of application functionality that is aligned to
implementation structure
■Business Capability :ap articular ability that a business may possess or exchange to
achieve a speciﬁc purpose
■Business Service :supports business capabilities through an explicitly deﬁned interface
and is explicitly governed by an organization
■Course of Action :direction and focus provided by strategic goals and objectives, often to
deliver the value proposition characterized in the business model
■Data Entity :a ne ncapsulation of data that is recognized by a business domain expert as a
discrete concept
Data entities can be tied to applications, repositories, and services and may be str uctured
according to implementation considerations.
■Function :delivers business capabilities closely aligned to an or ganization, but not
explicitly governed by the organization
■Information System Service :the automated elements of a business service
An information system service may deliver or support part or all of one or mor ebusiness
services.
■Organization Unit :aself-contained unit of resources with goals, objectives, and measures
Organization units may include external parties and business partner organizations.
■Role :a na ctor assumes a role to perform a task
■Technology Component :a ne ncapsulation of technology infrastr uctur ethat r epresents a
class of technology product or speciﬁc technology product
■Technology Service :atechnical capability r equir ed to provide enabling infrastr uctur ethat
supports the delivery of applications
■Value Stream :arepresentation of an end-to-end collection of value-adding activities that
create an overall result for a customer ,stakeholder ,o re nd-user
Am orein-depth deﬁnition of terms used within the content metamodel can be found in Part I,
Chapter 3 .
Some of the key relationship concepts r elated to the cor emetamodel entities ar edescribed
below:
■Process should normally be used to describe ﬂow
Aprocess is a ﬂow of interactions between functions and services and cannot be physically
deployed. All processes should describe the ﬂow of execution for a function and ther efore
the deployment of a pr ocess is through the function it supports; i.e., an application
implements a function that has a process, not an application implements a process.
Part IV:Architecture Content Frame work 279
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Content Metamodel Vision and Concepts Content Metamodel
■Function describes units of business capability at all levels of granularity
The term "function" is used to describe a unit of business capability at all levels of
granularity ,encapsulating terms such as value chain, pr ocess area, capability ,business
function, etc. Any bounded unit of business function should be described as a function.
■Business services support organizational objectives and are deﬁned at a level of
granularity consistent with the level of governance needed
Abusiness service operates as a boundary for one or mor efunctions. The granularity of
business services is dependent on the focus and emphasis of the business (as reﬂected by
its drivers, goals, and objectives). A service in Service-Oriented Ar chitectur e(SOA)
terminology (i.e., a deployable unit of application functionality) is actually much closer to
an application service, application component, or technology component, which may
implement or support a business service.
■Business services are deployed onto application components
Business services may be realized by business activity that does not r elate to IT ,o rm ay be
realized through IT .Business services that ar erealized through IT ar eimplemented onto
application components. Application components can be hierarchically decomposed and
may support one or mor ebusiness services. It is possible for a business service to be
supported by multiple application components, but this is problematic from a governance
standpoint and is symptomatic of business services that ar etoo coarse-grained, or
application components that ar etoo ﬁne-grained.
■Application components are deployed onto technology components
An application component is implemented by a suite of technology components. For
example, an application such as "HR System" would typically be implemented on several
technology components, including har dwar e, application server software, and application
services.
Figur e30-2illustrates the cor eentities and their relationships.
280 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Content Metamodel Content Metamodel Vision and Concepts
Technology ArchitectureApplication ArchitectureBusiness Architecture
ProcessOrganization Unit
ApplicationActorOrganization
FunctionFunctionA p plicationCo m ponent
Infor  ation
Syste  Service
Infor  ation
Syste Service
Infor  ation
Syste Service
A p plicationCom ponentOrgani zation UnitActor
OrganizationUnit
Data Entity
Data EntityTec hnolog Co m ponent Tec hnolog Co m ponentRole
Data EntityBusinessService
BusinessService
Function
Function
Function
Function
Function
FunctionFunctionFunctionFunction
Function
Data EntityRole
Actor
Technology Service
Technology ServiceTechnology Service
Technology ServiceInfor  ation
Syste  ServiceInfor  ation
Syste Service
© The Open Group
Figure 30-2 CoreEntities and their Relationships
30.2.2 Overview of the Content Metamodel
The content metamodel deﬁnes a set of entities that allow ar chitectural concepts to be captur ed,
stored, ﬁltered, queried, and r epresented in a way that supports consistency ,completeness, and
traceability.
At the highest level, the content framework is divided up in line with the T OGAF ADM phases,
as shown in Figur e30-3.
Part IV:Architecture Content Frame work 281
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Content Metamodel Vision and Concepts Content Metamodelrc itecturePrinci les , Vision ,and Re quire ents
Preli inar rc itecture Reali ation
I  le entationGovernance
 ortunities ,Solutions ,&MigrationPlanning
	usiness rc itecture Infor ationS ste s rc itectures
ecnologrcitectureMotivationrgani ation	eavior
  lication Data
rc itecture Re quire ents
rc itecture Vision© The Open Group
Figure 30-3 Content Framework by ADM Phases
■Architecture Principles, Vision, and Requirements entities ar eintended to captur ethe
surrounding context of formal ar chitectur em odels, including general Ar chitecture
Principles, strategic context that forms input for ar chitectur emodeling, and r equirements
generated from the architecture
The ar chitectur econtext is typically collected in the Preliminary and Ar chitectur eVision
phases.
■Business Architecture entities captur earchitectural models of business operation, looking
speciﬁcally at factors that motivate the enterprise, how the enterprise is or ganizationally
structured, and also what business capabilities the enterprise has
■Information Systems Architecture entities captur earchitectur em odels of IT systems,
looking at applications and data in line with the TOGAF ADM phases
■Technology Architecture entities captur eprocured technology assets that ar eused to
implement and realize information system solutions
■Architecture Realization entities captur echange roadmaps showing transition between
architectur estates and binding statements that ar eused to steer and govern an
implementation of the architecture
Am oredetailed representation of the content metamodel is shown in Figur e30-4.
282 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Content Metamodel Content Metamodel Vision and ConceptsrcitecturePrinciles isionandeuireents
Preli inarrcitectureealiation
I leentationovernance
 ortunitiesSolutionsMigrationPlanning
usiness rc itecture Infor ationSste s rc itecture ec nologrc itecture
Motivationrgani atione avior
  lication Dataec nolog
ServicesLogicalecnolog
Co onents
P sicalec nolog
Co  onentsDataEntitiesLogical
Data
Co onents
P sical
Data
Co  onentsInforation
Sste
ServicesLogical  lication
Co onents
P sical  lication
Co  onents
usinessServices 
Contracts
ServiceQualitiesProcesses
Events 
Controls 
Products
Functions usiness
Caabilities
CourseofctionalueStreas
rgani ation ctor  oleDriversoals
 jectivesMeasures
rc itecture e uire ents
rc itecture isioneuireents Constraints
ssu tionsasWorkPackages
usiness
Strateg
ecnolog
Strateg
usinessPrinciles
 jectivesandDrivers
rcitecture
Princiles
rcitectureision
Standardsuidelines S ecifications
rcitecture
ContractsStake olders
Ca a  ilities
Locations© The Open Group
Figure 30-4 Detailed Representation of the Content Metamodel
30.3 Content Metamodel in Detail
This section contains the following subsections:
■CoreContent Metamodel (see Section 30.3.1 )describes the metamodel entities that form
the cor econtent metamodel
■Full Content Metamodel (see Section 30.3.2 )describes the metamodel entities that form
extensions to the content metamodel
Part IV:Architecture Content Frame work 283
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Content Metamodel in Detail Content Metamodel
30.3.1 Core Content Metamodel
Figur e30-5shows the metamodel entities and r elationships that ar epresent within the cor e
content metamodel.
284 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Content Metamodel Content Metamodel in DetailGeneral Entities
Organi zation Unit
Business ServiceFunction
ProcessActor
Role
Data EntityApplication 
ComponentTechnology Component Technology 
ServiceOrchestrates, 
Decomposes
Supports, Is realized byInvolvesOrchestrates, 
DecomposesSupports,
Is realized byIs 
bounded 
by
Provides governed interface to accessIs owned byOwns
Consumes
Is provided toParticipates in
Interacts with,Performs
Performs task in
Is performed byContains
Belongs to
Is owned 
and governed 
byOwns and 
governs
Provides, consumes
Is accessed and updated through
Is realized through ImplementsIs implemented on
Provides platform for
Is used by Uses Is implemented on Provides platform forImplementsIs realized throughSupplies, 
Consumes
Is supplied or consumed byBusiness
Capability
Value
Stream
Course
Of ActionIs used byUses
OperationalizesPerforms, 
Participates inOperationalizes
InfluencesIs influenced by
Enables
Is enabled by InfluencesIs influenced 
byTriggers, 
Participates in
Is 
Operationalized byIs 
Operationalized by
Is triggered by, 
InvolvesAssociated with all entities
CapabilityDelivers
Is delivered 
by
Is performed by,
InvolvesSupports,
Is performed by
InfluencesIs influenced byIs delivered by DeliversPrinciple Constraint Requirement Gap Work Package Assumption Location© The Open Group
Figure 30-5 Entities and Relationships Present within the Cor eContent Metamodel
Part IV:Architecture Content Frame work 285
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Content Metamodel in Detail Content Metamodel
30.3.2 Full Content Metamodel
When all extensions ar eapplied to the cor econtent metamodel, a number of additional
metamodel entities ar eintroduced. Figur e30-6shows which entities ar econtained in the cor e
content metamodel and which entities ar eintroduced by which extension.! "SINESS# $CHI%EC% " $E
Motivation'rgani(ation!e)avior
*eneralEntities%ECHN '+
'* Y# $CHI%EC% " $E
#PP+IC# %I 'N# $CHI%EC% " $ED# % # # $CHI%EC% " $E
'rgani (ation"nit*oal
Motivation Extension' - .ective
Motivation Extension
Measure
Governance Extension
/unction Process#ctor$ole
Control
Process ExtensionEvent
Process Extension
Product
Process ExtensionContract
Governance ExtensionDriver
Motivation Extension
Service0ualit1
Governance Extension
Infor2ationS 1ste2Service
Services ExtensionDataEntit 1+ogicalData
Co2 3onent
Data Extension
P ) 1sicalData
Co2 3onent
Data Extension
+ogical# 3 3lication
Co2 3onent
P ) 1sical# 3 3lication
Co2 3onent
Infrastructure Consolidation 
Extension
+ogical%ec)nolog1
Co2 3onent
Infrastructure Consolidation 
Extension
P ) 1sical%ec )nolog 1
Co2 3onent
!usinessService
Core ContentServices E xtensionGovernance ExtensionPrinci3le Constraint$e 4uire2ent*a3 5or6Pac6age
#ssu2 3tion
Motivation Extension
Infrastructure Consolidation 
ExtensionCa3a-ilit1
Data Modeling ExtensionProcess Modeling Extension
%ec )nolog 1Service
!usinessCa3a -ilit 1
+ocation7alueStrea2 Courseof#ction
© The Open Group
Figure 30-6 Content Metamodel with Extensions
286 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Content Metamodel Content Metamodel in Detail
The relationships between entities in the full metamodel ar eshown in Figur e30-7.
Infrastructure Consolidation ExtensionGovernance ExtensionProcess Modeling ExtensionData Modeling ExtensionServices 
ExtensionCore Content89 SINESS:; C
<I
=EC
=9; E
=EC
<NO
>O
?@
:; C
<I
=EC
=9; E:PP
>IC
:= ION
:; C
<I
=EC
=9; ED
CDCCE
C
II
DEC
DJ
E
EOrgani
Kation
9nit?oal
Motivation Extension
O
MN ective
Motivation Extension
Measure
Governance Extension
8usinessService
Punction
Process:ctor;ole
Control
Process Extension
Event
Process ExtensionProduct
Process Extension
DataEntit
X>ogicalData
Co
Z[ onent
Data Extension
P
\X sicalData
Co
Z[ onent
Data Extension
>ogical
:[[ lication
Co
Z[ onent
P
\X sical
:[[ lication
Co
Z[ onent
Infrastructure Consolidation 
Extension
>ogical
=ec
\nolog
X
Co
Z[ onent
Infrastructure Consolidation 
Extension
P
\X sical=ec
\nolog
X
Co
Z[ onentContract
Governance 
ExtensionDriver
Motivation ExtensionOwns and 
governs
Used 
byEncapsulatesResides within
SuppliesIs supplied by
RealizesRealizesUsed
ByUsesProvides, Consumes
Is accessed and 
updated through
UsesIs implemented 
on
Provides 
platform forImplementsContains
Belongs 
toConsumes
Performs, 
Participates 
inInteracts with, 
Performs
Performs task inGenerates, 
ResolvesProduces
Is produced byIs owned 
byOwns
Supports,
Is performed by
Orchestrates, 
DecomposesSupports,
Is realized byIs bounded 
by
Provides 
governed 
interface to 
accessProducesIs produced 
by
InvolvesParticipates in
Is resolved by, 
Is generated by
Generates, 
Resolves
Is resolved byIs resolved by, 
Is generated by
ResolvesSupports,Is realized byOrchestrates, 
Decomposes
Ensures correct 
operation of
Is guided 
by
Governs, 
MeasuresIs governed and 
measured by Is provided toIs owned and 
governed byIs tracked 
againstSets performance 
criteria forSets performance 
criteria forIs tracked 
againstIs motivated by
Motivates
Creates
Addresses
Is realized 
through
Realizes
Service
]ualit
^
Governance 
Extension
Applies to
MeetsApplies to
MeetsIs performed by
Is supplied or consumed bySupplies or 
Consumes
Infor
ZationS
Xste
Z
Service
Services Extension
Is realized 
through
Motivation ExtensionRealizesIs realized by Is realized by
Is realized byAutomates some or all of
ServesIs served
by
Serves
ServesIs performed 
by, Involves
8usiness
Ca
[a
Milit
X
Course
of
:ction_alue
Strea
ZUses
Used by
Enables
Is enabled by
InfluencesIs 
Influenced 
by
InfluencesIs influenced 
byOperationalizesOperationalizesIs 
operationalized
by
Is 
operationalized
byTriggers, 
Participates in
Is triggered by, 
Involves
InfluencesIs influenced 
by
Uses
Used
ByIs served
by
Is served
by
=ec
\nolog
X
Service?eneralEntities`ssociated 
with 
`ll O
ac ects
Principle Constraint
de
euire
fent Gap
gor
i Pac
iagelssu
fption Capa
nilit
oDelivers
Is delivered 
byrocation
DeliversIs delivered by
RealizesIs realized by© The Open Group
Figure 30-7 Relationships between Entities in the Full Metamodel
Part IV:Architecture Content Frame work 287
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Content Metamodel Extensions Content Metamodel
30.4 Content Metamodel Extensions
As discussed earlier ,the T OGAF content metamodel supports a number of extension modules
that allow mor ein-depth consideration for particular ar chitectur econcerns. Figur e30-8shows
the cor econtent metamodel and predeﬁned extension modules.
CoreContentMetamodelGovernance
ExtensionsServices
ExtensionsProcess
Modeling
ExtensionsData
ExtensionsInfrastructure
Consolidation
ExtensionsMotivation
ExtensionsExtension to support
in-depth operational
governanceExtension to support
definition of discrete
business & application
servicesExtension to support
process modelingExtension to support
data modelingExtension to support
consolidation of
applications & 
technology
across locationsExtension to support
linkage of drivers, 
goals, & objectives to
organizations & 
services
© The Open Group
Figure 30-8 CoreContent Metamodel and Predeﬁned Extension Modules
During the Ar chitectur eVision phase of a particular engagement, the scope of the engagement
will be used to make a determination on appr opriate extensions to be employed in order to
adequately address the ar chitectur erequir ements. For example, the scope of an engagement
could be deﬁned as cor econtent, plus the governance extensions, as shown in Figur e30-9.
Scope of EngagementCore Content  MetamodelGovernance 
ExtensionsServices  
ExtensionsProcess  
Modeling  
ExtensionsData  
ExtensionsMotivation  
ExtensionsInfrastructure  
Consolidation  
Extensions
© The Open Group
Figure 30-9 CoreContent with Governance Extensions
The following sections provide a mor edetailed description of the purpose and content of each of
the extension modules.
288 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Content Metamodel Content Metamodel Extensions
30.4.1 Governance Extensions
Purpose
The governance extension is intended to allow additional str uctur ed data to be held against
objectives and business services, supporting operational governance of the landscape.
The scope of this extension is as follows:
■The ability to apply measures to objectives and then link those measures to services
■The ability to apply contracts to service communication or service interactions with
external users and systems
■The ability to deﬁne re-usable service qualities deﬁning a service-level pr oﬁle that can be
used in contracts
■Creation of additional diagrams to show ownership and management of systems
This extension should be used in the following situations:
■When an or ganization is considering IT change that will result in a signiﬁcant impact to
existing operational governance models
■When an organization has granular r equir ements for service levels that differ fr om service
to service
■When an organization is looking to transform its operational governance practice
■When an or ganization has very strong focus on business drivers, goals, and objectives and
how these trace to service levels
The beneﬁts of using this extension ar ea sf ollows:
■Service levels ar edeﬁned in a mor estructured way ,with:
—M oredetail
—T he ability to re-use service proﬁles across contracts
—S tronger tracing to business objectives
■Impacts to operations and operational governance models ar econsider ed in a mor e
structured way ,with:
—A dditional diagrams of system and data ownership
—A dditional diagrams of system operation and dependencies on operations processes
In addition to the extensions described here, organizations wishing to focus on Ar chitecture
Governance should also consult:
■The COBIT framework for IT governance pr ovided by the Information Systems Audit and
Control Association (ISACA); refer to www.isaca.org
■The IT Portfolio Management Facility ™(ITPMF ™)fromt he OMG; refer to
www.omg.org/spec/ITPMF
Part IV:Architecture Content Frame work 289
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Content Metamodel Extensions Content Metamodel
Required Extensions to the Core Metamodel
Extensions to the cor emetamodel entities and relationships ar eshown in Figur e30-10.
BUSINESS ARCHITECTURE
Organization Unit
Goal
Motivation Extension
Objective
Motivation Extension
Measure
Governance ExtensionContract
Governance 
ExtensionDriver
Motivation Extension
Governs, 
MeasuresIs governed and 
measured byIs tracked 
againstSets performance 
criteria forSets performance 
criteria forIs tracked 
againstIs motivated by
Motivates
Creates
Addresses
Is realized 
through
Realizes
Service Quality
Governance 
Extension
Applies to
MeetsApplies to MeetsCourse 
of ActionIs realized by
Realizes
Business Service© The Open Group
Figure 30-10 Governance Extensions: Extensions to Cor eMetamodel
Changes to the metamodel entities and relationships ar ea sf ollows:
■Measur ei sa dded as an entity that links objective and business service
■Service Quality is added as an entity that provides a generic service pr oﬁle template to be
applied to business services or contracts
■Contract is added as an entity that formalizes the functional and non-functional
characteristics of a service interaction with other services, external applications, or users
290 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Content Metamodel Content Metamodel Extensions
Changes to the metamodel attributes ar ea sf ollows:
■Attributes ar eadded for the metamodel entities of Measur e, Service Quality ,and Service
Contract
Additional diagrams to be created ar ea sf ollows:
■Enterprise Manageability diagram
30.4.2 Services Extensions
Purpose
The services extension is intended to allow mor esophisticated modeling of the service portfolio
by cr eating a concept of Information System (IS) services in addition to the cor econcept of
business services. IS services ar edirectly supported by applications and cr eating the layer of
abstraction r elaxes the constraints on business services while simultaneously allowing technical
stakeholders to put mor eformality into an IS service catalog.
The scope of this extension is as follows:
■Creation of IS services as an extension of business service
This extension should be used in the following situations:
■When the business has a preset deﬁnition of its services that does not align well to
technical and architectural needs
■When business and IT use different language to describe similar capabilities
■Wher eI Ts ervice is misaligned with business need, particularly ar ound the areas of quality
of service, visibility of performance, and management granularity
■Wher eI Ti st aking initial steps to engage business in discussions about IT architecture
The beneﬁts of using this extension ar ea sf ollows:
■Business services can be deﬁned outside of the constraints that exist in the cor e
metamodel; this allows for a mor enatural engagement with business stakeholders
■IS services can be deﬁned accor ding to a model that maps closely to implementation,
providing a mor erealistic solution abstraction to support IT decision-making
■Business and IS service relationships show wher ethe business view aligns with the IS
view and wher ethereare m isalignments
In addition to the extensions described here, organizations wishing to focus on services-centric
architectures should also consult:
■The Service Component Ar chitectur e(SCA) speciﬁcation developed by the Open Service
Oriented Architectur e(OSOA) collaboration; refer to www.oasis-opencsa.org/sca
■The Service Data Objects (SDO) speciﬁcation developed by the Open Service Oriented
Architectur e(OSOA) collaboration; refer to www.oasis-opencsa.org/sdo
Part IV:Architecture Content Frame work 291
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Content Metamodel Extensions Content Metamodel
Required Extensions to the Core Metamodel
Extensions to the cor emetamodel entities and relationships ar eshown in Figur e30-11.
BUSINESS ARCHITECTURE
TECHNO LOGY ARCHITECTUREAPPLICATION 
ARCHITECTURE DATA ARCHITECTUREOrganization Unit
Business ServiceFunction Process Actor
Data Entity
Application 
ComponentTechnology 
ComponentOwns and 
governs
Provides,
Consumes Is accessed and 
updated throughIs implemented 
on Provides 
platform for
ImplementsIs realized 
throughConsumes Is bounded by
Provides governed 
interface to accessSupports,
Is realized byOrchestrates, 
Decomposes
Is provided to
Is owned and 
governed byIs tracked 
against
IS ServiceIs realized 
through
RealizesMeets
Uses
Used byObjective
Motivation Extension© The Open Group
Figure 30-11 Services Extension: Extensions to Cor eMetamodel
Changes to the metamodel entities and relationships ar ea sf ollows:
■IS Service is added as a metamodel entity ,extending business service
■IS Service inherits all the relationships of a business service
■Arelationship is created linking an IS service to a business service
Changes to the metamodel attributes ar ea sf ollows:
■IS Service is added as a type of business service
Additional diagrams to be created ar ea sf ollows:
■Business Use-Case Diagram
■Organization Decomposition Diagram
30.4.3 Process Modeling Extensions
Purpose
The pr ocess modeling extension is intended to allow detailed modeling of process ﬂows by
adding events, products, and controls to the metamodel. Typically ,Enterprise Ar chitectur edoes
not drill into process ﬂow ,but in certain process-centric or event-centric organizations it may be
necessary to elaborate process in a much mor eformal manner using this extension module.
292 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Content Metamodel Content Metamodel Extensions
The scope of this extension is as follows:
■Creation of events as triggers for processes
■Creation of controls that business logic and governance gates for process execution
■Creation of products to represent the output of a process
■Creation of event diagrams to track triggers and state changes across the organization
This extension should be used in the following situations:
■Wher ethe architectur emust pay speciﬁc attention to state and events
■Wher ethe ar chitectur ei sr equir ed to explicitly identify and stor eprocess control steps; for
example, to support regulatory compliance
■Wher ethe architectur efeatures critical or elaborate process ﬂows
The beneﬁts of using this extension ar ea sf ollows:
■This extension allows detailed process modeling and the cataloging of process artifacts
■May be used to support regulatory compliance activities
■May be used to re-purpose legacy or non-architectural process decomposition analysis
In addition to the extensions described here, or ganizations wishing to focus on pr ocess-centric
architectures should also consult:
■The Business Process Modeling Notation (BPMN) speciﬁcation, pr ovided by the OMG;
refer to www.bpmn.org
■The Softwar eProcess Engineering Metamodel (SPEM) speciﬁcation, pr ovided by the
OMG; refer to www.omg.org/spec/SPEM
Required Extensions to the Core Metamodel
Extensions to the cor emetamodel entities and relationships ar eshown in Figur e30-12.
Part IV:Architecture Content Frame work 293
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Content Metamodel Extensions Content Metamodel
BUSINESS ARCHITECTURE
Organization Unit
Business ServiceFunction
Process Role
Control
Process Extension
Event
Process ExtensionPro suct
Process Extension
Participates in
Generates,
ResolvesProduces
Is produced 
by Is owned byOwns
Orchestrates, 
DecomposesSupports,
Is realized by
ProducesIs produced 
by
Involves
Is resolved by,
Is generated 
byGenerates,
Resolves
Is resolved 
by
ResolvesSupports, Is 
realized byOrchestrates, Decomposes
Ensures correct 
operation ofIs guided byActorContains
Belongs to
Performs task in
Is assumed 
by
Is resolved by,
Is generated 
by© The Open Group
Figure 30-12 Process Modeling Extensions: Extensions to Cor eMetamodel
Changes to the metamodel entities and relationships ar ea sf ollows:
■Event is added as a metamodel entity ,sitting between Actor ,Process, and Service
■Control is added as a metamodel entity ,relating to a Process
■Product is added as a metamodel entity ,linking Organization and Processes
Changes to the metamodel attributes ar ea sf ollows:
■Attributes ar eadded for the metamodel entities of Event, Control, and Product
Additional diagrams to be created ar ea sf ollows:
■Process Flow diagrams, showing the way in which business functions, events, contr ols,
and products ar elinked to support a particular business scenario
■Event diagrams, showing events, wer ethey ar ereceived from, and what pr ocesses they
trigger
294 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Content Metamodel Content Metamodel Extensions
30.4.4 Data Extensions
Purpose
The data extension is intended to allow mor esophisticated modeling and the encapsulation of
data. The cor emodel provides a data entity concept which supports the cr eation of data models,
which is then extended by this extension to include the concept of a data component. Data
components form a logical or physical encapsulation of abstract data entities into units that can
be governed and deployed into applications.
The scope of this extension is as follows:
■Creation of logical data components that gr oup data entities into encapsulated modules for
governance, security ,and deployment purposes
■Creation of physical data components that implement logical data components and ar e
analogous to databases, registries, repositories, schemas, and other techniques of
segmenting data
■Creation of data lifecycle, data security ,and data migration diagrams of the ar chitectur eto
show data concerns in mor edetail
This extension should be used in the following situations:
■Wher ethe ar chitectur efeatur es signiﬁcant complexity and risk around the location,
encapsulation, and management of or access to data
The beneﬁts of using this extension ar ea sf ollows:
■The str uctur eo fd ata is modeled independently fr om its location, allowing data models to
be developed that span multiple systems without being tied to physical concerns
■Logical groupings of data can be used to set governance, security ,o rd eployment
boundaries around data, providing a much mor eholistic appreciation of data issues
surrounding the architecture
Required Extensions to the Core Metamodel
Extensions to the cor emetamodel entities and relationships ar eshown in Figur e30-13.
Part IV:Architecture Content Frame work 295
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Content Metamodel Extensions Content Metamodel
BUSINESS ARCHITECTURE
APPLICATION ARCHITECTURE DATA ARCHITECTUREBusiness ServiceActor
Data Entity
Logical Data 
Component
Data Extension
Physical Data 
Component
Data ExtensionLogical Application 
Component
Physical Application 
Component
Infrastructure 
Consolidation ExtensionRealizesEncapsulatesResides within
Is realized byProvides,
ConsumesIs accessed and 
updated through
ImplementsIs realized 
through
Is supplied or 
consumed bySupplies or
Consumes
Uses
Used by
Is realized by
RealizesLocation
Contains
Is hosted in Uses
Used by© The Open Group
Figure 30-13 Data Extensions: Extensions to Cor eMetamodel
Changes to the metamodel entities and relationships ar ea sf ollows:
■Logical Data Component is added as a metamodel entity ,encapsulating data entities
■Physical Data Component is added as a metamodel entity ,extending Logical Data
Component
■Arelationship is cr eated between Physical Data Component and Application Component;
if the infrastr uctur econsolidation extension is applied, this should be to Physical
Application Component
Changes to the metamodel attributes ar ea sf ollows:
■Attributes ar eadded for the metamodel entities of Logical Data Component and Physical
Data Component
Additional diagrams to be created ar ea sf ollows:
■Data Security diagram
■Data Migration diagram
■Data Lifecycle diagram
296 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Content Metamodel Content Metamodel Extensions
30.4.5 Infrastructure Consolidation Extensions
Purpose
The infrastr uctur econsolidation extension is intended to be used in landscapes wher ethe
application and technology portfolios have become fragmented and the ar chitectur eseeks to
consolidate the business as usual capability into a smaller number of locations, applications, or
technology components.
The scope of this extension is as follows:
■Creation of logical and physical application components to abstract the capability of an
application away from the actual applications in existence
■Creation of logical and physical technology components to abstract pr oduct type from the
actual technology products in existence
■Creation of additional diagrams focusing on the location of assets, compliance with
standar ds, str uctur eo fa pplications, application migration, and infrastr ucture
conﬁguration
This extension should be used in the following situations:
■Wher emany technology products ar ei np lace with duplicate or overlapping capability
■Wher emany applications ar ei np lace with duplicate or overlapping functionality
■Wher eapplications ar egeographically dispersed and the decision logic for determining
the location of an application is not well understood
■When applications ar egoing to be migrated into a consolidated platform
■When application features ar egoing to be migrated into a consolidated application
The beneﬁts of using this extension ar ea sf ollows:
■Allows visibility and analysis of r edundant duplication of capability in the application and
technology domains
■Supports analysis of standards compliance
■Supports analysis of migration impact of application or technology consolidation
■Supports detailed architectural deﬁnition of application structure
In addition to the extensions described here, organizations wishing to focus on infrastr ucture
consolidation should also consult:
■The Uniﬁed Modeling Language (UML), provided by the OMG; refer to www.uml.org
■The Systems Modeling Language ™(SysML®)— www.sysml.org —w hich reduces the
complexity and softwar eengineering focus of UML for the purposes of systems modeling
■The IT Portfolio Management Facility (ITPMF) fr om the OMG; refer to
www.omg.org/spec/ITPMF
Part IV:Architecture Content Frame work 297
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Content Metamodel Extensions Content Metamodel
Required Extensions to the Core Metamodel
Extensions to the cor emetamodel entities and relationships ar eshown in Figur e30-14.
BUSINESS ARCHITECTURE
Organization Unit
Actor
Location
TECHNOLO tY ARCHITECTURE APPLICATION ARCHITECTURE DATA ARCHITECTUREData Entity
Logical Data 
Component
Data Extension
Physical Data 
Component
Data ExtensionLogical Application 
Component
Physical Application 
Component
Infrastructure Consolidation 
ExtensionLogical Technology 
Component
Infrastructure Consolidation 
Extension
Physical 
Technology 
ComponentEncapsulatesResides within
SuppliesIs supplied by
RealizesRealizesProvides, 
Consumes
Is accessed and 
updated through
UsesIs implemented 
on
Provides 
platform forImplementsIs realized 
through
RealizesIs realized by Is realized by
Is realized byServes
ServesUses
Used by
Is served
byTechnology 
ServiceOperates in
Operates in
ContainsContains Contains
Is hosted in
Is hosted inIs hosted inBusiness Service
Used byIs served
by© The Open Group
Figure 30-14 Infrastructur eConsolidation Extensions: Extensions to Cor eMetamodel
Changes to the metamodel entities and relationships ar ea sf ollows:
■Application Components ar eextended to include Logical Application Components (a class
of application) and Physical Application Components (an actual application)
■Technology Components ar eextended to include Logical T echnology Components (a class
of technology pr oduct) and Physical Technology Components (an actual technology
product)
Changes to the metamodel attributes ar ea sf ollows:
■Creation of attributes for the Metamodel entities of Logical Application Component,
Physical Application Component, Logical Technology Component, Physical T echnology
Component, and Location
Additional diagrams to be created ar ea sf ollows:
■Process/Application Realization diagram
■Softwar eEngineering diagram
■Application Migration diagram
■Softwar eDistribution diagram
■Processing diagram
■Networked Computing/Hardwar ediagram
■Network and Communications diagram
298 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Content Metamodel Content Metamodel Extensions
30.4.6 Motivation Extensions
Purpose
The motivation extension is intended to allow additional str uctur ed modeling of the drivers,
goals, and objectives that inﬂuence an organization to pr ovide business services to its customers.
This in turn allows mor eeffective deﬁnition of service contracts and better measur ement of
business performance.
The scope of this extension is as follows:
■Creation of a metamodel entity for Driver that shows factors generally motivating or
constraining an organization
■Creation of a metamodel entity for Goal that shows the strategic purpose and mission of
an organization
■Creation of a metamodel entity for Objective that shows near to mid-term achievements
that an organization would like to attain
■Creation of a Goal/Objective/Service diagram showing the traceability fr om drivers,
goals, and objectives through to services
This extension should be used in the following situations:
■When the ar chitectur eneeds to understand the motivation of organizations in mor edetail
than the standar dbusiness or engagement principles and objectives that ar einformally
modeled within the cor econtent metamodel
■When or ganizations have conﬂicting drivers and objectives and that conﬂict needs to be
understood and addressed in a structured form
■When service levels ar eunknown or unclear
The beneﬁts of using this extension ar ea sf ollows:
■Highlights misalignment of priorities across the enterprise and how these intersect with
shar ed services (e.g., some or ganizations may be attempting to reduce costs, while others
areattempting to increase capability)
■Shows competing demands for business services in a mor estructur ed fashion, allowing
compromise service levels to be deﬁned
In addition to the extensions described her e, organizations wishing to focus on ar chitecture
modeling of business motivation should also consult:
■The Business Motivation Model ™(BMM ™)speciﬁcation, provided by the OMG; refer to
www.omg.org/spec/BMM/About-BMM
Required Extensions to the Core Metamodel
Extensions to the cor emetamodel entities and relationships ar eshown in Figur e30-15.
Part IV:Architecture Content Frame work 299
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Content Metamodel Extensions Content Metamodel
BUSINESS ARCHITECTURE
Organization Unituoal
Motivation Extension
Objective
Motivation Extensionveasure
Governance ExtensionContract
Governance 
ExtensionDriver
Motivation Extension
Governs, 
MeasuresIs governed and 
measured byIs tracked 
againstSets performance 
criteria forSets performance 
criteria forIs tracked 
againstIs motivated by
Motivates
Creates
Addresses
Is realized 
through
Realizes
Service xuality
Governance 
Extension
Applies to
MeetsApplies to MeetsCourse 
o{ ActionIs realized by
Realizes
Business Service© The Open Group
Figure 30-15 Motivation Extensions: Extensions to Cor eMetamodel
Changes to the metamodel entities and relationships ar ea sf ollows:
■Driver ,Goal, and Objective ar eadded as entities that link Organization Unit to Business
Service
Changes to the metamodel attributes ar ea sf ollows:
■Attributes ar eadded for the metamodel entities of Driver ,Goal, and Objective
Additional diagrams to be created ar ea sf ollows:
■Goal/Objective/Service diagram
300 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Content Metamodel Content Metamodel Entities
30.5 Content Metamodel Entities
The following table lists and describes the entities within the content metamodel.
Metamodel Entity Description
Actor Aperson, organization, or system that has a role that initiates or
interacts with activities; for example, a sales representative who
travels to visit customers. Actors may be internal or external to an
organization. In the automotive industry ,a no riginal equipment
manufacturer would be considered an actor by an automotive
dealership that interacts with its supply chain activities.
Application Component An encapsulation of application functionality aligned to
implementation structure. For example, a purchase request
processing application.
See also Logical Application Component and Physical Application
Component .
Assumption Astatement of probable fact that has not been fully validated at this
stage, due to external constraints. For example, it may be assumed
that an existing application will support a certain set of functional
requirements, although those requirements may not yet have been
individually validated.
Business Capability Aparticular ability that a business may possess or exchange to
achieve a particular purpose.
Business Service Supports business capabilities through an explicitly deﬁned interface
and is explicitly governed by an organization.
Capability Abusiness-focused outcome that is delivered by the completion of
one or mor ework packages. Using a capability-based planning
approach, change activities can be sequenced and grouped in order
to provide continuous and incremental business value.
Constraint An external factor that prevents an organization from pursuing
particular approaches to meet its goals. For example, customer data
is not harmonized within the organization, regionally or nationally,
constraining the organization’s ability to offer effective customer
service.
Contract An agreement between a service consumer and a service provider
that establishes functional and non-functional parameters for
interaction.
Control Adecision-making step with accompanying decision logic used to
determine execution approach for a process or to ensur ethat a
process complies with governance criteria. For example, a sign-off
control on the purchase request processing process that checks
whether the total value of the request is within the sign-of flimits of
the requester ,o rw hether it needs escalating to higher authority.
Course of Action Direction and focus provided by strategic goals and objectives, often
to deliver the value proposition characterized in the business model.
Data Entity An encapsulation of data that is recognized by a business domain
expert as a thing. Logical data entities can be tied to applications,
repositories, and services and may be structured according to
implementation considerations.
Part IV:Architecture Content Frame work 301
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Content Metamodel Entities Content Metamodel
Metamodel Entity Description
Driver An external or internal condition that motivates the organization to
deﬁne its goals. An example of an external driver is a change in
regulation or compliance rules which, for example, requir echanges
to the way an organization operates; i.e., Sarbanes-Oxley in the US.
Event An organizational state change that triggers processing events; may
originate from inside or outside the organization and may be
resolved inside or outside the organization.
Function Delivers business capabilities closely aligned to an organization, but
not necessarily explicitly governed by the organization. Also referred
to as "business function".
Gap Astatement of difference between two states. Used in the context of
gap analysis, wher ethe difference between the Baseline and Target
Architectur ei si dentiﬁed.
Note: Gap analysis is described in Part III, Chapter 23 .
Goal Ahigh-level statement of intent or direction for an organization.
Typically used to measur esuccess of an organization.
Information System
ServiceThe automated elements of a business service. An information
system service may deliver or support part or all of one or more
business services.
Location Aplace wher ebusiness activity takes place and can be hierarchically
decomposed.
Logical Application
ComponentAn encapsulation of application functionality that is independent of
aparticular implementation. For example, the classiﬁcation of all
purchase request processing applications implemented in an
enterprise.
Logical Data
ComponentAboundary zone that encapsulates related data entities to form a
logical location to be held; for example, external procurement
information.
Logical Technology
ComponentAn encapsulation of technology infrastructur ethat is independent of
aparticular product. A class of technology product; for example,
supply chain management softwar ea sp art of an Enterprise
Resource Planning (ERP) suite, or a Commercial Off-The-Shelf
(COTS) purchase request processing enterprise service.
Measure An indicator or factor that can be tracked, usually on an ongoing
basis, to determine success or alignment with objectives and goals.
Objective Atime-bounded milestone for an organization used to demonstrate
progress towards a goal; for example, "Increase capacity utilization
by 30% by the end of 2019 to support the planned increase in market
share".
Organization Unit Aself-contained unit of resources with goals, objectives, and
measur es. Or ganization units may include external parties and
business partner organizations.
Physical Application
ComponentAn application, application module, application service, or other
deployable component of functionality .For example, a conﬁgured
and deployed instance of a Commercial Off-The-Shelf (COTS)
Enterprise Resource Planning (ERP) supply chain management
application.
302 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Content Metamodel Content Metamodel Entities
Metamodel Entity Description
Physical Data
ComponentAboundary zone that encapsulates related data entities to form a
physical location to be held. For example, a purchase order business
object, comprising purchase order header and item business object
nodes.
Physical Technology
ComponentAspeciﬁc technology infrastructur eproduct or technology
infrastructur eproduct instance. For example, a particular product
version of a Commercial Off-The-Shelf (COTS) solution, or a speciﬁc
brand and version of server.
Principle Aqualitative statement of intent that should be met by the
architectur e. Has at least a supporting rationale and a measur eof
importance.
Note: Asample set of Architectur ePrinciples is deﬁned in Part III,
Chapter 20 .
Process Aprocess represents ﬂow of control between or within functions
and/or services (depends on the granularity of deﬁnition).
Processes represent a sequence of activities that together achieve a
speciﬁed outcome, can be decomposed into sub-processes, and can
show operation of a function or service (at next level of detail).
Processes may also be used to link or compose organizations,
functions, services, and processes.
Product Output generated by the business. The business product of the
execution of a process.
Requirement Aquantitative statement of business need that must be met by a
particular architectur eo rw ork package.
Role The usual or expected function of an actor ,o rt he part somebody or
something plays in a particular action or event. An actor may have a
number of roles.
See also Actor .
Service An element of behavior that provides speciﬁc functionality in
response to requests from actors or other services. A service delivers
or supports business capabilities, has an explicitly deﬁned interface,
and is explicitly governed. Services ar edeﬁned for business,
information systems, and platforms.
Service Quality Apreset conﬁguration of non-functional attributes that may be
assigned to a service or service contract.
Technology Component An encapsulation of technology infrastructur ethat represents a class
of technology product or speciﬁc technology product.
Technology Service Atechnical capability required to provide enabling infrastructure
that supports the delivery of applications.
Value Stream Arepresentation of an end-to-end collection of value-adding
activities that create an overall result for a customer ,stakeholder ,or
end-user.
Work Package Aset of actions identiﬁed to achieve one or mor eobjectives for the
business. A work package can be a part of a project, a complete
project, or a program.
Part IV:Architecture Content Frame work 303
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Content Metamodel Attrib utes Content Metamodel
30.6 Content Metamodel Attributes
The following table shows typical attributes for each of the metamodel entities described
previously.
Metamodel
Entity Attribute Description
All Metamodel Entities ID Unique identiﬁer for the
architectur eentity.
Name Brief name of the architecture
entity.
Description Textual description of the
architectur eentity.
Category User-deﬁnable categorization
taxonomy for each metamodel
entity.
Source Location from wher ethe
information was collected.
Owner Owner of the architectur eentity.
Capability Business value Describes how this capability
provides value to the enterprise.
Increments Lists possible maturity/quality
levels for the capability.
Constraint No additional attributes This metamodel entity has only
basic attributes.
Gap No additional attributes This metamodel entity has only
basic attributes.
Location Category The following categories of
Location apply: Region (applies
to a grouping of countries or
territory; e.g., South East Asia,
UK, and Ireland), Country
(applies to a single country; e.g.,
US), Building (applies to a site
of operation; wher eseveral
ofﬁces ar ecollected in a single
city,this category may represent
acity), and Speciﬁc Location
(applies to any speciﬁc location
within a building, such as a
server r oom). The natur eo ft he
business may introduce other
Locations: Ship or Port for a
ferry company ,Mine for a gold
company ,Car for a police force,
Hotel for any ﬁrm’s traveling
workers, and so on.
304 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Content Metamodel Content Metamodel Attributes
Metamodel
Entity Attribute Description
Principle Category The following categories of
principle apply: Guiding
Principle, Business Principle,
Data Principle, Application
Principle, Integration Principle,
Technology Principle.
Priority Priority of this principle relative
to other principles.
Statement of principle Statement of what the principle
is.
Rationale Statement of why the principle
is required and the outcome to
be reached.
Implication Statement of what the principle
means in practical terms.
Metric Identiﬁes mechanisms that will
be used to measur ewhether the
principle has been met or not.
Requir ement Statement of requirement Statement of what the
requirement is, including a
deﬁnition of whether the
requirement shall be met,
should be met, or may be met.
Rationale Statement of why the
requirement exists.
Acceptance criteria Statement of what tests will be
carried out to ensur ethat the
requirement will be met.
Actor # FTEs Estimated number of FTEs that
operate as this Actor.
Actor goal Objectives that this actor has, in
general terms.
Actor tasks Tasks that this actor performs,
in general terms.
Business Service Standards class Non-Standard, Proposed
Standard, Provisional Standard,
Standard, Phasing-Out
Standard, Retired Standard.
Standar dcreation date If the product is a standard,
when the standar dwas created.
Last standar dreview date Last date that the standar dwas
reviewed.
Next standar dreview date Next date for the standar dt ob e
reviewed.
Retir edate Date when the standard
was/will be retired.
Contract Behavior characteristics Functional behavior to be
supported within the scope of
the contract.
Part IV:Architecture Content Frame work 305
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Content Metamodel Attrib utes Content Metamodel
Metamodel
Entity Attribute Description
Service name "caller" Consuming service.
Service name "called" Providing service.
Service quality characteristics Non-functional behavior to be
supported within the scope of
the contract.
Availability characteristics Degree to which something is
available for use.
Service times Hours during which the service
must be available.
Manageability characteristics Ability to gather information
about the state of something
and control it.
Serviceability characteristics Ability to identify problems and
take corrective action, such as to
repair or upgrade a component
in a running system.
Performance characteristics Ability of a component to
perform its tasks in an
appropriate time.
Response requirements Response times that the service
provider must meet for
particular operations.
Reliability characteristics Resistance to failure.
Quality of information required Contracted requirements on
accuracy and completeness of
information.
Contract control requirements Level of governance and
enforcement applied to the
contractual parameters for
overall service.
Result control requirements Measures in place to ensur ethat
each service request meets
contracted criteria.
Recoverability characteristics Ability to restor eas ystem to a
working state after an
interruption.
Locatability characteristics Ability of a system to be found
when needed.
Security characteristics Ability of a system to prevent
unauthorized access to
functions and data.
Privacy characteristics Protection of data from
unauthorized access.
Integrity characteristics Ability of a system to ensure
that data has not been
corrupted.
Credibility characteristics Ability of a system to ensure
that the service request
originates from an authorized
source.
306 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Content Metamodel Content Metamodel Attributes
Metamodel
Entity Attribute Description
Localization characteristics Ability of a service to support
localized variants for different
consumer groups.
Internationalization characteristics Ability of a service to support
international variations in
business logic and data
representation (such as
character set).
Interoperability characteristics Ability of the service to
interoperate with different
technical environments, inside
and outside of the organization.
Scalability characteristics Ability of the service to grow or
shrink its performance or
capacity appropriately to the
demands of the environment in
which it operates.
Portability characteristics Of data, people, applications,
and components.
Extensibility characteristics Ability to accept new
functionality.
Capacity characteristics Contracted capacity of the
service provider to meet
requests.
Throughput Requir ed throughput capacity.
Throughput period Time period needed to deliver
throughput capacity.
Growth Expected futur egrowth rate of
service request.
Growth period Time period needed to reach the
expected growth rate.
Peak proﬁle short term Short-term proﬁle of peak
service trafﬁc.
Peak proﬁle long term Long-term proﬁle of peak
service trafﬁc.
Contr ol No additional attributes This metamodel entity has only
basic attributes.
Driver No additional attributes This metamodel entity has only
basic attributes.
Event No additional attributes This metamodel entity has only
basic attributes.
Function Standar ds class Non-Standard, Proposed
Standard, Provisional Standard,
Standard, Phasing-Out
Standard, Retired Standard.
Standar dcreation date If the product is a standard,
when the standar dwas created.
Last standar dreview date Last date that the standar dwas
reviewed.
Part IV:Architecture Content Frame work 307
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Content Metamodel Attrib utes Content Metamodel
Metamodel
Entity Attribute Description
Next standar dreview date Next date for the standar dt ob e
reviewed.
Retir edate Date when the standard
was/will be retired.
Goal No additional attributes This metamodel entity has only
basic attributes.
Measur eN oadditional attributes This metamodel entity has only
basic attributes.
Objective No additional attributes This metamodel entity has only
basic attributes.
Organization Unit Headcount Number of FTEs working
within the organization.
Process Standar ds class Non-Standard, Proposed
Standard, Provisional Standard,
Standard, Phasing-Out
Standard, Retired Standard.
Standar dcreation date If the product is a standard,
when the standar dwas created.
Last standar dreview date Last date that the standar dwas
reviewed.
Next standar dreview date Next date for the standar dt ob e
reviewed.
Retir edate Date when the standard
was/will be retired.
Process criticality Criticality of this process to
business operations.
Manual or automated Whether this process is
supported by IT or is a manual
process.
Process volumetrics Data on frequency of process
execution.
Product No additional attributes This metamodel entity has only
basic attributes.
Role Estimated number of FTEs that
operate in this RoleThis metamodel entity has only
basic attributes.
Service Quality No additional attributes This metamodel entity has only
basic attributes.
Service Standar ds class Non-Standard, Proposed
Standard, Provisional Standard,
Standard, Phasing-Out
Standard, Retired Standard.
Standar dcreation date If the product is a standard,
when the standar dwas created.
Last standar dreview date Last date that the standar dwas
reviewed.
Next standar dreview date Next date for the standar dt ob e
reviewed.
308 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Content Metamodel Content Metamodel Attributes
Metamodel
Entity Attribute Description
Retir edate Date when the standard
was/will be retired.
Application Component Standards class Non-Standard, Proposed
Standard, Provisional Standard,
Standard, Phasing-Out
Standard, Retired Standard.
Standar dcreation date If the product is a standard,
when the standar dwas created.
Last standar dreview date Last date that the standar dwas
reviewed.
Next standar dreview date Next date for the standar dt ob e
reviewed.
Retir edate Date when the standard
was/will be retired.
Standards class Information System
ServiceNon-Standard, Proposed
Standard, Provisional Standard,
Standard, Phasing-Out
Standard, Retired Standard.
Standar dcreation date If the product is a standard,
when the standar dwas created.
Last standar dreview date Last date that the standar dwas
reviewed.
Next standar dreview date Next date for the standar dt ob e
reviewed.
Retir edate Date when the standard
was/will be retired.
Standards class Logical Application
ComponentNon-Standard, Proposed
Standard, Provisional Standard,
Standard, Phasing-Out
Standard, Retired Standard.
Standar dcreation date If the product is a standard,
when the standar dwas created.
Last standar dreview date Last date that the standar dwas
reviewed.
Next standar dreview date Next date for the standar dt ob e
reviewed.
Retir edate Date when the standard
was/will be retired.
Lifecycle status Physical Application
ComponentProposed, In Development,
Live, Phasing Out, Retired.
Standards class Non-Standard, Proposed
Standard, Provisional Standard,
Standard, Phasing-Out
Standard, Retired Standard.
Standar dcreation date If the product is a standard,
when the standar dwas created.
Last standar dreview date Last date that the standar dwas
reviewed.
Part IV:Architecture Content Frame work 309
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Content Metamodel Attrib utes Content Metamodel
Metamodel
Entity Attribute Description
Next standar dreview date Next date for the standar dt ob e
reviewed.
Retir edate Date when the standard
was/will be retired.
Initial live date Date when the ﬁrst release of
the application was/will be
released into production.
Date of last release Date when the last release of the
application was released into
production.
Date of next release Date when the next release of
the application will be released
into production.
Retirement date Date when the application
was/will be retired.
Availability characteristics Degree to which something is
available for use.
Service times Hours during which the
application must be available.
Manageability characteristics Ability to gather information
about the state of something
and control it.
Serviceability characteristics Ability to identify problems and
take corrective action, such as to
repair or upgrade a component
in a running system.
Performance characteristics Ability of a component to
perform its tasks in an
appropriate time.
Reliability characteristics Resistance to failure.
Recoverability characteristics Ability to restor eas ystem to a
working state after an
interruption.
Locatability characteristics Ability of a system to be found
when needed.
Security characteristics Ability of a system to prevent
unauthorized access to
functions and data.
Privacy characteristics Protection of data from
unauthorized access.
Integrity characteristics Ability of a system to ensure
that data has not been
corrupted.
Credibility characteristics Ability of a system to ensure
that the service request
originates from an authorized
source.
Localization characteristics Ability of a service to support
localized variants for different
consumer groups.
310 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Content Metamodel Content Metamodel Attributes
Metamodel
Entity Attribute Description
Internationalization characteristics Ability of a service to support
international variations in
business logic and data
representation (such as
character set).
Interoperability characteristics Ability of the service to
interoperate with different
technical environments, inside
and outside of the organization.
Scalability characteristics Ability of the service to grow or
shrink its performance or
capacity appropriately to the
demands of the environment in
which it operates.
Portability characteristics Of data, people, applications,
and components.
Extensibility characteristics Ability to accept new
functionality.
Capacity characteristics Contracted capacity of the
service provider to meet
requests.
Throughput Requir ed throughput capacity.
Throughput period Time period needed to deliver
throughput capacity.
Growth Expected futur egrowth rate of
service request.
Growth period Time period needed to reach the
expected growth rate.
Peak proﬁle short term Short-term proﬁle of peak
service trafﬁc.
Peak proﬁle long term Long-term proﬁle of peak
service trafﬁc.
Data Entity Category The following categories of data
entity apply: Message,
Internally Stored Entity.
Privacy classiﬁcation Level of restriction placed on
access to the data.
Retention classiﬁcation Level of retention to be placed
on the data.
Standards class Logical Data
ComponentNon-Standard, Proposed
Standard, Provisional Standard,
Standard, Phasing-Out
Standard, Retired Standard.
Standar dcreation date If the product is a standard,
when the standar dwas created.
Last standar dreview date Last date that the standar dwas
reviewed.
Next standar dreview date Next date for the standar dt ob e
reviewed.
Part IV:Architecture Content Frame work 311
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Content Metamodel Attrib utes Content Metamodel
Metamodel
Entity Attribute Description
Retir edate Date when the standard
was/will be retired.
Standards class Physical Data
ComponentNon-Standard, Proposed
Standard, Provisional Standard,
Standard, Phasing-Out
Standard, Retired Standard.
Standar dcreation date If the product is a standard,
when the standar dwas created.
Last standar dreview date Last date that the standar dwas
reviewed.
Next standar dreview date Next date for the standar dt ob e
reviewed.
Retir edate Date when the standard
was/will be retired.
Standards class Logical Technology
ComponentNon-Standard, Proposed
Standard, Provisional Standard,
Standard, Phasing-Out
Standard, Retired Standard.
Standar dcreation date If the product is a standard,
when the standar dwas created.
Last standar dreview date Last date that the standar dwas
reviewed.
Next standar dreview date Next date for the standar dt ob e
reviewed.
Retir edate Date when the standard
was/will be retired.
Category Logical Technology
Components ar ecategorized
according to the deﬁned
taxonomy (such as the TOGAF
TRM), adapted to meet the
needs of an individual
organization.
Standards class Physical Technology
ComponentNon-Standard, Proposed
Standard, Provisional Standard,
Standard, Phasing-Out
Standard, Retired Standard.
Standar dcreation date If the product is a standard,
when the standar dwas created.
Last standar dreview date Last date that the standar dwas
reviewed.
Next standar dreview date Next date for the standar dt ob e
reviewed.
Retir edate Date when the standard
was/will be retired.
312 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Content Metamodel Content Metamodel Attributes
Metamodel
Entity Attribute Description
Category Physical Technology
Components ar ecategorized
according to the deﬁned
taxonomy (such as the TOGAF
TRM), adapted to meet the
needs of an individual
organization.
Product name Name of the product making up
the technology component.
Module name Module, or other sub-product,
name making up the technology
component.
Vendor Vendor providing the
technology component.
Version Version of the product making
up the technology component.
Technology Service Standards class Non-Standard, Proposed
Standard, Provisional Standard,
Standard, Phasing-Out
Standard, Retired Standard.
Category Technology Services are
categorized according to the
deﬁned taxonomy (such as the
TOGAF TRM), adapted to meet
the needs of an individual
organization.
Business Capability No additional attributes This metamodel entity has only
basic attributes.
Technology Component Standards class Non-Standard, Proposed
Standard, Provisional Standard,
Standard, Phasing-Out
Standard, Retired Standard.
Course of Action No additional attributes This metamodel entity has only
basic attributes.
Value Str eam No additional attributes This metamodel entity has only
basic attributes.
Work Package Category The following categories of
work package apply: Work
Package, Work Stream, Project,
Program, Portfolio.
Capability delivered Describes the contribution this
work package makes to
capability delivery.
Part IV:Architecture Content Frame work 313
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Metamodel Relationships Content Metamodel
30.7 Metamodel Relationships
Source Entity Target Entity Name Extension Module
Actor Event Generates Pr ocess
Actor Event Resolves Pr ocess
Actor Function Interacts with Core
Actor Function Performs Cor e
Actor V alue Str eam Participates in Cor e
Actor V alue Str eam T riggers Cor e
Actor Or ganization Unit Belongs to Core
Actor Role Performs task in Core
Actor Service Consumes Cor e
Actor Actor Decomposes Cor e
Actor Data Entity Supplies/Consumes Core
Business Capability Course of Action Is inﬂuenced by Core
Business Capability Function Is delivered by Core
Business Capability Organizational Unit Is used by Core
Business Capability Pr ocess Is operationalized by Core
Business Capability Value Str eam Enables Core
Capability W ork Package Is delivered by Core
Contract Service Governs and Measur es Governance
Contract Service Quality Meets Governance
Contr ol Pr ocess Ensur es correct operation of Process
Course of Action Business Capability Inﬂuences Cor e
Course of Action Goal Realizes Motivation
Course of Action Function Inﬂuences Core
Course of Action Value Str eam Inﬂuences Core
Data Entity Resides within Data Logical Data
Component
Data Entity Service Is accessed and updated thr ough Cor e
Data Entity Uses Services Information System
Service
Data Entity Data Entity Decomposes Cor e
Data Entity Data Entity Relates to Core
Driver Goal Creates Motivation
Driver Or ganization Unit Motivates Motivation
Driver Driver Decomposes Motivation
Event Actor Is resolved by Process
Event Actor Is generated by Process
Event Pr ocess Is resolved by Process
Event Pr ocess Is generated by Process
Event Service Is resolved by Process
Function Actor Supports Cor e
Function Actor Is performed by Core
Function Business Capability Delivers Core
Function Or ganization Unit Is owned by Core
Function Pr ocess Supports Core
314 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Content Metamodel Metamodel Relationships
Source Entity Target Entity Name Extension Module
Function Pr ocess Is realized by Core
Function Service Is bounded by Core
Function Function Decomposes Cor e
Function Function Communicates with Core
Goal Course of Action Is realized by Motivation
Goal Driver Addr esses Motivation
Goal Objective Is realized thr ough Motivation
Goal Goal Decomposes Motivation
Data Entity Used by Services Information System
Service
Service Realizes Services Information System
Service
Technology Service Is served by Services Information System
Service
Is realized thr ough Services Information System
ServiceLogical Application
Component
Is realized by Logical Application
ComponentPhysical Application
ComponentInfrastructure
Consolidation
Service Implements Core Logical Application
Component
Decomposes Cor e Logical Application
ComponentLogical Application
Component
Communicates with Core Logical Application
ComponentLogical Application
Component
Used by Data Logical Application
ComponentLogical Data
Component
Is served by Logical Application
ComponentLogical Technology
ComponentInfrastructure
Consolidation
Implements Services Logical Application
ComponentInformation System
Service
Uses Data Logical Data
ComponentLogical Application
Component
Data Entity Encapsulates Data Logical Data
Component
Physical Data Component Is realized by Data Logical Data
Component
Serves Logical Technology
ComponentLogical Application
ComponentInfrastructure
Consolidation
Is realized by Logical Technology
ComponentPhysical Technology
ComponentInfrastructure
Consolidation
Technology Service Supplies Cor e Logical Technology
Component
Service Pr ovides platform for Core Logical Technology
Component
Decomposes Cor e Logical Technology
ComponentLogical Technology
Component
Is dependent on Core Logical Technology
ComponentLogical Technology
Component
Serves Logical Technology
ComponentLogical Application
ComponentInfrastructure
Consolidation
Part IV:Architecture Content Frame work 315
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Metamodel Relationships Content Metamodel
Source Entity Target Entity Name Extension Module
Measur eO bjective Sets performance criteria for Governance
Measur eS ervice Sets performance criteria for Governance
Measur eM easur eD ecomposes Governance
Objective Goal Realizes Motivation
Objective Measur eI stracked against Governance
Objective Objective Decomposes Motivation
Organization Unit Actor Contains Core
Organization Unit Business Capability Uses Cor e
Organization Unit Driver Is motivated by Motivation
Organization Unit Function Owns Core
Organization Unit Pr oduct Pr oduces Pr ocess
Organization Unit Pr ocess Involves Core
Organization Unit Service Owns and Governs Core
Organization Unit Organization Unit Decomposes Cor e
Realizes Physical Application
ComponentLogical Application
ComponentInfrastructure
Consolidation
Used by Data Physical Application
ComponentPhysical Data
Component
Is served by Core Physical Application
ComponentPhysical Technology
Component
Decomposes Cor e Physical Application
ComponentPhysical Application
Component
Communicates with Core Physical Application
ComponentPhysical Application
Component
Realizes Data Physical Data
ComponentLogical Data
Component
Decomposes Cor e Physical Data
ComponentPhysical Data
Component
Uses Data Physical Data
ComponentPhysical Application
Component
Serves Cor e Physical Technology
ComponentPhysical Application
Component
Realizes Physical Technology
ComponentLogical Technology
ComponentInfrastructure
Consolidation
Decomposes Cor e Physical Technology
ComponentPhysical Technology
Component
Is dependent on Core Physical Technology
ComponentPhysical Technology
Component
Process Contr ol Is guided by Process
Process Event Generates Pr ocess
Process Event Resolves Pr ocess
Process Function Orchestrates Cor e
Process Function Decomposes Cor e
Process Or ganization Unit Involves Cor e
Process Pr oduct Pr oduces Pr ocess
Process Role Involves Cor e
Process Role Is performed by Core
Process Service Orchestrates Cor e
Process Service Decomposes Cor e
316 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Content Metamodel Metamodel Relationships
Source Entity Target Entity Name Extension Module
Process Pr ocess Decomposes Core
Process Pr ocess Pr ecedes/Follows Cor e
Product Or ganization Unit Is produced by Process
Product Pr ocess Is produced by Process
Role Actor Is performed by Core
Role Pr ocess Participates in Cor e
Role Pr ocess Performs Core
Role Role Decomposes Cor e
Service Actor Is provided to Core
Service Contract Is governed and measured by Governance
Service Data Entity Pr ovides Cor e
Service Data Entity Consumes Core
Service Event Resolves Pr ocess
Service Function Core Provides governed interface to
access
Service Is realized thr ough Services Information System
Service
Service Is realized thr ough Cor e Logical Application
Component
Service Is implemented on Core Logical Technology
Component
Service Measur eI stracked against Governance
Service Or ganization Unit Is owned and governed by Core
Service Pr ocess Supports Core
Service Pr ocess Is realized by Core
Service Service Quality Meets Governance
Service Service Consumes Cor e
Service Service Decomposes Cor e
Service Quality Contract Applies to Governance
Service Quality Service Applies to Governance
Technology Service Is supplied by Core Logical Technology
Component
Technology Service Serves Services Information System
Service
Value Str eam Actor Involves Cor e
Value Str eam Actor Is triggered by Core
Value Str eam Business Capability Is enabled by Core
Value Str eam Course of Action Is inﬂuenced by Core
Work Package Capability Delivers Core
Part IV:Architecture Content Frame work 317
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Content Metamodel
318 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 31
Architectural Artifacts
This chapter discusses the concepts surr ounding ar chitectur eartifacts and then describes the artifacts that
arerecommended to be created for each phase within the Architectur eDevelopment Method (ADM).
31.1 Basic Concepts
Architectural artifacts ar ecreated in or der to describe a system, solution, or state of the
enterprise. The concepts discussed in this section have been adapted from mor eformal
deﬁnitions contained in ISO/IEC/IEEE 42010: 201 1and ISO/IEC/IEEE 15288: 2015. They ar e
illustrated in Figur e31-1.7
The "environment" of a system is the context determining the setting and circumstances of all
inﬂuences upon a system. The envir onment of a system includes developmental, technological,
business, operational, or ganizational, political, economic, legal, r egulatory ,ecological, and social
inﬂuences.
A"system" is a combination of interacting elements or ganized to achieve one or mor estated
purposes.
The "ar chitectur e" of a system is the fundamental concepts or properties of a system in its
envir onment embodied in its elements, relationships, and in the principles of its design and
evolution.
An "Ar chitectur eDescription" is a work product used to express an ar chitectur e; a collection of
architectur eviews and models that together document the architecture.
"Stakeholders" ar eindividuals, teams, organizations, or classes thereof, having an interest in a
system.
"Concerns" ar einterests in a system relevant to one or mor eo fi ts stakeholders. Concerns may
pertain to any aspect of the system’s functioning, development, or operation, including
considerations such as performance, r eliability ,security ,distribution, and evolvability and may
determine the acceptability of the system.
An "ar chitectur eview" is a r epresentation of a system from the perspective of a related set of
concerns. It consists of one or mor earchitectur emodels of the system.
An "Ar chitectur eModel" is a r epresentation of a subject of inter est. A model provides a smaller
scale, simpliﬁed, and/or abstract representation of the subject matter.
In capturing or r epresenting the design of a system ar chitectur e, the architect will typically
create one or mor earchitectur emodels, possibly using dif ferent tools. An ar chitectur eview will
7.Figure 31-1 is reprinted and adapted from Figure 2 of ISO/IEC/IEEE 42010: 2011, Systems and Software Engineering — Architecture
Description, with permission from IEEE. Cop yright© 2011, by IEEE. The IEEE disclaims an yresponsibility or liability resulting from the
placement and use in the described manner.
Part IV:Architecture Content Frame work 319
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Basic Concepts Architectural Artifacts
comprise selected parts of one or mor emodels, chosen so as to demonstrate to a particular
stakeholder or gr oup of stakeholders that their concerns ar ebeing adequately addressed in the
design of the system architecture.
Architecture |ie }point
~Systemo 
Interest
ConcernSta ehol erArchitecture
Architecture 
Description
governs 
   exhiits 
has oel inArchitecture |ie }
Architecture oelgoverns 
identifies 
fraes          
    

                
   
      expresses 
         
has interests in 

Figure 31-1 Basic Architectural Concepts
An "ar chitectur eviewpoint" is a speciﬁcation of the conventions for a particular kind of
architectur eview.I tc an also be called the deﬁnition or schema for that kind of ar chitectur eview.
It establishes the conventions for constructing, interpreting, and using an ar chitectur eview to
address a speciﬁc concern (or set of concerns) about a system-of-interest.
A"Model Kind" establishes conventions for a type of modeling.
An ar chitectur eviewpoint r eferences one or mor em odel kinds; an ar chitectur eview
incorporates one or mor emodels.
A"viewpoint library" is a collection of the speciﬁcations of ar chitectur eviewpoints contained in
the Reference Library portion of the Architectur eRepository.
■An ar chitectur eview is what you see; an ar chitectur eviewpoint is wher eyou ar elooking
from — the vantage point or perspective that determines what you see
320 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Architectural Artifacts Basic Concepts
■Architectur eviewpoints ar egeneric, and can be stored in libraries for re-use; an
architectur eview is always speciﬁc to the architectur efor which it is created
■Every ar chitectur eview has an associated ar chitectur eviewpoint that describes it, at least
implicitly
ISO/IEC/IEEE 42010: 201 1e ncourages ar chitects to deﬁne ar chitectur ev iewpoints
explicitly .Making this distinction between the content and schema of a view may seem at
ﬁrst to be an unnecessary overhead, but it provides a mechanism for re-using ar chitecture
viewpoints across different architectures.
In summary ,then, ar chitectur eviews ar erepresentations of the overall ar chitectur ei nt erms
meaningful to stakeholders. They enable the ar chitectur et ob ec ommunicated to and
understood by the stakeholders, so they can verify that the system will address their concerns.
Note: The terms "concern" and "r equir ement" ar enot synonymous. A concern is an area of interest. So,
system reliability might be a concern/ar ea of interest for some stakeholders. The reason why
architects should identify concerns and associate them with ar chitectur eviewpoints, is to ensur e
that those concerns will be addressed in some fashion by the models of the ar chitectur e. For
example, if the only ar chitectur eviewpoint selected by an ar chitect is a structural ar chitecture
viewpoint, then reliability concerns ar ealmost certainly not being addr essed, since they cannot
be represented in a structural model. W ithin that concern, stakeholders may have many distinct
requirements: dif ferent classes of users may have very dif ferent reliability r equir ements for
different capabilities of the system.
Concerns ar ethe root of the process of decomposition into r equir ements. Concerns ar e
represented in the ar chitectur eb yt hese r equir ements. Requirements should be SMAR T(e.g.,
speciﬁc metrics).
31.1.1 Simple Example of an Architecture Viewpoint and Architecture View
For many ar chitectur es, a useful ar chitectur eviewpoint is that of business domains, which can
be illustrated by an example from The Open Group itself.
The architectur eviewpoint is speciﬁed as follows:
Architecture
Viewpoint Element Description
Stakeholders Management Board, Chief Executive Ofﬁcer
Concerns Show the top-level relationships between US/UK geographical
sites and business functions.
Modeling technique Nested boxes diagram.
Outer boxes = locations; inner boxes = business functions.
Semantics of nesting = functions performed in the locations.
The corresponding architectur eview of The Open Group (in 2017) is shown in Figur e31-2.
Part IV:Architecture Content Frame work 321
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Basic Concepts Architectural Artifacts
Figure 31-2 Example Architectur eView — The Open Group Business Domains
31.2 Developing Architecture Views in the ADM
31.2.1 General Guidelines
The choice of which particular ar chitectur eviews to develop is one of the key decisions that the
architect has to make.
The architect has a r esponsibility for ensuring the completeness (ﬁtness-for-purpose) of the
architectur e, in terms of adequately addressing all the pertinent concerns of its stakeholders; and
the integrity of the ar chitectur e, in terms of connecting all the various views to each other ,
satisfactorily reconciling the conﬂicting concerns of dif ferent stakeholders, and showing the
trade-offs made in so doing (as between security and performance, for example).
The choice has to be constrained by considerations of practicality ,and by the principle of ﬁtness-
for-purpose (i.e., the ar chitectur eshould be developed only to the point at which it is ﬁt-for -
purpose, and not reiterated ad inﬁnitum as an academic exercise).
As explained in Part II: Ar chitectur eD evelopment Method (ADM), the development of
architectur eviews is an iterative pr ocess. The typical pr ogression is from business to technology ,
using a technique such as business scenarios (see the T OGAF®Series Guide: Business Scenarios)
to properly identify all pertinent concerns; and from high-level overview to lower -level detail,
continually referring back to the concerns and r equir ements of the stakeholders throughout the
process.
Moreover ,each of these pr ogressions has to be made for two distinct envir onments: the existing
envir onment (r eferr ed to as the baseline in the ADM) and the target environment. The ar chitect
322 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Architectural Artifacts Developing Ar chitectureViews in the ADM
must develop pertinent ar chitectur eviews of both the Baseline Ar chitectur eand the T arget
Architectur e. This pr ovides the context for the gap analysis at the end of Phases B, C, and D of
the ADM, which establishes the elements of the Baseline Ar chitectur et ob ec arried forwar dand
the elements to be added, removed, or replaced.
This whole process is explained in Part III, Chapter 23 .
31.2.2 Architecture View Creation Process
As mentioned above, the TOGAF framework encourages but does not mandate the use of
ISO/IEC/IEEE 42010: 201 1. The following description ther eforecovers both the situation wher e
ISO/IEC/IEEE 42010: 201 1has been adopted and wher ei th as not.
ISO/IEC/IEEE 42010: 201 1itself does not r equir eany speciﬁc process for developing
architectur eviewpoints or creating views from them. Wher eISO/IEC/IEEE 42010: 201 1has
been adopted and become well-established practice within an or ganization, it will often be
possible to create the required views for a particular architectur eb yf ollowing these steps:
1. Refer to an existing library of architectur eviewpoints
2. Select the appropriate ar chitectur eviewpoints (based on the stakeholders and concerns
that need to be covered by views)
3. Generate views of the system by using the selected architectur eviewpoints as templates
This approach can be expected to bring the following beneﬁts:
■Less work for the architects (because the ar chitectur eviewpoints have alr eady been
deﬁned and therefor ethe views can be created faster)
■Better comprehensibility for stakeholders (because the ar chitectur eviewpoints ar ealready
familiar)
■Greater conﬁdence in the validity of the views (because their ar chitectur eviewpoints have
aknown track record)
However ,situations can always arise in which an ar chitectur eview is needed for which no
appr opriate ar chitectur eviewpoint has been pr edeﬁned. This is also the situation, of course,
when an or ganization has not yet incorporated ISO/IEC/IEEE 42010: 201 1into its ar chitecture
practice and established a library of architectur eviewpoints.
In each case, the ar chitect may choose to develop a new ar chitectur eviewpoint that will cover
the outstanding need, and then generate an ar chitectur ev iew from it. (This is
ISO/IEC/IEEE 42010: 201 1recommended practice.) Alternatively ,am orepragmatic appr oach
can be equally successful: the architect can create an ad hoc architectur eview for a speciﬁc
system and later consider whether a generalized form of the implicit ar chitectur eviewpoint
should be deﬁned explicitly and saved in a library ,s ot hat it can be re-used. (This is one way of
establishing a library of architectur eviewpoints initially.)
Whatever the context, the ar chitect should be awar ethat every ar chitectur eview has an
architectur eviewpoint, at least implicitly ,and that deﬁning the ar chitectur eviewpoint in a
systematic way (as recommended by ISO/IEC/IEEE 42010: 201 1) will help in assessing its
effectiveness; i.e., does the architectur eviewpoint cover the relevant stakeholder concerns?
Part IV:Architecture Content Frame work 323
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Views, Tools, and Langua gesA rc hitectural Artifacts
31.3 V iews, Tools, and Languages
The need for ar chitectur eviews, and the process of developing them following the ADM, ar e
explained above. This section describes the relationships between ar chitectur eviews, the tools
used to develop and analyze them, and a standar dlanguage enabling interoperability between
the tools.
31.3.1 Overview
In or der to achieve the goals of completeness and integrity in an ar chitectur e, ar chitectur eviews
areusually developed, visualized, communicated, and managed using a tool.
In the current state of the market, dif ferent tools normally have to be used to develop and
analyze dif ferent views of the ar chitectur e. It is highly desirable that an Ar chitectur eDescription
be encoded in a standar dlanguage, to enable a standar dapproach to the description of
architectur esemantics and their re-use among different tools.
An ar chitectur eviewpoint is also normally developed, visualized, communicated, and managed
using a tool, and it is also highly desirable that standar darchitectur eviewpoints (i.e., templates
or schemas) be developed, so that dif ferent tools that deal in the same views can inter operate,
the fundamental elements of an ar chitectur ecan be re-used, and the Ar chitectur eDescription
can be shared among tools.
Issues relating to the evaluation of tools for ar chitectur ework ar ediscussed in detail in Part V,
Chapter 38 .
31.4 Architecture Views and Architecture Viewpoints
31.4.1 Example of Architecture Views and Architecture Viewpoints
To i llustrate the concepts of ar chitectur eviews and ar chitectur eviewpoints, consider the
example of a very simple airport system with two dif ferent stakeholders: the pilot and the air
trafﬁc controller.
One ar chitectur eview can be developed from the ar chitectur eviewpoint of the pilot, which
addr esses the pilot’s concerns. Equally ,another ar chitectur eview can be developed fr om the
architectur eviewpoint of the air traf ﬁc contr oller .Neither ar chitectur eview completely
describes the system in its entir ety,because the ar chitectur eviewpoint of each stakeholder
constrains (and reduces) how each sees the overall system.
The ar chitectur eviewpoint of the pilot comprises some concerns that ar enot relevant to the
controller ,such as passengers and fuel, while the ar chitectur eviewpoint of the contr oller
comprises some concerns not r elevant to the pilot, such as other planes. Ther eare also elements
shar ed between the two ar chitectur eviewpoints, such as the communication model between the
pilot and the controller ,and the vital information about the plane itself.
An ar chitectur eviewpoint is a model (or description) of the information contained in a view .In
our example, one ar chitectur eviewpoint is the description of how the pilot sees the system, and
the other architectur eviewpoint is how the controller sees the system.
Pilots describe the system from their perspective, using a model of their position and vector
towar do ra way from the r unway .All pilots use this model, and the model has a speciﬁc
language that is used to captur einformation and populate the model.
Contr ollers describe the system dif ferently ,using a model of the airspace and the locations and
vectors of aircraft within the airspace. Again, all contr ollers use a common language derived
324 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Architectural Artifacts Ar chitectureViews and Ar chitectureViewpoints
from the common model in order to captur eand communicate information pertinent to their
architectur eviewpoint.
Fortunately ,when contr ollers talk with pilots, they use a common communication language. (In
other words, the models r epresenting their individual ar chitectur eviewpoints partially
intersect.) Part of this common language is about location and vectors of air craft, and is
essential to safety.
So, in essence, each ar chitectur eviewpoint is an abstract model of how all the stakeholders of a
particular type — all pilots, or all controllers — view the airport system.
Tools exist to assist stakeholders, especially when they ar einteracting with complex models such
as the model of an airspace, or the model of air ﬂight.
The interface to the human user of a tool is typically close to the model and language associated
with the ar chitectur eviewpoint. The unique tools of the pilot ar efuel, altitude, speed, and
location indicators. The main tool of the controller is radar .The common tool is a radio.
To s ummarize from the above example, we can see that an ar chitectur eview can subset the
system through the perspective of the stakeholder ,such as the pilot versus the contr oller .This
subset can be described by an abstract model called an ar chitectur eviewpoint, such as an air
ﬂight versus an air space model. This description of the ar chitectur eview is documented in a
partially specialized language, such as "pilot-speak" versus "controller -speak". Tools ar eused to
assist the stakeholders, and they interface with each other in terms of the language derived fr om
the architectur eviewpoint ("pilot-speak" versus’ "controller-speak").
When stakeholders use common tools, such as the radio contact between pilot and contr oller ,a
common language is essential.
31.4.2 Architecture Views and Architecture Viewpoints in Enterprise Architecture
Now let us map this example to the Enterprise Ar chitectur e. Consider two stakeholders in a new
small computing system: the users and the developers.
The users of the system have an ar chitectur eviewpoint that reﬂects their concerns when
interacting with the system, and the developers of the system have a dif ferent ar chitecture
viewpoint. Ar chitectur eviews that ar edeveloped to address either of the two ar chitecture
viewpoints ar eunlikely to exhaustively describe the whole system, because each perspective
reduces how each sees the system.
The ar chitectur eviewpoint of the user is comprised of all the ways in which the user interacts
with the system, not seeing any details such as applications or Database Management Systems
(DBMS).
The ar chitectur eviewpoint of the developer is one of pr oductivity and tools, and doesn’t include
things such as actual live data and connections with consumers.
However ,thereare things that ar eshared, such as descriptions of the processes that ar eenabled
by the system and/or communications protocols set up for users to communicate pr oblems
directly to development.
In this example, one ar chitectur eviewpoint is the description of how the user sees the system,
and the other ar chitectur eviewpoint is how the developer sees the system. Users describe the
system from their perspective, using a model of availability ,response time, and access to
information. All users of the system use this model, and the model has a speciﬁc language.
Developers describe the system dif ferently than users, using a model of softwar econnected to
hardwar edistributed over a network, etc. However ,thereare m any types of developers
Part IV:Architecture Content Frame work 325
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureViews and Ar chitectureViewpoints Ar chitectural Artifacts
(database, security ,etc.) of the system, and they do not have a common language derived fr om
the model.
31.4.3 Need for a Common Language and Interoperable Tools for Architecture Description
Tools exist for both users and developers. T ools such as online help ar etherespeciﬁcally for
users, and attempt to use the language of the user .Many dif ferent tools exist for dif ferent types
of developers, but they suffer from the lack of a common language that is r equir ed to bring the
system together .I ti sd ifﬁcult, if not impossible, in the current state of the tools market to have
one tool interoperate with another tool.
Issues relating to the evaluation of tools for ar chitectur ework ar ediscussed in detail in Part V,
Chapter 38 .
31.5 Conclusions
This section attempts to deal with views in a str uctur ed manner ,but this is by no means a
complete treatise on views.
In general, the T OGAF framework embraces the concepts and deﬁnitions presented in
ISO/IEC/IEEE 42010: 201 1, speciﬁcally the concepts that help guide the development of an
architectur eview and make the ar chitectur eview actionable. These concepts can be summarized
as:
■Selecting a key stakeholder
■Understanding their concerns and generalizing/documenting those concerns
■Understanding how to model and deal with those concerns
31.6 Architectural Artifacts by ADM Phase
Catalog, Matrix, and Diagram Concept
The content metamodel is used as a technique to str uctur earchitectural information in an
order ed way so that it can be pr ocessed to meet the stakeholder needs. The majority of
architectur estakeholders do not actually need to know what the ar chitectur emetamodel is and
areonly concerned with speciﬁc issues, such as "what functionality does this application
support?", "which processes will be impacted by this project?", etc. In or der to meet the needs of
these stakeholders, the TOGAF concepts of building blocks, catalogs, matrices, and diagrams ar e
used.
Building blocks ar eentities of a particular type within the metamodel (for example, a business
service called "Purchase Order"). Building blocks carry metadata accor ding to the metamodel,
which supports query and analysis. For example, business services have a metadata attribute for
owner ,which allows a stakeholder to query all business services owned by a particular
organization. Building blocks may also include dependent or contained entities as appr opriate
to the context of the ar chitectur e(for example, a business service called "Pur chase Order" may
implicitly include a number of processes, data entities, application components, etc.).
Catalogs ar elists of building blocks of a speciﬁc type, or of related types, that ar eused for
governance or r eference purposes (for example, an organization chart, showing locations and
actors). As with building blocks, catalogs carry metadata according to the metamodel, which
supports query and analysis.
326 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Architectural Artifacts Ar chitectural Artifacts by ADM Phase
Matrices ar egrids that show r elationships between two or mor emodel entities. Matrices ar e
used to r epresent relationships that ar elist-based rather than graphical in their usage (for
example, a CRUD matrix showing which applications Cr eate, Read, Update, and Delete a
particular type of data is difﬁcult to represent visually).
Diagrams ar erenderings of architectural content in a graphical format to allow stakeholders to
retrieve the r equir ed information. Diagrams can also be used as a technique for graphically
populating ar chitectur econtent or for checking the completeness of information that has been
collected. The TOGAF content framework deﬁnes a set of ar chitectur ediagrams to be cr eated
(e.g., or ganization chart). Each of these diagrams may be created several times for an
architectur ewith different style or content coverage to suit stakeholder concerns.
Building blocks, catalogs, matrices, and diagrams ar eall concepts that ar ewell supported by
leading Enterprise Ar chitectur etools. In envir onments wher etools ar eused to model the
architectur e, such tools typically support mechanisms to search, ﬁlter ,and query the
Architectur eRepository.
On-demand querying of the Ar chitectur eRepository (such as the business service ownership
example mentioned above) can be used to generate ad hoc catalogs, matrices, and diagrams of
the ar chitectur e. As this type of query is by natur erequir ed to be ﬂexible, it is ther eforenot
restricted or deﬁned within the content metamodel.
The interactions between metamodel, building blocks, diagrams, and stakeholders ar eshown in
Figur e31-3.Figur e31-4shows the artifacts that ar eassociated with the cor econtent metamodel
and each of the content extensions.
Figure 31-3 Interactions between Metamodel, Building Blocks, Diagrams, and Stakeholders
Part IV:Architecture Content Frame work 327
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Architectural Artifacts by ADM Phase Ar chitectural ArtifactsApplication Architecture Preliminary
Re
uirements 
anagementArchitecture 
ision
Opportunities an
 SolutionsBusiness Architecture
Core Diagrams
atrices
E
tension DiagramsData Architecture
Core DiagramsCatalogs
E
tension DiagramsCore Diagrams
atrices
E
tension Diagramsole
 pplication Matrix
Enterprise Managea
ilit
 
Diagra
pplication
Organi
ation 
Matrixpplication

unction Matrixpplication Interaction Matrix
oft
are Engineering 
Diagra
oft
are Distri
ution 
Diagra
pplication Migration 
Diagra
Technology Architecture
Core DiagramsCatalogs
E
tension Diagrams
Processing Diagra
Core Diagrams alue Chain Diagra
olution Concept Diagra
Catalogs
Principles Catalog
atricesta
¡eholder Map MatrixData Entit

Data Co
ponent 
Catalog
Catalogse
¢uire
ents Catalog
Core Diagrams
Pro
£ect Context Diagra
¤enefits Diagra
Technolog
 Portfolio CatalogTechnolog
 
tandards 
CatalogCatalogs
Organi
ation
 ctor Catalogole Catalog¤usiness 
ervice

unction 
Catalog¥ocation Catalog
Process
Event
Control
 
Product Catalog
 alue 
trea
 Catalog¤usiness Capa
ilities 
Catalog alue 
trea
 
tages 
Catalog
Driver
Goal
O
£ ective 
Catalog
Contract
Measure Catalogctor
 ole Matrix¤usiness Interaction Matrix alue 
trea

Capa
ilit
 
Matrix
trateg

Capa
ilit
 Matrix
Capa
ilit

Organi
ation 
MatrixCatalogs
Interface Catalogpplication Portfolio Catalogatricespplication
Data MatrixData Entit


¤usiness unction Matrix
atricespplication
Technolog
 
Matrix
Conceptual Data Diagra

Data Disse
ination Diagra
¥ogical Data Diagra

pplication Co
 unication 
Diagra
pplication and 
¦ser ¥ocation Diagra
pplication 
¦se
§Case 
Diagra
Environ
ents and 
¥ocations 
Diagra

Platfor
 Deco
position 
Diagra

Data 
¥ifec
cle Diagra
Data 
ecurit
 Diagra

Data Migration Diagra
Process
 pplication eali
ation Diagra

¨et
or
¡ed Co
puting
 ©ard
are Diagra
¨et
or
¡ and 
Co
 unications Diagra

Core Contentªervices ExtensionData Modeling Extension Process Modeling Extension Governance Extension Motivation Extension Infrastructure Consolidation Extension
¤usiness Model Diagra
¤usiness Capa
ilit
 Map
Organi
ation Map alue 
trea
 Map¤usiness 
ootprint Diagra
¤usiness 
ervice
 
Infor
ation Diagra
unctional Deco
position 
Diagra

Product 
¥ifec
cle Diagra
Goal
O
£ ective
 ervice 
Diagra

Process 
lo
 Diagra

Event Diagra
¤usiness 
¦se
§Case Diagra

Organi
ation Deco
position 
Diagra

© The Open Group
Figure 31-4 Artifacts Associated with the Cor eContent Metamodel and Extensions
328 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Architectural Artifacts Ar chitectural Artifacts by ADM Phase
The recommended artifacts for production in each ADM phase ar ea sf ollows.
31.6.1 Preliminary Phase
The following describes catalogs, matrices, and diagrams that may be created within the
Preliminary Phase, as listed in Part II, Section 5.4 .
Principles Catalog
The Principles catalog captur es principles of the Business and Ar chitectur ePrinciples that
describe what a "good" solution or ar chitectur eshould look like. Principles ar eused to evaluate
and agree an outcome for ar chitectur edecision points. Principles ar ealso used as a tool to assist
in architectural governance of change initiatives.
The Principles catalog contains the following metamodel entities:
■Principle
31.6.2 Phase A: Architecture Vision
The following describes catalogs, matrices, and diagrams that may be cr eated within Phase A
(Architectur eVision) as listed in Section 6.4 .
Stakeholder Map Matrix
The purpose of the Stakeholder Map matrix is to identify the stakeholders for the ar chitecture
engagement, their inﬂuence over the engagement, and their key questions, issues, or concerns
that must be addressed by the architectur eframework.
Understanding stakeholders and their r equir ements allows an ar chitect to focus effort in ar eas
that meet the needs of stakeholders (see Part III, Chapter 21 ).
Due to the potentially sensitive natur eo fs takeholder mapping information and the fact that the
Architectur eVision phase is intended to be conducted using informal modeling techniques, no
speciﬁc metamodel entities will be used to generate a stakeholder map.
Value Chain Diagram
AValue Chain diagram provides a high-level orientation view of an enterprise and how it
interacts with the outside world. In contrast to the mor eformal Functional Decomposition
diagram developed within Phase B (Business Ar chitectur e), the V alue Chain diagram focuses on
presentational impact.
The purpose of this diagram is to quickly on-boar dand align stakeholders for a particular
change initiative, so that all participants understand the high-level functional and or ganizational
context of the architectur eengagement.
Part IV:Architecture Content Frame work 329
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Architectural Artifacts by ADM Phase Ar chitectural Artifacts
Solution Concept Diagram
ASolution Concept diagram provides a high-level orientation of the solution that is envisaged
in order to meet the objectives of the ar chitectur eengagement. In contrast to the mor eformal
and detailed ar chitectur ediagrams developed in the following phases, the solution concept
represents a "pencil sketch" of the expected solution at the outset of the engagement.
This diagram may embody key objectives, r equir ements, and constraints for the engagement
and also highlight work areas to be investigated in mor edetail with formal ar chitecture
modeling.
Its purpose is to quickly on-boar dand align stakeholders for a particular change initiative, so
that all participants understand what the ar chitectur eengagement is seeking to achieve and how
it is expected that a particular solution approach will meet the needs of the enterprise.
Business Model Diagram
Am odel describing the rationale for how an enterprise creates, delivers, and captures value.
Business Capability Map
Afamily of diagrams r epresenting a deﬁnitive listing of a particular ability that a business may
possess or exchange to achieve a speciﬁc purpose.
Value Stream Map
Afamily of diagrams r epresenting a deﬁnitive listing of an end-to-end collection of value-
adding activities that create an overall result for a customer ,stakeholder ,o re nd user.
31.6.3 Phase B: Business Architecture
The following describes catalogs, matrices, and diagrams that may be created within Phase B
(Business Architecture) as listed in Section 7.4 .
Organization/Actor Catalog
The purpose of the Organization/Actor catalog is to captur ead eﬁnitive listing of all
participants that interact with IT ,including users and owners of IT systems.
The Organization/Actor catalog can be r eferenced when developing r equir ements in order to
test for completeness.
For example, r equir ements for an application that services customers can be tested for
completeness by verifying exactly which customer types need to be supported and whether
thereare any particular requirements or restrictions for user types.
The Organization/Actor catalog contains the following metamodel entities:
■Organization Unit
■Actor
■Location (may be included in this catalog if an independent Location catalog is not
maintained)
330 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Architectural Artifacts Ar chitectural Artifacts by ADM Phase
Driver/Goal/Objective Catalog
The purpose of the Driver/Goal/Objective catalog is to provide a cr oss-or ganizational r eference
of how an organization meets its drivers in practical terms thr ough goals, objectives, and
(optionally) measures.
Publishing a deﬁnitive br eakdown of drivers, goals, and objectives allows change initiatives
within the enterprise to identify synergies across the organization (e.g., multiple or ganizations
attempting to achieve similar objectives), which in turn allow stakeholders to be identiﬁed and
related change initiatives to be aligned or consolidated.
The Driver/Goal/Objective catalog contains the following metamodel entities:
■Organization Unit
■Driver
■Goal
■Objective
■Measur e(may optionally be included)
Role Catalog
The purpose of the Role catalog is to provide a listing of all authorization levels or zones within
an enterprise. Fr equently ,application security or behavior is deﬁned against locally understood
concepts of authorization that cr eate complex and unexpected consequences when combined on
the user desktop.
If roles ar edeﬁned, understood, and aligned acr oss organizations and applications, this allows
for a mor eseamless user experience and generally mor esecur eapplications, as administrators
do not need to resort to workarounds in order to enable users to carry out their jobs.
In addition to supporting security deﬁnition for the enterprise, the Role catalog also forms a key
input to identifying or ganizational change management impacts, deﬁning job functions, and
executing end-user training.
As each r ole implies access to a number of business functions, if any of these business functions
areimpacted then change management will be r equir ed, organizational responsibilities may
need to be redeﬁned, and retraining may be needed.
The Role catalog contains the following metamodel entities:
■Role
Business Service/Function Catalog
The purpose of the Business Service/Function catalog is to provide a functional decomposition
in a form that can be ﬁltered, reported on, and queried, as a supplement to graphical Functional
Decomposition diagrams.
The Business Service/Function catalog can be used to identify capabilities of an or ganization
and to understand the level that governance is applied to the functions of an organization. This
functional decomposition can be used to identify new capabilities r equir ed to support business
change or may be used to determine the scope of change initiatives, applications, or technology
components.
Part IV:Architecture Content Frame work 331
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Architectural Artifacts by ADM Phase Ar chitectural Artifacts
The Business Service/Function catalog contains the following metamodel entities:
■Organization Unit
■Business Function
■Business Service
■Information System Service (may optionally be included here)
Location Catalog
The Location catalog provides a listing of all locations wher ea ne nterprise carries out business
operations or houses architecturally r elevant assets, such as data centers or end-user computing
equipment.
Maintaining a deﬁnitive list of locations allows change initiatives to quickly deﬁne a location
scope and to test for completeness when assessing current landscapes or proposed tar get
solutions. For example, a project to upgrade desktop operating systems will need to identify all
locations wher edesktop operating systems ar edeployed.
Similarly ,when new systems ar ebeing implemented a diagram of locations is essential in or der
to develop appropriate deployment strategies that compr ehend both user and application
location and identify location-r elated issues, such as internationalization, localization, timezone
impacts on availability ,distance impacts on latency ,network impacts on bandwidth, and access.
The Location catalog contains the following metamodel entities:
■Location
Process/Event/Control/Product Catalog
The Pr ocess/Event/Control/Pr oduct catalog pr ovides a hierarchy of processes, events that
trigger processes, outputs from processes, and contr ols applied to the execution of pr ocesses.
This catalog provides a supplement to any Pr ocess Flow diagrams that ar ecreated and allows an
enterprise to ﬁlter ,report, and query across or ganizations and processes to identify scope,
commonality ,o ri mpact.
For example, the Pr ocess/Event/Control/Pr oduct catalog allows an enterprise to see
relationships of processes to sub-processes in or der to identify the full chain of impacts r esulting
from changing a high-level process.
The Process/Event/Control/Product catalog contains the following metamodel entities:
■Process
■Event
■Control
■Product
Contract/Measure Catalog
The Contract/Measur ecatalog provides a listing of all agr eed service contracts and the
measur es attached to those contracts. It forms the master list of service levels agreed to acr oss
the enterprise.
332 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Architectural Artifacts Ar chitectural Artifacts by ADM Phase
The Contract/Measur ecatalog contains the following metamodel entities:
■Business Service
■Information System Service (optionally)
■Contract
■Measure
Business Capabilities Catalog
Adeﬁnitive listing of particular abilities that a business may possess or exchange to achieve a
speciﬁc purpose.
Value Stream Catalog
Adeﬁnitive listing of end-to-end collections of value-adding activities that cr eate an overall
result for a customer ,stakeholder ,o re nd user.
Value Stream Stages Catalog
Adeﬁnitive listing of end-to-end collections of the dif ferent stages for the value-adding activities
that create an overall r esult for a customer ,stakeholder ,o re nd user; it includes the following
metamodel entities:
■Business Capability
■Value Stream
Business Interaction Matrix
The purpose of this matrix is to depict the relationship interactions between organizations and
business functions across the enterprise.
Understanding business interaction of an enterprise is important as it helps to highlight value
chain and dependencies across organizations.
The Business Interaction matrix shows the following metamodel entities and relationships:
■Organization
■Business Function
■Business Service
■Business Service communicates with Business Service relationships
■Business Service is dependent on Business Service relationships
Actor/Role Matrix
The purpose of this matrix is to show which actors perform which roles, supporting deﬁnition of
security and skills requirements.
Understanding Actor-to-Role r elationships is a key supporting tool in deﬁnition of training
needs, user security settings, and organizational change management.
The Actor/Role matrix shows the following metamodel entities and relationships:
■Actor
Part IV:Architecture Content Frame work 333
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Architectural Artifacts by ADM Phase Ar chitectural Artifacts
■Role
■Actor performs Role relationships
Value Stream/Capability Matrix
The purpose of this matrix is to show the capabilities r equir ed to support each stage of a value
stream.
Strategy/Capability Matrix
The purpose of this matrix is to show the capabilities r equir ed to support speciﬁc strategy
statements.
Capability/Organization Matrix
The purpose of this matrix is to show the or ganization elements that implement each capability .
The Capability/Organization matrix includes the following metamodel entities:
■Business Capability
■Value Stream
■Organization Unit
Business Footprint Diagram
ABusiness Footprint diagram describes the links between business goals, or ganizational units,
business functions, and services, and maps these functions to the technical components
delivering the required capability.
ABusiness Footprint diagram pr ovides a clear traceability between a technical component and
the business goal that it satisﬁes, while also demonstrating ownership of the services identiﬁed.
AB usiness Footprint diagram demonstrates only the key facts linking or ganization unit
functions to delivery services and is utilized as a communication platform for senior-level (CxO)
stakeholders.
Business Service/Information Diagram
The Business Service/Information diagram shows the information needed to support one or
morebusiness services. The Business Service/Information diagram shows what data is
consumed by or produced by a business service and may also show the source of information.
The Business Service/Information diagram shows an initial r epresentation of the information
present within the ar chitectur eand ther eforeforms a basis for elaboration and r eﬁnement within
Phase C (Data Architecture).
Functional Decomposition Diagram
The purpose of the Functional Decomposition diagram is to show on a single page the
capabilities of an organization that ar erelevant to the consideration of an ar chitectur e. By
examining the capabilities of an organization fr om a functional perspective, it is possible to
quickly develop models of what the or ganization does without being dragged into extended
debate on how the organization does it.
Once a basic Functional Decomposition diagram has been developed, it becomes possible to
layer heat maps on top of this diagram to show scope and decisions. For example, the
capabilities to be implemented in different phases of a change program.
334 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Architectural Artifacts Ar chitectural Artifacts by ADM Phase
Product Lifecycle Diagram
The purpose of the Product Lifecycle diagram is to assist in understanding the lifecycles of key
entities within the enterprise. Understanding pr oduct lifecycles is becoming incr easingly
important with respect to envir onmental concerns, legislation, and regulation wher eproducts
must be tracked from manufactur et od isposal. Equally ,organizations that create pr oducts that
involve personal or sensitive information must have a detailed understanding of the pr oduct
lifecycle during the development of Business Ar chitectur ei no rder to ensur erigor in design of
contr ols, pr ocesses, and pr ocedur es. Examples of this would include credit cards, debit car ds,
store/loyalty cards, smart cards, user identity credentials (identity cards, passports, etc.).
Goal/Objective/Service Diagram
The purpose of a Goal/Objective/Service diagram is to deﬁne the ways in which a service
contributes to the achievement of a business vision or strategy.
Services ar eassociated with the drivers, goals, objectives, and measur es that they support,
allowing the enterprise to understand which services contribute to similar aspects of business
performance. The Goal/Objective/Service diagram also pr ovides qualitative input on what
constitutes high performance for a particular service.
Business Use-Case Diagram
ABusiness Use-Case diagram displays the relationships between consumers and providers of
business services. Business services ar econsumed by actors or other business services and the
Business Use-Case diagram pr ovides added richness in describing business capability by
illustrating how and when that capability is used.
The purpose of the Business Use-Case diagram is to help to describe and validate the interaction
between actors and their roles to processes and functions. As the ar chitectur eprogresses, the
use-case can evolve fr om the business level to include data, application, and technology details.
Architectural business use-cases can also be re-used in systems design work.
Organization Decomposition Diagram
An Or ganization Decomposition diagram describes the links between actor ,roles, and location
within an organization tree.
An organization map should provide a chain of command of owners and decision-makers in the
organization. Although it is not the intent of the Organization Decomposition diagram to link
goal to organization, it should be possible to intuitively link the goals to the stakeholders fr om
the Organization Decomposition diagram.
Process Flow Diagram
The purpose of the Process Flow diagram is to depict all models and mappings r elated to the
process metamodel entity.
Process Flow diagrams show sequential ﬂow of contr ol between activities and may utilize swim-
lane techniques to r epresent ownership and realization of process steps. For example, the
application that supports a process step may be shown as a swim-lane.
In addition to showing a sequence of activity ,process ﬂows can also be used to detail the
contr ols that apply to a process, the events that trigger or r esult from completion of a pr ocess,
and also the products that ar egenerated from process execution.
Process Flow diagrams ar euseful in elaborating the ar chitectur ewith subject specialists, as they
allow the specialist to describe "how the job is done" for a particular function. Thr ough this
Part IV:Architecture Content Frame work 335
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Architectural Artifacts by ADM Phase Ar chitectural Artifacts
process, each process step can become a mor eﬁne-grained function and can then in turn be
elaborated as a process.
Event Diagram
The purpose of the Event diagram is to depict the relationship between events and process.
Certain events — such as arrival of certain information (e.g., customer submits sales or der) or a
certain point in time (e.g., end of ﬁscal quarter) — cause work and certain actions need to be
undertaken within the business. These ar eoften r eferr ed to as "business events" or simply
"events" and ar econsider ed as triggers for a pr ocess. It is important to note that the event has to
trigger a process and generate a business response or result.
Business Capability Map
Afamily of diagrams r epresenting a deﬁnitive listing of the particular abilities that a business
may possess or exchange to achieve a speciﬁc purpose.
Value Stream Map
Afamily of diagrams r epresenting a deﬁnitive listing of end-to-end collections of value-adding
activities that create an overall result for a customer ,stakeholder ,o re nd user.
The Value Stream map includes the following metamodel entities:
■Business Capability
■Value Stream
Organization Map
Adiagram showing the r elationships between the primary entities that make up the enterprise,
its partners, and stakeholders.
31.6.4 Phase C: Data Architecture
The following describes catalogs, matrices, and diagrams that may be created within Phase C
(Data Architecture) as listed in Section 9.4 .
Data Entity/Data Component Catalog
The purpose of the Data Entity/Data Component catalog is to identify and maintain a list of all
the data use across the enterprise, including data entities and also the data components wher e
data entities ar estored. An agreed Data Entity/Data Component catalog supports the deﬁnition
and application of information management and data governance policies and also encourages
effective data sharing and re-use.
The Data Entity/Data Component catalog contains the following metamodel entities:
■Data Entity
■Logical Data Component
■Physical Data Component
336 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Architectural Artifacts Ar chitectural Artifacts by ADM Phase
Data Entity/Business Function Matrix
The purpose of the Data Entity/Business Function matrix is to depict the r elationship between
data entities and business functions within the enterprise. Business functions ar esupported by
business services with explicitly deﬁned boundaries and will be supported and realized by
business processes. The mapping of the Data Entity-Business Function r elationship enables the
following to take place:
■Assign ownership of data entities to organizations
■Understand the data and information exchange requirements business services
■Support the gap analysis and determine whether any data entities ar emissing and need to
be created
■Deﬁne application of origin, application of r ecord, and application of r eference for data
entities
■Enable development of data governance pr ograms across the enterprise (establish data
steward, develop data standards pertinent to the business function, etc.)
The Data Entity/Business Function matrix shows the following entities and relationships:
■Data Entity
■Business Function
■Data Entity relationship to owning Organization Unit
Application/Data Matrix
The purpose of the Application/Data matrix is to depict the relationship between applications
(i.e., application components) and the data entities that ar eaccessed and updated by them.
Applications will cr eate, read, update, and delete speciﬁc data entities that ar eassociated with
them. For example, a CRM application will cr eate, read, update, and delete customer entity
information.
The data entities in a package/packaged services envir onment can be classiﬁed as master data,
reference data, transactional data, content data, and historical data. Applications that operate on
the data entities include transactional applications, information management applications, and
business warehouse applications.
The mapping of the Application Component-Data Entity r elationship is an important step as it
enables the following to take place:
■Assign access of data to speciﬁc applications in the organization
■Understand the degree of data duplication within dif ferent applications, and the scale of
the data lifecycle
■Understand wher ethe same data is updated by different applications
■Support the gap analysis and determine whether any of the applications ar emissing and
as a result need to be created
The Application/Data matrix is a two-dimensional table with Logical Application Component
on one axis and Data Entity on the other axis.
Part IV:Architecture Content Frame work 337
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Architectural Artifacts by ADM Phase Ar chitectural Artifacts
Conceptual Data Diagram
The key purpose of the Conceptual Data diagram is to depict the relationships between critical
data entities within the enterprise. This diagram is developed to address the concerns of
business stakeholders.
Techniques used include:
■Entity relationship models
■Simpliﬁed UML class diagrams
Logical Data Diagram
The key purpose of the Logical Data diagram is to show logical views of the r elationships
between critical data entities within the enterprise. This diagram is developed to addr ess the
concerns of:
■Application developers
■Database designers
Data Dissemination Diagram
The purpose of the Data Dissemination diagram is to show the r elationship between data entity ,
business service, and application components. The diagram shows how the logical entities ar eto
be physically realized by application components. This allows ef fective sizing to be carried out
and the IT footprint to be r eﬁned. Mor eover ,b ya ssigning business value to data, an indication
of the business criticality of application components can be gained.
Additionally ,the diagram may show data replication and application ownership of the master
reference for data. In this instance, it can show two copies and the master -copy r elationship
between them. This diagram can include services; that is, services encapsulate data and they
reside in an application, or services that reside on an application and access data encapsulated
within the application.
Data Security Diagram
Data is consider ed as an asset to the enterprise and data security simply means ensuring that
enterprise data is not compromised and that access to it is suitably controlled.
The purpose of the Data Security diagram is to depict which actor (person, organization, or
system) can access which enterprise data. This relationship can be shown in a matrix form
between two objects or can be shown as a mapping.
The diagram can also be used to demonstrate compliance with data privacy laws and other
applicable regulations (HIPAA, Sarbanes-Oxley ,etc). This diagram should also consider any
trust implications wher ea ne nterprise’s partners or other parties may have access to the
company’s systems, such as an outsourced situation wher einformation may be managed by
other people and may even be hosted in a different country.
338 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Architectural Artifacts Ar chitectural Artifacts by ADM Phase
Data Migration Diagram
Data migration is critical when implementing a package or packaged service-based solution.
This is particularly tr ue when an existing legacy application is replaced with a package or an
enterprise is to be migrated to a lar ger package/packaged services footprint. Packages tend to
have their own data model and during data migration the legacy application data may need to
be transformed prior to loading into the package.
Data migration activities will usually involve the following steps:
■Extract data from source applications (baseline systems)
■Proﬁle source data
■Perform data transformation operations, including data quality processes:
—S tandardize, normalize, de-duplicate source data (data cleansing)
—M atch, merge, and consolidate data from different source(s)
—S ource-to-target mappings
■Load into target applications (target systems)
The purpose of the Data Migration diagram is to show the ﬂow of data from the source to the
target applications. The diagram will provide a visual r epresentation of the spread of
sources/tar gets and serve as a tool for data auditing and establishing traceability .This diagram
can be elaborated or enhanced as detailed as necessary .For example, the diagram can contain
just an overall layout of migration landscape or could go into individual application metadata
element level of detail.
Data Lifecycle Diagram
The Data Lifecycle diagram is an essential part of managing business data throughout its
lifecycle from conception until disposal within the constraints of the business process.
The data is considered as an entity in its own right, decoupled from business process and
activity .Each change in state is r epresented on the diagram which may include the event or r ules
that trigger that change in state.
The separation of data from process allows common data r equir ements to be identiﬁed which
enables resource sharing to be achieved mor eeffectively.
31.6.5 Phase C: Application Architecture
The following describes catalogs, matrices, and diagrams that may be created within Phase C
(Application Architecture) as listed in Section 10.4 .
Application Portfolio Catalog
The purpose of this catalog is to identify and maintain a list of all the applications in the
enterprise. This list helps to deﬁne the horizontal scope of change initiatives that may impact
particular kinds of applications. An agreed Application Portfolio allows a standar dset of
applications to be deﬁned and governed.
The Application Portfolio catalog provides a foundation on which to base the r emaining
matrices and diagrams. It is typically the start point of the Application Architectur ephase.
Part IV:Architecture Content Frame work 339
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Architectural Artifacts by ADM Phase Ar chitectural Artifacts
The Application Portfolio catalog contains the following metamodel entities:
■Information System Service
■Logical Application Component
■Physical Application Component
Interface Catalog
The purpose of the Interface catalog is to scope and document the interfaces between
applications to enable the overall dependencies between applications to be scoped as early as
possible.
Applications will create, read, update, and delete data within other applications; this will be
achieved by some kind of interface, whether via a batch ﬁle that is loaded periodically ,ad irect
connection to another application’s database, or via some form of API or web service.
The mapping of the Application Component-Application Component entity r elationship is an
important step as it enables the following to take place:
■Understand the degr ee of interaction between applications, identifying those that ar e
central in terms of their dependencies on other applications
■Understand the number and types of interfaces between applications
■Understand the degree of duplication of interfaces between applications
■Identify the potential for simpliﬁcation of interfaces when considering the tar get
Application Portfolio
■Support the gap analysis and determine whether any of the applications ar emissing and
as a result need to be created
The Interface catalog contains the following metamodel entities:
■Logical Application Component
■Physical Application Component
■Application communicates with application relationship
Application/Organization Matrix
The purpose of this matrix is to depict the relationship between applications and or ganizational
units within the enterprise.
Business functions ar eperformed by organizational units. Some of the functions and services
performed by those or ganizational units will be supported by applications. The mapping of the
Application Component-Organization Unit relationship is an important step as it enables the
following to take place:
■Assign usage of applications to the organization units that perform business functions
■Understand the application support r equir ements of the business services and pr ocesses
carried out by an organization unit
■Support the gap analysis and determine whether any of the applications ar emissing and
as a result need to be created
■Deﬁne the application set used by a particular organization unit
The Application/Or ganization matrix is a two-dimensional table with Logical/Physical
Application Component on one axis and Organization Unit on the other axis.
340 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Architectural Artifacts Ar chitectural Artifacts by ADM Phase
The relationship between these two entities is a composite of a number of metamodel
relationships that need validating:
■Organization Units own Services
■Actors that belong to Organization Units useServices
■Services are realized by Logical/Physical Application Components
Role/Application Matrix
The purpose of the Role/Application matrix is to depict the r elationship between applications
and the business roles that use them within the enterprise.
People in an or ganization interact with applications. During this interaction, these people
assume a speciﬁc role to perform a task; for example, product buyer.
The mapping of the Application Component-Role relationship is an important step as it enables
the following to take place:
■Assign usage of applications to the speciﬁc roles in the organization
■Understand the application security r equir ements of the business services and pr ocesses
supporting the function, and check these ar ei nl ine with current policy
■Support the gap analysis and determine whether any of the applications ar emissing and
as a result need to be created
■Deﬁne the application set used by a particular business r ole; essential in any move to r ole-
based computing
The Role/Application matrix is a two-dimensional table with Logical Application Component
on one axis and Role on the other axis.
The relationship between these two entities is a composite of a number of metamodel
relationships that need validating:
■Role accesses Function
■Function is bounded by Service
■Services are realized by Logical/Physical Application Components
Application/Function Matrix
The purpose of the Application/Function matrix is to depict the r elationship between
applications and business functions within the enterprise.
Business functions ar eperformed by organizational units. Some of the business functions and
services will be supported by applications. The mapping of the Application Component-
Function relationship is an important step as it enables the following to take place:
■Assign usage of applications to the business functions that ar esupported by them
■Understand the application support r equir ements of the business services and pr ocesses
carried out
■Support the gap analysis and determine whether any of the applications ar emissing and
as a result need to be created
■Deﬁne the application set used by a particular business function
The Application/Function matrix is a two-dimensional table with Logical Application
Component on one axis and Function on the other axis.
Part IV:Architecture Content Frame work 341
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Architectural Artifacts by ADM Phase Ar chitectural Artifacts
The r elationship between these two entities is a composite of a number of metamodel
relationships that need validating:
■Function is bounded by Service
■Services are realized by Logical/Physical Application Components
Application Interaction Matrix
The purpose of the Application Interaction matrix is to depict communications r elationships
between applications.
The mapping of the application interactions shows in matrix form the equivalent of the Interface
Catalog or an Application Communication diagram.
The Application Interaction matrix is a two-dimensional table with Application Service, Logical
Application Component, and Physical Application Component on both the rows and the
columns of the table.
The relationships depicted by this matrix include:
■Application Service consumes Application Service
■Logical Application Component communicates with Logical Application Component
■Physical Application Component communicates with Physical Application Component
Application Communication Diagram
The purpose of the Application Communication diagram is to depict all models and mappings
related to communication between applications in the metamodel entity.
It shows application components and interfaces between components. Interfaces may be
associated with data entities wher eappropriate. Applications may be associated with business
services wher eappropriate. Communication should be logical and should only show
intermediary technology wher ei ti sa rchitecturally relevant.
Application and User Location Diagram
The Application and User Location diagram shows the geographical distribution of applications.
It can be used to show wher eapplications ar eused by the end user; the distribution of wher ethe
host application is executed and/or delivered in thin client scenarios; the distribution of wher e
applications ar edeveloped, tested, and released; etc.
Analysis can reveal opportunities for rationalization, as well as duplication and/or gaps.
The purpose of this diagram is to clearly depict the business locations from which business users
typically interact with the applications, but also the hosting location of the application
infrastructure.
The diagram enables:
■Identiﬁcation of the number of package instances needed to sufﬁciently support the user
population that may be spread out geographically
■Estimation of the number and the type of user licenses for the package or other software
■Estimation of the level of support needed for the users and location of support center
■Selection of system management tools, str uctur e, and management system r equir ed to
support the enterprise users/customers/partners both locally and remotely
342 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Architectural Artifacts Ar chitectural Artifacts by ADM Phase
■Appr opriate planning for the technological components of the business, namely server
sizing and network bandwidth, etc.
■Performance considerations while implementing application and technology ar chitecture
solutions
Users typically interact with applications in a variety of ways; for example:
■To support the operations of the business day-to-day
■To p articipate in the execution of a business process
■To access information (look-up, read)
■To d evelop the application
■To administer and maintain the application
Application Use-Case Diagram
An Application Use-Case diagram displays the r elationships between consumers and pr oviders
of application services. Application services ar econsumed by actors or other application
services and the Application Use-Case diagram pr ovides added richness in describing
application functionality by illustrating how and when that functionality is used.
The purpose of the Application Use-Case diagram is to help to describe and validate the
interaction between actors and their r oles with applications. As the ar chitectur eprogresses, the
use-case can evolve from functional information to include technical realization detail.
Application use-cases can also be re-used in mor edetailed systems design work.
Enterprise Manageability Diagram
The Enterprise Manageability diagram shows how one or mor eapplications interact with
application and technology components that support operational management of a solution.
This diagram is r eally a ﬁlter on the Application Communication diagram, speciﬁcally for
enterprise management class software.
Analysis can r eveal duplication and gaps, and opportunities in the IT service management
operation of an organization.
Process/Application Realization Diagram
The purpose of the Process/Application Realization diagram is to clearly depict the sequence of
events when multiple applications ar einvolved in executing a business process.
It enhances the Application Communication diagram by augmenting it with any sequencing
constraints, and hand-of fpoints between batch and real-time processing.
It would identify complex sequences that could be simpliﬁed, and identify possible
rationalization points in the ar chitectur ei no rder to provide mor etimely information to business
users. It may also identify process efﬁciency improvements that may reduce interaction traf ﬁc
between applications.
Part IV:Architecture Content Frame work 343
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Architectural Artifacts by ADM Phase Ar chitectural Artifacts
Software Engineering Diagram
The Softwar eEngineering diagram br eaks applications into packages, modules, services, and
operations from a development perspective.
It enables mor edetailed impact analysis when planning migration stages, and analyzing
opportunities and solutions.
It is ideal for application development teams and application management teams when
managing complex development environments.
Application Migration Diagram
The Application Migration diagram identiﬁes application migration fr om baseline to tar get
application components. It enables a mor eaccurate estimation of migration costs by showing
precisely which applications and interfaces need to be mapped between migration stages.
It would identify temporary applications, staging areas, and the infrastr uctur erequir ed to
support migrations (for example, parallel run environments, etc).
Software Distribution Diagram
The Softwar eD istribution diagram shows how application softwar ei ss tructur ed and
distributed acr oss the estate. It is useful in systems upgrade or application consolidation
projects.
This diagram shows how physical applications ar edistributed across physical technology and
the location of that technology.
This enables a clear view of how the softwar ei sh osted, but also enables managed operations
stafft ou nderstand how that application softwar ei sm aintained once installed.
31.6.6 Phase D: Technology Architecture
The following section describes catalogs, matrices, and diagrams that may be cr eated within
Phase D (Technology Architecture) as listed in Section 11.4 .
Technology Standards Catalog
The Technology Standar ds catalog documents the agreed standards for technology across the
enterprise covering technologies, and versions, the technology lifecycles, and the r efresh cycles
for the technology.
Depending upon the organization, this may also include location or business domain-speciﬁc
standards information.
This catalog provides a snapshot of the enterprise standar dtechnologies that ar eo rc an be
deployed, and also helps identify the discrepancies across the enterprise.
The Technology Standards catalog contains the following metamodel entities:
■Technology Service
■Logical Technology Component
■Physical Technology Component
If technology standards ar ecurrently in place, apply these to the T echnology Portfolio catalog to
gain a baseline view of compliance with technology standards.
344 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Architectural Artifacts Ar chitectural Artifacts by ADM Phase
Technology Portfolio Catalog
The purpose of this catalog is to identify and maintain a list of all the technology in use acr oss
the enterprise, including har dwar e, infrastr uctur esoftwar e, and application software. An agr eed
technology portfolio supports lifecycle management of technology pr oducts and versions and
also forms the basis for deﬁnition of technology standards.
The Technology Portfolio catalog pr ovides a foundation on which to base the remaining matrices
and diagrams. It is typically the start point of the Technology Architectur ephase.
Technology registries and repositories also provide input into this catalog fr om a baseline and
target perspective.
Technologies in the catalog should be classiﬁed against the deﬁned taxonomy in use in the
enterprise, such as the TOGAF TRM — see the T OGAF®Series Guide: The T OGAF®Technical
Refer ence Model (TRM) — adapted as necessary to ﬁt the classiﬁcation of technology pr oducts
in use.
The Technology Portfolio catalog contains the following metamodel entities:
■Technology Service
■Logical Technology Component
■Physical Technology Component
Application/Technology Matrix
The Application/Technology matrix documents the mapping of applications to technology
platform.
This matrix should be aligned with and complement one or mor eplatform decomposition
diagrams.
The Application/Technology matrix shows:
■Logical/Physical Application Components
■Services, Logical Technology Components, and Physical Technology Components
■Physical Technology Component realizes Physical Application Component relationships
Environments and Locations Diagram
The Envir onments and Locations diagram depicts which locations host which applications,
identiﬁes what technologies and/or applications ar eused at which locations, and ﬁnally
identiﬁes the locations from which business users typically interact with the applications.
This diagram should also show the existence and location of dif ferent deployment
envir onments, including non-production envir onments, such as development and pr e-
production.
Platform Decomposition Diagram
The Platform Decomposition diagram depicts the technology platform that supports the
operations of the Information Systems Ar chitectur e. The diagram covers all aspects of the
infrastructur eplatform and provides an overview of the enterprise’s technology platform. The
diagram can be expanded to map the technology platform to appr opriate application
components within a speciﬁc functional or pr ocess area. This diagram may show details of
speciﬁcation, such as pr oduct versions, number of CPUs, etc. or simply could be an informal
"eye-chart" providing an overview of the technical environment.
Part IV:Architecture Content Frame work 345
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Architectural Artifacts by ADM Phase Ar chitectural Artifacts
The diagram should clearly show the enterprise applications and the technology platform for
each application area can further be decomposed as follows:
■Hardware:
—L ogical Technology Components (with attributes)
—P hysical Technology Components (with attributes)
■Software:
—L ogical Technology Components (with attributes)
—P hysical Technology Components (with attributes)
Depending upon the scope of the Enterprise Ar chitectur ework, additional technology cr oss-
platform information (e.g., communications, telco, and video information) may be addressed.
Processing Diagram
The Pr ocessing diagram focuses on deployable units of code/conﬁguration and how these ar e
deployed onto the technology platform. A deployment unit r epresents grouping of business
function, service, or application components. The Processing diagram addresses the following:
■Which set of application components need to be grouped to form a deployment unit
■How one deployment unit connects/interacts with another (LAN, W AN, and the
applicable protocols)
■How application conﬁguration and usage patterns generate load or capacity r equirements
for different technology components
The organization and gr ouping of deployment units depends on separation concerns of the
presentation, business logic, and data stor elayers and service-level r equir ements of the
components. For example, the pr esentation layer deployment unit is grouped based on the
following:
■Application components that provide UI or user access functions
■Application components that ar edifferentiated by location and user roles
Ther eare s everal considerations to determine how application components ar egrouped
together .Each deployment unit is made up of sub-units, such as:
■Installation :part that holds the executable code or package conﬁguration (in case of
packages)
■Execution :application component with its associated state at run time
■Persistence :data that represents the persistent state of the application component
Finally ,these deployment units ar edeployed on either dedicated or shared technology
components (workstation, web server ,application server ,o rd atabase server ,etc.). It is important
to note that technology pr ocessing can inﬂuence and have implications on the services deﬁnition
and granularity.
346 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Architectural Artifacts Ar chitectural Artifacts by ADM Phase
Networked Computing/Hardware Diagram
Starting with the transformation to client-server systems fr om mainframes and later with the
advent of e-Business and J2EE, large enterprises moved predominantly into a highly network-
based distributed network computing envir onment with ﬁrewalls and demilitarized zones.
Currently ,most of the applications have a web front-end and, looking at the deployment
architectur eo ft hese applications, it is very common to ﬁnd three distinct layers in the network
landscape; namely a web presentation layer ,abusiness logic or application layer ,and a back-end
data stor elayer.Iti sac ommon practice for applications to be deployed and hosted in a shar ed
and common infrastructur eenvironment.
So it becomes highly critical to document the mapping between logical applications and the
technology components (e.g., server) that supports the application both in the development and
production envir onments. The purpose of this diagram is to show the "as deployed" logical
view of logical application components in a distributed network computing environment. The
diagram is useful for the following reasons:
■Enable understanding of which application is deployed wher ei nt he distributed network
computing environment
■Establishing authorization, security ,and access to these technology components
■Understand the T echnology Ar chitectur ethat supports the applications during pr oblem
resolution and troubleshooting
■Isolate performance problems encountered by applications, determine whether it is
application code-related or technology platform-related, and perform necessary upgrade
to speciﬁc physical technology components
■Identify areas of optimization as and when newer technologies ar eavailable which will
eventually reduce cost
■Enable application/technology auditing and prove compliance with enterprise technology
standards
■Serve as an important tool to intr oduce changes to the Technology Ar chitectur e, ther eby
supporting effective change management
■Establish traceability and changing application end-point addr ess while moving
application either from a shared environment to a dedicated environment or vice versa
The scope of the diagram can be appropriately deﬁned to cover a speciﬁc application, business
function, or the entir eenterprise. If chosen to be developed at the enterprise level, then the
network computing landscape can be depicted in an application-agnostic way as well.
Network and Communications Diagram
The Network and Communications diagram describes the means of communication — the
method of sending and receiving information — between these assets in the T echnology
Architectur e; insofar as the selection of package solutions in the preceding ar chitectur es put
speciﬁc requirements on the communications between the applications.
The Network and Communications diagram will take logical connections between client and
server components and identify network boundaries and network infrastr uctur erequir ed to
physically implement those connections. It does not describe the information format or content,
but will address protocol and capacity issues.
Part IV:Architecture Content Frame work 347
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Architectural Artifacts by ADM Phase Ar chitectural Artifacts
31.6.7 Phase E: Opportunities and Solutions
The following section describes catalogs, matrices, and diagrams that may be created within
Phase E (Opportunities & Solutions) as listed in Section 12.4 .
Project Context Diagram
AProject Context diagram shows the scope of a work package to be implemented as a part of a
broader transformation roadmap. The Project Context diagram links a work package to the
organizations, functions, services, pr ocesses, applications, data, and technology that will be
added, removed, or impacted by the project.
The Pr oject Context diagram is also a valuable tool for project portfolio management and pr oject
mobilization.
Beneﬁts Diagram
The Beneﬁts diagram shows opportunities identiﬁed in an ar chitectur edeﬁnition, classiﬁed
accor ding to their relative size, beneﬁt, and complexity .This diagram can be used by
stakeholders to make selection, prioritization, and sequencing decisions on identiﬁed
opportunities.
31.6.8 Requirements Management
The following section describes catalogs, matrices, and diagrams that may be created within the
Requirements Management phase as listed in Section 16.4 .
Requirements Catalog
The Requirements catalog captures things that the enterprise needs to do to meet its objectives.
Requir ements generated fr om ar chitectur eengagements ar etypically implemented thr ough
change initiatives identiﬁed and scoped during Phase E (Opportunities & Solutions).
Requir ements can also be used as a quality assurance tool to ensur ethat a particular ar chitecture
is ﬁt-for-purpose (i.e., can the architectur emeet all identiﬁed requirements).
The Requirements catalog contains the following metamodel entities:
■Requirement
■Assumption
■Constraint
■Gap
348 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 32
Architectur eDeliverables
This chapter pr ovides descriptions of deliverables r eferenced in the Ar chitectur eDevelopment Method
(ADM).
32.1 Introduction
This chapter deﬁnes the deliverables that will typically be consumed and produced across the
TOGAF ADM cycle. As deliverables ar etypically the contractual or formal work products of an
architectur eproject, it is likely that these deliverables will be constrained or altered by any
overar ching project or process management for the enterprise (such as CMMI, PRINCE2,
PMBOK, or MSP).
This chapter ther eforei si ntended to provide a typical baseline of ar chitectur edeliverables in
order to better deﬁne the activities r equir ed in the ADM and act as a starting point for tailoring
within a speciﬁc organization.
The TOGAF Content Framework (see Part IV ,Chapter 29 )identiﬁes deliverables that ar e
produced as outputs from executing the ADM cycle and potentially consumed as inputs at other
points in the ADM. Other deliverables may be produced elsewher eand consumed by the ADM.
Deliverables produced by executing the ADM ar eshown in the table below.
Deliverable Output from... Input to...
Architectur eBuilding Blocks F, H A, B, C, D, E
(see Section 32.2.1 )
Architectur eContract — —
(see Section 32.2.2 )
Architectur eDeﬁnition Document B, C, D, E, F C, D, E, F ,G ,H
(see Section 32.2.3 )
Architectur ePrinciples Pr eliminary ,P reliminary,
A, B, C, D A, B, C, D, E, F ,G ,H (see Section 32.2.4 )
Architectur eRepository Pr eliminary Pr eliminary,
A, B, C, D, E, F ,G ,H , (see Section 32.2.5 )
Requirements Management
Architectur eRequir ements B, C, D, E, F ,C ,D,
Requirements Management Requirements Management Speciﬁcation (see Section 32.2.6 )
Architectur eRoadmap B, C, D, E, F B, C, D, E, F
(see Section 32.2.7 )
Architectur eVision A, EB ,C ,D ,E ,F ,G ,H ,
Requirements Management (see Section 32.2.8 )
Part IV:Architecture Content Frame work 349
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Introduction Ar chitectureDeliverables
Deliverable Output from... Input to...
Preliminary ,A,B A ,B Business Principles, Business Goals,
and Business Drivers
(see Section 32.2.9 )
Capability Assessment A, E B, C, D, E, F
(see Section 32.2.10 )
Change Request F, G,H —
(see Section 32.2.11 )
Communications Plan AB ,C ,D ,E ,F
(see Section 32.2.12 )
Compliance Assessment GH
(see Section 32.2.13 )
Implementation and Migration Plan E, F F
(see Section 32.2.14 )
Implementation Governance Model FG ,H
(see Section 32.2.15 )
Organizational Model for Enterprise Pr eliminary Pr eliminary,
A, B, C, D, E, F ,G ,H , Architectur e(seeSection 32.2.16 )
Requirements Management
Request for Architectur eWork Pr eliminary ,F,H A ,G
(see Section 32.2.17 )
Requirements Impact Assessment Requirements Management Requirements Management
(see Section 32.2.18 )
Solution Building Blocks GA ,B ,C ,D ,E ,F ,G
(see Section 32.2.19 )
Statement of Architectur eWork A, B, C, D, E, F ,G,H B ,C ,D ,E ,F ,G ,H ,
Requirements Management (see Section 32.2.20 )
Tailored Architectur eFramework Pr eliminary ,A P reliminary,
A, B, C, D, E, F ,G ,H , (see Section 32.2.21 )
Requirements Management
32.2 Deliverable Descriptions
The following sections provide example descriptions of deliverables referenced in the ADM.
Note that not all the content described her eneed be contained in a particular deliverable. Rather ,
it is recommended that external r eferences be used wher epossible; for example, the strategic
plans of a business should not be copied into a Request for Ar chitectur eWork, but rather the
title of the strategic plans should be referenced.
Also, it is not suggested that these descriptions should be followed to the letter .However ,each
element should be consider ed carefully; ignoring any input or output item may cause pr oblems
downstream.
350 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureDeliverables Deliver able Descriptions
32.2.1 Architecture Building Blocks
Architectur edocumentation and models from the enterprise’s Ar chitectur eRepository; see
Part IV , Chapter 33 .
32.2.2 Architecture Contract
Purpose
Architectur eContracts ar ethe joint agreements between development partners and sponsors on
the deliverables, quality ,and ﬁtness-for -purpose of an ar chitectur e. Successful implementation
of these agr eements will be delivered through effective Ar chitectur eGovernance (see Part VI,
Chapter 44 ). By implementing a governed approach to the management of contracts, the
following will be ensured:
■Asystem of continuous monitoring to check integrity ,changes, decision-making, and audit
of all architecture-related activities within the organization
■Adher ence to the principles, standards, and r equir ements of the existing or developing
architectures
■Identiﬁcation of risks in all aspects of the development and implementation of the
architectur e(s) covering the internal development against accepted standar ds, policies,
technologies, and pr oducts as well as the operational aspects of the ar chitectur es such that
the organization can continue its business within a resilient environment
■Aset of processes and practices that ensur eaccountability ,responsibility ,and discipline
with regar dt ot he development and usage of all architectural artifacts
■Aformal understanding of the governance organization responsible for the contract, their
level of authority ,and scope of the architectur eunder the governance of this body
Content
Typical contents of an Architectur eDesign and Development Contract are:
■Introduction and background
■The natur eo ft he agreement
■Scope of the architecture
■Architectur eand strategic principles and requirements
■Conformance requirements
■Architectur edevelopment and management process and roles
■Target Architectur emeasures
■Deﬁned phases of deliverables
■Prioritized joint workplan
■Time window(s)
■Architectur edelivery and business metrics
Part IV:Architecture Content Frame work 351
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Deliverable Descriptions ArchitectureDeliverables
Typical contents of a Business Users’ Architectur eContract are:
■Introduction and background
■The natur eo ft he agreement
■Scope
■Strategic requirements
■Conformance requirements
■Architectur eadopters
■Time window
■Architectur ebusiness metrics
■Service architectur e(includes Service Level Agreement (SLA))
For mor edetail on the use of Architectur eContracts, see Part VI, Chapter 43 .
32.2.3 Architecture Deﬁnition Document
Purpose
The Ar chitectur eDeﬁnition Document is the deliverable container for the cor earchitectural
artifacts created during a pr oject and for important related information. The Ar chitecture
Deﬁnition Document spans all ar chitectur ed omains (business, data, application, and
technology) and also examines all r elevant states of the ar chitectur e(baseline, transition, and
target).
ATransition Ar chitectur eshows the enterprise at an architecturally signiﬁcant state between the
Baseline and T arget Ar chitectur es. T ransition Ar chitectur es ar eused to describe transitional
Target Architectures necessary for effective realization of the Target Architecture.
The Ar chitectur eD eﬁnition Document is a companion to the Ar chitectur eRequirements
Speciﬁcation, with a complementary objective:
■The Ar chitectur eDeﬁnition Document provides a qualitative view of the solution and
aims to communicate the intent of the architects
■The Ar chitectur eRequir ements Speciﬁcation pr ovides a quantitative view of the solution,
stating measurable criteria that must be met during the implementation of the architecture
Content
Typical contents of an Architectur eDeﬁnition Document are:
■Scope
■Goals, objectives, and constraints
■Architectur ePrinciples
■Baseline Architecture
■Architectur emodels (for each state to be modeled):
—B usiness Architectur emodels
—D ata Architectur emodels
352 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureDeliverables Deliver able Descriptions
—A pplication Architectur emodels
—T echnology Architectur emodels
■Rationale and justiﬁcation for architectural approach
■Mapping to Architectur eRepository:
—M apping to Architectur eLandscape
—M apping to reference models
—M apping to standards
—R e-use assessment
■Gap analysis
■Impact assessment
■Transition Architecture:
—D eﬁnition of transition states
—B usiness Architectur efor each transition state
—D ata Architectur efor each transition state
—A pplication Architectur efor each transition state
—T echnology Architectur efor each transition state
32.2.4 Architecture Principles
Purpose
Principles ar egeneral r ules and guidelines, intended to be enduring and seldom amended, that
inform and support the way in which an organization sets about fulﬁlling its mission.
In their turn, principles may be just one element in a str uctur ed set of ideas that collectively
deﬁne and guide the organization, from values through to actions and results.
Content
See Part III,Chapter 20 for guidelines and a detailed set of generic Ar chitectur ePrinciples,
including:
■Business principles (see Section 20.6.1 )
■Data principles (see Section 20.6.2 )
■Application principles (see Section 20.6.3 )
■Technology principles (see Section 20.6.4 )
Part IV:Architecture Content Frame work 353
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Deliverable Descriptions ArchitectureDeliverables
32.2.5 Architecture Repository
Purpose
The Ar chitectur eRepository acts as a holding area for all ar chitecture-r elated projects within the
enterprise. The r epository allows projects to manage their deliverables, locate re-usable assets,
and publish outputs to stakeholders and other interested parties.
Content
See Part V , Chapter 37 for a detailed description of the content of an Architectur eRepository.
32.2.6 Architecture Requirements Speciﬁcation
Purpose
The Ar chitectur eRequir ements Speciﬁcation pr ovides a set of quantitative statements that
outline what an implementation project must do in order to comply with the ar chitectur e. An
Architectur eR equir ements Speciﬁcation will typically form a major component of an
implementation contract or contract for mor edetailed Architectur eDeﬁnition.
As mentioned above, the Ar chitectur eRequir ements Speciﬁcation is a companion to the
Architectur eDeﬁnition Document, with a complementary objective:
■The Ar chitectur eDeﬁnition Document pr ovides a qualitative view of the solution and
aims to communicate the intent of the architect
■The Ar chitectur eRequir ements Speciﬁcation pr ovides a quantitative view of the solution,
stating measurable criteria that must be met during the implementation of the architecture
Content
Typical contents of an Architectur eRequirements Speciﬁcation are:
■Success measures
■Architectur erequirements
■Business service contracts
■Application service contracts
■Implementation guidelines
■Implementation speciﬁcations
■Implementation standards
■Interoperability requirements
■IT Service Management requirements
■Constraints
■Assumptions
354 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureDeliverables Deliver able Descriptions
32.2.7 Architecture Roadmap
Purpose
The Ar chitectur eRoadmap lists individual work packages that will realize the T arget
Architectur eand lays them out on a timeline to show pr ogression from the Baseline Ar chitecture
to the T arget Ar chitectur e. The Ar chitectur eRoadmap highlights individual work packages’
business value at each stage. T ransition Ar chitectur es necessary to effectively realize the T arget
Architectur eare identiﬁed as intermediate steps. The Ar chitectur eRoadmap is incr ementally
developed throughout Phases E and F ,and informed by readily identiﬁable r oadmap
components from Phase B, C, and D within the ADM.
Content
Typical contents of an Architectur eRoadmap are:
■Work package portfolio:
—W ork package description (name, description, objectives, deliverables)
—F unctional requirements
—D ependencies
—R elationship to opportunity
—R elationship to Ar chitectur eDeﬁnition Document and Ar chitectur eRequirements
Speciﬁcation
—B usiness value
■Implementation Factor Assessment and Deduction matrix, including:
—R isks
—Issues
—A ssumptions
—D ependencies
—A ctions
—Inputs
■Consolidated Gaps, Solutions, and Dependencies matrix, including:
—A rchitectur edomain
—G ap
—P otential solutions
—D ependencies
■Any Transition Architectures
■Implementation recommendations:
—C riteria measures of effectiveness of projects
—R isks and issues
—S olution Building Blocks (SBBs)
Part IV:Architecture Content Frame work 355
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Deliverable Descriptions ArchitectureDeliverables
32.2.8 Architecture Vision
Purpose
The Ar chitectur eVision is cr eated early on in the ADM cycle. It provides a summary of the
changes to the enterprise that will accrue fr om successful deployment of the T arget Ar chitecture.
The purpose of the Ar chitectur eVision is to provide key stakeholders with a formally agr eed
outcome. Early agreement on the outcome enables the architects to focus on the detail necessary
to validate feasibility .Providing an Ar chitectur eV ision also supports stakeholder
communication by providing a summary version of the full Architectur eDeﬁnition.
Content
Typical contents of an Architectur eVision are:
■Problem description:
—S takeholders and their concerns
—L ist of issues/scenarios to be addressed
■Objective of the Statement of Architectur eWork
■Summary views necessary for the Request for Ar chitectur eW ork and the Version 0.1
Business, Application, Data, and Technology Architectures created; typically including:
—V alue Chain diagram
—S olution Concept diagram
■Mapped requirements
■Reference to Draft Architectur eDeﬁnition Document
32.2.9 Business Principles, Business Goals, and Business Drivers
Purpose
Business principles, business goals, and business drivers pr ovide context for ar chitectur ework,
by describing the needs and ways of working employed by the enterprise. Many factors that lie
outside the consideration of ar chitectur ed iscipline may nevertheless have signiﬁcant
implications for the way that architectur ei sd eveloped.
Content
The content and str uctur eo fb usiness context for ar chitectur ei sl ikely to vary considerably fr om
one organization to the next.
356 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureDeliverables Deliver able Descriptions
32.2.10 Capability Assessment
Purpose
Befor eembarking upon a detailed Ar chitectur eDeﬁnition, it is valuable to understand the
baseline and target capability level of the enterprise. This Capability Assessment can be
examined on several levels:
■What is the capability level of the enterprise as a whole? Wher edoes the enterprise wish to
increase or optimize capability? What ar ethe architectural focus areas that will support the
desired development of the enterprise?
■What is the capability or maturity level of the IT function within the enterprise? What ar e
the likely implications of conducting the ar chitectur eproject in terms of design
governance, operational governance, skills, and organization str uctur e? What is an
appr opriate style, level of formality ,and amount of detail for the ar chitectur eproject to ﬁt
with the cultur eand capability of the IT organization?
■What is the capability and maturity of the ar chitectur efunction within the enterprise?
What architectural assets ar ecurrently in existence? Arethey maintained and accurate?
What standar ds and r eference models need to be considered? Ar etherelikely to be
opportunities to create re-usable assets during the architectur eproject?
■Wher ecapability gaps exist, to what extent is the business ready to transform in order to
reach the target capability? What ar ethe risks to transformation, cultural barriers, and
other considerations to be addressed beyond the basic capability gap?
Content
Typical contents of a Capability Assessment are:
■Business Capability Assessment, including:
—C apabilities of the business
—B aseline state assessment of the performance level of each capability
—F utur estate aspiration for the performance level of each capability
—B aseline state assessment of how each capability is realized
—F utur estate aspiration for how each capability should be realized
—A ssessment of likely impacts to the business or ganization resulting from the
successful deployment of the Target Architecture
■IT Capability Assessment, including:
—B aseline and target maturity level of change process
—B aseline and target maturity level of operational processes
—B aseline capability and capacity assessment
—A ssessment of the likely impacts to the IT or ganization resulting from the successful
deployment of the Target Architecture
■Architectur ematurity assessment, including:
—A rchitectur eGovernance processes, organization, roles, and responsibilities
—A rchitectur eskills assessment
Part IV:Architecture Content Frame work 357
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Deliverable Descriptions ArchitectureDeliverables
—B readth, depth, and quality of landscape deﬁnition with the Architectur eRepository
—B readth, depth, and quality of standards deﬁnition with the Architectur eRepository
—B readth, depth, and quality of r eference model deﬁnition with the Ar chitecture
Repository
—A ssessment of re-use potential
■Business Transformation Readiness Assessment, including:
—R eadiness factors
—V ision for each readiness factor
—C urrent and target readiness ratings
—R eadiness risks
32.2.1 1C hange Request
Purpose
During implementation of an ar chitectur e, as mor efacts become known, it is possible that the
original Ar chitectur eDeﬁnition and r equir ements ar enot suitable or ar enot sufﬁcient to
complete the implementation of a solution. In these circumstances, it is necessary for
implementation projects to either deviate from the suggested ar chitectural approach or to
request scope extensions. Additionally ,external factors — such as market factors, changes in
business strategy ,and new technology opportunities — may open up opportunities to extend
and reﬁne the architecture.
In these circumstances, a Change Request may be submitted in order to kick-start a further cycle
of architectur ework.
Content
Typical contents of a Change Request are:
■Description of the proposed change
■Rationale for the proposed change
■Impact assessment of the proposed change, including:
—R eference to speciﬁc requirements
—S takeholder priority of the requirements to date
—P hases to be revisited
—P hase to lead on requirements prioritization
—R esults of phase investigations and revised priorities
—R ecommendations on management of requirements
■Repository reference number
358 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureDeliverables Deliver able Descriptions
32.2.12 Communications Plan
Purpose
Enterprise Ar chitectur es contain large volumes of complex and inter-dependent information.
Effective communication of tar geted information to the right stakeholders at the right time is a
Critical Success Factor (CSF) for Enterprise Ar chitectur e. Development of a Communications
Plan for ar chitectur eallows for this communication to be carried out within a planned and
managed process.
Content
Typical contents of a Communications Plan are:
■Identiﬁcation of stakeholders and grouping by communication requirements
■Identiﬁcation of communication needs, key messages in r elation to the Ar chitectur eVision,
communication risks, and CSFs
■Identiﬁcation of mechanisms that will be used to communicate with stakeholders and
allow access to architectur einformation, such as meetings, newsletters, repositories, etc.
■Identiﬁcation of a communications timetable, showing which communications will occur
with which stakeholder groups at what time and in what location
32.2.13 Compliance Assessment
Purpose
Once an ar chitectur ehas been deﬁned, it is necessary to govern that ar chitectur ethrough
implementation to ensur ethat the original Ar chitectur eVision is appropriately realized and that
any implementation learnings ar efed back into the ar chitectur eprocess. Periodic compliance
reviews of implementation projects provide a mechanism to r eview project pr ogress and ensur e
that the design and implementation is pr oceeding in line with the strategic and ar chitectural
objectives.
Content
Typical contents of a Compliance Assessment are:
■Overview of project progress and status
■Overview of project architecture/design
■Completed architectur echecklists:
—H ardwar eand operating system checklist
—S oftwar eservices and middlewar echecklist
—A pplications checklists
—Information management checklists
—S ecurity checklists
—S ystem management checklists
Part IV:Architecture Content Frame work 359
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Deliverable Descriptions ArchitectureDeliverables
—S ystem engineering checklists
—M ethods and tools checklists
32.2.14 Implementation and Migration Plan
Purpose
The Implementation and Migration Plan provides a schedule of the projects that will realize the
Target Ar chitectur e. The Implementation and Migration Plan includes executable pr ojects
grouped into managed portfolios and pr ograms. The Implementation and Migration Strategy
identifying the approach to change is a key element of the Implementation and Migration Plan.
Content
Typical contents of an Implementation and Migration Plan are:
■Implementation and Migration Strategy:
—S trategic implementation direction
—Implementation sequencing approach
■Project and portfolio breakdown of implementation:
—A llocation of work packages to project and portfolio
—C apabilities delivered by projects
—M ilestones and timing
—W ork breakdown structure
—M ay include impact on existing portfolio, program, and projects
It may contain:
■Project charters:
—Included work packages
—B usiness value
—R isk, issues, assumptions, dependencies
—R esource requirements and costs
—B eneﬁts of migration, determined (including mapping to business requirements)
—E stimated costs of migration options
360 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureDeliverables Deliver able Descriptions
32.2.15 Implementation Governance Model
Purpose
Once an ar chitectur ehas been deﬁned, it is necessary to plan how the Transition Ar chitecture
that implements the ar chitectur ew ill be governed through implementation. W ithin
organizations that have established ar chitectur efunctions, ther ei sl ikely to be a governance
framework already in place, but speciﬁc pr ocesses, organizations, roles, responsibilities, and
measures may need to be deﬁned on a project-by-project basis.
The Implementation Governance Model ensur es that a project transitioning into implementation
also smoothly transitions into appropriate Architectur eGovernance.
Content
Typical contents of an Implementation Governance Model are:
■Governance processes
■Governance organization structure
■Governance roles and responsibilities
■Governance checkpoints and success/failur ecriteria
32.2.16 Organizational Model for Enterprise Architecture
Purpose
In order for an ar chitectur eframework to be used successfully ,itmust be supported by the
correct organization, roles, and r esponsibilities within the enterprise. Of particular importance is
the deﬁnition of boundaries between dif ferent Enterprise Ar chitectur epractitioners and the
governance relationships that span across these boundaries.
Content
Typical contents of an Organizational Model for Enterprise Architectur eare:
■Scope of organizations impacted
■Maturity assessment, gaps, and resolution approach
■Roles and responsibilities for architectur eteam(s)
■Constraints on architectur ework
■Budget requirements
■Governance and support strategy
Part IV:Architecture Content Frame work 361
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Deliverable Descriptions ArchitectureDeliverables
32.2.17 Request for Architecture Work
Purpose
This is a document that is sent from the sponsoring or ganization to the ar chitectur eorganization
to trigger the start of an ar chitectur edevelopment cycle. Requests for Ar chitectur eWork can be
created as an output of the Preliminary Phase, a r esult of approved ar chitectur eChange
Requests, or terms of reference for architectur ework originating from migration planning.
In general, all the information in this document should be at a high level.
Content
Requests for Architectur eWork typically include:
■Organization sponsors
■Organization’s mission statement
■Business goals (and changes)
■Strategic plans of the business
■Time limits
■Changes in the business environment
■Organizational constraints
■Budget information, ﬁnancial constraints
■External constraints, business constraints
■Current business system description
■Current architecture/IT system description
■Description of developing organization
■Description of resources available to developing organization
32.2.18 Requirements Impact Assessment
Purpose
Throughout the ADM, new information is collected relating to an ar chitectur e. As this
information is gather ed, new facts may come to light that invalidate existing aspects of the
architectur e. A Requir ements Impact Assessment assesses the current ar chitectur erequirements
and speciﬁcation to identify changes that should be made and the implications of those changes.
Content
Typical contents of a Requirements Impact Assessment are:
■Reference to speciﬁc requirements
■Stakeholder priority of the requirements to date
■Phases to be revisited
■Phase to lead on requirements prioritization
362 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureDeliverables Deliver able Descriptions
■Results of phase investigations and revised priorities
■Recommendations on management of requirements
■Repository reference number
32.2.19 Solution Building Blocks
Implementation-speciﬁc building blocks from the enterprise’s Ar chitectur eRepository; see
Part IV , Chapter 33 .
32.2.20 Statement of Architecture Work
Purpose
The Statement of Ar chitectur eW ork deﬁnes the scope and appr oach that will be used to
complete an ar chitectur edevelopment cycle. The Statement of Ar chitectur eWork is typically the
document against which successful execution of the ar chitectur eproject will be measured and
may form the basis for a contractual agr eement between the supplier and consumer of
architectur eservices.
Content
Typical contents of a Statement of Architectur eWork are:
■Title
■Architectur eproject request and background
■Architectur eproject description and scope
■Overview of Architectur eVision
■Speciﬁc change of scope procedures
■Roles, responsibilities, and deliverables
■Acceptance criteria and procedures
■Architectur eproject plan and schedule
■Approvals
32.2.21 T ailored Architecture Framework
Purpose
The TOGAF framework provides an industry standar dfor ar chitectur ethat may be used in a
wide variety of organizations. However ,beforethe TOGAF framework can be ef fectively used
within an architectur eproject, tailoring at two levels is necessary.
Firstly ,i ti sn ecessary to tailor the TOGAF model for integration into the enterprise. This
tailoring will include integration with management frameworks, customization of terminology ,
development of pr esentational styles, selection, conﬁguration, and deployment of ar chitecture
tools, etc. The formality and detail of any frameworks adopted should also align with other
contextual factors for the enterprise, such as culture, stakeholders, commercial models for
Enterprise Architecture, and the existing level of Architectur eCapability.
Once the framework has been tailored to the enterprise, further tailoring is necessary in or der to
Part IV:Architecture Content Frame work 363
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Deliverable Descriptions ArchitectureDeliverables
tailor the framework for the speciﬁc ar chitectur eproject. Tailoring at this level will select
appropriate deliverables and artifacts to meet project and stakeholder needs.
See Part II,Section 5.3.5 for further considerations when selecting and tailoring the ar chitecture
framework.
Content
Typical contents of a Tailored Architectur eFramework are:
■Tailored architectur emethod
■Tailored architectur econtent (deliverables and artifacts)
■Conﬁgured and deployed tools
■Interfaces with governance models and other frameworks:
—C orporate Business Planning
—E nterprise Architecture
—P ortfolio, Program, Project Management
—S ystem Development/Engineering
—O perations (Services)
364 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 33
Building Blocks
This chapter explains the concept of building blocks.
33.1 Overview
This section is intended to explain and illustrate the concept of building blocks in architecture.
Following this overview ,thereare two main parts:
■Introduction to Building Blocks (see Section 33.2 ), discusses the general concepts of
building blocks, and explains the dif ferences between Ar chitectur eBuilding Blocks (ABBs)
and Solution Building Blocks (SBBs)
■Building Blocks and the ADM (see Section 33.3 ), summarizes the stages at which building
block design and speciﬁcation occurs within the TOGAF Ar chitectur eDevelopment
Method (ADM)
33.2 Introduction to Building Blocks
This section is an introduction to the concept of building blocks.
33.2.1 Overview
This section describes the characteristics of building blocks. The use of building blocks in the
ADM is described separately in Section 33.3 .
33.2.2 Generic Characteristics
Building blocks have generic characteristics as follows:
■Abuilding block is a package of functionality deﬁned to meet the business needs acr oss an
organization
■Abuilding block has a type that corresponds to the enterprise’s content metamodel (such
as actor ,business service, application, or data entity)
■Abuilding block has a deﬁned boundary and is generally r ecognizable as "a thing" by
domain experts
■Abuilding block may interoperate with other ,inter-dependent building locks.
Part IV:Architecture Content Frame work 365
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Introduction to Building Bloc ks Building Blocks
■Agood building block has the following characteristics:
—Itconsiders implementation and usage, and evolves to exploit technology and
standards
—Itmay be assembled from other building blocks
—Itmay be a subassembly of other building blocks
—Ideally a building block is re-usable and replaceable, and well speciﬁed
Abuilding block’s boundary and speciﬁcation should be loosely coupled to its implementation;
i.e., it should be possible to r ealize a building block in several dif ferent ways without impacting
the boundary or speciﬁcation of the building block. The way in which assets and capabilities ar e
assembled into building blocks will vary widely between individual ar chitectur es. Every
organization must decide for itself what arrangement of building blocks works best for it. A
good choice of building blocks can lead to impr ovements in legacy system integration,
interoperability ,and ﬂexibility in the creation of new systems and applications.
Systems ar ebuilt up from collections of building blocks, so most building blocks have to
inter operate with other building blocks. Wherever that is true, it is important that the interfaces
to a building block ar epublished and reasonably stable.
Building blocks can be deﬁned at various levels of detail, depending on what stage of
architectur edevelopment has been reached.
For instance, at an early stage, a building block can simply consist of a name or an outline
description. Later on, a building block may be decomposed into multiple supporting building
blocks and may be accompanied by a full speciﬁcation.
The level of detail to which a building block should be speciﬁed is dependent on the objectives
of the ar chitectur eand, in some cases, less detail may be of gr eater value (for example, when
presenting the capabilities of an enterprise, a single clear and concise pictur ehas mor evalue
than a dense 100-page speciﬁcation).
The OMG has developed a standar dfor Re-usable Asset Speciﬁcation (RAS),8which provides a
good example of how building blocks can be formally described and managed.
33.2.3 Architecture Building Blocks
Architectur eBuilding Blocks (ABBs) relate to the Ar chitectur eContinuum (see Part V,Section
35.4.1 ), and ar edeﬁned or selected as a result of the application of the ADM.
33.2.3.1 Characteristics
ABBs:
■Captur earchitectur erequir ements; e.g., business, data, application, and technology
requirements
■Direct and guide the development of SBBs
8. Refer to www.omg.org/spec/RAS .
366 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Building Bloc ks Intr oduction to Building Blocks
33.2.3.2 Speciﬁcation Content
ABB speciﬁcations include the following as a minimum:
■Fundamental functionality and attributes: semantic, unambiguous, including security
capability and manageability
■Interfaces: chosen set, supplied
■Interoperability and relationship with other building blocks
■Dependent building blocks with required functionality and named user interfaces
■Map to business/organizational entities and policies
33.2.4 Solution Building Blocks
Solution Building Blocks (SBBs) r elate to the Solutions Continuum (see Part V,Section 35.4.2 ),
and may be either procured or developed.
33.2.4.1 Characteristics
SBBs:
■Deﬁne what products and components will implement the functionality
■Deﬁne the implementation
■Fulﬁl business requirements
■Areproduct or vendor-aware
33.2.4.2 Speciﬁcation Content
SBB speciﬁcations include the following as a minimum:
■Speciﬁc functionality and attributes
■Interfaces; the implemented set
■Required SBBs used with required functionality and names of the interfaces used
■Mapping from the SBBs to the IT topology and operational policies
■Speciﬁcations of attributes shared across the environment (not to be confused with
functionality) such as security ,manageability ,localizability ,scalability
■Performance, conﬁgurability
■Design drivers and constraints, including the physical architecture
■Relationships between SBBs and ABBs
Part IV:Architecture Content Frame work 367
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Building Blocks and the ADM Building Blocks
33.3 Building Blocks and the ADM
33.3.1 Basic Principles
This section focuses on the use of building blocks in the ADM. General considerations and
characteristics of building blocks ar edescribed in Section 33.2 .
33.3.1.1 Building Blocks in Architectur eDesign
An ar chitectur ei sas et of building blocks depicted in an architectural model, and a speciﬁcation
of how those building blocks ar econnected to meet the overall requirements of the business.
The various building blocks in an ar chitectur especify the scope and appr oach that will be used
to address a speciﬁc business problem.
Ther eare some general principles underlying the use of building blocks in the design of speciﬁc
architectures:
■An ar chitectur eneed only contain building blocks that ar erelevant to the business
problem that the architectur ei sa ttempting to address
■Building blocks may have complex relationships to one another
One building block may support multiple building blocks or may partially support a
single building block (for example, the business service of "complaint handling" would be
supported by many data entities and possibly multiple application components)
■Building blocks should conform to standards r elevant to their type, the principles of the
enterprise, and the standards of the enterprise
33.3.1.2 Building Block Design
The pr ocess of identifying building blocks includes looking for collections of capabilities or
assets that interact with one another and then drawing them together or making them different:
■Consider three classes of building blocks:
—R e-usable building blocks, such as legacy items
—B uilding blocks to be the subject of development, such as new applications
—B uilding blocks to be the subject of pur chase; i.e., Commercial Off-The-Shelf (COTS)
applications
■Use the desired level of integration to bind or combine functions into building blocks; for
instance, legacy elements could be treated as large building blocks to avoid breaking them
apart
In the early stages and during views of the highest-level enterprise, the building blocks ar eoften
kept at a broad integration deﬁnition. It is during these exercises that the services deﬁnitions
can often be best viewed. As implementation considerations ar eaddressed, mor edetailed views
of building blocks can often be used to addr ess implementation decisions, focus on the critical
strategic decisions, or aid in assessing the value and futur eimpact of commonality and r e-
usability.
368 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Building Bloc ks Building Blocks and the ADM
33.3.2 Building Block Speciﬁcation Process in the ADM
The process of building block deﬁnition takes place gradually as the ADM is followed, mainly in
Phases A, B, C, and D. It is an iterative pr ocess because as deﬁnition proceeds, detailed
information about the functionality r equir ed, the constraints imposed on the ar chitectur e, and
the availability of products may affect the choice and the content of building blocks.
The key parts of the ADM at which building blocks ar edesigned and speciﬁed ar esummarized
below.
The major work in these steps consists of identifying the ABBs r equir ed to meet the business
goals and objectives. The selected set of ABBs is then r eﬁned in an iterative process to arrive at a
set of SBBs which can either be bought off-the-shelf or custom developed.
The speciﬁcation of building blocks using the ADM is an evolutionary and iterative process. The
key phases and steps of the ADM at which building blocks ar eevolved and speciﬁed ar e
summarized below ,and illustrated in Figur e33-1.
G.
Implementation
GovernanceRequirements
Management
E.
Opportunities
and
SolutionsD.
Technology
ArchitectureB.
Business
Architecture
F.
Migration
PlanningA.
Architecture
Vision
H.
Architecture
Change
Management
C.
Information
Systems
Architectures
© The Open GroupE. Opportunities and Solutions
•Associate building block gaps with work packages that will address
the gapsA. Architecture Vision
•High-level model of candidate building blocksB. Business Architecture
C. Data/Application Architecture
D. Technology Architecture
Step 1: Select Reference Models, Viewpoints, and Tools
Step 2: Develop Baseline Architecture Description
Step 3: Develop Target Architecture Description
Step 4: Perform Gap Analysis
Step 5: Define Candidate Roadmap Components
Step 6: Resolve Impacts across the Architecture Landscape
Step 7: Formal Stakeholder Review
Step 8: Finalize the Architecture
Step 9: Create the Architecture Definition Document•
•
•
•
•
•
•
•
•
•
•I
•
•High-level model of existing building blocks, re-using
definitions from the Architecture Repository where
they are available
Develop view of required building blocks through the
creation of catalogs, matrices, and diagrams of the
architecture
Fully document each building block
Document rationale for building block decisions in
architecture document
Identify the impacted building blocks, checking against
a library of building blocks within the Architecture
Repository and re-using where appropriate
Where necessary, define new building blocks
Select standards for each building block, re-using as
much as possible from reference models selected from
the Architecture Continuum
Document final mapping of the building blocks to the
Architecture Landscape
From selected building blocks, identify those that might
be re-used, and publish as standards or reference
models via the Architecture Repository
Identify building blocks carried over
dentify eliminated building blocks
Identify new building blocks
Identify gaps and determine realization approach
(e.g., to be developed or to be procured)
Figure 33-1 Key ADM Phases/Steps at which Building Blocks ar eEvolved/Speciﬁed
Part IV:Architecture Content Frame work 369
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Building Blocks
370 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
The TOGAF Standard, Version 9.2
Part V:
Enterprise Continuum and Tools
The Open Group
Part V:Enterprise Continuum and Tools 371
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
372 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 34
Introduction to Part V
This chapter provides an intr oduction to and an overview of the contents of Part V: E nterprise
Continuum & Tools.
34.1 Introduction
It is usually impossible to cr eate a single uniﬁed ar chitectur ethat meets all r equir ements of all
stakeholders for all time. Ther efore, the Enterprise Ar chitect will need to deal not just with a
single Enterprise Architecture, but with many related Enterprise Architectures.
Each ar chitectur ewill have a dif ferent purpose and ar chitectur es will r elate to one another .
Effectively bounding the scope of an ar chitectur ei st herefor eaC ritical Success Factor (CSF) in
allowing architects to break down a complex pr oblem space into manageable components that
can be individually addressed.
The Enterprise Continuum provides a view of the Ar chitectur eRepository that shows the
evolution of these related ar chitectur es from generic to speciﬁc, from abstract to concr ete, and
from logical to physical.
This part of the TOGAF standar dd iscusses the Enterprise Continuum; including the
Architectur eContinuum and the Solutions Continuum. It describes how ar chitectur es can be
partitioned and or ganized within a r epository .I ta lso describes tools for ar chitecture
development.
34.2 Structure of Part V
Part V :Enterprise Continuum & Tools is structured as follows:
■Introduction (this chapter)
■The Enterprise Continuum (see Chapter 35 )describes a view of the Ar chitecture
Repository that pr ovides methods for classifying ar chitectur eand solution artifacts,
showing how the dif ferent types of artifact evolve, and how they can be leveraged and r e-
used
■Architectur ePartitioning (see Chapter 36 )describes the various characteristics that can be
applied to classify and then partition architectures
■The Ar chitectur eRepository (see Chapter 37 )shows how the abstract classiﬁcations of
architectur ecan be applied to a r epository str uctur es ot hat ar chitectur es can be or ganized
and easily accessed
■Tools for Ar chitectur eDevelopment (see Chapter 38 )provides guidelines on selecting a
toolset to create and manage architectural artifacts
Part V:Enterprise Continuum and Tools 373
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Introduction to Part V
374 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 35
Enterprise Continuum
35.1 Overview
The Enterprise Continuum provides methods for classifying ar chitectur eand solution artifacts,
both internal and external to the Ar chitectur eRepository ,a st hey evolve from generic
Foundation Architectures to Organization-Speciﬁc Architectures.
The Enterprise Continuum enables the ar chitect to articulate the broad perspective of what, why ,
and how the Enterprise Ar chitectur ehas been designed with the factors and drivers consider ed.
The Enterprise Continuum is an important aid to communication and understanding, both
within individual enterprises, and between customer enterprises and vendor or ganizations.
Without an understanding of "wher ei nt he continuum you are", people discussing ar chitecture
can often talk at cr oss-purposes because they ar ereferencing dif ferent points in the continuum at
the same time, without realizing it.
Any ar chitectur ei sc ontext-speciﬁc; for example, ther eare architectur es that ar especiﬁc to
individual customers, industries, subsystems, pr oducts, and services. Architects, on both the
buy side and supply side, must have at their disposal a consistent language to ef fectively
communicate the dif ferences between ar chitectur es. Such a language will enable engineering
efﬁciency and the effective leveraging of Commer cial Off-The-Shelf (COTS) pr oduct
functionality .The Enterprise Continuum provides that consistent language.
The Enterprise Continuum enables the or ganization of re-usable ar chitectur eartifacts and
solution assets to maximize the Enterprise Architectur einvestment opportunities.
35.2 Enterprise Continuum and Architecture Re-Use
The simplest way of thinking of the Enterprise Continuum is as a view of the repository of all
the ar chitectur eassets. It can contain Ar chitectur eDescriptions, models, building blocks,
patterns, ar chitectur eviewpoints, and other artifacts — that exist both within the enterprise and
in the IT industry at large, which the enterprise considers to have available for the development
of architectures for the enterprise.
Examples of internal ar chitectur eand solution artifacts ar ethe deliverables of pr evious
architectur ework, which ar eavailable for r e-use. Examples of external ar chitectur eand solution
artifacts ar ethe wide variety of industry r eference models and ar chitectur epatterns that exist,
and ar econtinually emerging, including those that ar ehighly generic (such as the T OGAF
TRM); those speciﬁc to certain aspects of IT (such as a web services ar chitectur e, or a generic
manageability ar chitectur e); those speciﬁc to certain types of information processing, such as e-
Commer ce, supply chain management, etc.; and those speciﬁc to certain vertical industries, such
as the models generated by vertical consortia like the TM Forum (in the T elecommunications
sector), ARTS (Retail), Energistics (Petrotechnical), etc.
Part V:Enterprise Continuum and Tools 375
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Enterprise Continuum and Ar chitectureRe-Use Enterprise Continuum
The Enterprise Ar chitectur edetermines which ar chitectur eand solution artifacts an or ganization
includes in its Architectur eRepository .Re-use is a major consideration in this decision.
35.3 Constituents of the Enterprise Continuum
An overview of the context and constituents of the Enterprise Continuum is shown in Figure
35-1.
External factors
provide context
Architecture Context and Requirements
Guides and
supportsGuides and
supportsGuides and
supportsGuides and
supportsGeneric
ArchitecturesSpecific
ArchitecturesGeneralization for future re-use
Adaptation for useArchitecture Continuum
Generalization for future re-use
Adaptation for useGeneric
SolutionsSpecific
Solutions
Solutions Continuum
Deployed SolutionsContextual factors
shape architectures
Solutions are instantiated
within a deploymentDeployed solutions become
Architecture ContextEnterprise Continuum Enterprise
Repositories
(including
Requirements Repository,
Architecture Repository,
Design Stores,
and CMDB)
The Enterprise Continuum
provides structure and
classification for assets in
Enterprise Repositories.
Enterprise Repositories
provide resources to be
classified within the
Enterprise Continuum.
© The Open Group
Figure 35-1 Enterprise Continuum
The Enterprise Continuum is partitioned into three distinct continua as follows:
■The Enterprise Continuum (see Section 35.4 )i st he outermost continuum and classiﬁes
assets related to the context of the overall Enterprise Architecture
The Enterprise Continuum classes of assets may inﬂuence ar chitectur es, but ar enot
directly used during the ADM ar chitectur edevelopment. The Enterprise Continuum
classiﬁes contextual assets used to develop ar chitectur es, such as policies, standar ds,
strategic initiatives, or ganizational str uctur es, and enterprise-level capabilities. The
Enterprise Continuum can also classify solutions (as opposed to descriptions or
speciﬁcations of solutions). Finally ,the Enterprise Continuum contains two specializations,
namely the Architectur eand Solutions Continua.
■The Architecture Continuum (see Section 35.4.1 )offers a consistent way to deﬁne and
understand the generic rules, r epresentations, and r elationships in an ar chitecture,
including traceability and derivation r elationships (e.g., to show that an Or ganization-
Speciﬁc Architectur ei sb ased on an industry or generic standard)
The Ar chitectur eContinuum r epresents a structuring of Ar chitectur eBuilding Blocks
376 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Enterprise Continuum Constituents of the Enterprise Continuum
(ABBs) which ar ere-usable ar chitectur eassets. ABBs evolve through their development
lifecycle fr om abstract and generic entities to fully expressed Or ganization-Speciﬁc
Architectur eassets. The Ar chitectur eContinuum assets will be used to guide and select
the elements in the Solutions Continuum (see below). The Ar chitectur eContinuum shows
the relationships among foundational frameworks (such as the T OGAF framework),
common system ar chitectur es (such as the III-RM), industry ar chitectur es, and Enterprise
Architectur es. The Ar chitectur eContinuum is a useful tool to discover commonality and
eliminate unnecessary redundancy.
■The Solutions Continuum (see Section 35.4.2 )provides a consistent way to describe and
understand the implementation of the assets deﬁned in the Architectur eContinuum
The Solutions Continuum deﬁnes what is available in the organizational envir onment as
re-usable Solution Building Blocks (SBBs). The solutions ar ethe results of agr eements
between customers and business partners that implement the r ules and r elationships
deﬁned in the ar chitectur espace. The Solutions Continuum addresses the commonalities
and differences among the products, systems, and services of implemented systems.
The Enterprise Continuum classiﬁes ar chitectur eassets that ar eapplicable across the entir e
scope of the Enterprise Ar chitectur e. These assets, which may be r eferr ed to as building blocks,
can r epresent a variety of elements that collectively deﬁne and constrain the Enterprise
Architectur e. They can take the form of business goals and objectives, strategic initiatives,
capabilities, policies, standards, and principles.
The Enterprise Continuum also contains the Ar chitectur eContinuum and the Solutions
Continuum. Each of these continua is described in greater detail in the following sections.
35.4 Enterprise Continuum in Detail
The Enterprise Continuum is intended to r epresent the classiﬁcation of all assets that ar e
available to an enterprise. It classiﬁes assets that exist within the enterprise along with other
assets in the wider environment that ar erelevant to the enterprise, such as products, r esearch,
market factors, commercial factors, business strategies, and legislation.
The TOGAF standar disintended to be a framework for conducting Enterprise Ar chitectur eand
as a result many of the assets that r eside within the Enterprise Continuum ar ebeyond the
speciﬁc consideration of the TOGAF framework. However ,architectur es ar efundamentally
shaped by concerns outside the practice of ar chitectur eand it is ther eforeo fp aramount
importance that any architectur emust accurately reﬂect external context.
The speciﬁc contextual factors to be identiﬁed and incorporated in an ar chitectur ewill vary fr om
architectur et oa rchitectur e. However ,typical contextual factors for ar chitectur edevelopment ar e
likely to include:
■External inﬂuencing factors, such as regulatory change, technological advances, and
competitor activity
■Business strategy and context, including mergers, acquisitions, and other business
transformation requirements
■Current business operations, reﬂecting deployed architectures and solutions
By observing the context for ar chitectur e, it can be seen that ar chitectur edevelopment activity
exists within a wider enterprise lifecycle of continuous change.
ABBs ar edeﬁned in relation to a set of contextual factors and then r ealized through SBBs. SBBs
aredeployed as live solutions and become a part of the baseline operating model of the
enterprise. The operating model of the enterprise and empiric information on the performance
Part V:Enterprise Continuum and Tools 377
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Enterprise Continuum in Detail Enterprise Continuum
of the enterprise shapes the context and r equir ements for futur echange. Finally ,these new
requirements for change create a feedback loop to inﬂuence the cr eation of new T arget
Architectures.
35.4.1 Architecture Continuum
The Ar chitectur eContinuum illustrates how ar chitectur es ar edeveloped and evolved across a
continuum ranging from Foundation Ar chitectur es, such as the T OGAF®Series Guide: The
TOGAF®Technical Reference Model (TRM), thr ough Common Systems Ar chitectur es, and
Industry Architectures, and to an enterprise’s own Organization-Speciﬁc Architectures.
The arrows in the Ar chitectur eContinuum r epresent the r elationship that exists between the
differ ent ar chitectur es in the Ar chitectur eContinuum. The leftwards direction focuses on
meeting enterprise needs and business r equir ements, while the rightwards direction focuses on
leveraging architectural components and building blocks.
© The Open Group
Figure 35-2 Architectur eContinuum
The enterprise needs and business r equir ements ar eaddressed in increasing detail from left to
right. The ar chitect will typically look to ﬁnd re-usable architectural elements towar dthe left of
the continuum. When elements ar enot found, the r equir ements for the missing elements ar e
passed to the left of the continuum for incorporation. Those implementing ar chitectur es within
their own organizations can use the same continuum models specialized for their business.
The four particular ar chitectur etypes illustrated in Figur e35-2areintended to indicate the range
of dif ferent types of ar chitectur ethat may be developed at dif ferent points in the continuum;
they ar enot ﬁxed stages in a process.
Many dif ferent types of ar chitectur emay occur at points in between those illustrated in Figure
35-2.Although the evolutionary transformation continuum illustrated does not r epresent a
formal process, it does represent a progression, which occurs at several levels:
■Logical to physical
■Horizontal (IT-focused) to vertical (business-focused)
■Generalization to specialization
■Taxonomy to complete and speciﬁc architectur especiﬁcation
At each point in the continuum, an ar chitectur ei sd esigned in terms of the design concepts and
building blocks available and relevant to that point.
378 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Enterprise Continuum Enterprise Continuum in Detail
The four ar chitectur es illustrated in Figur e35-2 represent main classiﬁcations of potential
architectur es, and will be relevant and familiar to many architects. They ar eanalyzed in detail
below.
Foundation Architecture
AFoundation Ar chitectur econsists of generic components, inter -relationships, principles, and
guidelines that pr ovide a foundation on which mor especiﬁc ar chitectur es can be built. The
TOGAF ADM is a pr ocess that would support specialization of such Foundation Ar chitectures
in order to create organization-speciﬁc models.
The TOGAF TRM is an example of a Foundation Ar chitectur e. It is a fundamental ar chitecture
upon which other ,morespeciﬁc ar chitectur es can be based. See the T OGAF®Series Guide: The
TOGAF®Technical Reference Model (TRM) for mor edetails.
Common Systems Architectures
Common Systems Ar chitectur es guide the selection and integration of speciﬁc services fr om the
Foundation Ar chitectur et oc reate an ar chitectur euseful for building common (i.e., highly r e-
usable) solutions across a wide number of relevant domains.
Examples of Common Systems Ar chitectur es include: a security ar chitectur e, a management
architectur e, a network ar chitectur e, an operations ar chitectur e, etc. Each is incomplete in terms
of overall system functionality ,but is complete in terms of a particular problem domain
(security ,manageability ,networking, operations, etc.), so that solutions implementing the
architectur econstitute re-usable building blocks for the cr eation of functionally complete
operating states of the enterprise.
Other characteristics of Common Systems Architectures include:
■Reﬂects requirements speciﬁc to a generic problem domain
■Deﬁnes building blocks speciﬁc to a generic problem domain
■Deﬁnes business, data, application, or technology standards for implementing these
building blocks
■Provides building blocks for easy re-use and lower costs
The T OGAF Integrated Information Infrastr uctur eReference Model (III-RM) — see the T OGAF®
Series Guide: The T OGAF Integrated Information Infrastr uctur eReference Model (III-RM) — is
areference model that supports describing Common Systems Ar chitectur ei nt he Application
Domain that focuses on the r equir ements, building blocks, and standards relating to the vision
of Boundaryless Information Flow.
Industry Architectures
Industry Ar chitectur es guide the integration of common systems components with industry-
speciﬁc components, and guide the creation of industry solutions for targeted customer
problems within a particular industry.
Atypical example of an industry-speciﬁc component is a data model r epresenting the business
functions and processes speciﬁc to a particular vertical industry ,such as the Retail industry’s
"Active Stor e" ar chitectur e, or an Industry Ar chitectur ethat incorporates the Energistics Data
Model (refer to www.energistics.org ).
Part V:Enterprise Continuum and Tools 379
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Enterprise Continuum in Detail Enterprise Continuum
Other characteristics of Industry Architectures include:
■Reﬂects requirements and standards speciﬁc to a vertical industry
■Deﬁnes building blocks speciﬁc to a generic problem domain
■Contains industry-speciﬁc logical data and process models
■Contains industry-speciﬁc applications and process models, as well as industry-speciﬁc
business rules
■Provides guidelines for testing collections of systems
■Encourages levels of interoperability throughout the industry
Organization-Speciﬁc Architectures
Organization-Speciﬁc Ar chitectur es describe and guide the ﬁnal deployment of solution
components for a particular enterprise or extended network of connected enterprises.
Ther emay be a variety of Organization-Speciﬁc Ar chitectur es that ar eneeded to ef fectively
cover the organization’s r equir ements by deﬁning the ar chitectur es in increasing levels of detail.
Alternatively ,this might result in several mor edetailed Organization-Speciﬁc Ar chitectur es for
speciﬁc entities within the global enterprise. Breaking down Organization-Speciﬁc Ar chitectures
into constituent pieces is addressed in Chapter 36 .
The Organization-Speciﬁc Ar chitectur eguides the ﬁnal customization of the solution, and has
the following characteristics:
■Provides a means to communicate and manage business operations across all four
architectural domains
■Reﬂects requirements speciﬁc to a particular enterprise
■Deﬁnes building blocks speciﬁc to a particular enterprise
■Contains organization-speciﬁc business models, data, applications, and technologies
■Provides a means to encourage implementation of appr opriate solutions to meet business
needs
■Provides the criteria to measur eand select appropriate products, solutions, and services
■Provides an evolutionary path to support growth and new business needs
35.4.2 Solutions Continuum
The Solutions Continuum r epresents the detailed speciﬁcation and construction of the
architectur es at the corresponding levels of the Ar chitectur eContinuum. At each level, the
Solutions Continuum is a population of the ar chitectur ewith reference building blocks — either
purchased products or built components — that r epresent a solution to the enterprise’s business
need expressed at that level. A populated r epository based on the Solutions Continuum can be
regarded as a solutions inventory or re-use library ,which can add signiﬁcant value to the task of
managing and implementing improvements to the enterprise.
The Solutions Continuum is illustrated in Figur e35-3.
380 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Enterprise Continuum Enterprise Continuum in Detail
Foun«ation 
SolutionsCommon Systems 
SolutionsIn«ustry 
SolutionsOrganization¬Speci­ic 
Solutions© The Open Group
Figure 35-3 Solutions Continuum
"Moving to the right" on the Solutions Continuum is focused on pr oviding solutions value (i.e.,
foundation solutions provide value in cr eating common systems solutions; common systems
solutions ar eused to create industry solutions; and industry solutions ar eused to cr eate
organization-speciﬁc solutions). "Moving to the left" on the Solutions Continuum is focused on
addr essing enterprise needs. These two viewpoints ar esigniﬁcant for a company attempting to
focus on its needs while maximizing the use of available resources through leverage.
The following subsections describe each of the solution types within the Solutions Continuum.
Foundation Solutions
Foundation Solutions ar ehighly generic concepts, tools, pr oducts, services, and solution
components that ar ethe fundamental pr oviders of capabilities. Services include pr ofessional
services — such as training and consulting services — that ensur ethe maximum investment
value fr om solutions in the shortest possible time; and support services — such as Help Desk —
that ensur ethe maximum possible value fr om solutions (services that ensur etimely updates and
upgrades to the products and systems).
Example Foundation Solutions would include programming languages, operating systems,
foundational data str uctur es (such as EDIF ACT), generic approaches to organization str ucturing,
foundational str uctur es for organizing IT operations (such as ITIL or the IT4IT Refer ence
Architecture), etc.
Common Systems Solutions
AC ommon Systems Solution is an implementation of a Common Systems Ar chitecture
comprised of a set of products and services, which may be certiﬁed or branded. It r epresents the
highest common denominator for one or mor esolutions in the industry segments that the
Common Systems Solution supports.
Common Systems Solutions r epresent collections of common r equir ements and capabilities,
rather than those speciﬁc to a particular customer or industry .Common Systems Solutions
provide or ganizations with operating environments speciﬁc to operational and informational
needs, such as high availability transaction pr ocessing and scalable data warehousing systems.
Examples of Common Systems Solutions include: an enterprise management system pr oduct or
asecurity system product.
Computer systems vendors ar ethe typical pr oviders of technology-centric Common Systems
Solutions. "Softwar ea sas ervice" vendors ar etypical pr oviders of common application
solutions. Business process outsourcing vendors ar etypical provides of business capability-
centric Common Systems Solutions.
Part V:Enterprise Continuum and Tools 381
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Enterprise Continuum in Detail Enterprise Continuum
Industry Solutions
An Industry Solution is an implementation of an Industry Ar chitectur e, which pr ovides r e-
usable packages of common components and services speciﬁc to an industry.
Fundamental components ar eprovided by Common Systems Solutions and/or Foundation
Solutions, and ar eaugmented with industry-speciﬁc components. Examples include: a physical
database schema or an industry-speciﬁc point-of-service device.
Industry Solutions ar eindustry-speciﬁc, aggregate pr ocur ements that ar eready to be tailored to
an individual organization’s requirements.
In some cases an industry solution may include not only an implementation of the Industry
Architectur e, but also other solution elements, such as speciﬁc pr oducts, services, and systems
solutions that ar eappropriate to that industry.
Organization-Speciﬁc Solutions
An Organization-Speciﬁc Solution is an implementation of the Or ganization-Speciﬁc
Architectur ethat pr ovides the r equir ed business functions. Because solutions ar edesigned for
speciﬁc business operations, they contain the highest amount of unique content in order to
accommodate the varying people and processes of speciﬁc organizations.
Building Organization-Speciﬁc Solutions on Industry Solutions, Common Systems Solutions,
and Foundation Solutions is the primary purpose of connecting the Ar chitectur eContinuum to
the Solutions Continuum, as guided by the architects within an enterprise.
An Organization-Speciﬁc Solution will be str uctur ed in or der to support speciﬁc Service-Level
Agreements (SLAs) to ensur esupport of the operational systems at desired service levels. For
example, a third-party application hosting pr ovider may offer dif ferent levels of support for
operational systems. These agreements would deﬁne the terms and conditions of that support.
Other key factors to be deﬁned within an Organization-Speciﬁc Solution ar ethe key operating
parameters and quality metrics that can be used to monitor and manage the environment.
The Enterprise Continuum can provide a key link between ar chitectur e, development, and
operations personnel by allowing them to communicate and r each agreement on anticipated
operational support r equir ements. Operations personnel can in turn access the Enterprise
Continuum to obtain information r egar ding the operation concepts and service support
requirements of the deployed system.
35.5 The Enterprise Continuum and the ADM
The TOGAF ADM describes the pr ocess of developing an enterprise-speciﬁc ar chitectur eand an
enterprise-speciﬁc solution(s) which conform to that ar chitectur eb ya dopting and adapting
(wher eappropriate) generic ar chitectur es and solutions (left to right in the continuum
classiﬁcation). In a similar fashion, speciﬁc ar chitectur es and solutions that pr ove to be cr edible
and effective will be generalized for re-use (right to left in the continuum classiﬁcation).
At relevant places throughout the T OGAF ADM, ther eare pointers to useful ar chitectur eassets
at the r elevant level of generality in the continuum classiﬁcation. These assets can include
reference models from The Open Group and industries at large.
The TOGAF Library pr ovides r eference models for consideration for use in developing an
organization’s architecture.
However ,i nd eveloping ar chitectur es in the various domains within an overall Enterprise
Architectur e, the architect will need to consider the use and re-use of a wide variety of dif ferent
382 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Enterprise Continuum The Enterprise Continuum and the ADM
architectur eassets, and the Enterprise Continuum pr ovides an approach for categorizing and
communicating these different assets.
35.6 The Enterprise Continuum and Your Organization
The preceding sections have described the Enterprise Continuum, the Ar chitectur eContinuum,
and the Solutions Continuum. The following sections describe the relationships between each of
the three continua and how these relationships should be applied within your organization.
35.6.1 Relationships
Each of the thr ee continua contains information about the evolution of the ar chitectur es during
their lifecycle:
■The Enterprise Continuum provides an overall context for ar chitectur es and solutions and
classiﬁes assets that apply across the entir escope of the enterprise
■The Ar chitectur eC ontinuum pr ovides a classiﬁcation mechanism for assets that
collectively deﬁne the architectur ea td ifferent levels of evolution from generic to speciﬁc
■The Solutions Continuum pr ovides the classiﬁcation for assets to describe speciﬁc
solutions for the or ganization that can be implemented to achieve the intent of the
architecture
The relationships between the Ar chitectur eContinuum and Solutions Continuum ar eshown in
Figur e35-4.
Common
Systems
ArchitecturesIn®ustry
ArchitecturesOrganization¯Speci°ic
ArchitecturesFoun®ation
Architectures
Common Systems
SolutionsIn ®ustry
SolutionsOrganization ¯Speci °ic
SolutionsFoun ®ation
Solutions
© The Open Group
Figure 35-4 Relationships between Architectur eand Solutions Continua
Part V:Enterprise Continuum and Tools 383
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
The Enterprise Continuum and Your Or ganization Enterprise Continuum
The relationship between the Ar chitectur eContinuum and the Solutions Continuum is one of
guidance, dir ection, and support. For example, Foundation Ar chitectur es guide the creation or
selection of Foundation Solutions. Foundation Solutions support the Foundation Ar chitectur eby
helping to realize the ar chitectur edeﬁned in the Ar chitectur eContinuum. The Foundation
Architectur ealso guides development of Foundation Solutions, by providing ar chitectural
direction, r equir ements and principles that guide selection, and r ealization of appr opriate
solutions. A similar r elationship exists between the other elements of the Enterprise Continuum.
The Enterprise Continuum presents mechanisms to help impr ove productivity through leverage.
The Ar chitectur eContinuum offers a consistent way to understand the dif ferent ar chitectures
and their components. The Solutions Continuum of fers a consistent way to understand the
different products, systems, services, and solutions required.
The Enterprise Continuum should not be interpr eted as r epresenting strictly chained
relationships. Organization-Speciﬁc Ar chitectur es could have components fr om a Common
Systems Ar chitectur e, and Organization-Speciﬁc Solutions could contain Foundation Solutions.
The relationships depicted in Figur e35-1 area ni llustration showing opportunities for
leveraging architectur eand solution components.
35.6.2 Y our Enterprise
The TOGAF standar dprovides a method for you to "ar chitect" the systems in your enterprise.
Your ar chitectur eorganization will have to deal with each type of ar chitectur edescribed above.
For example, it is r ecommended that you have your own Foundation Ar chitectur ethat governs
all of your systems. Youshould also have your own Common Systems Ar chitectur es that
govern major shar ed systems — such as the networking system or management system. Y ou
may have your own industry-speciﬁc ar chitectur es that govern the way your systems must
behave within your industry .Finally ,any given department or organization within your
business may need its own individual Organization-Speciﬁc Ar chitectur et og overn the systems
within that department.
Your ar chitectur eorganization will either adopt or adapt existing ar chitectur es, or will develop
its own ar chitectur es from the gr ound up. In either case, the TOGAF standar di sat ool to help. It
provides a method to assist you in generating/maintaining any type of ar chitectur ewithin the
Architectur eContinuum while leveraging ar chitectur eassets alr eady deﬁned, internal or
external to your organization. The TOGAF ADM helps you to re-use ar chitectur eassets, making
your architectur eorganization mor eefﬁcient and effective.
384 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 36
Architectur ePartitioning
36.1 Overview
Partitions ar eused to simplify the development and management of the Enterprise Ar chitecture.
Partitions lie at the foundation of Ar chitectur eGovernance and ar edistinct from levels and the
organizing concepts of the Architectur eContinuum (see Chapter 35 ).
Architectures ar epartitioned because:
■Organizational unit architectures conﬂict with one another
■Differ ent teams need to work on dif ferent elements of ar chitectur ea tt he same time and
partitions allow for speciﬁc groups of architects to own and develop speciﬁc elements of
the architecture
■Effective ar chitectur ere-use r equir es modular ar chitectur esegments that can be taken and
incorporated into broader architectures and solutions
It is impractical to present a deﬁnitive partitioning model for ar chitectur e. Each enterprise needs
to adopt a partitioning model that reﬂects its own operating model.
This chapter discusses the classiﬁcation criteria that ar egenerally applied to ar chitectur es and
how these can be leveraged to partition the enterprise into a set of ar chitectur es with
manageable complexity and effective governance.
36.2 Applying Classiﬁcation to Create Partitioned Architectures
For the reasons outlined in the previous section, it is valuable to partition and or ganize the
Enterprise Continuum into a set of related solutions and architectures with:
■Manageable complexity for each individual architectur eo rs olution
■Deﬁned groupings
■Deﬁned hierarchies and navigation structures
■Appropriate processes, roles, and responsibilities attached to each grouping
The following table shows how suitable classiﬁcation criteria can be used to support partitioning
of solutions:
Part V:Enterprise Continuum and Tools 385
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Applying Classiﬁcation to Create Partitioned Ar chitectures Ar chitecturePartitioning
Characteristic Usage to Support Solution Partitioning
Subject Matter (Breadth) Solutions ar enaturally organized into groups to support
operational management and control. Examples of solution
partitions according to subject matter would include applications,
departments, divisions, products, services, service centers, sites,
etc.
Solution decomposition by subject matter is typically the
fundamental technique for structuring both solutions and the
architectures that represent them.
Time Solution lifecycles ar etypically organized around a timeline,
which allows the impact of solution development, introduction,
operation, and retirement to be managed against other business
activity occurring in similar time periods.
Maturity/Volatility The maturity and volatility of a solution will typically impact the
speed of execution required for the solution lifecycle.
Additionally ,volatility and maturity will shape investment
priorities. Solutions existing in highly volatile environments may
be better suited to rapid, agile development techniques.
The following table shows how each classiﬁcation criteria can be used to support partitioning of
architectures:
Characteristic Usage to Support Architecture Partitioning
Depth The level of detail within an architectur ehas a strong correlation
to the stakeholder groups that will be interested in the
architecture.
Typically ,less detailed architectures will be of interest to executive
stakeholders. As architectures increase in detail, their relevance to
implementation and operational personnel will also increase.
In practical terms, ar chitectur ediscipline is used to support a number of dif ferent types of
architectur ethat ar eused for dif ferent objectives. The classiﬁcation criteria described above can
be used in different ways to support the achievement of each objective.
The following characteristics ar egenerally not used to partition an Architectur eLandscape:
■Architectures used to describe the Architectur eLandscape ar egenerally not abstract
■Solution volatility generally prevents ar chitectur es from being deﬁned that ar efar in the
futur e; volatility also reduces the accuracy of historic ar chitectur es over time, as the
organization changes and adapts to new circumstances
Using the criteria above, architectures can be grouped into partitions.
386 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitecturePartitioning Applying Classiﬁcation to Create Partitioned Ar chitectures
36.2.1 Activities within the Preliminary Phase
The key objective of the Pr eliminary Phase is to establish the Ar chitectur eCapability for the
enterprise. In practical terms this activity will r equir ethe establishment of a number of
architectur epartitions, providing deﬁned boundaries, governance, and ownership.
Generally speaking, each team carrying out ar chitectur eactivity within the enterprise will own
one or mor earchitectur epartitions and will execute the ADM to deﬁne, govern, and r ealize their
architectures.
If mor ethan one team is expected to work on a single ar chitectur e, this can become pr oblematic,
as the precise responsibilities of each team ar edifﬁcult to establish. For this reason, it is
preferable to apply partitioning to the architectur euntil each architectur ehas one owning team.
Finally ,i ti sw orth considering the distinction between standing capabilities of the enterprise
and temporary teams mobilized to support a particular change initiative. Although the remit of
standing teams within the enterprise can be precisely deﬁned, it is mor edifﬁcult to anticipate
and specify the r esponsibilities of (possibly unknown) temporary ar chitectur eteams. In the cases
of these temporary teams, each team should come under the governance of a standing
architectur eteam and ther eshould be a process within the ADM cycle of these teams to
establish appropriate architectur epartitioning.
Steps within the Preliminary Phase to support architectur epartitioning ar ea sf ollows:
■Determine the organization structure for architecture within the enterprise :the various
standing teams that will create the architectur eshould be identiﬁed
For each of these teams, appropriate boundaries should be established, including:
—G overnance bodies that ar eapplicable to the team
—T eam membership
—T eam reporting lines
■Determine the responsibilities for each standing architecture team :for each ar chitecture
team, the responsibilities should be identiﬁed
This step applies partitioning logic to the Enterprise Ar chitectur ei no rder to ﬁrstly identify
the scope of each team and secondly to partition the ar chitectur eunder the remit of a
single team. Once complete, this step should have partitioned the entir escope of the
enterprise and should have assigned responsibility for each partitioned ar chitectur et oa
single team. Partitioning should create a deﬁnition of each architectur ethat includes:
—S ubject matter areas being covered
—L evel of detail at which the team will work
—T ime periods to be covered
—S takeholders
■Determine the relationships between architectures :once a set of partitioned ar chitectures
has been created, the relationships between architectures should be developed
This step allows governance r elationships to be formalized and also shows wher eartifacts
from one ar chitectur eare expected to be re-used within other ar chitectur es. Areas of
consideration include:
—W hered od ifferent architectures overlap/dovetail/drill-down?
Part V:Enterprise Continuum and Tools 387
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Applying Classiﬁcation to Create Partitioned Ar chitectures Ar chitecturePartitioning
—W hat ar ethe compliance requirements between architectures?
Once the Preliminary Phase is complete, the teams conducting the ar chitectur eshould be
understood. Each team should have a deﬁned scope and the relationships between teams and
architectur eshould be understood. Allocation of teams to ar chitectur escope is illustrated in
Figur e36-1.
Subject±atterLevel o
² Detail
Segment SegmentEnterpriseTime Perio³
Capability Capability CapabilityTeamTeamTeamCorporate E´ Capaµilit¶·ine of ¸usiness E ´ ¹unction
·ine of ¸usiness E ´ ¹unction
ºeg»ent E´ Capaµilit¶
Pro¼ect Tea»Pro ¼ect Tea »Port½olio TeamPro¼ect Tea»
Pro ¼ect Tea »Pro ¼ect Tea »Teams Con¾ucting Architecture
© The Open Group
Figure 36-1 Allocation of Teams to Architectur eScope
36.3 Integration
Creation of partitioned ar chitectur es runs the risk of producing a fragmented and disjointed
collection of ar chitectur es that cannot be integrated to form an overall big pictur e(see Part II,
Section 4.6 ).
For large complex enterprises, federated ar chitectur es — independently developed, maintained,
and managed ar chitectur es that ar esubsequently integrated within an integration framework —
aretypical. Federated ar chitectur es typically ar eused in governments and conglomerates, wher e
the separate organizational units need separate ar chitectur es. Such a framework speciﬁes the
principles for inter operability ,migration, and conformance. This allows speciﬁc business units to
have ar chitectur es developed and governed as stand-alone ar chitectur eprojects. Mor edetails
and guidance on specifying the inter operability r equir ements for dif ferent solutions can be
found in Part III, Chapter 25 .
In order to mitigate against this risk, standards for content integration should be deﬁned and
Architectur eGovernance should addr ess content integration as a condition of ar chitectural
compliance. Content frameworks, such as the TOGAF content framework (r efer to Part IV:
Architectur eContent Framework) can be used to specify standar dbuilding blocks and artifacts
that ar ethe subject of content integration standards.
388 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitecturePartitioning Inte gration
For example, a standar dcatalog of business processes can be agr eed for an enterprise.
Subsequent ar chitectur es can then ease integration by using the same process list and cr oss-
referencing other aspects of the architectur et ot hose standar dprocesses.
Integration can be addressed from a number of dimensions:
■Integration across the architectural domains provides a cr oss-domain view of the state of a
segment of the enterprise for a point in time
■Integration across the or ganizational scope of the business provides a cross-segment view
of the enterprise
■The Ar chitectur eVision provides an integrated summary of Ar chitectur eDeﬁnitions,
which provide an integrated summary of Transition Architectures
Figur e36-2shows how architectural content can be aggregated using a variety of techniques.
Transition ¿rchitectures
Transition ¿rchitectures
Transition ¿rchitectures
Transition ¿rchitectures
Transition ¿rchitectures
Transition ¿rchitectures
Transition ¿rchitectures
Transition ¿rchitectures
ÀegÁent Âusiness
ÀegÁent 
Data
ÀegÁent Ãpplications
ÀegÁent 
TechnologÄÀegÁent Âusiness
ÀegÁent 
Data
ÀegÁent Ãpplications
ÀegÁent 
TechnologÄÀegÁent Âusiness
ÀegÁent 
Data
ÀegÁent Ãpplications
ÀegÁent 
TechnologÄÀegÁent Âusiness
ÀegÁent 
Data
ÀegÁent Ãpplications
ÀegÁent 
TechnologÄEnterprise ÂusinessEnterprise 
DataEnterprise ÃpplicationsEnterprise 
TechnologÄSegment  Å Æision
Segment Å Æision
Segment Å Æision
Segment Å ÆisionEnterprise ÆisionArchitecture
Domains
Depth 
o Ç DetailOrganizational 
Scope© The Open Group
Figure 36-2 Architectur eContent Aggregation
Part V:Enterprise Continuum and Tools 389
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitecturePartitioning
390 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 37
Architectur eRepository
37.1 Overview
Operating a matur eArchitectur eCapability within a large enterprise creates a huge volume of
architectural output. Effective management and leverage of these ar chitectural work pr oducts
requireaf ormal taxonomy for dif ferent types of architectural asset alongside dedicated
processes and tools for architectural content storage.
This section provides a str uctural framework for an Ar chitectur eRepository that allows an
enterprise to distinguish between dif ferent types of ar chitectural assets that exist at dif ferent
levels of abstraction in the or ganization. This Architectur eRepository is one part of the wider
Enterprise Repository ,which provides the capability to link ar chitectural assets to components
of the Detailed Design, Deployment, and Service Management Repositories.
At a high level, the following classes of architectural information ar eexpected to be held within
an Architectur eRepository:
■The Architecture Metamodel describes the or ganizationally tailored application of an
architectur eframework, including a method for ar chitectur ed evelopment and a
metamodel for architectur econtent
■The Architecture Capability deﬁnes the parameters, str uctur es, and processes that support
governance of the Architectur eRepository
■The Architecture Landscape presents an architectural r epresentation of assets in use, or
planned, by the enterprise at particular points in time
■The Standards Information Base captur es the standar ds with which new ar chitectures
must comply ,which may include industry standar ds, selected products and services fr om
suppliers, or shared services already deployed within the organization
■The Reference Library provides guidelines, templates, patterns, and other forms of
reference material that can be leveraged in or der to accelerate the creation of new
architectures for the enterprise
■The Governance Log provides a recor do fg overnance activity across the enterprise
■The Architecture Requirements Repository provides a view of all authorized ar chitecture
requirements which have been agreed with the Architectur eBoard
■The Solutions Landscape presents an ar chitectural r epresentation of the Solution Building
Blocks (SBBs) supporting the Ar chitectur eLandscape which have been planned or
deployed by the enterprise
The relationships between these areas of the Architectur eRepository ar eshown in Figur e37-1.
Part V:Enterprise Continuum and Tools 391
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
OverviewA rc hitectureRepository
Architecture Repository
Artifacts in the
landscape are
structured according
to the frameworkBest practice
creates
reference
architecture
Adopted
by the
enterpriseReference
models
adopted by
the enterprise
Standards
are complied
with
Best
practice
creates
standards
The landscape
is governed
Compliance is governedStandards
adopted by
the enterprise
Visibility and
escalation
Architecture
Board steers
and manages
the capabilityExternal
Reference
Models
External
Standards
Architecture
BoardArchitecture
Landscape
Standards have
reference
implementations
Architecture Capability
Skills
RepositoryOrganization
StructureArchitecture
CharterGovernance Log
Capability
AssessmentsDecision Log
CalendarCompliance
Assessments
Project
PortfolioPerformance
MeasurementArchitecture Metamodel
Architecture Method Content Metamodel
Reference
Library
Organization
Reference
Materials
Standards
Information Base
Business Standards
Application StandardsData Standards
Technology StandardsStrategic
Architectures
Segment
Architectures
Capability
ArchitecturesEnterprise Repository
Business
outcomes
delivered
Architecture
Requirements
Repository
Strategic
Requirements
Segment
Requirements
Capability
RequirementsDrivers
for the
enterpriseEnables the
enterpriseSolutions
Landscape
Solution
Building
Blocks© The Open Group
Figure 37-1 Overview of Architectur eRepository
The following sections describe the structur eand content of the repository areas.
37.2 Architecture Landscape
The Ar chitectur eLandscape holds ar chitectural views of the state of the enterprise at particular
points in time. Due to the sheer volume and the diverse stakeholder needs throughout an entir e
enterprise, the Architectur eLandscape is divided into three levels of granularity:
1.Strategic Architectures (see Part I,Section 3.74 )show a long-term summary view of the
entir eenterprise. Strategic Ar chitectur es provide an organizing framework for
operational and change activity and allow for direction setting at an executive level.
2.Segment Architectures (see Part I,Section 3.64 )provide mor edetailed operating models
for areas within an enterprise. Segment Ar chitectur es can be used at the pr ogram or
portfolio level to organize and operationally align mor edetailed change activity.
3.Capability Architectures (see Part I,Section 3.31 )show in a mor edetailed fashion how
the enterprise can support a particular unit of capability .Capability Ar chitectur es ar e
used to provide an overview of current capability ,target capability ,and capability
increments and allow for individual work packages and pr ojects to be grouped within
managed portfolios and programs.
392 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureRepository Ar chitectureLandscape
37.3 Reference Library
37.3.1 Overview
The Reference Library provides a repository to hold r eference materials that should be used to
develop ar chitectur es. Reference materials held may be obtained from a variety of sour ces,
including:
■Standards bodies
■Product and service vendors
■Industry communities or forums
■Standar dtemplates
■Enterprise best practice
The Reference Library should contain:
■Reference Architectures
■Reference Models
■Viewpoint Library
■Templates
Note: The terms reference ar chitecture and reference model arenot used car efully in most literatur e.
Refer ence ar chitectur eand r eference model have the same relationship as ar chitectur eand
model. Either can exist as either generic or an organization-speciﬁc state. T ypically ,ag eneric
reference ar chitectur eprovides the ar chitectur eteam with an outline of their or ganization-
speciﬁc r eference ar chitectur ethat will be customized for a speciﬁc organization. For example, a
generic r eference ar chitectur emay identify that ther ei sa need for data models. An example of a
reference ar chitectur ei st he IT4IT Reference Ar chitectur ew hich also deﬁnes a common
information model for IT management. Another example is the TM Forum eTOM and SID as
an organization-speciﬁc reference architecture.
In order to segregate dif ferent classes of ar chitectur ereference materials, the Reference Library
can use the Architectur eContinuum as a method for classiﬁcation.
© The Open Group
Figure 37-2 Architectur eContinuum
The Ar chitectur eContinuum, as shown in Figur e37-2,can be viewed as a Refer ence Library
classiﬁcation scheme. As such it illustrates how r eference ar chitectur es can be organized across a
range — from Foundation Ar chitectur es, and Industry-Speciﬁc Ar chitectur es, to an
Organization-Speciﬁc Architecture.
The enterprise needs and business r equir ements ar eaddressed in decreasing abstraction fr om
Part V:Enterprise Continuum and Tools 393
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Reference Libr ary Ar chitectureRepository
left to right. The architect will typically ﬁnd mor ere-usable architectural elements towar dthe
left of the range. When elements ar enot found, the r equir ements for the missing elements ar e
passed to the left of the range for incorporation.
Through this exercise it is important to keep in mind the concepts of levels and partitions. At
differ ent levels of granularity ther emay exist r eference materials appropriate to the level, and
partitions within the Ar chitectur eLandscape can be expected to use dif ferent r eference material
(see Chapter 36 and Part III, Chapter 19 ).
37.4 Standards Information Base
37.4.1 Overview
The Standards Information Base provides a repository ar ea to hold a set of speciﬁcations, to
which ar chitectur es must conform. Establishment of a Standar ds Information Base provides an
unambiguous basis for Architectur eGovernance because:
■The standards ar eeasily accessible to projects and ther eforethe obligations of the pr oject
can be understood and planned for
■Standar ds ar estated in a clear and unambiguous manner ,sothat compliance can be
objectively assessed
37.4.2 T ypes of Standard
Standards typically fall into three classes:
■Legal and Regulatory Obligations :these standards ar emandated by law and ther eforean
enterprise must comply or face serious consequences
■Industry Standards :these standar ds ar eestablished by industry bodies, such as The Open
Group, and ar ethen selected by the enterprise for adoption
Industry Standards offer potential for inter operation and sharing across enterprises, but
also fall outside of the control of the enterprise and therefor emust be actively monitored.
■Organizational Standards :these standards ar eset within the organization and ar ebased
on business aspiration (e.g., selection of standar dapplications to support portfolio
consolidation)
Organizational Standards r equir eprocesses to allow for exemptions and standar ds
evolution.
37.4.3 Standards Lifecycle
Standar ds do not generally exist for all time. New standards ar eidentiﬁed and managed
through a lifecycle process.
394 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureRepository Standar ds Information Base
Typically ,standards pass through the following stages:
■Proposed Standard :ap otential standar dhas been identiﬁed for the organization, but has
not yet been evaluated for adoption
■Provisional Standard (also known as a Trial Standard ): a Provisional Standar dhas been
identiﬁed as a potential standar dfor the or ganization, but has not been tried and tested to
alevel wher eits value is fully understood
Projects wishing to adopt Provisional Standards may do so, but under speciﬁc pilot
conditions, so that the viability of the standar dcan be examined in mor edetail.
■Standard (also known as an Active Standard ): a Standar ddeﬁnes a mainstream solution
that should generally be used as the approach of choice
■Phasing-Out Standard (also known as a Deprecated Standard ): a Phasing-Out Standar dis
approaching the end of its useful lifecycle
Projects that ar ere-using existing components can generally continue to make use of
Phasing-Out Standards. Deployment of new instances of the Phasing-Out Standar dis
generally discouraged.
■Retired Standard (also known as an Obsolete Standard ): a Retired Standar di sn ol onger
accepted as valid within the landscape
In most cases, remedial action should be taken to remove the Retired Standar dfromthe
landscape. Change activity on a Retired Standar dshould only be accepted as a part of an
overall decommissioning plan.
All standards should be periodically reviewed to ensur ethat they sit within the right stage of the
standar ds lifecycle. As a part of standar ds lifecycle management, the impact of changing the
lifecycle status should be addressed to understand the landscape impact of a standar ds change
and plan for appropriate action to address it.
37.4.4 Standards Classiﬁcation within the Standards Information Base
Standar ds within the Standards Information Base ar ecategorized according to the building
blocks within the TOGAF content metamodel. Each metamodel entity can potentially have
standards associated with it (e.g., Business Service, Technology Component).
Standar ds may relate to "appr oved" building blocks (e.g., a list of standar dtechnology
components) or may specify appr opriate use of a building block (e.g., scenarios wher e
messaging infrastructur ei sa ppropriate, application communication standards ar edeﬁned).
At the top level, standards ar eclassiﬁed in line with the T OGAF ar chitectur edomains, including
the following areas:
■Business Standards :
—S tandar dshared business functions
—S tandar drole and actor deﬁnitions
—S ecurity and governance standards for business activity
■Data Standards :
—S tandar dcoding and values for data
Part V:Enterprise Continuum and Tools 395
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Standards Information Base ArchitectureRepository
—S tandar dstructures and formats for data
—S tandards for origin and ownership of data
—R estrictions on replication and access
■Applications Standards :
—S tandard/shared applications supporting speciﬁc business functions
—S tandards for application communication and interoperation
—S tandards for access, presentation, and style
■Technology Standards ;
—S tandar dhardwar eproducts
—S tandar dsoftwar eproducts
—S tandards for softwar edevelopment
37.5 Governance Log
37.5.1 Overview
The Governance Log provides a repository area to hold shar ed information relating to the
ongoing governance of pr ojects. Maintaining a shared repository of governance information is
important, because:
■Decisions made during projects (such as standards deviations or the rationale for a
particular architectural approach) ar eimportant to retain and access on an ongoing basis
For example, if a system is to be r eplaced, having sight of the key architectural decisions
that shaped the initial implementation is highly valuable, as it will highlight constraints
that may otherwise be obscured.
■Many stakeholders ar einterested in the outcome of project governance (e.g., other pr ojects,
customers of the project, the Architectur eBoard, etc.)
37.5.2 Contents of the Governance Log
The Governance Log should contain the following items:
■Decision Log :alog of all ar chitecturally signiﬁcant decisions that have been made in the
organization
This would typically include:
—P roduct selections
—Justiﬁcation for major architectural features of projects
—S tandards deviations
—S tandards lifecycle changes
—C hange Request evaluations and approvals
—R e-use assessments
396 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureRepository Go vernance Log
■Compliance Assessments :a tk ey checkpoint milestones in the pr ogress of a pr oject, a
formal architectur ereview will be carried out
This review will measur ethe compliance of the pr oject to the deﬁned ar chitecture
standards. For each project, this log should include:
—P roject overview
—P rogress overview (timeline, status, issues, risks, dependencies, etc.)
—C ompleted architectur echecklists
—S tandards compliance assessment
—R ecommended actions
■Capability Assessments :depending on their objectives, some pr ojects will carry out
assessments of business, IT ,o rA rchitectur eCapability
These assessments should be periodically carried out and tracked to ensur ethat
appropriate progress is being made. This log should include:
—T emplates and reference models for executing Capability Assessments
—B usiness Capability Assessments
—ITcapability ,maturity ,and impact assessments
—A rchitectur ematurity assessments
■Calendar :the Calendar should show a schedule of in-ﬂight projects and formal r eview
sessions to be held against these projects
■Project Portfolio :the Project Portfolio should hold summary information about all in-
ﬂight projects that fall under Architectur eGovernance, including:
—T he name and description of the project
—A rchitectural scope of the project
—A rchitectural roles and responsibilities associated with the project
■Performance Measurement :based on a charter for the ar chitectur efunction, a number of
performance criteria will typically be deﬁned
The Performance Measurement log should captur emetrics relating to project governance
and any other performance metrics relating to the ar chitectur echarter so that performance
can be measured and evaluated on an ongoing basis.
37.6 The Architecture Requirements Repository
37.6.1 Overview
The Ar chitectur eR equir ements Repository is used by all phases of the Ar chitecture
Development Method (ADM) to r ecordand manage all information relevant to the ar chitecture
requirements. The requirements addr ess the many types of ar chitectur erequir ements; i.e.,
strategic, segment, and capability r equir ements which ar ethe major drivers for the Enterprise
Architecture.
Requir ements can be gathered at every stage of the ar chitectur edevelopment lifecycle and need
to be approved through the various phases and governance processes.
The Requirements Management phase is r esponsible for the management of the contents of the
Part V:Enterprise Continuum and Tools 397
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
The ArchitectureRequirements Repository Ar chitectureRepository
Architectur eRequir ements Repository and ensuring the integrity of all r equir ements and their
availability for access by all phases.
37.6.2 Contents of the Architecture Requirements Repository
The Ar chitectur eRequir ements Repository holds ar chitectural r equir ements of the r equir ed state
of the enterprise at particular points in time. Due to the sheer volume and the diverse
stakeholder needs throughout the Enterprise Ar chitectur elifecycle, the Ar chitecture
Requirements ar edivided into three levels of granularity:
1.Strategic Architecture Requirements show a long-term summary view of the
requirements for the entir eenterprise.
Strategic Ar chitectur eRequir ements identify operational and change r equir ements for
direction setting at an executive level.
2.Segment Architecture Requirements provide mor ed etailed operating model
requirements for areas within an enterprise.
Segment Ar chitectur eRequir ements may identify r equir ements at the pr ogram or
portfolio level to identify and align mor edetailed change activity.
3.Capability Architecture Requirements identify the detailed r equir ements for a particular
unit of capability.
Capability Ar chitectur eR equir ements identify r equir ements for individual work
packages and projects to be grouped within managed portfolios and programs.
The business outcomes for ar chitectur erequir ements will be reﬂected in the Solutions
Landscape over time. When this occurs, the ar chitectur erequir ements ar emet and archived for
audit purposes.
37.7 Solutions Landscape
The Solutions Landscape holds the Solution Building Blocks (SBBs) which support the
Architectur eBuilding Blocks (ABBs) speciﬁed, developed, and deployed. The building blocks
may be products or services which may be categorized according to the Enterprise Continuum
categorization and/or the ABB speciﬁcations as Strategic, Segment, or Capability SBBs.
SBBs may also include tools, systems, services, and information which describe the actual
solutions that may be selected and their operation. For example, vendor -speciﬁc r eference
models or vendor -speciﬁc levels 4 and 5 of the IT4IT Reference Ar chitectur ewould be deﬁned
here.
However ,the Solutions Landscape will not include the information and data content pr oduced
by the solutions selected; that is the responsibility of the solutions themselves.
398 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureRepository The Enterprise Repository
37.8 The Enterprise Repository
While the Ar chitectur eRepository holds information concerning the Enterprise Ar chitectur eand
associated speciﬁcations and artifacts, ther eare a c onsiderable number of enterprise r epositories
that support the architectur eboth inside and outside of the enterprise.
These can include development repositories, speciﬁc operating envir onments, instructions, and
conﬁguration management repositories.
37.9 External Repositories
37.9.1 External Reference Models
Ther eare m any industry r eference models available which may assist in understanding the r ole
of and developing the Reference Architectures.
37.9.2 External Standards
These relate to industry ,best practice, or formal deﬁned standards used by leading
organizations. Examples include ISO, IEEE, and Government standards.
37.9.3 Architecture Board Approvals
Decisions made by the Ar chitectur eBoardwhich affect the Enterprise Ar chitectur eare often
recorded in the minutes of meetings. These minutes ar eoften held in documentation ar chives
which ar eexcluded from the Architectur eRepository for legal or regulatory reasons.
Part V:Enterprise Continuum and Tools 399
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureRepository
400 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 38
Tools for Architectur eDevelopment
38.1 Overview
As an Enterprise Ar chitectur eframework, the T OGAF framework provides a basis for
developing ar chitectur es in a uniform and consistent manner .Its purpose in this respect is to
ensur ethat the various Ar chitectur eDescriptions developed within an enterprise, per haps by
differ ent architects or ar chitectur eteams, support the comparison and integration of
architectur es within and across ar chitectur edomains (business, data, application, technology),
and relating to different business area scopes within the enterprise.
To s upport this goal, the TOGAF standar ddeﬁnes numerous deliverables in the form of
architectur es, represented as ar chitectur emodels, ar chitectur eviews of those models, and other
artifacts. Over time, these artifacts become a r esour ce that needs to be managed and contr olled,
particularly with a view to re-use. This concept is r eferr ed to in the TOGAF standar da st he
"Enterprise Continuum".
Architectur emodels and views ar ediscussed in detail separately in Part IV ,Chapter 31 .This
section discusses considerations in choosing automated tools in or der to generate such
architectur emodels and views, and to maintain them over time.
38.2 Issues in Tool Standardization
In the current state of the tools market, many enterprises developing Enterprise Ar chitectures
struggle with the issue of standar dizing on tools, whether they seek a single "one size ﬁts all"
tool or a multi-tool suite for modeling ar chitectur es and generating the dif ferent ar chitecture
views required.
Ther eare ostensible advantages associated with selecting a single tool. Or ganizations following
such a policy can hope to r ealize beneﬁts such as reduced training, shared licenses, quantity
discounts, maintenance, and easier data interchange. However ,thereare a lso reasons for
refusing to identify a single mandated tool, including r easons of principle (endorsing a single
architectur etool would not encourage competitive commer cial innovation or the development
of advanced tool capability); and the fact that a single tool would not accommodate a variety of
architectur edevelopment "maturity levels" and speciﬁc needs across an enterprise.
Successful Enterprise Ar chitectur eteams ar eoften those that harmonize their ar chitectur etools
with their ar chitectur ematurity level, team/or ganizational capabilities, and objectives or focus.
If dif ferent organizations within an enterprise ar eatdifferent ar chitectur ematurity levels and
have dif ferent objectives or focus (e.g., Enterprise versus Business versus Technology
Architecture), it becomes very difﬁcult for one tool to satisfy all organizations’ needs.
Part V:Enterprise Continuum and Tools 401
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Tools for Ar chitectureDevelopment
402 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
The TOGAF Standard, Version 9.2
Part VI:
Architecture Capability Framework
The Open Group
Part VI: Architecture Capability Frame work 403
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
404 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 39
Introduction to Part VI
This chapter provides an introduction to and an overview of the contents of Part VI: Ar chitecture
Capability Framework.
39.1 Overview
In or der to successfully operate an ar chitectur efunction within an enterprise, it is necessary to
put in place appropriate organization str uctur es, processes, r oles, responsibilities, and skills to
realize the Architectur eCapability.
Part VI: Architectur eCapability Framework provides a set of r eference materials for how to
establish such an ar chitectur efunction. Readers should note that although this part contains a
number of guidelines to support key activities, in its current form, the Ar chitectur eCapability
Framework is not intended to be a compr ehensive template for operating an Enterprise
Architectur eCapability.
An overall structur efor the Architectur eCapability Framework is shown in Figur e39-1.
Part VI: Architecture Capability Frame work 405
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
OverviewI ntroduction to Part VI
Governance BodiesGovernance BodiesBusiness Capability for Architecture
( )Operating at a level of maturity
DirectSetting priority
and focusMeasuring
success
Skilled Resource Pool
RequiresRequires
AssignedPossess PossessImproves ImprovesProfessional Development
Skills Knowledge
Architecture
ProfessionalsRoles and
Responsibilities
(
)both generic and
specific to a
particular projectParticipate in
Participate in
Populating
the RepositoryProject/Portfolio
Governance
Projects/PortfoliosProjects/
portfolios
governed
against their
contracts
Re-using building
blocks and complying
with standardsContractSettingpriorityand focus
DeliveringalignedsolutionsBusiness
Operations
Architecture RepositoryGovernance Bodies
Enterprise Continuum ( ) used to classify inputs to and outputs from the Repository
© The Open Group© The Open Group
Figure 39-1 Matur eArchitectur eCapability
39.2 Structure of Part VI
Part VI: Architectur eCapability Framework is structured as follows:
■Introduction (this chapter)
■Establishing an Architectur eCapability (see Chapter 40 )
■Architectur eBoard(seeChapter 41 )
■Architectur eCompliance (see Chapter 42 )
■Architectur eContracts (see Chapter 43 )
■Architectur eGovernance (see Chapter 44 )
■Architectur eMaturity Models (see Chapter 45 )
■Architectur eSkills Framework (see Chapter 46 )
406 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 40
Establishing an Architectur eCapability
This chapter provides guidelines on how to use the ADM to establish an Architectur eCapability.
40.1 Overview
As with any business capability ,the establishment of an Enterprise Ar chitectur eCapability can
be supported by the TOGAF Ar chitectur eDevelopment Method (ADM). Successful use of the
ADM will provide a customer -focused, value-adding, and sustainable ar chitectur epractice that
enables the business, helps maximize the value of investments, and pr o-actively identiﬁes
opportunities to gain business beneﬁts and manage risk.
Establishing a sustainable ar chitectur epractice within an organization can be achieved by
adhering to the same approach that is used to establish any other capability — such as a
Business Process Management (BPM) capability — within an or ganization. The ADM is an ideal
method to be used to architect and govern the implementation of such a capability .Applying
the ADM with the speciﬁc Ar chitectur eVision to establish an ar chitectur epractice within the
organization would achieve this objective.
This shouldn’t be seen as a phase of an ar chitectur eproject, or a one-of fproject, but rather as an
ongoing practice that provides the context, environment, and r esour ces to govern and enable
architectur edelivery to the organization. As an ar chitectur eproject is executed within this
envir onment it might r equest a change to the ar chitectur epractice that would trigger another
cycle of the ADM to extend the architectur epractice.
Implementing any capability within an organization would r equir ethe design of the four
domain ar chitectur es: Business, Data, Application, and T echnology .Establishing the ar chitecture
practice within an organization would therefor erequir ethe design of:
■The Business Architecture of the ar chitectur epractice that will highlight the Ar chitecture
Governance, ar chitectur eprocesses, ar chitectur eorganizational str uctur e, ar chitecture
information requirements, architectur eproducts, etc.
■The Data Architecture that would deﬁne the str uctur eo ft he organization’s Enterprise
Continuum and Architectur eRepository
■The Application Architecture specifying the functionality and/or applications services
required to enable the architectur epractice
■The Technology Architecture that depicts the ar chitectur epractice’s infrastr ucture
requirements and deployment in support of the ar chitectur eapplications and Enterprise
Continuum
The steps in establishing an ar chitectur epractice ar eexplained below ,against the context of the
ADM phases. The reader should ther eforerefer to the r elevant ADM phase in Part II:
Architectur eDevelopment Method (ADM) to understand the complete scope of each step. In
this section, key aspects will be highlighted for each ADM phase that should be considered and
Part VI: Architecture Capability Frame work 407
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
OverviewE stablishing an Ar chitectureCapability
arespeciﬁc to establishing an ar chitectur epractice. The intent is ther eforenot to repeat each
ADM phase description, but to guide the r eader to apply each ADM phase within the context of
establishing an architectur epractice.
40.2 Phase A: Architecture Vision
The purpose of this phase within the context of establishing an ar chitectur epractice is to deﬁne
or review the vision, stakeholders, and principles of the ar chitectur epractice. The focus in this
phase would be on the ar chitectur epractice as a whole and not on a particular ar chitecture
project.
The following should be considered in terms of understanding the steps in the context of
establishing an architectur epractice:
■Establish the Project :this step should focus on deﬁning the stakeholders in the
architectur epractice
The stakeholders would include the roles and organization units participating in the
architectur epractice, as well as those that will beneﬁt from the deliverables generated by
the ar chitectur epractice that can ther eforeb ed eﬁned as customers of the ar chitecture
practice.
■Identify Stakeholders and Concerns, Business Requirements, and Architecture V ision :
this step generates the ﬁrst, very high-level deﬁnitions of the baseline and tar get
envir onments, fr om a business information systems and technology perspective for the
architectur epractice
■Identify Business Goals and Business Drivers :this would be mor erelevant for the
architectur epractice than for a particular ar chitectur eproject; an understanding of the
business goals and drivers is essential to align the architectur epractice to the business
■Deﬁne Scope :deﬁning the scope of the ar chitectur epractice would be a high-level pr oject
plan of what should be addressed in terms of architectur efor the next period
■Deﬁne Constraints :the focus in this step should be on the enterprise-wide constraints that
would impact on all architectur eprojects
■Review Architecture Principles, including Business Principles :the intent in this step
should be to deﬁne the principles that would govern and guide the r unning of the
architectur epractice
Wher eA rchitectur eP rinciples usually govern the ar chitectur ed eliverables, the
architectur epractice principles would address the ar chitectur epractice or ganization,
content, tools, and process.
■Develop Statement of Architecture Work and Secure Approval :this step should generate
the architectur epractice vision and scope
Another step that can be consider ed during this phase is to conduct an ar chitectur ematurity
assessment. Refer to Chapter 45 for guidance on this topic.
408 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Establishing an Ar chitectureCapability Phase B: Business Ar chitecture
40.3 Phase B: Business Architecture
Key ar eas of focus during this phase of establishing or reﬁning the Business Ar chitectur eo ft he
architectur epractice are:
■AnArchitecture Ontology deﬁning the architectural terms and deﬁnitions that will be
used in the organization in order to establish a common understanding of these terms
■The Architecture Process wher ethe ADM would form the base of the process and need to
be customized to meet the organization’s requirements and architectur epractice vision
Refer to Section 4.3 for guidance on developing this process. The r equir ed Ar chitecture
Governance processes should be included in the overall architectur eprocess.
■The Architecture V iewpoints and V iews that list all the viewpoints and views that should
be addressed by the architectur epractice
The identiﬁed ar chitectur epractice stakeholders would guide the development of this
deﬁnition. One of the viewpoints to be included is the Ar chitectur eGovernance viewpoint;
refer to Part IV , Chapter 31 for guidance on this output.
■The Architecture Framework describing the various ar chitectur edeliverables that will be
generated by the ar chitectur epractice, the inter -relationships and dependencies between
the ar chitectur edeliverables, as well as the rules and guidelines governing the design of
these deliverables
The deﬁned ar chitectur eviewpoints and views should be used to guide the deﬁnition of
the ar chitectur eframework. Part II: Ar chitectur eD evelopment Method (ADM) and
Chapter 32 areuseful references that will assist in describing the architectur eframework.
■The Architecture Accountability Matrix deﬁning the roles in the ar chitectur epractice and
allocating accountability of the roles to architectur edeliverables and processes
This matrix would include the r equir ed Ar chitectur eGovernance str uctur es and r oles.
Part II: Architectur eDevelopment Method (ADM) as well as Chapter 41 ,Chapter 44 ,and
Chapter 46 would provide guidance on this output.
■The Architecture Performance Metrics identifying and describing the metrics that will be
used to monitor the performance of the ar chitectur epractice against its stated ar chitecture
practice vision and objectives
■The Architecture Governance Framework which is a speciﬁc view of the deﬁned
architectur eprocess and Architectur eAccountability Matrix
40.4 Phase C: Data Architecture
The Data Ar chitectur eo ft he ar chitectur epractice would specify and govern the str uctur eo ft he
organization’s Enterprise Continuum and Ar chitectur eRepository .The Data Ar chitecture
should be deﬁned based on the ar chitectur eframework. The Data Ar chitectur eissometimes
referred to as the metamodel of the architectur epractice.
Part VI: Architecture Capability Frame work 409
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Phase C: Application Ar chitectureE stablishing an Ar chitectureCapability
40.5 Phase C: Application Architecture
The Application Ar chitectur eo ft he ar chitectur epractice deﬁnes the functionality r equir ed to
generate, maintain, publish, distribute, and govern the ar chitectur edeliverables as deﬁned in the
architectur eframework. A key focus should be on the modeling toolsets r equir ed for modeling,
but it should not be the only focus. Refer to Chapter 38 for guidance on selecting a toolset.
Publishing the ar chitectur edeliverables to addr ess speciﬁc views in the ar chitectur eframework
would sometimes requir especialized or customized functionality and should not be neglected.
40.6 Phase D: Technology Architecture
The Technology Ar chitectur eo ft he ar chitectur epractice should deﬁne technology infrastr ucture
supporting the architectur epractice.
40.7 Phase E: Opportunities & Solutions
Acritical factor to consider during this phase of planning the establishment of the ar chitecture
practice is the organizational change that is required and how this will be achieved.
40.8 Phase F: Migration Planning
The focus should not only be on the Information Systems Ar chitectur ecomponents in this phase,
but include the Business Ar chitectur e. The adoption of the ar chitectur eprocess and framework
will have a major impact on the overall establishment of the ar chitectur epractice in the
organization.
40.9 Phase G: Implementation Governance
The implementation of the Business Ar chitectur eo ft he ar chitectur epractice should be the focus
of this phase. Changing practices within the or ganization to adopt a mor estructur ed and
disciplined approach will be a challenge and should be addr essed by the appr opriate
organizational change techniques.
40.10 Phase H: Architecture Change Management
Changes to the ar chitectur eo ft he ar chitectur epractice should be managed by this phase. These
changes ar eusually triggered during the execution of ar chitectur eprojects. A typical change
would be the r equir ement for a new ar chitectur edeliverable. This would impact on all the
architectur edomains of the architectur epractice.
410 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Establishing an Ar chitectureCapability Requir ements Mana gement
40.11R equirements Management
Understanding and managing the r equir ements for the ar chitectur epractice is cr ucial.
Requirements should be clearly articulated and align to the architectur epractice vision.
Part VI: Architecture Capability Frame work 411
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Establishing an Ar chitectureCapability
412 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 41
Architectur eBoard
This chapter provides guidelines for establishing and operating an Enterprise Architectur eBoard.
41.1 Role
Akey element in a successful Ar chitectur eGovernance strategy (see Chapter 44 )i sac ross-
organization Ar chitectur eBoardtooversee the implementation of the strategy .This body should
be representative of all the key stakeholders in the ar chitectur e, and will typically comprise a
group of executives responsible for the review and maintenance of the overall architecture.
Architectur eBoards may have global, regional, or business line scope. Particularly in lar ger
enterprises, Ar chitectur eBoards typically comprise r epresentatives from the organization at a
minimum of two levels:
■Local (domain experts, line responsibility)
■Global (organization-wide responsibility)
In such cases, each boar dwill be established with identiﬁable and articulated:
■Responsibilities and decision-making capabilities
■Remit and authority limits
41.2 Responsibilities
The Ar chitectur eBoardi st ypically made responsible, and accountable, for achieving some or all
of the following goals:
■Providing the basis for all decision-making with regar dt ot he architectures
■Consistency between sub-architectures
■Establishing targets for re-use of components
■Flexibility of the Enterprise Architecture:
—T omeet changing business needs
—T oleverage new technologies
■Enforcement of Architectur eCompliance
■Improving the maturity level of architectur ediscipline within the organization
■Ensuring that the discipline of architecture-based development is adopted
Part VI: Architecture Capability Frame work 413
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Responsibilities Ar chitectureBoard
■Supporting a visible escalation capability for out-of-bounds decisions
Further responsibilities from an operational perspective should include:
■All aspects of monitoring and control of the Architectur eContract
■Meeting on a regular basis
■Ensuring the ef fective and consistent management and implementation of the ar chitectures
■Resolving ambiguities, issues, or conﬂicts that have been escalated
■Providing advice, guidance, and information
■Ensuring compliance with the architectures, and granting dispensations that ar ei nk eeping
with the technology strategy and objectives
■Considering policy (schedule, Service-Level Agreements (SLAs), etc.) changes wher e
similar dispensations ar erequested and granted; e.g., new form of service requirement
■Ensuring that all information r elevant to the implementation of the Ar chitectur eContract
is published under controlled conditions and made available to authorized parties
■Validation of reported service levels, cost savings, etc.
From a governance perspective, the Architectur eBoardi sa lso responsible for:
■The production of usable governance material and activities
■Providing a mechanism for the formal acceptance and approval of ar chitectur ethrough
consensus and authorized publication
■Providing a fundamental contr ol mechanism for ensuring the effective implementation of
the architecture
■Establishing and maintaining the link between the implementation of the ar chitectur e, the
architectural strategy and objectives embodied in the Enterprise Ar chitectur e, and the
strategic objectives of the business
■Identifying diver gence from the ar chitectur eand planning activities for r ealignment
through dispensations or policy updates
41.3 Setting Up the Architecture Board
41.3.1 T riggers
One or mor eo ft he following occurr ences typically triggers the establishment of an Ar chitecture
Board:
■New CIO
■Merger or acquisition
■Consideration of a move to newer forms of computing
■Recognition that IT is poorly aligned to business
■Desir et oa chieve competitive advantage via technology
■Creation of an Enterprise Architectur eprogram
414 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureBoardS etting Up the Ar chitectureBoard
■Signiﬁcant business change or rapid growth
■Requirement for complex, cross-functional solutions
In many companies, the executive sponsor of the initial ar chitectur eeffort is the CIO (or other
senior executive). However ,togain broad corporate support, a sponsoring body has mor e
inﬂuence. This sponsoring body is her ecalled an Ar chitectur eBoard, but the title is not
important. Whatever the name, it is the executive-level gr oup responsible for the review and
maintenance of the strategic architectur eand all of its sub-architectures.
The Ar chitectur eBoardi st he sponsor of the ar chitectur ew ithin the enterprise, but the
Architectur eBoarditself needs an executive sponsor from the highest level of the corporation.
This commitment must span the planning process and continue into the maintenance phase of
the ar chitectur eproject. In many companies that fail in an ar chitectur eplanning effort, ther ei sa
notable lack of executive participation and encouragement for the project.
Afrequently overlooked sour ce of Ar chitectur eBoardm embers is the company’s Boar dof
Directors. These individuals invariably have diverse knowledge about the business and its
competition. Because they have a signiﬁcant impact on the business vision and objectives, they
may be successful in validating the alignment of IT strategies to business objectives.
41.3.2 Size of the Board
The recommended size for an Ar chitectur eBoardi sf our or ﬁve (and no mor ethan ten)
permanent members. In or der to keep the Ar chitectur eBoardt oar easonable size, while
ensuring enterprise-wide r epresentation on it over time, membership of the Ar chitectur eBoard
may be rotated, giving decision-making privileges and r esponsibilities to various senior
managers. This may be r equir ed in any case, due to some Ar chitectur eBoardmembers ﬁnding
that time constraints prevent long-term active participation.
However ,some continuity must exist on the Ar chitectur eBoard, to prevent the corporate
architectur efromvarying fr om one set of ideas to another .One technique for ensuring r otation
with continuity is to have set terms for the members, and to have the terms expir ea td ifferent
times.
In the ongoing ar chitectur eprocess following the initial ar chitectur eeffort, the Ar chitecture
Boar dm ay be r e-charter ed. The executive sponsor will normally review the work of the
Architectur eBoardand evaluate its ef fectiveness; if necessary ,the Ar chitectur eCompliance
review process is updated or changed.
41.3.3 Board Structure
The TOGAF Ar chitectur eG overnance Framework (see Section 44.2 )provides a generic
organizational framework that positions the Ar chitectur eBoardi nt he context of the br oader
governance str uctur es of the enterprise. This str uctur eidentiﬁes the major organizational gr oups
and responsibilities, as well as the r elationship between each group. This is a best practice
structur e, and may be subject to change depending on the organization’s form and existing
structures.
Consideration must be given to the size of the organization, its form, and how the IT functions
areimplemented. This will provide the basis for designing the Ar chitectur eBoardstructure
within the context of the overall governance environment. In particular ,consideration should be
given to the concept of global ownership and local implementation, and the integration of new
concepts and technologies from all areas implementing against architectures.
Part VI: Architecture Capability Frame work 415
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Setting Up the Ar chitectureBoardA rc hitectureBoard
The str uctur eo ft he Ar chitectur eBoardshould reﬂect the form of the organization. The
Architectur eGovernance str uctur erequir ed may well go beyond the generic str uctur es outlined
in the TOGAF Ar chitectur eGovernance Framework (see Section 44.2 ). The organization may
need to deﬁne a combination of the IT governance pr ocess in place and the existing
organizational structures and capabilities, which typically include the following types of body:
■Global governance board
■Local governance board
■Design authorities
■Working parties
41.4 Operation of the Architecture Board
This section describes the operation of the Ar chitectur eBoardparticularly from the governance
perspective.
41.4.1 General
Architectur eBoardmeetings should be conducted within clearly identiﬁed agendas with explicit
objectives, content coverage, and deﬁned actions. In general, boar dm eetings will be aligned
with best practice, such as given in the COBIT framework (see Section 44.1.4.1 ).
These meetings will provide key direction in:
■Supporting the production of quality governance material and activities
■Providing a mechanism for formal acceptance through consensus and authorized
publication
■Providing a fundamental contr ol mechanism for ensuring the effective implementation of
the architectures
■Establishing and maintaining the link between the implementation of the ar chitectur es and
the stated strategy and objectives of the organization (business and IT)
■Identifying divergence fr om the contract and planning activities to realign with the
contract through dispensations or policy updates
41.4.2 Preparation
Each participant will r eceive an agenda and any supporting documentation — e.g., dispensation
requests, performance management reports, etc. — and will be expected to be familiar with the
contents of each.
Wher eactions have been allocated to an individual, it is that person’s r esponsibility to report on
progress against these.
Each participant must conﬁrm their availability and attendance at the Ar chitectur eBoard
meeting.
416 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureBoardO peration of the Ar chitectureBoard
41.4.3 Agenda
This section outlines the contents of an Ar chitectur eBoardmeeting agenda. Each agenda item is
described in terms of its content only.
Minutes of Previous Meeting
Minutes contain the details of pr evious Ar chitectur eBoardm eetings as per standar d
organizational protocol.
Requests for Change
Items under this heading ar enormally change requests for amendments to ar chitectures,
principles, etc., but may also include business contr ol with r egar dt oA rchitectur eContracts; e.g.,
ensur ethat voice trafﬁc to pr emium numbers, such as weather reports, is barred and data traf ﬁc
to certain websites is controlled.
Any r equest for change is made within agreed authority levels and parameters deﬁned by the
Architectur eContract.
Dispensations
Adispensation is used as the mechanism to request a change to the existing ar chitectures,
contracts, principles, etc. outside of normal operating parameters; e.g., exclude provision of
service to a subsidiary ,request for unusual service levels for speciﬁc business reasons, deploy
non-standar dtechnology or products to support speciﬁc business initiatives.
Dispensations ar egranted for a given time period and set of identiﬁed services and operational
criteria that must be enforced during the lifespan of the dispensation. Dispensations ar enot
granted indeﬁnitely ,but ar eused as a mechanism to ensur ethat service levels and operational
levels, etc. ar emet while providing a level ﬂexibility in their implementation and timing. The
time-bound natur eo fd ispensations ensures that they ar eat rigger to the Ar chitecture
Compliance activity.
Compliance Assessments
Compliance is assessed against SLAs, Operational-Level Agr eements (OLAs), cost targets, and
required ar chitectur erefreshes. These assessments will be r eviewed and either accepted or
rejected depending on the criteria deﬁned within the Ar chitectur eGovernance Framework. The
Architectur eCompliance assessment report will include details as described.
Dispute Resolution
Disputes that have not been resolved through the Ar chitectur eCompliance and dispensation
processes ar eidentiﬁed her efor further action and ar edocumented through the Ar chitecture
Compliance assessments and dispensation documentation.
Architecture Strategy and Direction Documentation
This describes the ar chitectur estrategies, direction, and priorities and will only be formulated by
the global Architectur eBoard. It should take the form of standar darchitectur edocumentation.
Part VI: Architecture Capability Frame work 417
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Operation of the Ar chitectureBoardA rc hitectureBoard
Actions Assigned
This is a r eport on the actions assigned at previous Ar chitectur eBoardm eetings. An action
tracker is used to document and keep the status of all actions assigned during the Ar chitecture
Boar dmeetings and should consist of at least the following information:
■Reference
■Priority
■Action description
■Action owner
■Action details
■Date raised
■Due date
■Status
■Type
■Resolution date
Contract Documentation Management
This is a formal acceptance of updates and changes to ar chitectur edocumentation for onwar d
publication.
Any Other Business (AOB)
Description of issues not directly cover ed under any of the above. These may not be described
in the agenda but should be raised at the beginning of the meeting. Any supporting
documentation must be managed as per all Architectur eGovernance documentation.
Schedule of Meetings
All meeting dates should be detailed and published.
418 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 42
Architectur eCompliance
This chapter provides guidelines for ensuring project compliance to the architecture.
42.1 Introduction
Ensuring the compliance of individual projects with the Enterprise Ar chitectur ei sa ne ssential
aspect of Ar chitectur eGovernance (see Chapter 44 ). Tothis end, the IT governance function
within an enterprise will normally deﬁne two complementary processes:
■The Architecture function will be r equir ed to pr epar eas eries of Project Ar chitectur es; i.e.,
project-speciﬁc views of the Enterprise Ar chitectur ethat illustrate how the Enterprise
Architectur eimpacts on the major projects within the organization (see ADM Phases A to
F)
■The IT Governance function will deﬁne a formal Ar chitectur eCompliance review pr ocess
(see Section 42.3 )for reviewing the compliance of projects to the Enterprise Architecture
Apart fr om deﬁning formal processes, the Ar chitectur eGovernance function (see Chapter 44 )
may also stipulate that the ar chitectur efunction should extend beyond the role of ar chitecture
deﬁnition and standar ds selection, and participate also in the technology selection process, and
even in the commer cial relationships involved in external service provision and pr oduct
purchases. This may help to minimize the opportunity for misinterpretation of the Enterprise
Architecture, and maximize the value of centralized commercial negotiation.
42.2 T erminology: The Meaning of Architecture Compliance
Akey relationship between the ar chitectur eand the implementation lies in the deﬁnitions of the
terms "conformant", "compliant", etc. While terminology usage may differ between
organizations, the concepts of levels of conformance illustrated in Figur e42-1should pr ove
useful in formulating an IT compliance strategy.
Part VI: Architecture Capability Frame work 419
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Terminology: The Meaning of Ar chitectureCompliance Ar chitectureCompliance
Irrelevant:
The implementation has no features in common with the
architecture specification (so the question of conformance
does not arise).
Consistent:
The implementation has some features in common with the
architecture specification, and those common features are
implemented in accordance with the specification. However,
some features in the architecture specification are not
implemented, and the implementation has other features
that are not covered by the specification.
Compliant:
Some features in the architecture specification are not
implemented, but all features implemented are covered
by the specification, and in accordance with it.
Conformant:
All the features in the architecture specification are
implemented in accordance with the specification, but
some more features are implemented that are not
in accordance with it.
Fully Conformant:
There is full correspondence between architecture
specification and implementation. All specified features
are implemented in accordance with the specification,
and there are no features implemented that are not
covered by the specification.
Non-conformant:
Any of the above in which some features in the
architecture specification are implemented not in
accordance with the specification.Architecture
SpecificationImplementation© The Open Group
Figure 42-1 Levels of Architectur eConformance
The phrase "in accordance with" in Figur e42-1means:
■Supports the stated strategy and futur edirections
■Adheres to the stated standards (including syntax and semantic rules speciﬁed)
■Provides the stated functionality
■Adheres to the stated principles; for example:
—O pen wherever possible and appropriate
—R e-use of component building blocks wherever possible and appropriate
420 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureCompliance Ar chitectureCompliance Reviews
42.3 Architecture Compliance Reviews
An Ar chitectur eCompliance review is a scr utiny of the compliance of a speciﬁc project against
established ar chitectural criteria, spirit, and business objectives. A formal process for such
reviews normally forms the cor eo fa nE nterprise Architectur eCompliance strategy.
42.3.1 Purpose
The goals of an Architectur eCompliance review include some or all of the following:
■First and foremost, catch errors in the project ar chitectur eearly,and thereby reduce the
cost and risk of changes required later in the lifecycle
This in turn means that the overall pr oject time is shortened, and that the business gets the
bottom-line beneﬁt of the architectur edevelopment faster.
■Ensur ethe application of best practices to architectur ework
■Provide an overview of the compliance of an ar chitectur et om andated enterprise
standards
■Identify wher ethe standards themselves may requir emodiﬁcation
■Identify services that ar ecurrently application-speciﬁc but might be provided as part of
the enterprise infrastructure
■Document strategies for collaboration, r esour ce sharing, and other synergies acr oss
multiple architectur eteams
■Take advantage of advances in technology
■Communicate to management the status of technical readiness of the project
■Identify key criteria for pr ocur ement activities (e.g., for inclusion in Commer cial Of f-The-
Shelf (COTS) product RFI/RFP documents)
■Identify and communicate signiﬁcant architectural gaps to product and service providers
Apart from the generic goals r elated to quality assurance outlined above, ther eare additional,
morepolitically-oriented motivations for conducting Ar chitectur eCompliance reviews, which
may be relevant in particular cases:
■The Ar chitectur eCompliance r eview can be a good way of deciding between ar chitectural
alternatives, since the business decision-makers typically involved in the r eview can guide
decisions in terms of what is best for the business, as opposed to what is technically mor e
pleasing or elegant
■The output of the Ar chitectur eCompliance review is one of the few measurable
deliverables to the CIO to assist in decision-making
■Architectur ereviews can serve as a way for the ar chitectur eorganization to engage with
development projects that might otherwise pr oceed without involvement of the
architectur efunction
■Architectur ereviews can demonstrate rapid and positive support to the enterprise
business community:
—T he Enterprise Ar chitectur eand Ar chitectur eCompliance helps ensur ethe alignment
of IT projects with business objectives
Part VI: Architecture Capability Frame work 421
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureCompliance Revie ws Ar chitectureCompliance
—A rchitects can sometimes be r egar ded as being deep into technical infrastr uctur eand
far removed from the cor ebusiness
—S ince an Ar chitectur eCompliance review tends to look primarily at the critical risk
areas of a system, it often highlights the main risks for system owners
While compliance to ar chitectur ei sr equir ed for development and implementation, non-
compliance also provides a mechanism for highlighting:
■Areas to be addressed for realignment
■Areas for consideration for integration into the ar chitectur es as they ar euncover ed by the
compliance processes
The latter point identiﬁes the ongoing change and adaptability of the ar chitectur es to
requirements that may be driven by indiscipline, but also allows for changes to be r egister ed by
faster moving changes in the operational envir onment. T ypically ,dispensations (see Section
44.1.4 )will be used to highlight these changes and set in motion a process for r egistering,
monitoring, and assessing the suitability of any changes required.
42.3.2 T iming
Timing of compliance activities should be considered with r egar dt ot he development of the
architectures themselves.
Compliance reviews ar eheld at appr opriate project milestones or checkpoints in the pr oject’s
lifecycle. Speciﬁc checkpoints should be included as follows:
■Development of the architectur eitself (ADM compliance)
■Implementation of the architecture(s) (architectur ecompliance)
Architectur eproject timings for assessments should include:
■Project initiation
■Initial design
■Major design changes
■Ad hoc
The Ar chitectur eCompliance review is typically targeted for a point in time when business
requirements and the Enterprise Ar chitectur eare re asonably ﬁrm, and the project ar chitectur eis
taking shape, well befor eits completion.
The aim is to hold the review as soon as practical, at a stage when ther ei ss till time to corr ect
any major errors or shortcomings, with the obvious proviso that ther eneeds to have been some
signiﬁcant development of the project architectur ei no rder for ther et ob es omething to review.
Inputs to the Ar chitectur eCompliance review may come fr om other parts of the standar dproject
lifecycle, which may have an impact on timing.
422 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureCompliance Ar chitectureCompliance Reviews
42.3.3 Governance and Personnel Scenarios
In terms of the governance and conduct of the Ar chitectur eCompliance r eview ,and the
personnel involved, ther eare various possible scenarios:
■For smaller-scale projects, the review pr ocess could simply take the form of a series of
questions that the project architects or project leaders pose to themselves, using the
checklists pr ovided below ,perhaps collating the answers into some form of project r eport
to management
The need to conduct such a pr ocess is normally included in overall enterprise-wide IT
governance policies.
■Wher ethe project under review has not involved a practicing or full-time ar chitect to date
(for example, in an application-level project), the purpose of the r eview is typically to bring
to bear the architectural expertise of an Enterprise Architectur efunction
In such a case, the Enterprise Ar chitectur efunction would be or ganizing, leading, and
conducting the r eview ,with the involvement of business domain experts. In such a
scenario, the review is not a substitute for the involvement of ar chitects in a project, but it
can be a supplement or a guide to their involvement. It is pr obable that a database will be
necessary to manage the volume of data that would be pr oduced in the analysis of a lar ge
system or set of systems.
■In most cases, particularly in lar ger-scale projects, the ar chitectur efunction will have been
deeply involved in, and perhaps leading, the development project under review
(This is the typical TOGAF scenario.) In such cases, the r eview will be co-ordinated by the
lead Enterprise Architect, who will assemble a team of business and technical domain
experts for the r eview ,and compile the answers to the questions posed during the r eview
into some form of report. The questions will typically be posed during the r eview by the
business and technical domain experts. Alternatively ,the review might be led by a
representative of an Ar chitectur eBoardorsome similar body with enterprise-wide
responsibilities.
In all cases, the Ar chitectur eC ompliance review process needs the backing of senior
management, and will typically be mandated as part of corporate Ar chitectur eGovernance
policies (see Chapter 44 ). Normally ,the enterprise CIO or Enterprise Ar chitectur eBoard(see
Chapter 41 )will mandate ar chitectur ereviews for all major projects, with subsequent annual
reviews.
42.4 Architecture Compliance Review Process
42.4.1 Overview
The Architectur eCompliance review process is illustrated in Figur e42-2.
Part VI: Architecture Capability Frame work 423
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureCompliance Revie wProcess Ar chitectureCompliance
Architecture
Review
Request
(as mandated by
IT Governance/
Architecture Board
policies & procedures)
Assessment
Report/SummaryIdentify
Responsible
OrganizationIdentify
Lead
ArchitectDetermine
Scope of
Review
( )DiscoveryTailor
ChecklistsSchedule
Architecture
Review
Meeting
Architecture
Review
Co-ordinator:
Identify
responsible
business unit
dentify project
principals•
•IArchitecture
Review
Co-ordinatorArchitecture
Review
Co-ordinator:
Identify other
business units
involved
Understand
where system fits
in corporate
framework•
•Lead Architect:
Determine
appropriate
checklist questions•Architecture
Review
Co-ordinator:
Collaborate to
set up meeting•
Accept, Review,
and Sign offPresent
Review
FindingsPrepare
Architecture
Review
ReportAnalyze
Completed
ChecklistsInterview
Project
Principals
Architecture
Board,
CustomerLead Architect:
To customer
To Architecture Board•
•Lead Architect Lead Architect:
Review against
corporate standards
Identify and
resolve issues
Determine
recommendations•
•
•Lead Architect,
Project Leader,
Customers:
Informal project –
in person standards
COTS in person
or via RFP
Use checklists•
•
•–© The Open Group
Figure 42-2 Architectur eCompliance Review Process
424 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureCompliance Ar chitectureCompliance Revie wProcess
42.4.2 Roles
The main roles in the process ar etabulated below.
No. Role Responsibilities Notes
1A rchitectur eBoard To ensur ethat IT architectures are
consistent and support overall
business needs.Sponsor and monitor
architectur eactivities.
2R esponsible for the whole project. Project Leader
(or Project Board)
3 Architecture
Review
Co-ordinatorTo administer the whole
architectur edevelopment and
review process.Morelikely to be business-
oriented than technology-
oriented.
4A nI Ta rchitectur especialist. Lead Enterprise
ArchitectTo ensur ethat the architectur eis
technically coherent and future-
proof.
5A rchitect One of the Lead Enterprise
Architect’s technical assistants.
6C ustomer To ensur ethat business
requirements ar eclearly
expressed and understood.Manages that part of the
organization that will depend
on the success of the IT
described in the architecture.
7 Business Domain
ExpertTo ensur ethat the processes to
satisfy the business requirements
arejustiﬁed and understood.Knows how the business
domain operates; may also be
the customer.
8P roject Principals To ensur ethat the architects have
asufﬁciently detailed
understanding of the customer
department’s processes. They can
provide input to the business
domain expert or to the
architects.Members of the customer’s
organization who have input to
the business requirements that
the architectur ei st oa ddress.
Part VI: Architecture Capability Frame work 425
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureCompliance Revie wProcess Ar chitectureCompliance
42.4.3 Steps
The main steps in the process ar etabulated below.
No. Action Notes Who
1 Request architecture
review.As mandated by IT
governance policies and
procedures.Anyone, whether IT or
business-oriented, with an
interest in or responsibility
for the business area
affected
2 Identify responsible part
of organization and
relevant project principals.Architectur eReview
Co-ordinator
3 Identify Lead Enterprise
Architect and other
architects.Architectur eReview
Co-ordinator
4 Determine scope of
review.Identify which other business
units/departments are
involved.
Understand wher ethe
system ﬁts in the corporate
architectur eframework.Architectur eReview
Co-ordinator
5Tailor checklists. Lead Enterprise Architect To address the business
requirements.
6 Schedule Architecture
Review Meeting.Architectur eReview Co-
ordinator with collaboration
of Lead Enterprise Architect
7 Interview project
principals.To get background and
technical information:
■For internal project: in
person
■For COTS: in person or
via RFP
Use checklists.Lead Enterprise Architect
and/or Architect, Project
Leader ,and Customers
8L ead Enterprise Architect Analyze completed
checklists.Review against corporate
standards.
Identify and resolve issues.
Determine recommendations.
9M ay involve supporting staf f. Lead Enterprise Architect Prepar eArchitecture
Compliance review report.
10 Pr esent review ﬁndings. Lead Enterprise Architect■To C ustomer
■To A rchitectur eBoard
11Accept review and
sign off.Architectur eBoard
and Customer
12 Lead Enterprise Architect Send assessment
report/summary
to Architectur eReview
Co-ordinator.
426 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureCompliance Ar chitectureCompliance Revie wChecklists
42.5 Architecture Compliance Review Checklists
The following review checklists provide a wide range of typical questions that may be used in
conducting Ar chitectur eCompliance r eviews, relating to various aspects of the ar chitectur e. The
organization of the questions includes the basic disciplines of system engineering, information
management, security ,and systems management. The checklists ar ebased on material pr ovided
by a member of The Open Gr oup, and ar especiﬁc to that organization. Other or ganizations
could use the following checklists with other questions tailored to their own particular needs.
The checklists provided contain too many questions for any single r eview: they ar eintended to
be tailor ed selectively to the project concerned (see Section 42.6 ). The checklists actually used
will typically be developed/selected by subject matter experts. They ar eintended to be updated
annually by interest groups in those areas.
Some of the checklists include a brief description of the Ar chitectur ePrinciple that provokes the
question, and a brief description of what to look for in the answer .These extensions to the
checklist ar eintended to allow the intelligent re-phrasing of the questions, and to give the user
of the checklist a feel for why the question is being asked.
Occasionally the questions will be written, as in RFPs, or in working with a senior pr oject
architect. Mor etypically they ar eexpressed orally ,a sp art of an interview or working session
with the project.
The checklists provided her eare d esigned for use in individual ar chitectur eprojects, not for
business domain ar chitectur eo rf or ar chitectur eacross multiple projects. (Doing an ar chitecture
review for a lar ger spher eo fa ctivity ,across multiple business processes and system pr ojects,
would involve a similar pr ocess, but the checklist categories and their contents would be
different.)
42.5.1 Hardware and Operating System Checklist
1. What is the project’s lifecycle approach?
2. At what stage is the project in its lifecycle?
3. What key issues have been identiﬁed or analyzed that the project believes will drive
evaluations of har dwar eand operating systems for networks, servers, and end-user
devices?
4. What system capabilities will involve high-volume and/or high-frequency data transfers?
5. How does the system design impact or involve end-user devices?
6. What is the quantity and distribution (regional and global) of usage, data storage, and
processing?
7. What applications ar eafﬁnitized with your pr oject by similarities in data, application
services, etc.? T owhat degree is data afﬁnitized with your project?
8. What hardwar eand operating system choices have been made befor efunctional design of
key elements of the system?
9. If hardwar eand operating system decisions wer emade outside of the project’s control:
—W hat awareness does the project have of the rationale for those decisions?
—H ow can the project inﬂuence those decisions as system design takes shape?
Part VI: Architecture Capability Frame work 427
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureCompliance Revie wChecklists Ar chitectureCompliance
10. If some non-standards have been chosen:
—W hat ar ethe essential business and technical r equir ements for not using corporate
standards?
—Isthis supported by a business case?
—H ave the assumptions in the business case been subject to scrutiny?
11.W hat is your pr ocess for evaluating full lifecycle costs of har dwar eand operating
systems?
12. How has corporate ﬁnancial management been engaged in evaluation of lifecycle costs?
13. Have you performed a ﬁnancial analysis of the supplier?
14. Have you made commitments to any supplier?
15. Do you believe your requirements can be met by only one supplier?
42.5.2 Software Services and Middleware Checklist
1. Describe how error conditions ar edeﬁned, raised, and propagated between application
components.
2. Describe the general pattern of how methods ar edeﬁned and arranged in various
application modules.
3. Describe the general pattern for how method parameters ar edeﬁned and or ganized in
various application modules. Ar e[in], [in/out], [out] parameters always speciﬁed in the
same order? Do Boolean values returned by modules have a consistent outcome?
4. Describe the appr oach that is used to minimize the number of round-trips between client
and server calls, particularly for out-of-process calls, and when complex data str uctures
areinvolved.
5. Describe the major data structures that ar epassed between major system components.
6. Describe the major communication protocols that ar eused between major system
components.
7. Describe the marshaling techniques that ar eused between various system components.
Describe any specialized marshaling arrangements that ar eused.
8. Describe to what extent the system is designed with stateful and stateless components.
9. Describe how and when state is saved for both stateful and stateless components.
10. Describe the extent to which objects ar ecreated, used, and destr oyed versus re-used
through object pooling.
11.D escribe the extent to which the system relies on threading or critical section coding.
12. Describe the appr oach and the internal documentation that is used internally in the
system to document the methods, methods arguments, and method functionality.
13. Describe the code review process that was used to build the system.
14. Describe the unit testing that has been used to test the system components.
15. Describe the pre- and post-condition testing that is included in various system modules.
428 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureCompliance Ar chitectureCompliance Revie wChecklists
16. Describe the assertion testing that is included with the system.
17. Do components support all the interface types they need to support or ar ecertain
assumptions made about what types of components will call other components either in
terms of language bindings or other forms of marshaling?
18. Describe the extent to which big-endian or little-endian data format pr oblems need to be
handled across different platforms.
19. Describe if numbers or strings need to be handled differently across different platforms.
20. Describe whether the softwar eneeds to check for ﬂoating-point round-of ferrors.
21. Describe how time and date functions manage dates so as to avoid impr oper handling of
time and date calculation or display.
22. Describe what tools or pr ocesses have been used to test the system for memory leaks,
reachability ,o rg eneral robustness.
23. Describe the layering of the systems services software. Describe the general number of
links between major system components. Is the system composed of a lot of point-to-
point interfaces or ar emajor messaging backbones used instead?
24. Describe to what extent the system components ar eeither loosely coupled or tightly
coupled.
25. What requirements does the system need from the infrastr uctur ei nt erms of shar ed
libraries, support for communication pr otocols, load balancing, transaction pr ocessing,
system monitoring, naming services, or other infrastructur eservices?
26. Describe how the system and system components ar edesigned for refactoring.
27. Describe how the system or system components r ely on common messaging
infrastructure versus aunique point-to-point communication structure.
42.5.3 Applications Checklists
42.5.3.1 Infrastructur e(Enterprise Productivity) Applications
1. Is thereneed for capabilities that ar enot provided through the enterprise’s standar d
infrastructur eapplication products? For example:
■Collaboration
—A pplication sharing
—V ideo conferencing
—C alendaring
—E mail
■Workﬂow management
■Publishing/wor dprocessing applications
—H TML
—S GML and XML
—P ortable document format
Part VI: Architecture Capability Frame work 429
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureCompliance Revie wChecklists Ar chitectureCompliance
—D ocument processing (proprietary format)
—D esktop publishing
■Spreadsheet applications
■Presentation applications
—B usiness presentations
—Image
—A nimation
—V ideo
—S ound
—C BT
—W eb browsers
■Data management applications
—D atabase interface
—D ocument management
—P roduct data management
—D ata warehouses/mart
■Program management applications
—P roject management
—P rogram visibility
2. Describe the business r equir ements for enterprise infrastr uctur eapplication capabilities
that ar enot met by the standar dproducts.
42.5.3.2 Business Applications
1. Ar eany of the capabilities r equir ed provided by standar dproducts supporting one or
moreline-of-business applications? For example:
■Business acquisition applications
—S ales and marketing
■Engineering applications
—C omputer-aided design
—C omputer-aided engineering
—M athematical and statistics analysis
■Supplier management applications
—S upply chain management
—C ustomer relationship management
■Manufacturing applications
430 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureCompliance Ar chitectureCompliance Revie wChecklists
—E nterprise Resource Planning (ERP) applications
—M anufacturing execution systems
—M anufacturing quality
—M anufacturing process engineering
—M achine and adaptive control
■Customer support applications
—A irline logistics support
—M aintenance engineering
■Finance applications
■People applications
■Facilities applications
■Information systems applications
—S ystems engineering
—S oftwar eengineering
—W eb developer tools
—Integrated development environments
—L ifecycle categories
—F unctional categories
—S pecialty categories
■Computer-aided manufacturing
■e-Business enablement
■Business process engineering
—S tatistical quality control
2. Describe the process r equir ements for business application capabilities that ar enot met by
the standar dproducts.
42.5.3.3 Application Integration Approach
1. What integration points (business pr ocess/activity ,application, data, computing
environment) ar etargeted by this architecture?
2. What application integration techniques will be applied (common business objects
[ORBs], standar dd ata deﬁnitions [XML, etc.], common user interface
presentation/desktop)?
Part VI: Architecture Capability Frame work 431
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureCompliance Revie wChecklists Ar chitectureCompliance
42.5.4 Information Management Checklists
42.5.4.1 Data Values
1. What arethe processes that standardize the management and use of the data?
2. What business process supports the entry and validation of the data? Use of the data?
3. What business actions correspond to the creation and modiﬁcation of the data?
4. What business actions correspond to the deletion of the data and is it consider ed part of a
business record?
5. What arethe data quality requirements required by the business user?
6. What processes ar ei np lace to support data referential integrity and/or normalization?
42.5.4.2 Data Deﬁnition
1. What arethe data model, data deﬁnitions, str uctur e, and hosting options of pur chased
applications (COTS)?
2. What arethe rules for deﬁning and maintaining the data r equir ements and designs for all
components of the information system?
3. What shar eable repository is used to captur ethe model content and the supporting
information for data?
4. What is the physical data model deﬁnition (derived from logical data models) used to
design the database?
5. What softwar edevelopment and data management tools have been selected?
6. What data owners have been identiﬁed to be r esponsible for common data deﬁnitions,
eliminating unplanned r edundancy ,providing consistently r eliable, timely ,and accurate
information, and protecting data from misuse and destruction?
42.5.4.3 Security/Pr otection
1. What arethe data entity and attribute access rules which pr otect the data fr om
unintentional and unauthorized alterations, disclosure, and distribution?
2. What arethe data protection mechanisms to pr otect data from unauthorized external
access?
3. What arethe data protection mechanisms to control access to data from external sour ces
that temporarily have internal residence within the enterprise?
42.5.4.4 Hosting, Data Types, and Sharing
1. What is the discipline for managing sole-authority data as one logical sour ce with deﬁned
updating rules for physical data residing on different platforms?
2. What is the discipline for managing replicated data, which is derived from operational
sole-authority data?
432 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureCompliance Ar chitectureCompliance Revie wChecklists
3. What tier data server has been identiﬁed for the storage of high or medium-critical
operational data?
4. What tier data server has been identiﬁed for the storage of type C operational data?
5. What tier data server has been identiﬁed for the storage of decision support data
contained in a data warehouse?
6. What Database Management Systems (DBMSs) have been implemented?
42.5.4.5 Common Services
1. What arethe standar dized distributed data management services (e.g., validation,
consistency checks, data edits, encryption, and transaction management) and wher edo
they reside?
42.5.4.6 Access Method
1. What arethe data access r equir ements for standar dﬁle, message, and data management?
2. What arethe access requirements for decision support data?
3. What arethe data storage and the application logic locations?
4. What query language is being used?
42.5.5 Security Checklist
1.Security A wareness :Have you ensur ed that the corporate security policies and
guidelines to which you ar edesigning ar ethe latest versions? Have you read them? Ar e
you awar eo fa ll relevant computing security compliance and risk acceptance pr ocesses?
(Interviewer should list all relevant policies and guidelines.)
2.Identiﬁcation/Authentication :Diagram the process ﬂow of how a user is identiﬁed to the
application and how the application authenticates that the user is who they claim to be.
Provide supporting documentation to the diagram explaining the ﬂow from the user
interface to the application/database server(s) and back to the user .Are you compliant
with corporate policies on accounts, passwords, etc.?
3.Authorization :Provide a pr ocess ﬂow from beginning to end showing how a user
requests access to the application, indicating the associated security contr ols and
separation of duties. This should include how the r equest is approved by the appr opriate
data owner ,how the user is placed into the appropriate access-level classiﬁcation pr oﬁle,
how the user ID, passwor d, and access is created and provided to the user .Also include
how the user is informed of their responsibilities associated with using the application,
given a copy of the access agreement, how to change password, who to call for help, etc.
4.Access Controls :Document how the user IDs, passwords, and access proﬁles ar eadded,
changed, r emoved, and documented. The documentation should include who is
responsible for these processes.
5.Sensitive Information Protection :Provide documentation that identiﬁes sensitive data
requiring additional protection. Identify the data owners r esponsible for this data and the
process to be used to pr otect storage, transmission, printing, and distribution of this data.
Include how the passwor dﬁle/ﬁeld is protected. How will users be prevented fr om
viewing someone else’s sensitive information? Arethereagreements with outside parties
Part VI: Architecture Capability Frame work 433
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureCompliance Revie wChecklists Ar chitectureCompliance
(partners, suppliers, contractors, etc.) concerning the safeguar ding of information? If so,
what ar ethe obligations?
6.Audit Trails and Audit Logs :Identify and document gr oup accounts r equir ed by the
users or application support, including operating system gr oup accounts. Identify and
document individual accounts and/or r oles that have superuser type privileges, what
these privileges ar e, who has access to these accounts, how access to these accounts is
contr olled, tracked, and logged, and how passwor dchange and distribution ar ehandled,
including operating system accounts. Also identify audit logs, who can read the audit
logs, who can modify the audit logs, who can delete the audit logs, and how the audit
logs ar eprotected and stored. Is the user ID obscured in the audit trails?
7.External Access Considerations :Will the application be used internally only? If not, ar e
you compliant with corporate external access requirements?
42.5.6 System Management Checklist
1. What is the frequency of softwar echanges that must be distributed?
2. What tools ar eused for softwar edistribution?
3. Ar emultiple softwar eand/or data versions allowed in production?
4. What is the user data backup frequency and expected restor etime?
5. How areuser accounts created and managed?
6. What is the system license management strategy?
7. What general system administration tools ar erequired?
8. What speciﬁc application administration tools ar erequired?
9. What speciﬁc service administration tools ar erequired?
10. How areservice calls received and dispatched?
11.D escribe how the system is uninstalled.
12. Describe the process or tools available for checking that the system is properly installed.
13. Describe tools or instrumentation that ar eavailable that monitor the health and
performance of the system.
14. Describe the tools or process in place that can be used to determine wher ethe system has
been installed.
15. Describe what form of audit logs ar ei np lace to captur esystem history ,particularly after
amishap.
16. Describe the capabilities of the system to dispatch its own error messages to service
personnel.
434 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureCompliance Ar chitectureCompliance Revie wChecklists
42.5.7 System Engineering/Overall Architecture Checklists
42.5.7.1 General
1. What other applications and/or systems requir eintegration with yours?
2. Describe the integration level and strategy with each.
3. How geographically distributed is the user base?
4. What is the strategic importance of this system to other user communities inside or
outside the enterprise?
5. What computing r esour ces ar eneeded to provide system service to users inside the
enterprise? Outside the enterprise and using enterprise computing assets? Outside the
enterprise and using their own assets?
6. How can users outside the native delivery environment access your applications and
data?
7. What is the life expectancy of this application?
8. Describe the design that accommodates changes in the user base, stored data, and
delivery system technology.
9. What is the size of the user base and their expected performance level?
10. What performance and stress test techniques do you use?
11.W hat is the overall organization of the softwar eand data components?
12. What is the overall service and system conﬁguration?
13. How aresoftwar eand data conﬁgured and mapped to the service and system
conﬁguration?
14. What proprietary technology (hardwar eand software) is needed for this system?
15. Describe how each and every version of the softwar ecan be r eproduced and r e-deployed
over time.
16. Describe the current user base and how that base is expected to change over the next
three to ﬁve years.
17. Describe the curr ent geographic distribution of the user base and how that base is
expected to change over the next three to ﬁve years.
18. Describe how many current or futur eusers need to use the application in a mobile
capacity or who need to work off-line.
19. Describe what the application generally does, the major components of the application,
and the major data ﬂows.
20. Describe the instrumentation included in the application that allows for the health and
performance of the application to be monitored.
21. Describe the business justiﬁcation for the system.
22. Describe the rationale for picking the system development language over other options in
terms of initial development cost versus long-term maintenance cost.
23. Describe the systems analysis pr ocess that was used to come up with the system
architectur eand product selection phase of the system architecture.
Part VI: Architecture Capability Frame work 435
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureCompliance Revie wChecklists Ar chitectureCompliance
24. Who besides the original customer might have a use for or beneﬁt fr om using this
system?
25. What percentage of the users use the system in browse mode versus update mode?
26. What is the typical length of requests that ar etransactional?
27. Do you need guaranteed data delivery or update, or does the system tolerate failure?
28. What arethe up-time requirements of the system?
29. Describe wher ethe system architectur eadheres or does not adher et os tandards.
30. Describe the project planning and analysis approach used on the project.
42.5.7.2 Pr ocessors/Servers/Clients
1. Describe the client/server Application Architecture.
2. Annotate the pictorial to illustrate wher eapplication functionality is executed.
42.5.7.3 Client
1. Ar efunctions other than presentation performed on the user device?
2. Describe the data and process help facility being provided.
3. Describe the screen-to-screen navigation technique.
4. Describe how the user navigates between this and other applications.
5. How is this and other applications launched from the user device?
6. Ar ethereany inter-application data and process sharing capabilities? If so, describe what
is being shared and by what technique/technology.
7. Describe data volumes being transferred to the client.
8. What arethe additional requirements for local data storage to support the application?
9. What arethe additional r equir ements for local softwar estorage/memory to support the
application?
10. Ar ethereany known har dware/softwar econﬂicts or capacity limitations caused by other
application requirements or situations which would affect the application users?
11.D escribe how the look-and-feel of your presentation layer compar es to the look-and-feel
of the other existing applications.
12. Describe to what extent the client needs to support asynchr onous and/or synchr onous
communication.
13. Describe how the presentation layer of the system is separated from other computational
or data transfer layers of the system.
436 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureCompliance Ar chitectureCompliance Revie wChecklists
42.5.7.4 Application Server
1. Can/do the presentation layer and application layers run on separate processors?
2. Can/do the application layer and data access layer run on separate processors?
3. Can this application be placed on an application server independent of all other
applications? If not, explain the dependencies.
4. Can additional parallel application servers be easily added? If so, what is the load
balancing mechanism?
5. Has the r esour ce demand generated by the application been measured and what is the
value? If so, has the capacity of the planned server been conﬁrmed at the application and
aggregate levels?
42.5.7.5 Data Server
1. Ar ethereother applications which must shar ethe data server? If so, identify them and
describe the data and data access requirements.
2. Has the r esour ce demand generated by the application been measured and what is the
value? If so, has the capacity of the planned server been conﬁrmed at the application and
aggregate levels?
42.5.7.6 COTS (wher eapplicable)
1. Is the vendor substantial and stable?
2. W ill the enterprise receive source code upon demise of the vendor?
3. Is this softwar econﬁgured for the enterprise’s usage?
4. Is thereany peculiar A&D data or processes that would impede the use of this software?
—Isthis softwar ecurrently available?
5. Has it been used/demonstrated for volume/availability/service-level r equirements
similar to those of the enterprise?
—D escribe the past ﬁnancial and market shar ehistory of the vendor.
42.5.8 System Engineering/Methods & Tools Checklist
1. Do metrics exist for the current way of doing business?
2. Has the system owner cr eated evaluation criteria that will be used to guide the pr oject?
Describe how the evaluation criteria will be used.
3. Has research of existing ar chitectur es been done to leverage existing work? Describe the
method used to discover and understand. Will the ar chitectur es be integrated? If so,
explain the method that will be used.
4. Describe the methods that will be used on the project:
—F or deﬁning business strategies
Part VI: Architecture Capability Frame work 437
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureCompliance Revie wChecklists Ar chitectureCompliance
—F or deﬁning areas in need of improvement
—F or deﬁning baseline and target business processes
—F or deﬁning transition processes
—F or managing the project
—F or team communication
—F or knowledge management, change management, and conﬁguration management
—F or softwar edevelopment
—F or referencing standards and statements of direction
—F or quality assurance of deliverables
—F or design reviews and deliverable acceptance
—F or capturing metrics
5. Ar ethe methods documented and distributed to each team member?
6. T owhat extent ar eteam members familiar with these methods?
7. What processes ar ei np lace to ensur ecompliance with the methods?
8. Describe the infrastr uctur ethat is in place to support the use of the methods through the
end of the project and anticipated releases.
—H ow is consultation and trouble-shooting provided?
—H ow is training co-ordinated?
—H ow ar echanges and enhancements incorporated and cascaded?
—H ow ar elessons learned captured and communicated?
9. What tools ar ebeing used on the pr oject? (Specify versions and platforms). T owhat
extent ar eteam members familiar with these tools?
10. Describe the infrastr uctur ethat is in place to support the use of the tools thr ough the end
of the project and anticipated releases.
—H ow is consultation and trouble-shooting provided?
—H ow is training co-ordinated?
—H ow ar echanges and enhancements incorporated and cascaded?
—H ow ar elessons learned captured and communicated?
11.D escribe how the project will promote the re-use of its deliverables and deliverable
content.
12. W ill the ar chitectur edesigns "live" after the pr oject has been implemented? Describe the
method that will be used to incorporate changes back into the architectur edesigns.
13. W erethe current processes deﬁned?
14. W ereissues documented, rated, and associated to current processes? If not, how do you
know you ar eﬁxing something that is broken?
15. W ereexisting/planned process improvement activities identiﬁed and associated to
current pr ocesses? If not, how do you know this activity is not in conﬂict with or
redundant to other Statements of Work?
438 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureCompliance Ar chitectureCompliance Revie wChecklists
16. Do you have current metrics? Do you have for ecasted metrics? If not, how do you know
you ar eimproving something?
17. What processes will you put in place to gather ,evaluate, and report metrics?
18. What impacts will the new design have on existing business processes, or ganizations, and
information systems? Have they been documented and shared with the owners?
42.6 Architecture Compliance Review Guidelines
42.6.1 T ailoring the Checklists
■Focus on:
—H igh risk areas
—E xpected (and emergent) differentiators
■For each question in the checklist, understand:
—T he question itself
—T he principle behind it
—W hat to look for in the responses
■Ask subject experts for their views
■Fix the checklist questions for your use
■Bear in mind the need for feedback to the Architectur eBoard
42.6.2 Conducting Architecture Compliance Reviews
■Understand clearly the objectives of those soliciting the r eview; and stay on track and
deliver what was asked for .For example, they typically want to know what is right or
wrong with the system being architected; not what is right or wrong with the development
methodology used, their own management str uctur e, etc. It is easy to get off-track and
discuss subjects that ar einteresting and per haps worthwhile, but not what was solicited. If
you can shed light and insight on technical approaches, but the discussion is not necessary
for the review ,volunteer to provide it after the review.
■If it becomes obvious during the discussion that ther eare other issues that need to be
addr essed, which ar eoutside the scope of the requested r eview ,bring it up with the
meeting chair afterwards. A plan for addr essing the issues can then be developed in
accordance with their degree of seriousness.
■Stay "scientiﬁc". Rather than: "W elike to see large databases hosted on ABC rather than
XYZ .", say things like: "The downtime associated with XYZ database environments is
much greater than on ABC database environments. Ther eforew ed on’t r ecommend
hosting type Mand Nsystems in an XYZ environment."
■Ask "open" questions; i.e., questions that do not presume a particular answer.
■Ther eare often "hidden agendas" or contr oversial issues among those soliciting a r eview,
which you probably won’t know up-front. A depersonalized approach to the discussions
may help bridge the gaps of opinion rather than exacerbate them.
Part VI: Architecture Capability Frame work 439
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureCompliance Revie wGuidelines Ar chitectureCompliance
■Tr eat those being interviewed with r espect. They may not have built the system "the way it
should be", but they pr obably did the best they could under the circumstances in which
they wer eplaced.
■Help the exercise become a learning experience for you and the presenters.
■Reviews should include detailed assessment activities against the ar chitectur es and should
ensur ethat the results ar estored in the Enterprise Continuum.
440 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 43
Architectur eContracts
This chapter provides guidelines for deﬁning and using Architectur eContracts.
43.1 Role
Architectur eContracts ar ethe joint agreements between development partners and sponsors on
the deliverables, quality ,and ﬁtness-for -purpose of an ar chitectur e. Successful implementation
of these agreements will be delivered through effective Ar chitectur eGovernance (see Chapter
44). By implementing a governed appr oach to the management of contracts, the following will
be ensured:
■Asystem of continuous monitoring to check integrity ,changes, decision-making, and audit
of all architecture-related activities within the organization
■Adher ence to the principles, standards, and r equir ements of the existing or developing
architectures
■Identiﬁcation of risks in all aspects of the development and implementation of the
architectur e(s) covering the internal development against accepted standards, policies,
technologies, and products as well as the operational aspects of the ar chitectur es such that
the organization can continue its business within a resilient environment
■Aset of pr ocesses and practices that ensur eaccountability ,responsibility ,and discipline
with regar dt ot he development and usage of all architectural artifacts
■Aformal understanding of the governance organization responsible for the contract, their
level of authority ,and scope of the architectur eunder the governance of this body
The traditional Ar chitectur eContract is an agreement between the sponsor and the ar chitecture
function or IS department. However ,increasingly mor eservices ar ebeing provided by systems
integrators, applications pr oviders, and service providers, co-ordinated through the ar chitecture
function or IS department. Ther ei st herefor ea n eed for an Ar chitectur eContract to establish
joint agreements between all parties involved in the architectur edevelopment and delivery.
Architectur eContracts may occur at various stages of the Ar chitectur eDevelopment Method
(ADM); for example:
■The Statement of Ar chitectur eW ork created in Phase A of Part II: Ar chitecture
Development Method (ADM) is effectively an Ar chitectur eC ontract between the
architecting organization and the sponsor of the Enterprise Ar chitectur e(or the IT
governance function)
■The development of one or mor earchitectur edomains (business, data, application,
technology), and in some cases the oversight of the overall Enterprise Ar chitectur e, may be
contracted out to systems integrators, applications providers, and/or service providers
Each of these arrangements will normally be governed by an Ar chitectur eContract that
Part VI: Architecture Capability Frame work 441
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Role Ar chitectureContracts
deﬁnes the deliverables, quality ,and ﬁtness-for -purpose of the developed ar chitectur e, and
the processes by which the partners in the architectur edevelopment will work together.
■At the beginning of Phase G (Implementation Governance), between the ar chitecture
function and the function responsible for implementing the Enterprise Ar chitecture
deﬁned in the pr eceding ADM phases; typically ,this will be either the in-house systems
development function, or a major contractor to whom the work is outsourced
—W hat is being "implemented" in Phase G of the ADM is the overall Enterprise
Architecture
This will typically include the technology infrastr uctur e(from Phase D), and also
those enterprise applications and data management capabilities that have been
deﬁned in the Application Ar chitectur eand Data Ar chitectur e(from Phase C), either
because they ar eenterprise-wide in scope, or because they ar estrategic in business
terms, and ther eforeo fe nterprise-wide importance and visibility .However ,i tw ill
typically not include non-strategic business applications, which business units will
subsequently deploy on top of the technology infrastr uctur ethat is implemented as
part of the Enterprise Architecture.
—Inlarger -scale implementations, ther emay well be one Ar chitectur eContract per
implementation team in a program of implementation projects
■When the Enterprise Ar chitectur ehas been implemented (at the end of Phase G), an
Architectur eContract will normally be drawn up between the ar chitecting function (or the
IT governance function, subsuming the ar chitecting function) and the business users who
will subsequently be building and deploying application systems in the ar chitected
environment
It is important to bear in mind in all these cases that the ultimate goal is not just an Enterprise
Architectur e, but a dynamic Enterprise Ar chitectur e; i.e., one that allows for ﬂexible evolution in
response to changing technology and business drivers, without unnecessary constraints. The
Architectur eContract is crucial to enabling a dynamic Enterprise Ar chitectur eand is key to
governing the implementation.
Typical contents of these three kinds of Architectur eContract ar eexplained below.
442 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureContracts Role
43.2 Contents
43.2.1 Statement of Architecture Work
The Statement of Ar chitectur eWork is created as a deliverable of Phase A, and is ef fectively an
Architectur eContract between the architecting organization and the sponsor of the Enterprise
Architectur e(or the IT governance function, on behalf of the enterprise).
The typical contents of a Statement of Ar chitectur eWork ar ea sd eﬁned in Part IV ,Section
32.2.20 .
43.2.2 Contract between Architecture Design and Development Partners
This is a signed statement of intent on designing and developing the Enterprise Ar chitectur e, or
signiﬁcant parts of it, from partner or ganizations, including systems integrators, applications
providers, and service providers.
Increasingly ,the development of one or mor earchitectur edomains (business, data, application,
technology) may be contracted out, with the enterprise’s ar chitectur efunction pr oviding
oversight of the overall Enterprise Ar chitectur e, and co-ordination and control of the overall
effort. In some cases even this oversight r ole may be contracted out, although most enterprises
prefer to retain that cor eresponsibility in-house.
Whatever the speciﬁcs of the contracting-out arrangements, the arrangements themselves will
normally be governed by an Ar chitectur eContract that deﬁnes the deliverables, quality ,and
ﬁtness-for -purpose of the developed ar chitectur e, and the processes by which the partners in the
architectur edevelopment will work together.
Typical contents of an Architectur eDesign and Development Contract are:
■Introduction and background
■The natur eo ft he agreement
■Scope of the architecture
■Architectur eand strategic principles and requirements
■Conformance requirements
■Architectur edevelopment and management process and roles
■Target architectur emeasures
■Deﬁned phases of deliverables
■Prioritized joint workplan
■Time window(s)
■Architectur edelivery and business metrics
The template for this contract will normally be deﬁned as part of the Pr eliminary Phase of the
ADM, if not existing alr eady ,and the speciﬁc contract will be deﬁned at the appr opriate stage of
the ADM, depending on the particular work that is being contracted out.
Part VI: Architecture Capability Frame work 443
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Contents Ar chitectureContracts
43.2.3 Contract between Architecting Function and Business Users
This is a signed statement of intent to conform with the Enterprise Ar chitectur e, issued by
enterprise business users. When the Enterprise Ar chitectur ehas been implemented (at the end
of Phase F), an Ar chitectur eContract will normally be drawn up between the ar chitecting
function (or the IT governance function, subsuming the architecting function) and the business
users who will subsequently be building and deploying application systems in the ar chitected
environment.
Typical contents of a Business Users’ Architectur eContract are:
■Introduction and background
■The natur eo ft he agreement
■Scope
■Strategic requirements
■Architectur edeliverables that meet the business requirements
■Conformance requirements
■Architectur eadopters
■Time window
■Architectur ebusiness metrics
■Service architectur e(includes Service-Level Agreement (SLA))
This contract is also used to manage changes to the Enterprise Architectur ei nP hase H.
43.3 Relationship to Architecture Governance
The Ar chitectur eContract document produced in Phase G of the ADM ﬁgur es prominently in
the area of Architectur eGovernance, as explained in Part VI, Chapter 44 .
In the context of Ar chitectur eGovernance, the Ar chitectur eContract is often used as a means of
driving architectur echange.
In order to ensur ethat the Ar chitectur eContract is ef fective and efﬁcient, the following aspects
of the governance framework may need to be introduced into Phase G:
■Simple processes
■People-centered authority
■Strong communication
■Timely responses and an effective escalation process
■Supporting organizational structures
■Status tracking of architectur eimplementation
444 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 44
Architectur eGovernance
This chapter provides a framework and guidelines for Architectur eGovernance.
44.1 Introduction
This section describes the natur eo fg overnance, and the levels of governance.
44.1.1 Levels of Governance within the Enterprise
Architectur eGovernance is the practice and orientation by which Enterprise Ar chitectur es and
other architectures ar emanaged and controlled at an enterprise-wide level.
Architectur eGovernance typically does not operate in isolation, but within a hierarchy of
governance str uctur es, which, particularly in the larger enterprise, can include all of the
following as distinct domains with their own disciplines and processes:
■Corporate Governance
■Technology Governance
■IT Governance
■Architectur eGovernance
Each of these domains of governance may exist at multiple geographic levels — global, r egional,
and local — within the overall enterprise.
Corporate governance is thus a br oad topic, beyond the scope of an Enterprise Ar chitecture
framework such as the TOGAF framework.
This and related subsections ar efocused on Ar chitectur eGovernance; but they describe it in the
context of enterprise-wide governance, because of the hierar chy of governance str uctur es within
which it typically operates, as explained above.
In particular ,this and following sections aim to:
■Provide an overview of the natur eo fg overnance as a discipline in its own right
■Describe the governance context in which Ar chitectur eGovernance typically functions
within the enterprise
■Describe an Ar chitectur eGovernance Framework that can be adapted and applied in
practice, both for Enterprise Architectur eand for other forms of IT architecture
Part VI: Architecture Capability Frame work 445
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Introduction Ar chitectureGovernance
44.1.2 Nature of Governance
44.1.2.1 Governance: AGeneric Perspective
Governance is essentially about ensuring that business is conducted pr operly .I ti sl ess about
overt control and strict adherence to rules, and mor eabout guidance and effective and equitable
usage of resources to ensur esustainability of an organization’s strategic objectives.
The following outlines the basic principles of corporate governance, as identiﬁed by the
Organization for Economic Co-operation and Development (OECD):
■Focuses on the rights, roles, and equitable treatment of shareholders
■Disclosur eand transparency and the responsibilities of the board
■Ensures:
—S ound strategic guidance of the organization
—E ffective monitoring of management by the board
—B oardaccountability for the company and to the shareholders
■Board’s responsibilities:
—R eviewing and guiding corporate strategy
—S etting and monitoring achievement of management’s performance objectives
Supporting this, the OECD considers a traditional view of governance as: "... the system by
which business corporations ar edirected and contr olled. The corporate governance str ucture
speciﬁes the distribution of rights and responsibilities among dif ferent participants in the
corporation — such as the board, managers, shareholders, and other stakeholders — and spells
out the rules and pr ocedur es for making decisions on corporate af fairs. By doing this, it also
provides the str uctur ethrough which the company objectives ar eset, and the means of attaining
those objectives and monitoring performance" (Source: OECD, 2001).
44.1.2.2 Characteristics of Governance
The following characteristics have been adapted fr omCorporate Governance (Naidoo, 2002) and
arepositioned her et oh ighlight both the value and necessity for governance as an approach to
be adopted within organizations and their dealings with all involved parties:
Discipline All involved parties will have a commitment to adher et op rocedures,
processes, and authority structures established by the organization.
Transparency All actions implemented and their decision support will be available for
inspection by authorized organization and provider parties.
Independence All processes, decision-making, and mechanisms used will be established so
as to minimize or avoid potential conﬂicts of interest.
Accountability Identiﬁable gr oups within the organization — e.g., governance boards who
take actions or make decisions — ar eauthorized and accountable for their
actions.
Responsibility Each contracted party is r equir ed to act responsibly to the organization and its
stakeholders.
446 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureGovernance Intr oduction
Fairness All decisions taken, pr ocesses used, and their implementation will not be
allowed to create unfair advantage to any one particular party.
44.1.3 T echnology Governance
Technology governance controls how an or ganization utilizes technology in the r esearch,
development, and pr oduction of its goods and services. Although it may include IT governance
activities, it often has broader scope.
Technology governance is a key capability ,requir ement, and r esour ce for most or ganizations
because of the pervasiveness of technology across the organizational spectrum.
Recent studies have shown that many or ganizations have a balance in favor of intangibles rather
than tangibles that r equir emanagement. Given that most of these intangibles ar einformational
and digital assets, it is evident that businesses ar ebecoming mor ereliant on IT :and the
governance of IT — IT governance — is ther eforebecoming an even mor eimportant part of
technology governance.
These tr ends also highlight the dependencies of businesses on not only the information itself but
also the processes, systems, and str uctur es that create, deliver ,and consume it. As the shift to
increasing value thr ough intangibles increases in many industry sectors, so risk management
must be consider ed as key to understanding and moderating new challenges, threats, and
opportunities.
Not only ar eorganizations increasingly dependent on IT for their operations and pr oﬁtability,
but also their r eputation, brand, and ultimately their values ar ealso dependent on that same
information and the supporting technology.
44.1.4 IT Governance
IT governance pr ovides the framework and str uctur ethat links IT r esour ces and information to
enterprise goals and strategies. Furthermor e, IT governance institutionalizes best practices for
planning, acquiring, implementing, and monitoring IT performance, to ensur ethat the
enterprise’s IT assets support its business objectives.
In recent years, IT governance has become integral to the ef fective governance of the modern
enterprise. Businesses ar eincreasingly dependent on IT to support critical business functions
and processes; and to successfully gain competitive advantage, businesses need to manage
effectively the complex technology that is pervasive throughout the organization, in order to
respond quickly and safely to business needs.
In addition, regulatory environments ar ound the world ar eincreasingly mandating stricter
enterprise control over information, driven by increasing r eports of information system disasters
and electronic fraud. The management of IT -related risk is now widely accepted as a key part of
enterprise governance.
It follows that an IT governance strategy ,and an appropriate or ganization for implementing the
strategy ,must be established with the backing of top management, clarifying who owns the
enterprise’s IT r esour ces, and, in particular ,who has ultimate responsibility for their enterprise-
wide integration.
Part VI: Architecture Capability Frame work 447
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Introduction Ar chitectureGovernance
44.1.4.1 An IT Controls Framework — COBIT
As with corporate governance, IT governance is a broad topic, beyond the scope of an Enterprise
Architectur eframework such as the T OGAF framework. A good source of detailed information
on IT governance is the COBIT framework (Contr ol OBjectives for Information and r elated
Technology). This is an open standar dfor control over IT ,developed and promoted by the IT
Governance Institute (ITGI), and published by the Information Systems Audit and Contr ol
Foundation (ISACF). COBIT controls may provide useful aides to r unning a compliance
strategy.
44.1.5 Architecture Governance: Overview
44.1.5.1 Ar chitectur eGovernance Characteristics
Architectur eGovernance is the practice and orientation by which Enterprise Ar chitectur es and
other ar chitectur es ar emanaged and controlled at an enterprise-wide level. It includes the
following:
■Implementing a system of contr ols over the creation and monitoring of all ar chitectural
components and activities, to ensur ethe effective introduction, implementation, and
evolution of architectures within the organization
■Implementing a system to ensur ecompliance with internal and external standar ds and
regulatory obligations
■Establishing processes that support ef fective management of the above processes within
agreed parameters
■Developing practices that ensur eaccountability to a clearly identiﬁed stakeholder
community ,both inside and outside the organization
44.1.5.2 Ar chitectur eGovernance as a Board-Level Responsibility
As mentioned above, IT governance has r ecently become a boar dresponsibility as part of overall
business governance. The governance of an organization’s ar chitectur es is a key factor in
effective IT/business linkage, and is ther eforeincreasingly becoming a key boar d-level
responsibility in its own right.
This section aims to pr ovide the impetus for opening up IT and Ar chitectur eGovernance so that
the business responsibilities associated with ar chitectur eactivities and artifacts can be
elucidated and managed.
44.1.5.3 The TOGAF Standard and Architectur eGovernance
Phase G of the T OGAF ADM (see Part II,Chapter 14 )i sd edicated to implementation
governance, which concerns itself with the r ealization of the ar chitectur ethrough change
projects. Implementation governance is just one aspect of Ar chitectur eGovernance, which
covers the management and control of all aspects of the development and evolution of
Enterprise Architectures and other architectures within the enterprise.
Architectur eGovernance needs to be supported by an Ar chitectur eGovernance Framework
(described in Section 44.2 )which assists in identifying effective processes so that the business
responsibilities associated with Ar chitectur eGovernance can be elucidated, communicated, and
managed effectively.
448 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureGovernance Ar chitectureGovernance F ramework
44.2 Architecture Governance Framework
This section describes a conceptual and organizational framework for Architectur eGovernance
As previously explained, Phase G of the TOGAF ADM (see Part II,Chapter 14 )i sd edicated to
implementation governance, which concerns itself with the r ealization of the ar chitecture
through change projects.
Implementation governance is just one aspect of Ar chitectur eGovernance, which covers the
management and control of all aspects of the development and evolution of Enterprise
Architectures and other architectures within the enterprise.
Architectur eGovernance needs to be supported by an Ar chitectur eGovernance Framework,
described below .The governance framework described is a generic framework that can be
adapted to the existing governance envir onment of an enterprise. It is intended to assist in
identifying effective processes and organizational str uctur es, so that the business r esponsibilities
associated with Ar chitectur eGovernance can be elucidated, communicated, and managed
effectively.
44.2.1 Architecture Governance Framework — Conceptual Structure
44.2.1.1 Key Concepts
Conceptually ,Architectur eG overnance is an appr oach, a series of processes, a cultural
orientation, and set of owned r esponsibilities that ensur ethe integrity and effectiveness of the
organization’s architectures.
The key concepts ar eillustrated in Figur e44-1.
Context
Drivers (business, technology, regulatory)
Organizational form
Content
Process Flow ControlRequirements
SLAs and OLAs
Authority Structures
Organizational Standards
Solutions
ArchitecturesProcess
Policy Management & Take-on
Business Control
Environment ManagementMonitoring & ReportingDispensationCompliance
Repository
© The Open Group
Figure 44-1 Architectur eGovernance Framework — Conceptual Structure
Part VI: Architecture Capability Frame work 449
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureGovernance F ramework Ar chitectureGovernance
The split of process, content, and context ar ekey to the support of the Ar chitectur eGovernance
initiative, by allowing the introduction of new governance material (legal, r egulatory ,standards-
based, or legislative) without unduly impacting the pr ocesses. This content-agnostic appr oach
ensur es that the framework is ﬂexible. The pr ocesses ar etypically independent of the content
and implement a proven best practice approach to active governance.
The Ar chitectur eGovernance Framework is integral to the Enterprise Continuum, and manages
all content relevant both to the architectur eitself and to Architectur eGovernance processes.
44.2.1.2 Key Architectur eGovernance Processes
Governance processes ar erequir ed to identify ,manage, audit, and disseminate all information
related to ar chitectur emanagement, contracts, and implementation. These governance pr ocesses
will be used to ensur ethat all ar chitectur eartifacts and contracts, principles, and Operational-
Level Agreements (OLAs) ar emonitor ed on an ongoing basis with clear auditability of all
decisions made.
Policy Management and Take-On
All ar chitectur eamendments, contracts, and supporting information must come under
governance through a formal process in or der to r egister ,validate, ratify ,manage, and publish
new or updated content. These pr ocesses will ensur ethe orderly integration with existing
governance content such that all r elevant parties, documents, contracts, and supporting
information ar emanaged and audited.
Compliance
Compliance assessments against Service-Level Agr eements (SLAs), OLAs, standards, and
regulatory r equir ements will be implemented on an ongoing basis to ensur estability,
conformance, and performance monitoring. These assessments will be r eviewed and either
accepted or rejected depending on the criteria deﬁned within the governance framework.
Dispensation
ACompliance Assessment can be rejected wher ethe subject ar ea (design, operational, service
level, or technology) ar enot compliant. In this case the subject area can:
1. Be adjusted or realigned in order to meet the compliance requirements
2. Request adispensation
Wher eaC ompliance Assessment is rejected, an alternate r oute to meeting interim conformance
is provided through dispensations. These ar egranted for a given time period and set of
identiﬁed service and operational criteria that must be enfor ced during the lifespan of the
dispensation. Dispensations ar enot granted indeﬁnitely ,but ar eused as a mechanism to ensur e
that service levels and operational levels ar emet while providing a level of ﬂexibility in their
implementation and timing. The time-bound natur eo fd ispensations ensures that they ar ea
major trigger in the compliance cycle.
450 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureGovernance Ar chitectureGovernance F ramework
Monitoring and Reporting
Performance management is r equir ed to ensur ethat both the operational and service elements
aremanaged against an agr eed set of criteria. This will include monitoring against SLAs and
OLAs, feedback for adjustment, and reporting.
Internal management information will be considered in Environment Management .
Business Control
Business Control relates to the pr ocesses invoked to ensur ecompliance with the or ganization’s
business policies.
Environment Management
This identiﬁes all the services r equir ed to ensur ethat the repository-based envir onment
underpinning the governance framework is ef fective and efﬁcient. This includes the physical
and logical repository management, access, communication, training, and accr editation of all
users.
All ar chitectur eartifacts, service agr eements, contracts, and supporting information must come
under governance thr ough a formal process in order to r egister ,validate, ratify ,manage, and
publish new or updated content. These pr ocesses will ensur ethe orderly integration with
existing governance content such that all relevant parties, documents, contracts, and supporting
information ar emanaged and audited.
The governance envir onment will have a number of administrative processes deﬁned in order to
effect a managed service and process environment. These processes will include user
management, internal SLAs (deﬁned in order to control its own processes), and management
information reporting.
44.2.2 Architecture Governance Framework — Organizational Structure
44.2.2.1 Overview
Architectur eGovernance is the practice and orientation by which Enterprise Ar chitectur es and
other ar chitectur es ar emanaged and controlled. In order to ensur ethat this contr ol is ef fective
within the organization, it is necessary to have the correct organizational str uctur es established
to support all governance activities.
An Ar chitectur eGovernance str uctur efor ef fectively implementing the approach described in
this section will typically include the following levels, which may in practice involve a
combination of existing IT governance processes, organizational str uctur es, and capabilities.
They will typically include the following:
■Global governance board
■Local governance board
■Design authorities
■Working parties
The ar chitectur eorganization illustrated in Figur e44-2highlights the major structural elements
required for an Ar chitectur eGovernance initiative. While each enterprise will have dif fering
requirements, it is expected that the basics of the organizational design shown in Figur e44-2will
be applicable and implementable in a wide variety of organizational types.
Part VI: Architecture Capability Frame work 451
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureGovernance F ramework Ar chitectureGovernance
Program
Management OfficeArchitecture
BoardService
Management
Domain
ArchitectsDomain
ArchitectsDomain
ArchitectsImplementation
ProjectsImplementation
ProjectsImplementation
ProjectsOperational
SystemsOperational
SystemsOperational
SystemsAlignment AlignmentEnterprise ArchitectsGuidanceChief
Architect
Risk Management
Diffusion
ConformanceStewardship
ChangeMonitoringCIO/CTO
Develop Implement Deploy
Architectures Processes Solutions SLAs/OLAs
Regulatory
RequirementsAuthority
StructuresOrganizational
StandardsEnterprise ContinuumGovernance Environment
© The Open Group
Figure 44-2 Architectur eGovernance Framework — Organizational Structure
44.2.2.2 Key Areas
Figur e44-2identiﬁes three key areas of ar chitectur emanagement: Develop, Implement, and
Deploy .Each of these is the r esponsibility of one or mor egroups within the organization, while
the Enterprise Continuum is shown to support all activities and artifacts associated with the
governance of the architectures throughout their lifecycle.
The Develop responsibilities, processes, and str uctur es ar eusually linked to the T OGAF ADM
and its usage, while the Implement r esponsibilities, processes, and str uctur es ar etypically
linked to Phase G (see Part II, Chapter 14 ).
As mentioned above, the Ar chitectur eGovernance Framework is integral to the Enterprise
Continuum, and manages all content r elevant both to the ar chitectur es themselves and to
Architectur eGovernance processes.
44.2.2.3 Operational Beneﬁts
As illustrated in Figur e44-2,the governance of the organization’s ar chitectur es provides not
only direct contr ol and guidance of their development and implementation, but also extends
into the operations of the implemented architectures.
452 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureGovernance Ar chitectureGovernance F ramework
The following beneﬁts have been found to be derived thr ough the continuing governance of
architectures:
■Links IT processes, resources, and information to organizational strategies and objectives
■Integrates and institutionalizes IT best practices
■Aligns with industry frameworks such as COBIT (planning and or ganizing, acquiring and
implementing, delivering and supporting, and monitoring IT performance)
■Enables the organization to take full advantage of its information, infrastr uctur e, and
hardwar eand softwar eassets
■Protects the underlying digital assets of the organization
■Supports regulatory and best practice r equir ements such as auditability ,security,
responsibility ,and accountability
■Promotes visible risk management
These beneﬁts position the TOGAF Ar chitectur eGovernance Framework as an approach, a
series of processes, a cultural orientation, and a set of owned responsibilities, that together
ensur ethe integrity and effectiveness of the organization’s architectures.
44.3 Architecture Governance in Practice
This section provides practical guidelines for the ef fective implementation of Ar chitecture
Governance
44.3.1 Architecture Governance — Key Success Factors
It is important to consider the following to ensur eas uccessful approach to Ar chitecture
Governance, and to the effective management of the Architectur eContract:
■Best practices for the submission, adoption, r e-use, reporting, and r etirement of
architectur epolicies, pr ocedur es, roles, skills, or ganizational str uctur es, and support
services
■Organizational responsibilities and str uctur es to support the Ar chitectur eGovernance
processes and reporting requirements
■Integration of tools and processes to facilitate the take-up of the processes, both
procedurally and culturally
■Criteria for the contr ol of the Ar chitectur eG overnance processes, dispensations,
compliance assessments, SLAs, and OLAs
■Internal and external r equir ements for the effectiveness, ef ﬁciency ,conﬁdentiality ,integrity,
availability ,compliance, and reliability of all Ar chitectur eGovernance-r elated information,
services, and processes
Part VI: Architecture Capability Frame work 453
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureGovernance in Pr actice Ar chitectureGovernance
44.3.2 Elements of an Effective Architecture Governance Strategy
44.3.2.1 Ar chitectur eGovernance and Corporate Politics
An Enterprise Ar chitectur eimposed without appr opriate political backing is bound to fail. In
order to succeed, the Enterprise Ar chitectur em ust reﬂect the needs of the or ganization.
Enterprise Architects, if they ar enot involved in the development of business strategy ,must at
least have a fundamental understanding of it and of the pr evailing business issues facing the
organization. It may even be necessary for them to be involved in the system deployment
process and to ultimately own the investment and product selection decisions arising fr om the
implementation of the Technology Architecture.
Ther eare three important elements of Ar chitectur eGovernance strategy that relate particularly
to the acceptance and success of ar chitectur ew ithin the enterprise. While r elevant and
applicable in their own right apart from their role in governance, and ther eforedescribed
separately ,they also form an integral part of any effective Architectur eGovernance strategy.
■Across-or ganizational Ar chitectur eBoard(seeChapter 41 )must be established with the
backing of top management to oversee the implementation of the Enterprise Ar chitecture
Governance strategy
■Acompr ehensive set of Ar chitectur ePrinciples (see Chapter 20 )should be established, to
guide, inform, and support the way in which an or ganization sets about fulﬁlling its
mission through the use of IT
■An Ar chitectur eCompliance (see Chapter 42 )strategy should be adopted — speciﬁc
measur es (mor ethan just a statement of policy) to ensur ecompliance with the ar chitecture,
including Project Impact Assessments, a formal Ar chitectur eCompliance review pr ocess,
and possibly including the involvement of the architectur eteam in product procurement
454 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 45
Architectur eMaturity Models
This chapter pr ovides techniques for evaluating and quantifying an organization’s maturity in Enterprise
Architecture.
45.1 Overview
Organizations that can manage change effectively ar egenerally mor esuccessful than those that
cannot. Many organizations know that they need to impr ove their processes in order to
successfully manage change, but don’t know how .Such organizations typically either spend
very little on pr ocess improvement, because they ar eunsur ehow best to proceed; or spend a lot,
on a number of parallel and unfocused efforts, to little or no avail.
Capability Maturity Models (CMMs) address this problem by providing an ef fective and pr oven
method for an organization to gradually gain control over and improve its change pr ocesses.
Such models provide the following beneﬁts:
■They describe the practices that any organization must perform in order to improve its
processes
■They provide a yardstick against which to periodically measur eimprovement
■They constitute a proven framework within which to manage the improvement efforts
■They organize the various practices into levels, each level r epresenting an increased ability
to control and manage the development environment
An evaluation of the or ganization’s practices against the model — called an "assessment" —
determines the level at which the organization curr ently stands. It indicates the or ganization’s
ability to execute in the area concerned, and the practices on which the organization needs to
focus in or der to see the greatest improvement and the highest return on investment. The
beneﬁts of CMMs to effectively direct effort ar ewell documented.
45.2 Background
The Softwar eEngineering Institute (SEI) — www.sei.cmu.edu operated by Carnegie Mellon
University — developed the original CMM (Capability Maturity Model) for Softwar e(SWCMM)
in the early 1990s, which is still widely used today .This CMM provided a framework to develop
maturity models in a wide range of disciplines.
The increasing inter est in applying these techniques to other ﬁelds has resulted in a series of
template tools which assess:
■The state of the architectur eprocesses
Part VI: Architecture Capability Frame work 455
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Background Ar chitectureMaturity Models
■The architecture
■The organization’s buy-in to both
The main issues addressed by these models include:
■Process implementation and audit
■Quality measurements
■People competencies
■Investment management
They involve use of a multiplicity of models, and focus in particular on measuring business
beneﬁts and return on investment.
Aclosely related topic is the Ar chitectur eSkills Framework (see Chapter 46 ), which can be used
to plan the target skills and capabilities r equir ed by an organization to successfully develop and
utilize Enterprise Ar chitectur e, and to determine the training and development needs of
individuals.
45.3 US DoC ACMM Framework
45.3.1 Overview
As an example of the trend towards increased interest in applying CMM techniques to
Enterprise Ar chitectur e, all US Federal agencies ar enow expected to provide maturity models
and ratings as part of their IT investment management and audit requirements.
In particular ,the US Department of Commer ce (DoC) has developed an Ar chitectur eCapability
Maturity Model (ACMM)9to aid in conducting internal assessments. The ACMM provides a
framework that r epresents the key components of a productive Enterprise Ar chitectur eprocess.
The goal is to enhance the overall odds for success of Enterprise Ar chitectur eb yi dentifying
weak areas and pr oviding a deﬁned evolutionary path to improving the overall ar chitecture
process.
The ACMM comprises three sections:
1. The Enterprise Architectur ematurity model
2. Enterprise Architectur echaracteristics of operating units’ processes at dif ferent maturity
levels
3. The Enterprise Architectur eCMM scorecard
The ﬁrst two sections explain the Ar chitectur eCapability maturity levels and the corr esponding
Enterprise Ar chitectur eelement and characteristics for each maturity level to be used as
measur es in the assessment process. The thir dsection is used to derive the Ar chitecture
Capability maturity level that is to be reported to the DoC Chief Information Ofﬁcer (CIO).
9. Refer to ocio.os.doc.gov/ITPolicyandPrograms/Enterprise_Architecture/PROD01_004935 .
456 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureMaturity Models US DoC ACMM F ramework
45.3.2 Elements of the ACMM
The DoC ACMM consists of six maturity levels and nine ar chitectur eelements. The six levels
are:
0N one
1I nitial
2U nder development
3D eﬁned
4M anaged
5M easured
The nine Enterprise Architectur eelements are:
1A rchitectur eprocess
2A rchitectur edevelopment
3B usiness linkage
4S enior management involvement
5O perating unit participation
6A rchitectur ecommunication
7I Tsecurity
8A rchitectur eGovernance
9I Tinvestment and acquisition strategy
Twocomplementary methods ar eused in the ACMM to calculate a maturity rating. The ﬁrst
method obtains a weighted mean Enterprise Ar chitectur ematurity level. The second method
shows the percentage achieved at each maturity level for the nine architectur eelements.
45.3.3 Example: Enterprise Architecture Process Maturity Levels
The following example shows the detailed characteristics of the Enterprise Ar chitectur ematurity
levels as applied to each of the nine elements. For example, Level 3: Deﬁned, point number 8
(Explicit documented governance of majority of IT investments) shows Maturity Level 3’s state
for Element 8 (Architectur eGovernance).
Level 0: None
No Enterprise Architectur eprogram. No Enterprise Architectur et os peak of.
Level 1: Initial
Informal Enterprise Architectur eprocess underway.
1. Pr ocesses ar ead hoc and localized. Some Enterprise Ar chitectur eprocesses ar edeﬁned.
Ther ei sn ou niﬁed ar chitectur eprocess across technologies or business pr ocesses. Success
depends on individual efforts.
2. Enterprise Architectur eprocesses, documentation, and standards ar eestablished by a
variety of ad hoc means and ar elocalized or informal.
Part VI: Architecture Capability Frame work 457
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
US DoC ACMM F ramework Ar chitectureMaturity Models
3. Minimal, or implicit linkage to business strategies or business drivers.
4. Limited management team awareness or involvement in the architectur eprocess.
5. Limited operating unit acceptance of the Enterprise Architectur eprocess.
6. The latest version of the operating unit’s Enterprise Ar chitectur edocumentation is on the
web. Little communication exists about the Enterprise Ar chitectur eprocess and possible
process improvements.
7. IT security considerations are ad hoc and localized.
8. No explicit governance of architectural standards.
9. Little or no involvement of strategic planning and acquisition personnel in the Enterprise
Architectur eprocess. Little or no adherence to existing standards.
Level 2: Under Development
Enterprise Architectur eprocess is under development.
1. Basic Enterprise Ar chitectur eprocess is documented based on OMB Circular A-130 and
Department of Commerce Enterprise Ar chitectur eGuidance. The ar chitectur eprocess has
developed clear roles and responsibilities.
2. IT vision, principles, business linkages, Baseline, and T arget Ar chitectur eare identiﬁed.
Architectur estandar ds exist, but not necessarily linked to T arget Ar chitectur e. Technical
Reference Model (TRM) and Standards Proﬁle framework established.
3. Explicit linkage to business strategies.
4. Management awareness of architectur eeffort.
5. Responsibilities areassigned and work is underway.
6. The DoC and operating unit Enterprise Ar chitectur eweb pages ar eupdated periodically
and ar eused to document architectur edeliverables.
7. IT security architectur ehas deﬁned clear roles and responsibilities.
8. Governance of a few ar chitectural standards and some adherence to existing Standar ds
Proﬁle.
9. Little or no formal governance of IT investment and acquisition strategy .Operating unit
demonstrates some adherence to existing Standards Proﬁle.
Level 3: Deﬁned
Deﬁned Enterprise Architectur eincluding detailed written procedures and TRM.
1. The architectur ei sw ell deﬁned and communicated to IT staf fand business management
with operating unit IT responsibilities. The process is largely followed.
2. Gap analysis and Migration Plan ar ecompleted. Fully developed TRM and Standar ds
Proﬁle. IT goals and methods ar eidentiﬁed.
3. Enterprise Architectur ei si ntegrated with capital planning and investment control.
4. Senior management team awar eo fa nd supportive of the enterprise-wide ar chitecture
process. Management actively supports architectural standards.
5. Most elements of operating unit show acceptance of or ar eactively participating in the
Enterprise Architectur eprocess.
458 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureMaturity Models US DoC ACMM F ramework
6. Ar chitectur edocuments updated regularly on DoC Enterprise Architectur eweb page.
7. IT security ar chitectur eStandar ds Proﬁle is fully developed and is integrated with
Enterprise Architecture.
8. Explicit documented governance of majority of IT investments.
9. IT acquisition strategy exists and includes compliance measur es to IT Enterprise
Architecture. Cost beneﬁts ar econsidered in identifying projects.
Level 4: Managed
Managed and measured Enterprise Architectur eprocess.
1. Enterprise Architectur eprocess is part of the culture. Quality metrics associated with the
architectur eprocess ar ecaptured.
2. Enterprise Architectur edocumentation is updated on a r egular cycle to reﬂect the
updated Enterprise Ar chitectur e. Business, Data, Application, and T echnology
Architectures deﬁned by appropriate de jure and de facto standards.
3. Capital planning and investment control ar eadjusted based on the feedback r eceived and
lessons learned from updated Enterprise Ar chitectur e. Periodic re-examination of
business drivers.
4. Senior management team directly involved in the architectur ereview process.
5. The entir eoperating unit accepts and actively participates in the Enterprise Ar chitecture
process.
6. Ar chitectur edocuments ar eupdated r egularly ,and frequently r eviewed for latest
architectur edevelopments/standards.
7. Performance metrics associated with IT security architectur eare captured.
8. Explicit governance of all IT investments. Formal pr ocesses for managing variances feed
back into Enterprise Architecture.
9. All planned IT acquisitions and pur chases ar eguided and governed by the Enterprise
Architecture.
Level 5: Measured
Continuous improvement of Enterprise Architectur eprocess.
1. Concerted efforts to optimize and continuously improve architectur eprocess.
2. A standards and waivers process is used to improve architectur edevelopment process.
3. Ar chitectur eprocess metrics ar eused to optimize and drive business linkages. Business
involved in the continuous process improvements of Enterprise Architecture.
4. Senior management involvement in optimizing process improvements in ar chitecture
development and governance.
5. Feedback on ar chitectur eprocess fr om all operating unit elements is used to drive
architectur eprocess improvements.
6. Ar chitectur edocuments ar eused by every decision-maker in the organization for every
IT-related business decision.
Part VI: Architecture Capability Frame work 459
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
US DoC ACMM F ramework Ar chitectureMaturity Models
7. Feedback from IT security ar chitectur emetrics ar eused to drive ar chitectur eprocess
improvements.
8. Explicit governance of all IT investments. A standar ds and waivers process is used to
make governance-process improvements.
9. No unplanned IT investment or acquisition activity.
45.4 Capability Maturity Models Integration (CMMI)
45.4.1 Introduction
The capability models that the SEI is curr ently involved in developing, expanding, or
maintaining include the following:
■CMMI (Capability Maturity Model Integration)
■IPD-CMM®(Integrated Product Development Capability Maturity Model)
■P-CMM®(People Capability Maturity Model)
■SA-CMM®(Softwar eAcquisition Capability Maturity Model)
■SE-CMM®(Systems Engineering Capability Maturity Model)
■SW-CMM®(Capability Maturity Model for Software)
As explained in this chapter ,i nr ecent years the industry has witnessed signiﬁcant gr owth in the
area of maturity models. The multiplicity of models available has led to pr oblems of its own, in
terms of how to integrate all the dif ferent models to produce a meaningful metric for overall
process maturity.
In response to this need, the SEI has developed a Framework called Capability Maturity Model
Integration (CMMI), to provide a means of managing the complexity.
Accor ding to the SEI, the use of the CMMI models impr oves on the best practices of pr evious
models in many important ways, in particular enabling organizations to:
■Moreexplicitly link management and engineering activities to business objectives
■Expand the scope of and visibility into the pr oduct lifecycle and engineering activities to
ensur ethat the product or service meets customer expectations
■Incorporate lessons learned from additional ar eas of best practice (e.g., measurement, risk
management, and supplier management)
■Implement mor erobust high-maturity practices
■Address additional organizational functions critical to its products and services
■Morefully comply with relevant ISO standards
CMMI is being adopted worldwide.
460 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureMaturity Models Capability Maturity Models Integration (CMMI)
45.4.2 SCAMPI Method
The Standar dCMMI Appraisal Method for Process Improvement (SCAMPI®)i st he appraisal
method associated with CMMI. The SCAMPI appraisal method is used to identify str engths,
weaknesses, and ratings relative to CMMI r eference models. It incorporates best practices found
successful in the appraisal community ,and is based on the features of several legacy appraisal
methods. It is applicable to a wide range of appraisal usage modes, including both internal
process improvement and external capability determinations.
The SCAMPI method deﬁnition document10describes the r equir ements, activities, and practices
associated with each of the processes that compose the SCAMPI method.
45.5 Conclusions
This section has sought to intr oduce into the TOGAF standar dthe topic of CMM-based methods
and techniques for use in relation to Enterprise Architecture.
The beneﬁts of using CMMs ar ewell documented. Futur eversions of the TOGAF standar dmay
include a maturity model to measur eadoption of the TOGAF standar ditself.
10.Av ailable atwww.sei.cmu.edu/publications/documents/01.reports/01hb001.html .
Part VI: Architecture Capability Frame work 461
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureMaturity Models
462 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Chapter 46
Architectur eSkills Framework
This chapter provides a set of role, skill, and experience norms for staf fundertaking Enterprise
Architectur ework.
46.1 Introduction
Skills frameworks pr ovide a view of the competency levels r equir ed for speciﬁc roles. They
deﬁne:
■The roles within a work area
■The skills required by each role
■The depth of knowledge required to fulﬁl the role successfully
They ar erelatively common for deﬁning the skills r equir ed for a consultancy and/or pr oject
management assignment, to deliver a speciﬁc pr oject or work package. They ar ealso widely
used by recruitment and search agencies to match candidates and roles.
Their value derives from their ability to pr ovide a means of rapidly identifying skill matches and
gaps. Successfully applied, they can ensur ethat candidates ar eﬁ tf or the jobs assigned to them.
Their value in the context of Enterprise Ar chitectur earises from the immaturity of the Enterprise
Architectur ediscipline, and the problems that arise from this.
46.2 Need for an Enterprise Architecture Skills Framework
46.2.1 Deﬁnitional Rigor
"Enterprise Ar chitectur e" and "Enterprise Ar chitect" ar ewidely used but poorly deﬁned terms in
industry today .They ar eused to denote a variety of practices and skills applied in a wide
variety of ar chitectur edomains. Ther eisan eed for better classiﬁcation to enable mor eimplicit
understanding of what type of architecture/architect is being described.
This lack of uniformity leads to dif ﬁculties for organizations seeking to r ecruit or
assign/pr omote staf ft oﬁ ll positions in the ar chitectur eﬁeld. Because of the dif ferent usage of
terms, ther ei so ften misunderstanding and miscommunication between those seeking to r ecruit
for,and those seeking to ﬁll, the various roles of the architect.
Part VI: Architecture Capability Frame work 463
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Need for an Enterprise Ar chitectureSkills Framework Ar chitectureSkills Framework
46.2.2 Basis of an Internal Architecture Practice
Despite the lack of uniform terminology ,architectur eskills ar ei ni ncreasing demand, as the
discipline of architectur egains increasing attention within industry.
Many enterprises have set up, or ar econsidering setting up, an Enterprise Ar chitectur epractice,
as a means of fostering development of the necessary skills and experience among in-house staf f
to undertake the various architecting tasks required by the enterprise.
An Enterprise Ar chitectur epractice is a formal pr ogram of development and certiﬁcation, by
which an enterprise formally r ecognizes the skills of its practicing architects, as demonstrated by
their work. Such a pr ogram is essential in order to ensur ethe alignment of staf fskills and
experience with the architectur etasks that the enterprise wishes to be performed.
The role and skill deﬁnitions on which such a pr ogram needs to be based ar ealso r equir ed, by
both r ecruiting and supplying or ganizations, in cases wher eexternal personnel ar et ob e
engaged to perform architectur ework (for example, as part of a consultancy engagement).
An Enterprise Ar chitectur epractice is both dif ﬁcult and costly to set up. It is normally built
around a process of peer r eview ,and involves the time and talent of the strategic technical
leadership of an enterprise. Typically it involves establishment of a peer review board, and
documentation of the process, and of the r equir ements for internal certiﬁcation. Time is also
required of candidates to pr epar efor peer r eview ,b yc reating a portfolio of their work to
demonstrate their skills, experiences, and contributions to the profession.
The TOGAF Ar chitectur eSkills Framework attempts to address this need by pr oviding
deﬁnitions of the ar chitecting skills and proﬁciency levels r equir ed of personnel, internal or
external, who ar etoperform the various architecting roles deﬁned within the T OGAF
framework.
Because of the complexity ,time, and cost involved, many enterprises do not have an internal
Enterprise Architect certiﬁcation program, pr eferring instead to simply interview and r ecruit
architectur estaffo na nad hoc basis. Ther eare serious risks associated with this approach:
■Communication between r ecruiting organizations, consultancies, and employment
agencies is very difﬁcult
■Time is wasted interviewing staf fwho may have applied in all good faith, but still lack the
skills and/or experience required by the employer
■Staffthat ar ecapable of ﬁlling ar chitectur eroles may be overlooked, or may not identify
themselves with advertised positions and hence not even apply
■Ther ei si ncreased risk of unsuitable personnel being employed or engaged, thr ough no-
one’s fault, and despite everyone involved acting in good faith
This in turn can:
—Increase personnel costs, through the need to rehir eo rr eassign staff
—A dversely impact the time, cost, and quality of operational IT systems, and the
projects that deliver them
464 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureSkills Framework Goals/Rationale
46.3 Goals/Rationale
46.3.1 Certiﬁcation of Enterprise Architects
The main purpose behind an enterprise setting up an internal Enterprise Ar chitect certiﬁcation
program is two-fold:
1. T oformally recognize the skill of its practicing ar chitects, as part of the task of
establishing and maintaining a professional architecting organization
2. T oensur ethe alignment of necessary staf fskills and experience with the ar chitecture
tasks that the enterprise wishes to be performed, whether these ar et ob ep erformed
internally to the enterprise or externally; for example, as part of a consultancy
engagement
46.3.2 Speciﬁc Beneﬁts
Speciﬁc beneﬁts anticipated from use of the TOGAF Architectur eSkills Framework include:
■Reduced time, cost, and risk in training, hiring, and managing ar chitectur eprofessionals,
both internal and external:
—S impliﬁes communication between r ecruiting organizations, consultancies, and
employment agencies
—A voids wasting time interviewing staf fwho may have applied in all good faith, but
still lack the skills and/or experience required by the employer
—A voids staf fwho ar ecapable of ﬁlling ar chitectur eroles being overlooked, or not
identifying themselves with advertised positions and hence not even applying
■Reduced time and cost to set up an internal architectur epractice:
—M any enterprises do not have an internal ar chitectur epractice due to the complexity
involved in setting one up, preferring instead to simply interview and r ecruit
architectur estaffo na nad hoc basis
—B yproviding deﬁnitions of the architecting skills and proﬁciency levels r equir ed of
personnel who ar et op erform the various architecting roles deﬁned within the
TOGAF standard, the Ar chitectur eSkills Framework gr eatly reduces the time, cost,
and risk of setting up a practice for the ﬁrst time, and avoids "re-inventing wheels"
—E nterprises that already have an internal ar chitectur epractice ar eable to set
enterprise-wide norms, but still experience dif ﬁculties as outlined above in r ecruiting
staff, or engaging consultants, from external sources, due to the lack of uniformity
between different enterprises
By aligning its existing skills framework with the industry-accepted deﬁnitions
provided by The Open Group, an enterprise can greatly simplify these problems.
■Reduced time and cost to implement an ar chitectur epractice helps r educe the time, cost,
and risk of overall solution development:
—E nterprises that do not have an internal ar chitectur epractice r un the risk of
unsuitable personnel being employed or engaged, thr ough no-one’s fault, and
despite everyone involved acting in good faith
The r esultant time and cost penalties far outweigh the time and cost of having an
internal architectur epractice:
Part VI: Architecture Capability Frame work 465
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Goals/Rationale Ar chitectureSkills Framework
—P ersonnel costs ar eincreased, through the occasional need to r ehireo rr eassign
staff
—E ven mor eimportant is the adverse impact on the time, cost, and quality of
operational IT systems, and the projects to deliver them, r esulting from poor
staffassignments
46.4 Enterprise Architecture Role and Skill Categories
46.4.1 Overview
This section describes the role of an Enterprise Ar chitect, the fundamental skills r equir ed, and
some possible disciplines in which an Enterprise Architect might specialize.
The TOGAF standar ddelivers an Enterprise Ar chitectur e, and ther eforerequir es both business
and IT-trained professionals to develop the Enterprise Architecture.
The TOGAF Ar chitectur eSkills Framework pr ovides a view of the competency levels for speciﬁc
roles within the Enterprise Architectur eteam. The Framework deﬁnes:
■The roles within an Enterprise Architectur ework area
■The skills required by those roles
■The depth of knowledge required to fulﬁl each role successfully
The value is in providing a rapid means of identifying skills and gaps. Successfully applied, the
Framework can be used as a measur efor:
■Staffdevelopment
■Ensuring that the right person does the right job
46.4.2 TOGAF Roles
Atypical ar chitectur eteam undertaking the development of an Enterprise Ar chitectur eas
described in the TOGAF standar dwould comprise the following roles:
■Architectur eBoardMembers
■Architectur eSponsor
■Architectur eManager
■Architects for:
—E nterprise Ar chitectur e(which for the purpose of the tables shown below can be
consider ed as a superset of Business, Data, Application, and T echnology
Architecture)
—B usiness Architecture
—D ata Architecture
—A pplication Architecture
—T echnology Architecture
■Program and/or Project Managers
466 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureSkills Framework Enterprise ArchitectureRole and Skill Categories
■IT Designer
■And many others . ..
The tables that follow show ,for each of these roles, the skills r equir ed and the desirable level of
proﬁciency in each skill.
Of all the r oles listed above, the one that needs particularly detailed analysis and deﬁnition is of
course the central role of Enterprise Ar chitect. As explained above, "Enterprise Ar chitectur e" and
"Enterprise Architect" ar eterms that ar every widely used but very poorly deﬁned in industry
today ,denoting a wide variety of practices and skills applied in a wide variety of ar chitecture
domains. Ther ei so ften confusion between the role of an architect and that of a designer or
builder .Many of the skills r equir ed by an Enterprise Architect ar ealso r equir ed by the designer ,
who delivers the solutions. While their skills ar ecomplementary ,those of the designer ar e
primarily technology-focused and translate the architectur einto deliverable components.
The ﬁnal subsection below ther eforeexplor es in some detail the generic characteristics of the
role of Enterprise Architect, and the key skill r equir ements, whatever the particular ar chitecture
domain (Enterprise Ar chitectur e, Business Ar chitectur e, Data Ar chitectur e, Application
Architecture, Technology Architecture, etc.).
46.4.3 Categories of Skills
The TOGAF team skill set will need to include the following main categories of skills:
■Generic Skills :—t ypically comprising leadership, teamworking, inter-personal skills, etc.
■Business Skills & Methods :—t ypically comprising business cases, business pr ocess,
strategic planning, etc.
■Enterprise Architecture Skills :—t ypically comprising modeling, building block design,
applications and role design, systems integration, etc.
■Program or Project Management Skills :—t ypically comprising managing business
change, project management methods and tools, etc.
■IT General Knowledge Skills :— typically comprising brokering applications, asset
management, migration planning, SLAs, etc.
■Technical IT Skills :—t ypically comprising softwar eengineering, security ,data
interchange, data management, etc.
■Legal Environment :—t ypically comprising data protection laws, contract law ,
procurement law ,fraud, etc.
The tables that follow illustrate each of these categories of skills.
The tables that follow show ,for each of these skills, the roles to which they ar erelevant and the
desirable level of proﬁciency in each skill.
Part VI: Architecture Capability Frame work 467
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Enterprise Ar chitectureRole and Skill Cate gories Ar chitectureSkills Framework
46.4.4 Proﬁciency Levels
The TOGAF Ar chitectur eSkills Framework identiﬁes four levels of knowledge or pr oﬁciency in
any area:
1
2
3
4Level Achievement Description
Background
Awareness
Knowledge
ExpertNot a required skill, though should be able to define and manage skill
if required.
Understands the background, issues, and implications sufficiently to be
able to understand how to proceed further and advise client accordingly.
Detailed knowledge of subject area and capable of providing professional
advice and guidance. Ability to integrate capability into architecture design.
Extensive and substantial practical experience and applied knowledge
on the subject.© The Open Group
46.5 Enterprise Architecture Role and Skill Deﬁnitions
46.5.1 Generic Skills
11
2 2
2222
33
333 3 3
33
33
33
333
3 33 3
33 3
3 34
4 44 4
4
4
4
4
4
4
44
4
4
4
44
4
4
4
44
4
4
4
44
4
4
4
44
4
4
4
4
44Roles
Generic SkillsArchitecture
Board
MemberArchitecture
SponsorEnterprise
Architecture
ManagerEnterprise
Architecture
TechnologyEnterprise
Architecture
DataEnterprise
Architecture
ApplicationsEnterprise
Architecture
BusinessProgram/
Project
ManagerIT
Designer
Leadership
Teamwork
Inter-personal
Oral Communications
Written Communications
Logical Analysis
Stakeholder Management
Risk Management
© The Open Group
468 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureSkills Framework Enterprise ArchitectureRole and Skill Deﬁnitions
46.5.2 Business Skills & Methods
11 22 2
2
2
2
22 2 2 222
3
3
33 3 333 3
3
33333
3
3
3 3
3
33
3
333
333 3
3
3
3
333
3
3333
33
3
3 34 4
4
4
444
444 4
4
4
44
4
44
4 4
44 4
4
44
44
4
4 4 4
4 444
4
4Roles
Business Skills & MethodsArchitecture
Board
MemberArchitecture
SponsorEnterprise
Architecture
ManagerEnterprise
Architecture
TechnologyEnterprise
Architecture
DataEnterprise
Architecture
ApplicationsEnterprise
Architecture
BusinessProgram/
Project
ManagerIT
Designer
Business Case
Business Scenario
Organization
Business Process
Strategic Planning
Budget Management
Visioning
Business Metrics
Business Culture
Legacy Investments
Business Functions
© The Open Group
46.5.3 Enterprise Architecture Skills
11 11 11 11 11 1
1 1
1 1
11 1
12 2
2 22 2
2
2
2
2
22
22
2
2
22 222
22
2 22
22
2
22222222 2
3
3
33
33 3
3
33
3333
333
3
33
3
3
3
3
33
33
33 3
3
3
3 33 3 3 34
4
4
4
4
4
4
4
4
444
4
4
44
44 4
4
44
4
4
4
4
444 4
4
4
4
4
4
444
444
4 4
4
4
4
4
4
4
4 44
444
4
4Roles
Enterprise Architecture SkillsArchitecture
Board
MemberArchitecture
SponsorEnterprise
Architecture
ManagerEnterprise
Architecture
TechnologyEnterprise
Architecture
DataEnterprise
Architecture
ApplicationsEnterprise
Architecture
BusinessProgram/
Project
ManagerIT
Designer
Business Modeling
Business Process Design
Role Design
Organization Design
Data Design
Application Design
Systems Integration
IT Industry Standards
Services Design
Architecture Principles Design
Building Block Design
Solutions Modeling
Benefits Analysis
Business Interworking
Systems Behavior
Project ManagementArchitecture Views &
Viewpoints Design
© The Open Group
Part VI: Architecture Capability Frame work 469
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Enterprise Ar chitectureRole and Skill Deﬁnitions Ar chitectureSkills Framework
46.5.4 Program or Project Management Skills
11
22
2
2
2
22
33
33
33 3
3 33
33
3
33
333
3
33
33
3
3 4
4 4 44 4
44
44
4Roles
Program or Project Management SkillsArchitecture
Board
MemberArchitecture
SponsorEnterprise
Architecture
ManagerEnterprise
Architecture
TechnologyEnterprise
Architecture
DataEnterprise
Architecture
ApplicationsEnterprise
Architecture
BusinessProgram/
Project
ManagerIT
Designer
Program Management
Project Management
Managing Business Change
Change Management
Value Management
© The Open Group
46.5.5 IT General Knowledge Skills
1
1
1
11
1
1
1
11 11 11 11
1
11
11
1
11
1 1
1
1
11 1
12 2 2
22
2
2222222222222
2
22
2
2
2222222
333 3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
3
33
33
33
33
3333
3
3 33
3 3
33
3
3
33
3
3
3
33
3
3
3334
4
4
4
4
4
44
44 4
4
44
4
4
444
4
4
44
44
4
4
4
4
4
4
4
4
444
4Roles
IT General Knowledge SkillsArchitecture
Board
MemberArchitecture
SponsorEnterprise
Architecture
ManagerEnterprise
Architecture
TechnologyEnterprise
Architecture
DataEnterprise
Architecture
ApplicationsEnterprise
Architecture
BusinessProgram/
Project
ManagerIT
Designer
IT Application Development
Methodologies & Tools
Programming Languages
Brokering Applications
Information Consumer
Applications
Information Provider
Applications
Storage Management
Networks
Web-based Services
IT Infrastructure
Asset Management
Service Level Agreements
Systems
COTS
Enterprise Continuums
Migration Planning
Management Utilities
Infrastructure
© The Open Group
470 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureSkills Framework Enterprise ArchitectureRole and Skill Deﬁnitions
46.5.6 T echnical IT Skills
1
1
1
11
1
1
1
11 11 11 111 1
1
11
11
1
1 122
2222222 222
222
2
22222
3
3
3
3
3
333
3
3
3
3
33
3
3
3
3
3
3
3
3
3
3
333
33
3333
33
3
33
3
3
3
3
3
33
3
3
3
344
44
44 4
4
4
444
4 4
4
4
4
4
4
44Roles
Technical IT SkillsArchitecture
Board
MemberArchitecture
SponsorEnterprise
Architecture
ManagerEnterprise
Architecture
TechnologyEnterprise
Architecture
DataEnterprise
Architecture
ApplicationsEnterprise
Architecture
BusinessProgram/
Project
ManagerIT
Designer
SecuritySoftware Engineering
Systems & Network
Management
User InterfaceLocation & DirectoryTransaction Processing
International Operations
Data Interchange
Data Management
Graphics & Image
Operating System Services
Network Services
Communications Infrastructure
© The Open Group
46.5.7 Legal Environment
2 2
22
22 2
222 2 2 2 2
2
22 2
233 3
3
3 33
3 3 33 3
3
3
3 33
33
34
4Roles
Legal EnvironmentArchitecture
Board
MemberArchitecture
SponsorEnterprise
Architecture
ManagerEnterprise
Architecture
TechnologyEnterprise
Architecture
DataEnterprise
Architecture
ApplicationsEnterprise
Architecture
BusinessProgram/
Project
ManagerIT
Designer
Data Protection LawContract Law
Commercial LawFraudProcurement Law1
1
1
1
© The Open Group
Part VI: Architecture Capability Frame work 471
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Enterprise Ar chitectureRole and Skill Deﬁnitions Ar chitectureSkills Framework
46.6 Generic Role and Skills of the Enterprise Architect
Of all the roles listed above, the one that needs particularly detailed analysis and deﬁnition is, of
course, the central role of Enterprise Architect. As explained above, "Enterprise Ar chitecture"
and "Enterprise Architect" ar eterms that ar every widely used but very poorly deﬁned in
industry today ,denoting a wide variety of practices and skills applied in a wide variety of
architectur edomains.
This section ther eforeexplor es in some detail the generic characteristics of the role of Enterprise
Architect, and some key skill r equir ements, whatever the particular ar chitectur edomain
(Enterprise Ar chitectur e, Business Ar chitectur e, Data Ar chitectur e, Application Ar chitecture,
Technology Architecture, etc.).
46.6.1 Generic Role
Enterprise Architects ar evisionaries, coaches, team leaders, business-to-technical liaisons,
computer scientists, and industry experts.
The following is effectively a job description for an Enterprise Architect:
"The architect has a r esponsibility for ensuring the completeness (ﬁtness-for-purpose) of
the ar chitectur e, in terms of adequately addressing all the pertinent concerns of its
stakeholders; and the integrity of the ar chitectur e, in terms of connecting all the various
views to each other ,satisfactorily r econciling the conﬂicting concerns of dif ferent
stakeholders, and showing the trade-of fs made in so doing (as between security and
performance, for example).
The choice of which particular ar chitectur eviews to develop is one of the key decisions
that the Enterprise Ar chitect has to make. The choice has to be constrained by
considerations of practicality ,and by the principle of ﬁtness-for-purpose (i.e., the
architectur eshould be developed only to the point at which it is ﬁt-for -purpose, and not
reiterated ad inﬁnitum as an academic exercise)."
The role of the Enterprise Architect is mor elike that of a city planner than that of a building
architect, and the product of the Enterprise Architect is mor eaptly characterized as a planned
community (as opposed to an unconstrained urban sprawl), rather than as a well-designed
building or set of buildings.
An Enterprise Architect does not cr eate the technical vision of the enterprise, but has
professional r elationships with executives of the enterprise to gather and articulate the technical
vision, and to produce the strategic plan for realizing it. This plan is always tied to the business
plans of the enterprise, and design decisions ar etraceable to the business plan.
The strategic plan of the Enterprise Architect is tied to the Ar chitectur eGovernance process (see
Chapter 44 )for the enterprise, so design decisions ar enot circumvented for tactical convenience.
The Enterprise Architect pr oduces documentation of design decisions for application
development teams or product implementation teams to execute.
An ar chitect is involved in the entir eprocess; beginning with working with the customer to
understand real needs, as opposed to wants, and then throughout the process to translate those
needs into capabilities veriﬁed to meet the needs. Additionally ,the architect may pr esent
differ ent models to the customer that communicate how those needs may be met, and is
therefor ea ne ssential participant in the consultative selling process.
However ,the architect is not the builder ,and must r emain at a level of abstraction necessary to
ensur ethat they do not get in the way of practical implementation.
472 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureSkills Framework Generic Role and Skills of the Enterprise Ar chitect
The following excerpt fr omThe Art of Systems Ar chitecting (Rechtin and Maier ,2000) depicts this
notion:
"It is the responsibility of the architect to know and concentrate on the critical few details
and interfaces that really matter ,and not to become overloaded with the rest."
The architect’s focus is on understanding what it takes to satisfy the client, wher equalitative
worth is used mor ethan quantitative measures. The architect uses mor einductive skills than the
deductive skills of the builder .The architect deals mor ewith guidelines, rather than rules that
builders use as a necessity.
It also must be clear that the r ole of an architect may be performed by an engineer .Ag oal of this
document is to describe the role — what should be done, regardless of who is performing it.
Thus, the role of the architect can be summarized as to:
■Understand and interpret requirements :probe for information, listen to information,
inﬂuence people, facilitate consensus building, synthesize and translate ideas into
actionable r equir ements, articulate those ideas to others, and identify use or purpose,
constraints, risks, etc.
The architect participates in the discovery and documentation of the customer ’s business
scenarios that ar edriving the solution. The architect is responsible for r equirements
understanding and embodies that r equir ements understanding in the ar chitecture
speciﬁcation.
■Create a useful model :take the r equir ements and develop well-formulated models of the
components of the solution, augmenting the models as necessary to ﬁt all of the
circumstances, and show multiple views thr ough models to communicate the ideas
effectively
The architect is responsible for the overall ar chitectur eintegrity and maintaining the vision
of the of fering from an architectural perspective. The architect also ensures leverage
opportunities ar eidentiﬁed, using building blocks, and is a liaison between the functional
groups (especially development and marketing) to ensur ethat the leverage opportunities
arerealized. The architect provides and maintains these models as a framework for
understanding the domain(s) of development work, guiding what should be done within
the organization, or outside the or ganization. The architect must r epresent the or ganization
view of the architectur eb yu nderstanding all the necessary business components.
■Validate, reﬁne, and expand the model :verify assumptions, bring in subject matter
experts, etc. in order to improve the model and to further deﬁne it, adding as necessary
new ideas to make the r esult mor eﬂexible and mor etightly linked to current and expected
requirements
The architect additionally should assess the value of solution-enhancing developments
emanating from ﬁeld work and incorporate these into the ar chitectur em odels as
appropriate.
■Manage the architecture :continuously monitor the models and update them as necessary
to show changes, additions, and alterations
Repr esent ar chitectur eand issues during development and decision points of the pr ogram.
The architect is an "agent of change", r epresenting that need for the implementation of the
architectur e. Through this development cycle, the ar chitect continuously fosters the
sharing of customer ,architecture, and technical information between organizations.
Part VI: Architecture Capability Frame work 473
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Generic Role and Skills of the Enterprise Ar chitect Ar chitectureSkills Framework
46.6.2 Characterization in Terms of the Enterprise Continuum
Under certain circumstances, the complexity of a solution may r equir eadditional architects to
support the ar chitectur eeffort. The dif ferent categories of architects ar edescribed below ,but as
they ar earchitects, they all perform the tasks described above. Any combination of Enterprise,
Enterprise Solution, and Solution Architects may be utilized, as a team. In such cases each
member may have a speciﬁc focus, if not speciﬁc r oles and responsibilities, within the phases of
the development pr ocess. In cases wher eat eam of architects is deemed necessary ,al ead
Enterprise Architect should be assigned to manage and lead the team members.
■The Enterprise Architect has the r esponsibility for architectural design and documentation
at a landscape and technical reference model level
The Enterprise Architect often leads a group of the Segment Architects and/or Solution
Architects related to a given program. The focus of the Enterprise Ar chitect is on
enterprise-level business functions required.
■The Segment Architect has the r esponsibility for architectural design and documentation
of speciﬁc business problems or organizations
ASegment Architect re-uses the output fr om all other architects, joining detailed technical
solutions to the overall ar chitectural landscape. The focus of the Segment Architect is on
enterprise-level business solutions in a given domain, such as ﬁnance, human r esources,
sales, etc.
■The Solution Architect has the r esponsibility for architectural design and documentation
at a system or subsystem level, such as management or security
ASolution Architect may shield the Enterprise/Segment Ar chitect from the unnecessary
details of the systems, products, and/or technologies. The focus of the Solution Architect is
on system technology solutions; for example, a component of a solution such as enterprise
data warehousing.
46.6.3 Key Characteristics of an Enterprise Architect
46.6.3.1 Skills and Experience in Producing Designs
An Enterprise Architect must be proﬁcient in the techniques that go into pr oducing designs of
complex systems, including r equir ements discovery and analysis, formulation of solution
context, identiﬁcation of solution alternatives and their assessment, technology selection, and
design conﬁguration.
46.6.3.2 Extensive Technical Breadth, with Technical Depth in One or a Few Disciplines
An Enterprise Architect should possess an extensive technical br eadth through experience in the
IT industry .This breadth should be in areas of application development and deployment, and in
the areas of creation and maintenance of the infrastr uctur et os upport the complex application
envir onment. Current IT environments ar eheterogeneous by nature, and the experienced
Enterprise Architect will have skills acr oss multiple platforms, including distributed systems
and traditional mainframe environments. Enterprise Architects will have, as a result of their
careers, skills in at least one discipline that is consider ed to be at the level of a subject matter
expert.
474 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
ArchitectureSkills Framework Generic Role and Skills of the Enterprise Ar chitect
46.6.3.3 Method-Driven Approach to Execution
Enterprise Architects appr oach their job through the consistent use of recognized design
methods such as the TOGAF Ar chitectur eDevelopment Method (ADM). Enterprise Ar chitects
should have working knowledge of mor ethan one design method and be comfortable
deploying parts of methods appr opriate to the situation in which they ar eworking. This should
be seen in the body of design work the Enterprise Ar chitect has produced through r epeated
successful use of mor ethan one design method. Proﬁciency in methodology use is in knowing
what parts of methods to use in a given situation, and what methods not to use.
46.6.3.4 Full Project Scope Experience
While Enterprise Architects ar eresponsible for design and hand-of fo ft he project to
implementors, it is vital that they have experience with all aspects of a project from design
through development, testing, implementation, and pr oduction. This scope of experience will
serve to keep Enterprise Architects grounded in the notion of ﬁtness-for-purpose and the
practical natur eo fs ystem implementation. The impact of full project scope experience should
lead the Enterprise Architect to make better design decisions, and better inform the trade-of fs
made in those decisions.
46.6.3.5 Leadership
Communication and team building ar ekey to the successful r ole of the Enterprise Architect. The
mix of good technical skill and the ability to lead ar ecrucial to the job. The Enterprise Ar chitect
should be viewed as a leader in the enterprise by the IT organization, the clients they serve, and
management.
46.6.3.6 Personal and Professional Skills
The Enterprise Architect must have strong communications and relationship skills. A major task
of the Enterprise Architect is to communicate complex technical information to all stakeholders
of the pr oject, including those who do not have a technical background. Strong negotiation and
problem-solving skills ar ealso r equir ed. The Enterprise Ar chitect must work with the pr oject
management team to make decisions in a timely manner to keep projects on track.
46.6.3.7 Skills and Experience in One or Mor eIndustries
Industry skill and experience will make the task of gathering r equir ements and deciding
priorities easier and mor eeffective for the Enterprise Ar chitect. Enterprise Architects must
understand the business pr ocesses of the enterprise in which they work, and how those
processes work with other peer enterprises in the industry .They should also be able to spot key
trends and correct ﬂawed processes, giving the IT organization the capability to lead the
enterprise, not just respond to r equests. The mission of the Enterprise Architect is strategic
technical leadership.
Part VI: Architecture Capability Frame work 475
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Conclusions Ar chitectureSkills Framework
46.7 Conclusions
The TOGAF Ar chitectur eSkills Framework pr ovides an assessment of the skills r equir ed to
deliver a successful Enterprise Architecture.
It is hoped that the pr ovision of this Ar chitectur eSkills Framework will help reduce the time,
cost, and risk involved in training, r ecruiting, and managing IT ar chitectur eprofessionals, and at
the same time enable and encourage mor eorganizations to institute an internal IT ar chitecture
practice, hopefully based on (or at least leveraging) the role and skill deﬁnitions provided.
476 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
The TOGAF Standard, Version 9.2
Part VII:
Appendices
The Open Group
Part VII: Appendices 477
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
478 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Appendix A
Glossary of Supplementary Deﬁnitions
This appendix contains additional deﬁnitions to supplement the deﬁnitions contained in Chapter 3 .
A.1 Application Software
Softwar eentities which have a speciﬁc business purpose.
A.2 A vailability
In the context of IT systems, the probability that system functional capabilities ar eready for use
by a user at any time, wher eall time is considered, including operations, r epair ,administration,
and logistic time. A vailability is further deﬁned by system category for both routine and priority
operations.
A.3 Business System
Hardwar e, software, policy statements, processes, activities, standar ds, and people which
together implement a business function.
A.4 Catalog
Astructur ed list of ar chitectural outputs of a similar kind, used for r eference. For example, a
technology standards catalog or an application portfolio.
A.5 Client
An application component which requests services from a server.
A.6 COBIT
An acronym for Control OBjectives for Information and r elated T echnology ,created by the
Information Systems Audit and Contr ol Association (ISACA) and the IT Governance Institute
(ITGI), which provides a set of recommended best practices for the governance/management of
information systems and technology.
Part VII: Appendices 479
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Conﬁguration Mana gement Glossary of Supplementary Deﬁnitions
A.7 Conﬁguration Management
Adiscipline applying technical and administrative direction and surveillance to:
■Identify and document the functional and physical characteristics of a conﬁguration item
■Control changes to those characteristics
■Recor dand report changes to processing and implementation status
Also, the management of the conﬁguration of Enterprise Ar chitectur epractice (intellectual
property) assets and baselines and the control of change over of those assets.
A.8 Contract
An agreement between a service consumer and a service pr ovider that establishes functional
and non-functional parameters for interaction.
A.9 Control
Ad ecision-making step with accompanying decision logic used to determine execution
appr oach for a process or to ensur ethat a process complies with governance criteria. For
example, a sign-of fcontrol on the purchase request processing process that checks whether the
total value of the request is within the sign-of flimits of the r equester ,o rw hether it needs
escalating to higher authority.
A.10 CxO
The chief of ﬁcer within a particular function of the business; e.g., Chief Executive Of ﬁcer,Chief
Financial Ofﬁcer ,Chief Information Ofﬁcer ,Chief Technology Ofﬁcer.
A.11D ata Dictionary
Aspecialized type of database containing metadata; a repository of information describing the
characteristics of data used to design, monitor ,document, protect, and control data in
information systems and databases; an application system supporting the deﬁnition and
management of database metadata.
A.12 Data Element
Abasic unit of information having a meaning and that may have subcategories (data items) of
distinct units and values.
A.13 Data Entity
An encapsulation of data that is recognized by a business domain expert as a thing. Logical data
entities can be tied to applications, r epositories, and services and may be str uctur ed according to
implementation considerations.
480 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Glossary of Supplementary Deﬁnitions Database
A.14 Database
Astructured or organized collection of data entities, which is to be accessed by a computer.
A.15 Database Management System
Acomputer application program that accesses or manipulates the database.
A.16 Driver
An external or internal condition that motivates the organization to deﬁne its goals. An example
of an external driver is a change in regulation or compliance r ules which, for example, r equire
changes to the way an organization operates; i.e., Sarbanes-Oxley in the US.
A.17 End User
Person who ultimately uses the computer application or output.
A.18 Enterprise Resource Planning (ERP) System
Acomplete suite of integrated applications that support the major business support functions of
an organization; e.g., Financial (AP/AR/GL), HR, Payr oll, Stock, Order Processing and
Invoicing, Purchasing, Logistics, Manufacturing, etc.
A.19 Event
An or ganizational state change that triggers processing events may originate from inside or
outside the organization and may be resolved inside or outside the organization.
A.20 Functional Decomposition
Ahierarchy of the functions of an enterprise or organization.
A.21 Goal
Ahigh-level statement of intent or direction for an or ganization. T ypically used to measur e
success of an organization.
A.22 Guideline
An architectural document that pr ovides guidance on the optimal ways to carry out design or
implementation activities.
Part VII: Appendices 481
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
HardwareG lossary of Supplementary Deﬁnitions
A.23 Hardware
The physical infrastr uctur eneeded to r un software; e.g., servers, workstations, network
equipment, etc.
A.24 Information Domain
Grouping of information (or data entities) by a set of criteria such as security classiﬁcation,
ownership, location, etc. In the context of security ,information domains ar edeﬁned as a set of
users, their information objects, and a security policy.
A.25 Information System (IS)
The computer (or IT)-based portion of a business system.
A.26 Interaction
Arelationship between architectural building blocks (i.e., services or components) that embodies
communication or usage.
A.27 Interaction Model
An architectural view ,catalog, or matrix that shows a particular type of interaction. For
example, a diagram showing application integration.
A.28 Interface
Inter connection and inter -relationships between, for example, people, systems, devices,
applications, or the user and an application or device.
A.29 Key Performance Indicator (KPI)
Away of quantifying the performance of the business or project.
A.30 Lifecycle
The period of time that begins when a system is conceived and ends when the system is no
longer available for use.
A.31 Location
Aplace wher ebusiness activity takes place and can be hierarchically decomposed.
482 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Glossary of Supplementary Deﬁnitions Logical Application Component
A.32 Logical Application Component
An encapsulation of application functionality that is independent of a particular
implementation. For example, the classiﬁcation of all pur chase request processing applications
implemented in an enterprise.
A.33 Logical Data Component
Aboundary zone that encapsulates related data entities to form a logical location to be held. For
example, external procurement information.
A.34 Logical Technology Component
An encapsulation of technology infrastr uctur ethat is independent of a particular product. A
class of technology pr oduct. For example, supply chain management softwar ea sp art of an
Enterprise Resource Planning (ERP) suite or a Commer cial Off-The-Shelf (COTS) pur chase
request processing enterprise service.
A.35 Managing Successful Programs (MSP)
Ab est practice methodology for program management, developed by the UK Of ﬁce of
Government Commerce (OGC).
A.36 Matrix
Aformat for showing the relationship between two (or mor e) architectural elements in a grid
format.
A.37 Measure
An indicator or factor that can be tracked, usually on an ongoing basis, to determine success or
alignment with objectives and goals.
A.38 Metaview
Apattern or template of the view ,fromw hich to develop individual views. Establishes the
purposes and audience for a view ,the ways in which the view is documented (e.g., for visual
modeling), and the ways in which it is used (e.g., for analysis).
See also Section 3.18 inChapter 3 .
Part VII: Appendices 483
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Open System Glossary of Supplementary Deﬁnitions
A.39 Open System
Asystem that implements sufﬁcient open speciﬁcations for interfaces, services, and supporting
formats to enable properly engineered application software:
■To beported with minimal changes across a wide range of systems
■To interoperate with other applications on local and remote systems
■To interact with users in a style that facilitates user portability
A.40 Operational Governance
The operational performance of systems against contracted performance levels, the deﬁnition of
operational performance levels, and the implementation of systems that ensur eeffective
operation of systems.
See also Section 3.43 inChapter 3 .
A.41 Packaged Services
Services that ar eacquir ed from the market from a Commercial Off-The-Shelf (COTS) vendor ,
rather than being constructed via code build.
A.42 Physical Application Component
An application, application module, application service, or other deployable component of
functionality .For example, a conﬁgured and deployed instance of a Commercial Of f-The-Shelf
(COTS) Enterprise Resource Planning (ERP) supply chain management application.
A.43 Physical Data Component
Aboundary zone that encapsulates r elated data entities to form a physical location to be held.
For example, a purchase order business object, comprising purchase order header and item
business object nodes.
A.44 Physical Technology Component
Aspeciﬁc technology infrastr uctur eproduct or technology infrastr uctur eproduct instance. For
example, a particular product version of a Commercial Of f-The-Shelf (COTS) solution, or a
speciﬁc brand and version of server.
484 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Glossary of Supplementary Deﬁnitions Portability
A.45 Portability
1. The ease with which a system, component, data, or user can be transferred from one
hardwar eo rs oftwar eenvironment to another.
2. A quality metric that can be used to measur ethe relative effort to transport the softwar e
for use in another environment or to convert softwar efor use in another operating
environment, hardwar econﬁguration, or softwar esystem environment.
A.46 Portfolio
The complete set of change activities or systems that exist within the organization or part of the
organization. For example, application portfolio and project portfolio.
A.47 PRINCE2
An acronym for PRojects IN Contr olled Environments, which is a standar dproject management
method.
A.48 Process
Aprocess r epresents a sequence of activities that together achieve a speciﬁed outcome, can be
decomposed into sub-pr ocesses, and can show operation of a function or service (at next level of
detail). Processes may also be used to link or compose organizations, functions, services, and
processes.
A.49 Product
Output generated by the business. The business product of the execution of a process.
A.50 Proﬁle
Aset of one or mor ebase standards and, wher eapplicable, the identiﬁcation of those classes,
subsets, options, and parameters of those base standar ds, necessary for accomplishing a
particular function.
A.51 Proﬁling
Identifying standards and characteristics of a particular system.
A.52 Program
Aco-ordinated set of change projects that deliver business beneﬁt to the organization.
Part VII: Appendices 485
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Project Glossary of Supplementary Deﬁnitions
A.53 Project
Asingle change project which delivers business beneﬁt to the organization.
A.54 Risk Management
The management of risks and issues that may threaten the success of the Enterprise Ar chitecture
practice and its ability to meet its vision, goals, and objectives, and, importantly ,its service
provision.
Note: Risk management is described in Part III, Chapter 27 .
A.55 Scalability
The ability to use the same application softwar eo nm any dif ferent classes of har dware/software
platforms from PCs to super -computers (extends the portability concept). The capability to gr ow
to accommodate increased work loads.
A.56 Security
Services which protect data, ensuring its conﬁdentiality ,availability ,and integrity.
A.57 Server
An application component which responds to requests from a client.
A.58 Service Quality
Apreset conﬁguration of non-functional attributes that may be assigned to a service or service
contract.
A.59 SMAR T
An acr onym for Speciﬁc, Measurable, Actionable, Realistic, and Time-bound, which is an
appr oach to ensur ethat tar gets and objectives ar eset in a way that can be achieved and
measured.
A.60 Supplier Management
The management of suppliers of products and services to the Enterprise Ar chitectur epractice in
concert with larger corporate procurement activities.
A.61 System
Acombination of interacting elements or ganized to achieve one or mor estated purposes
(Source: ISO/IEC/IEEE 15288: 2015).
486 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Glossary of Supplementary Deﬁnitions Time Period
A.62 T ime Period
The timeframe over which the potential impact is to be measured.
A.63 T ransaction
Interaction between a user and a computer in which the user inputs a command to receive a
speciﬁc result from the computer.
A.64 Use-Case
Aview of or ganization, application, or product functionality that illustrates capabilities in
context with the user of that capability.
A.65 User
1. Any person, or ganization, or functional unit that uses the services of an information
processing system.
2. In aconceptual schema language, any person or any thing that may issue or r eceive
commands and messages to or from the information system.
Part VII: Appendices 487
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Glossary of Supplementary Deﬁnitions
488 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Appendix B
Abbreviations
ABB Ar chitectur eBuilding Block
ACMM Ar chitectur eCapability Maturity Model
ADM Ar chitectur eDevelopment Method
ANSI American National Standards Institute
API Application Platform Interface
ARTS Association for Retail Technology Standards
BMM Business Motivation Model
BPM Business Process Management
BPMN Business Process Modeling Notation
BTEP The Canadian Government Business Transformation Enablement Program
CMM Capability Maturity Models
CMMI Capability Maturity Model Integration
COBIT Contr ol OBjectives for Information and related Technology
COTS Commer cial Off-The-Shelf applications
CRM Customer Relationship Management
CRUD Cr eate/Read/Update/Delete
CSF Critical Success Factor
DBA Database Administrator
DBMS Database Management System
DoC US Department of Commerce
DoD US Department of Defense
DoDAF Department of Defense Architectur eFramework
EAI Enterprise Application Integration
EDIF ACT (United Nations) Electronic Data Inter change For Administration, Commerce, and
Transport
ERP Enterprise Resource Planning
ETL Extract, Transform, Load
FICO Fair Isaac Corporation
Part VII: Appendices 489
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Abbreviations
FTE Full-T ime Equivalent
GOTS Government Off-The-Shelf applications
HIPAA Health Insurance Portability and Accountability Act
ICAM Integrated Computer Aided Manufacturing
ICOM Inputs, Controls, Outputs, and Mechanisms/Resources
IDEF Integrated Computer Aided Manufacturing (ICAM) DEFinition
IEC International Electrotechnical Commission
IEEE Institute of Electrical and Electronic Engineers
III-RM Integrated Information Infrastructur eReference Model
IPD-CMM Integrated Product Development Capability Maturity Model
ISACA Information Systems Audit and Control Association
ISACF Information Systems Audit and Control Foundation
ISO International Standards Organization
IT Information Technology
ITGI IT Governance Institute
ITIL Information Technology Infrastructur eLibrary
ITPMF IT Portfolio Management Facility
J2EE Java 2Platform, Enterprise Edition
KPI Key Performance Indicator
LAN Local Area Network
MDA Model-Driven Architecture
MSP Managing Successful Programs
NASCIO National Association of State Chief Information Ofﬁcers
OECD Or ganization for Economic Co-operation and Development
OGC UK Ofﬁce of Government Commerce
OLA Operational-Level Agreement
OMB Of ﬁce of Management and Budget
OMG Object Management Group
ORB Object Request Broker
OSI Open Systems Interconnection
OSOA Open Service-Oriented Architecture
P-CMM People Capability Maturity Model
PDF Portable Document Format
PMBOK Pr oject Management Body of Knowledge
490 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Abbreviations
PRINCE PRojects in Controlled Environments
QoS Quality of Service
RAS Remote Access Services
RFC Request For Change
RFI Request for Information
RFP Request for Proposal
RM Refer ence Model
SA-CMM Softwar eAcquisition Capability Maturity Model
SBB Solution Building Block
SCA Service Component Architecture
SCAMPI Standar dCMMI Appraisal Method for Process Improvement
SDO Service Data Objects
SE-CMM Systems Engineering Capability Maturity Model
SEI Softwar eEngineering Institute
SGML Standar dGeneralized Markup Language
SIB Standar ds Information Base
SLA Service-Level Agreement
SMAR TS peciﬁc, Measurable, Attainable, Realistic, and Time-bound
SOA Service-Oriented Architecture
SPEM Softwar eProcessing Engineering Metamodel
SW-CMM Capability Maturity Model for Software
SysML Systems Modeling Language
TAFIM T echnical Architectur eFramework for Information Management
TRM T echnical Reference Model
UML Uniﬁed Modeling Language
WANW ide Area Network
XML Extensible Markup Language
Part VII: Appendices 491
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Abbreviations
492 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Index
ABB ..............................................................................................................................22, 229, 351, 365-366
abbr eviations ............................................................................................................................................489
abstraction ..................................................................................................................................................21
ACMM ......................................................................................................................................................456
Active Stor e..............................................................................................................................................379
activity model ............................................................................................................................................91
actor .....................................................................................................................................................21, 279
Actor/Role matrix...................................................................................................................................333
ADM ............................................................................................................4, 22, 37, 60, 160, 324, 368, 441
Requirements Management...............................................................................................................165
ADM guidelines and techniques ................................................................................................4, 38, 175
ADM iteration..........................................................................................................................................179
application ..................................................................................................................................................21
Application and User Location diagram .............................................................................................342
Application Architectur e............................................................................................................12, 21, 109
application building blocks....................................................................................................................112
Application Communication diagram.................................................................................................342
application component...........................................................................................................................279
Application Interaction matrix..............................................................................................................342
Application Migration diagram............................................................................................................344
Application Platform ................................................................................................................................22
Application Portfolio catalog ................................................................................................................339
application principles
examples ...............................................................................................................................................209
Application Softwar e..............................................................................................................................479
Application Use-Case diagram .............................................................................................................343
Application/Data matrix .......................................................................................................................337
Application/Function matrix................................................................................................................341
Application/Organization matrix ........................................................................................................340
Application/Technology matrix ...........................................................................................................345
Applications Standar ds ..........................................................................................................................396
applying the ADM ..................................................................................................................................193
architectural artifact................................................................................................................................319
concepts ................................................................................................................................................319
architectural style ..............................................................................................................................22, 176
architectur e.................................................................................................................................................22
deﬁnition .................................................................................................................................................1 1
architectur eartifacts ................................................................................................................................326
Architectur eBoard............................................................................................................................43, 413
Architectur eBuilding Block ....................................................................................................................22
architectur ebuilding block....................................................................................................................366
The TOGAF®Standard, Version 9.2 493
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Index
Architectur eCapability ...............................................................................................17-18, 181, 391, 407
Architectur eCapability Framework.................................................................................................5, 405
architectur echange management .........................................................................................................155
Architectur eCompliance .......................................................................................................................419
checklists ...............................................................................................................................................427
guidelines .............................................................................................................................................439
review ...................................................................................................................................................421
review pr ocess .....................................................................................................................................423
Architectur eContent Framework.....................................................................................................4, 271
Architectur eContinuum ............................................................................................15, 22, 232, 366, 378
Architectur eContract .....................................................................................................................351, 441
Architectur eDeﬁnition Document .......................................................................................................352
architectur edeliverables ........................................................................................................................349
Architectur eDescription ........................................................................................................................319
architectur edevelopment ......................................................................................................181, 185, 401
Architectur eDevelopment Method..............................................................................................4, 22, 37
architectur edevelopment, techniques .................................................................................................175
architectur edomain ............................................................................................................................22, 44
architectur edomains ................................................................................................................................47
architectur eengagement ........................................................................................................................181
Architectur eForum .....................................................................................................................................3
Architectur eFramework ..........................................................................................................................23
Architectur eGovernance .....................................................................23, 43, 59, 154, 181, 413, 445, 448
implementation ...................................................................................................................................453
Architectur eGovernance Framework..........................................................................................445, 449
structur e................................................................................................................................................449
architectur eintegration ............................................................................................................................47
Architectur eLandscape ..............................................................................................17, 23, 193, 391-392
Architectur eMetamodel ..................................................................................................................17, 391
architectur emodel ............................................................................................................................23, 319
architectur emodels .........................................................................................................................1 12, 122
architectur epartition ................................................................................................................................44
architectur epartitioning .........................................................................................................................385
architectur epattern .........................................................................................................................229, 231
content ..................................................................................................................................................230
Architectur ePrinciple ...............................................................................................................................23
Architectur ePrinciples .............................................................................................................59, 197, 353
characteristics .......................................................................................................................................198
components ..........................................................................................................................................198
criteria ...................................................................................................................................................199
Architectur eReport .................................................................................................................................1 17
Architectur eRepository .....................................................................................16, 92, 107, 130, 354, 391
Architectur eRequirements Repository..................................................................................17, 391, 397
Architectur eRequirements Speciﬁcation ............................................................................................354
Architectur eRoadmap ...........................................................................................................................355
Architectur eSkills Framework .............................................................................................................463
proﬁciency levels.................................................................................................................................468
skills ......................................................................................................................................................467
architectur eview ...............................................................................................................23, 214, 232, 319
creation .................................................................................................................................................323
examples ...............................................................................................................................................324
guidelines .............................................................................................................................................322
494 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Index
architectur eviewpoint ..............................................................................................................23, 214, 320
examples ...............................................................................................................................................324
Architectur eVision ...............................................................................................................24, 42, 65, 356
architecture, scoping.................................................................................................................................44
artifact .........................................................................................................................................................24
ARTS .........................................................................................................................................................107
audit information ......................................................................................................................................43
availability ................................................................................................................................................479
Balanced Scorecar dtechnique .................................................................................................................56
baseline .......................................................................................................................................................24
Baseline Application Architectur eDescription ...................................................................................1 15
Baseline Data Architectur eDescription ...............................................................................................102
Baseline Description .................................................................................................................................89
baseline ﬁrst .............................................................................................................................................185
Baseline Technology Architectur eDescription ...................................................................................126
Beneﬁts diagram......................................................................................................................................348
Boundaryless Information Flow .............................................................................................................24
BPMN ..........................................................................................................................................................91
breadth ......................................................................................................................................................195
breadth, enterprise...............................................................................................................................44-45
BTEP ..................................................................................................................................................249-250
Readiness Rating Scheme ..................................................................................................................254
building block............................................................................................................................................24
building blocks ................................................................................................................................326, 365
characteristics .......................................................................................................................................365
design ....................................................................................................................................................368
Business Architectur e...................................................................................................................11, 24, 77
business capabilities ...........................................................................................................................74, 89
Business Capabilities catalog.................................................................................................................333
business capability ............................................................................................................................25, 279
Business Capability map................................................................................................................330, 336
business capability mapping...................................................................................................................81
Business Continuity Plan .......................................................................................................................260
business drivers.......................................................................................................................................356
Business Footprint diagram...................................................................................................................334
business function.......................................................................................................................................25
business goals ..........................................................................................................................................356
business governance.................................................................................................................................25
Business Interaction matrix ...................................................................................................................333
business model ..........................................................................................................................................25
Business Model diagram........................................................................................................................330
business modeling.....................................................................................................................................91
business planning......................................................................................................................................62
business principles............................................................................................................................59, 356
examples ...............................................................................................................................................201
business process model ............................................................................................................................91
Business Process Modeling Notation .....................................................................................................91
business scenarios ...........................................................................................................................172, 356
business service .................................................................................................................................25, 279
Business Service/Function catalog.......................................................................................................331
Business Service/Information diagram...............................................................................................334
Business Standar ds .................................................................................................................................395
The TOGAF®Standard, Version 9.2 495
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Index
business system .......................................................................................................................................479
Business Transformation Readiness Assessment ...............................................................................249
Business Use-Case diagram...................................................................................................................335
Calendar ...................................................................................................................................................397
capability ....................................................................................................................................................25
Capability Architectur e............................................................................................................25, 193, 392
Capability Architectur eRequir ements ................................................................................................398
Capability Assessment ...................................................................................................................357, 397
capability dimensions.............................................................................................................................265
capability incr ement .................................................................................................................................25
capability incr ements ..............................................................................................................................266
Capability Maturity Model....................................................................................................................455
capability-based planning......................................................................................................................263
Capability/Organization matrix...........................................................................................................334
catalog .......................................................................................................................................123, 326, 479
catalog of application building blocks .................................................................................................112
catalogs .....................................................................................................................................................326
catalogs, building blocks..........................................................................................................................82
Catalyst .....................................................................................................................................................162
change management...............................................................................................................................155
change management pr ocess .................................................................................................................162
Change Request.......................................................................................................................................358
class model .................................................................................................................................................91
classiﬁcation .............................................................................................................................................385
client ..........................................................................................................................................................479
CMM .........................................................................................................................................................455
CMMI ................................................................................................................................................349, 460
COBIT .........................................................................................................................................43, 448, 479
COBIT framework...................................................................................................................................416
Common Systems Architectur es ...........................................................................................................379
Common Systems Solutions..................................................................................................................381
communications management ..........................................................................................................19, 26
Communications Plan ............................................................................................................................359
Compliance Assessment ................................................................................................................359, 397
Conceptual Data diagram......................................................................................................................338
concern ................................................................................................................................................26, 214
concerns ....................................................................................................................................................319
conditions of use .........................................................................................................................................9
conﬁguration management..............................................................................................................19, 480
content framework, and the TOGAF ADM.........................................................................................274
content metamodel .........................................................................................................................273, 277
detail ......................................................................................................................................................283
extensions .............................................................................................................................................288
vision and concepts.............................................................................................................................277
content metamodel attributes................................................................................................................304
content metamodel entities....................................................................................................................301
content tailoring ........................................................................................................................................55
contract .....................................................................................................................................................480
Contract/Measur ecatalog .....................................................................................................................332
contr ol .......................................................................................................................................................480
coreconcepts ..............................................................................................................................................1 1
corecontent metamodel .........................................................................................................................284
496 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Index
corecontent metamodel, concepts........................................................................................................277
corporate governance .............................................................................................................................445
COTS .................................................................................................................................172, 210, 368, 421
course of action..................................................................................................................................26, 279
create architectur emodels .....................................................................................................................100
CRUD ........................................................................................................................................................327
CxO ............................................................................................................................................................480
Data Architectur e..........................................................................................................................11, 26, 97
data building blocks ...............................................................................................................................100
data dictionary.........................................................................................................................................480
Data Dissemination diagram.................................................................................................................338
data element.............................................................................................................................................480
data entity.........................................................................................................................................279, 480
Data Entity/Business Function matrix ................................................................................................337
Data Entity/Data Component catalog.................................................................................................336
data extensions ........................................................................................................................................295
data governance ......................................................................................................................................106
Data Lifecycle diagram...........................................................................................................................339
data management....................................................................................................................................106
data migration .........................................................................................................................................106
Data Migration diagram.........................................................................................................................339
data principles
examples ...............................................................................................................................................205
Data Security diagram............................................................................................................................338
Data Standar ds ........................................................................................................................................395
database ....................................................................................................................................................481
database management system...............................................................................................................481
Decision Log ............................................................................................................................................396
Degrees of Inter operability ....................................................................................................................245
deliverable ..................................................................................................................................................26
deliverables ..............................................................................................................................................350
Deployment Repository .........................................................................................................................391
depth .........................................................................................................................................................195
depth, enterprise .................................................................................................................................44, 46
design pattern..........................................................................................................................................231
Detailed Design Repository...................................................................................................................391
diagrams ....................................................................................................................101, 114, 124, 326-327
dispensation .............................................................................................................................................450
downloads ....................................................................................................................................................9
driver .........................................................................................................................................................481
Driver/Goal/Objective catalog ............................................................................................................331
drivers for change ...................................................................................................................................161
EAP ..............................................................................................................................................................96
emerging technologies............................................................................................................................129
end user ....................................................................................................................................................481
Ener gistics ........................................................................................................................................107, 379
enterprise ..........................................................................................................................................6, 26, 58
Enterprise Ar chitect ................................................................................................................................474
key characteristics ...............................................................................................................................474
role of ....................................................................................................................................................466
Enterprise Architectur e..............................................................................................................................6
Enterprise Continuum................................................................................................15, 26, 373, 375, 401
The TOGAF®Standard, Version 9.2 497
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Index
Enterprise Continuum and T ools ..............................................................................................................5
Enterprise Manageability diagram.......................................................................................................343
enterprise operating model ...................................................................................................................245
enterprise principles ...............................................................................................................................197
Enterprise Repository.....................................................................................................................391, 399
Enterprise Resource Planning system..................................................................................................481
Environment diagram ............................................................................................................................345
environment management.......................................................................................................................19
ERP ............................................................................................................................................................481
eTOM ........................................................................................................................................................393
event ..........................................................................................................................................................481
Event diagram .........................................................................................................................................336
Federal Enterprise Architectur eBusiness Reference Model...............................................................93
ﬁnancial management ..............................................................................................................................19
formal stakeholder r eview ...............................................................................................85, 103, 116, 127
Foundation Architectur e..................................................................................................................27, 379
Foundation Solutions .............................................................................................................................381
framework ..................................................................................................................................................27
full content metamodel ..........................................................................................................................286
function .....................................................................................................................................................279
functional decomposition ......................................................................................................................481
Functional Decomposition diagram.....................................................................................................334
gap ...............................................................................................................................................................27
gap analysis..............................................................................................................................115, 126, 235
goal ............................................................................................................................................................481
Goal/Objective/Service diagram .........................................................................................................335
GOTS .........................................................................................................................................................210
governance .........................................................................................................................................27, 260
characteristics .......................................................................................................................................446
governance extensions ...........................................................................................................................289
Governance Log ........................................................................................................................17, 391, 396
contents of ............................................................................................................................................396
guideline ...................................................................................................................................................481
guidelines, for adapting the ADM........................................................................................................175
hardwar e...................................................................................................................................................482
Hillside Gr oup .........................................................................................................................................232
ICAM ..........................................................................................................................................................91
ICOM ..........................................................................................................................................................91
IDEF ............................................................................................................................................................91
idiom .........................................................................................................................................................232
III-RM ........................................................................................................................................................379
Implementation and Migration Plan....................................................................................................360
implementation governance..................................................................................................................149
Implementation Governance Model ....................................................................................................361
incremental change .................................................................................................................................162
Industry Architectur es ......................................................................................................................92, 379
Industry Solutions...................................................................................................................................382
information ................................................................................................................................................27
information domains ..............................................................................................................................482
information exchange matrix ..................................................................................................................92
information system .................................................................................................................................482
information system service......................................................................................................................27
498 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Index
Information Systems Architectur e..........................................................................................................95
information technology............................................................................................................................27
infrastructur econsolidation extensions...............................................................................................297
initial risk assessment.............................................................................................................................258
interaction .................................................................................................................................................482
interaction model ....................................................................................................................................482
interface ....................................................................................................................................................482
Interface catalog ......................................................................................................................................340
inter operability ..........................................................................................................................................28
categories ..............................................................................................................................................243
reﬁning ..................................................................................................................................................245
requirements ........................................................................................................................................243
IPD-CMM .................................................................................................................................................460
IS.................................................................................................................................................................482
ISACF ........................................................................................................................................................448
ISO/IEC/IEEE 42010: 201 1.......................................................................................................................11
IT...................................................................................................................................................................27
IT governance ..................................................................................................................................445, 447
IT Governance Institute..........................................................................................................................448
IT4IT Reference Architectur e...................................................................................93, 118, 381, 393, 398
iteration .....................................................................................................................................................185
iteration cycles .........................................................................................................................................180
iteration of the ADM...............................................................................................................................179
ITIL ..............................................................................................................................................43, 162, 381
Java ............................................................................................................................................................210
Key Performance Indicator....................................................................................................................482
KPI .............................................................................................................................................................482
lessons learned pr ocess ..........................................................................................................................161
lifecycle .....................................................................................................................................................482
location .....................................................................................................................................................482
Location catalog.......................................................................................................................................332
Location diagram ....................................................................................................................................345
logical ..........................................................................................................................................................28
logical application component ..............................................................................................................483
logical data component ..........................................................................................................................483
Logical Data diagram .............................................................................................................................338
logical technology component ..............................................................................................................483
management frameworks ........................................................................................................................61
Managing Successful Pr ograms ............................................................................................................483
matrices .............................................................................................................................101, 113, 124, 327
matrix ................................................................................................................................................326, 483
maturity model................................................................................................................................252, 455
MDA ..........................................................................................................................................................1 12
measur e.....................................................................................................................................................483
metadata .....................................................................................................................................................28
metamodel ..................................................................................................................................................28
metamodel r elationships ........................................................................................................................314
metaview ..................................................................................................................................................483
method ........................................................................................................................................................28
Migration Planning.........................................................................................................................141, 255
model ..........................................................................................................................................................28
model kind .........................................................................................................................................29, 320
The TOGAF®Standard, Version 9.2 499
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Index
Model-Driven Architectur e....................................................................................................................112
modeling pr ocess ......................................................................................................................................80
motivation extensions.............................................................................................................................299
MSP ...................................................................................................................................................349, 483
needline ......................................................................................................................................................92
Network and Communications diagram.............................................................................................347
Networked Computing/Hardwar ediagram ......................................................................................347
node connectivity diagram ......................................................................................................................92
Object Management For um .....................................................................................................................93
Object Management Gr oup ....................................................................................................................1 18
objective ......................................................................................................................................................29
OLA ...................................................................................................................................................417, 450
OMG ..............................................................................................................................91, 93, 112, 118, 278
open system .............................................................................................................................................484
operational governance..........................................................................................................................484
operational-level agr eement ..........................................................................................................417, 450
operations management...........................................................................................................................62
Opportunities & Solutions.....................................................................................................................131
Organization Decomposition diagram ................................................................................................335
organization map ..........................................................................................................................29, 75, 90
Organization map ...................................................................................................................................336
organization mapping ..............................................................................................................................81
organization unit.....................................................................................................................................279
Organization-Speciﬁc Architectur es .....................................................................................................380
Organization-Speciﬁc Solutions............................................................................................................382
Organization/Actor catalog ..................................................................................................................330
Organizational Model.............................................................................................................................361
P-CMM .....................................................................................................................................................460
packaged services....................................................................................................................................484
pattern .........................................................................................................................................................29
pattern resour ces .....................................................................................................................................232
patterns home page.................................................................................................................................232
patterns-discussion F AQ ........................................................................................................................232
performance management.......................................................................................................................19
performance measur ement ....................................................................................................................397
Phase A .......................................................................................................................................................65
Phase B........................................................................................................................................................77
Phase C .........................................................................................................................................95, 97, 109
Phase D .....................................................................................................................................................119
Phase E......................................................................................................................................................131
Phase F......................................................................................................................................................141
Phase G .....................................................................................................................................................149
Phase H.....................................................................................................................................................155
physical .......................................................................................................................................................29
physical application component...........................................................................................................484
physical data component .......................................................................................................................484
physical technology component ...........................................................................................................484
Platform Decomposition diagram ........................................................................................................345
PMBOK .....................................................................................................................................................349
portability .................................................................................................................................................485
portfolio ....................................................................................................................................................485
portfolio management..............................................................................................................................62
500 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Index
Preliminary Phase .....................................................................................................................................51
PRINCE2 ...................................................................................................................................162, 349, 485
principle ......................................................................................................................................................29
Principles catalog ....................................................................................................................................329
process ......................................................................................................................................................485
Process Flow diagram.............................................................................................................................335
process modeling ......................................................................................................................................81
process modeling extensions.................................................................................................................292
process status.............................................................................................................................................43
process tailoring ........................................................................................................................................55
Process/Application Realization diagram ..........................................................................................343
Process/Event/Control/Product catalog............................................................................................332
Processing diagram.................................................................................................................................346
product ......................................................................................................................................................485
Product Lifecycle diagram.....................................................................................................................335
Product Line Architectur e........................................................................................................................43
proﬁle ........................................................................................................................................................485
proﬁling ....................................................................................................................................................485
program ....................................................................................................................................................485
project ........................................................................................................................................................486
Project Context diagram.........................................................................................................................348
project management .................................................................................................................................62
Project Portfolio .......................................................................................................................................397
quality management.................................................................................................................................19
re-architecting change ............................................................................................................................162
readiness factors ......................................................................................................................................250
readiness planning..................................................................................................................................255
recency ......................................................................................................................................................195
reference data.............................................................................................................................................43
Reference Library ......................................................................................................................17, 391, 393
reference models..................................................................................................................29, 99, 1 11,122
repository ...................................................................................................................................................30
Request for Architectur eWork ........................................................................................................73, 362
Requirement for Architectur eWork .......................................................................................................59
requirements ..............................................................................................................................30, 102, 114
Requirements catalog .............................................................................................................................348
Requirements Impact Assessment........................................................................................................362
requirements tools...................................................................................................................................172
residual risk assessment.........................................................................................................................260
resource management...............................................................................................................................19
risk assessment ........................................................................................................................................258
risk classiﬁcation .....................................................................................................................................258
risk identiﬁcation ....................................................................................................................................258
risk management.......................................................................................................................19, 257, 486
best practice..........................................................................................................................................258
Risk Management Plan...........................................................................................................................258
risk monitoring........................................................................................................................................260
RM ...............................................................................................................................................................29
roadmap ......................................................................................................................................................30
roadmap components ...............................................................................................................84, 115, 127
role .......................................................................................................................................................30, 279
Role catalog..............................................................................................................................................331
The TOGAF®Standard, Version 9.2 501
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Index
Role/Application matrix........................................................................................................................341
SA-CMM ...................................................................................................................................................460
SANS Institute .........................................................................................................................................204
SBB ...............................................................................................................................31, 229, 363, 365, 367
scalability ..................................................................................................................................................486
SCAMPI ....................................................................................................................................................461
scoping the architectur e...........................................................................................................................44
SE-CMM ...................................................................................................................................................460
security ......................................................................................................................................................486
segment ar chitect .....................................................................................................................................474
Segment Architectur e...............................................................................................................30, 193, 392
Segment Architectur eRequir ements ....................................................................................................398
SEI ..............................................................................................................................................................455
server .........................................................................................................................................................486
service .........................................................................................................................................................30
service management .................................................................................................................................19
Service Management Repository ..........................................................................................................391
service orientation.....................................................................................................................................31
service portfolio.........................................................................................................................................31
service qualities .......................................................................................................................................486
service-level agr eement ..........................................................................................................414, 444, 450
Service-Oriented Architectur e.................................................................................................................31
services extensions..................................................................................................................................291
SIB ..................................................................................................................................................17, 32, 391
SID .............................................................................................................................................................393
simpliﬁcation change..............................................................................................................................162
SLA ............................................................................................................................................414, 444, 450
SMAR T......................................................................................................................................245, 321, 486
SOA .............................................................................................................................................................31
Softwar eDistribution diagram .............................................................................................................344
Softwar eEngineering diagram .............................................................................................................344
Solution Ar chitect ....................................................................................................................................474
Solution Architectur e................................................................................................................................31
solution building block ............................................................................................................................31
solution building blocks.........................................................................................................................367
Solution Concept diagram .....................................................................................................................330
Solutions Continuum..........................................................................................................15, 31, 367, 380
Solutions Landscape .................................................................................................................17, 391, 398
SPEM .........................................................................................................................................................278
stakeholder .................................................................................................................................31, 214, 319
stakeholder management...........................................................................................................19, 26, 213
process steps ........................................................................................................................................214
Stakeholder Map matrix.........................................................................................................................329
Standards Information Base ...............................................................................................17, 32, 394-395
standards, classiﬁcation .........................................................................................................................395
standards, lifecycle..................................................................................................................................394
standards, types of ..................................................................................................................................394
Statement of Architectur eWork ..............................................................................................75, 363, 443
stewar d.....................................................................................................................................................207
Strategic Architectur e...............................................................................................................32, 193, 392
Strategic Architectur eRequir ements ....................................................................................................398
Strategy/Capability matrix ...................................................................................................................334
502 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Index
structured analysis....................................................................................................................................81
supplier management.......................................................................................................................19, 486
SW-CMM ..................................................................................................................................................460
system .......................................................................................................................................................486
TAFIM ...........................................................................................................................................................3
Tailored Architectur eFramework .........................................................................................................363
Target Architectur e....................................................................................................................................32
Target Architectur eDescription ..............................................................................................................46
target ﬁrst .................................................................................................................................................185
taxonomy of architectur eviews ..............................................................................................................32
Technology Architectur e............................................................................................................12, 32, 119
technology building blocks....................................................................................................................123
technology component.....................................................................................................................32, 279
technology governance ..................................................................................................................445, 447
Technology Portfolio catalog .................................................................................................................345
technology principles
examples ...............................................................................................................................................210
technology service.....................................................................................................................................32
technology services.................................................................................................................................279
Technology Standar ds ............................................................................................................................396
Technology Standards catalog...............................................................................................................344
terminology tailoring................................................................................................................................55
time ............................................................................................................................................................195
time period.........................................................................................................................................46, 487
time period, enterprise .............................................................................................................................44
TM For um ...........................................................................................................................93, 118, 130, 393
TOGAF ..........................................................................................................................................................3
TOGAF ADM...........................................................................................................................160, 349, 382
TOGAF Library ...........................................................................................................................................5
TOGAF TRM............................................................................................................................................379
tools .............................................................................................................................................99, 111,122
transaction ................................................................................................................................................487
transformation readiness assessment...................................................................................................250
Transition Architectur e.............................................................................................................................33
Transition Architectur eDescription .......................................................................................................46
Transition Planning.................................................................................................................................181
trustee .......................................................................................................................................................207
UML ............................................................................................................................................................92
US DoD.........................................................................................................................................................3
use-case .....................................................................................................................................................487
use-case analysis........................................................................................................................................81
use-case model...........................................................................................................................................91
user ............................................................................................................................................................487
Value Chain diagram..............................................................................................................................329
value str eam .......................................................................................................................................33, 279
Value Stream catalog...............................................................................................................................333
Value Stream map ...........................................................................................................................330, 336
value stream mapping..............................................................................................................................81
Value Stream Stages catalog ..................................................................................................................333
Value Stream/Capability matrix...........................................................................................................334
value str eams .......................................................................................................................................75, 90
view .............................................................................................................................................................33
The TOGAF®Standard, Version 9.2 503
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
Index
viewpoint ....................................................................................................................................................33
viewpoint library.......................................................................................................................................33
viewpoints ..................................................................................................................................99, 111,122
work package.............................................................................................................................................33
Zachman Framework ...............................................................................................................................42
504 The Open Group Standard (2018)
© 2005-2018 The Open Group, All Rights Reserved
Personal PDF Edition. Not for redistribution
