Application Prototypes: BM 2L 
118 6 APPLICATION PROTOTYP ES: BM2L 
As described in section 1.2 the business model ontology aims at being a generic framework to 
describe and capture any possible busin ess model. Because the process of capturing a business 
model is largely facilitated by using  a formalized language I introduce the so -called Business 
Model Modeling Language BM 2L. This is nothing else than a codification of the ontology with 
an eXtensible Markup Language XML structure, XML being a meta -language to describe 
information. BM 2L can then serve to describe and capture a specific business model. I have used 
it to seize the entire Montreux Jazz Festival business model (see www.hec.unil.ch/aosterwa/ PhD).  
6.1 FROM THE ONTOLOGY TO  A FORMAL MARKUP LAN GUAGE  
As it seemed appropriate to translate the business model ontology into a formal description 
language and as the eXtensible Markup Language XML has rapidly become the first choice for 
defining document an d data interchange formats I have chosen this technology to formalize the 
business model ontology.  
In fact XML already has a strong foothold in business, especially in business transactions and 
particularly in e -business. Many existing technologies are bei ng re -engineered to take advantage 
of XML’s qualities such as interoperabi lity and reusability (Dumbill 2001) . A mult itude of XML 
consortiums and projects ( e.g. xCBL, cXML) intend to rewrite the concepts of the aging 
Electronic Data Inte rchange (EDI) with XML syntax for bus iness applications on the Internet 
(Haifei Li 2000) . One of the most important projects is the joint initiative of O rganizations for the 
Advancem ent of Structured Inform ation Standards (OASIS) and the UN’s Center for Trade 
Facilitation and Electronic Business (UN/CEFACT). It focuses on en abling transactions across 
industries and businesses, pa rticularly smaller companies, generally left out of EDI in the past 
(Kotok 2001) . 
However, XML is not limited to tran saction purposes and can serve a wide range of other goals  
(Fensel 2001) . XML  is a metalanguage, which means that it is a s tandardizing format for 
descri bing structured and semi -structured information  for a wide area of applications . XML 
provides a means of including metadata  (i.e. data on data)  in documents. This makes it ideal for 
my purpose of describing a business model in  a formalized manner. Thus, based on the business 
model ontology I developed BM 2L to formally describe business models . Contrary to most 
existing xml languages in business that represent structures for the exchange of transaction -
oriented messages or docum ents, BM 2L focuses on the representation of a company's business 
model. Rather than concentrating on e -business pro cesses, like for example the Electronic 
Business using eXtensible Markup Language, short ebXML (ebXML 2003) , BM 2L is situated at 
a higher level of abstraction, the one of the business model /business logic  of a firm. BM 2L aims 
at making it possible to encode the business model of any given company. Concrete ly, a business 
model expressed in BM 2L is an XML document that respects the constraints and the rules 
imposed by a n XML schema based on the business model ontology.  An XML schema is a model 
that describes the logical structure of an XML document. First att empts to formalize the ontology 
in an XML -based language were already made at the beginning of this research (Ben Lagha, 
Osterwalder et al. 2001) . 
Such a formal representation and the multitude of existing tools to manipulate XML documents 
have a number of advantages. It becomes easy to verify the validity of a business model to the 
business model ontology. Different business models can be compared or can be evaluated to one 
another. Generating different views (such as specific documents) in function of different needs 
(such as descriptions, graphical representations, business plans, repo rts for financing, reports for 
eventual partners, acquisitions or mergers, etc.) becomes possible. Furthermore, XML's platform 
independence make the maintenance and the exchange of business models in heterog eneous IT 
The Business Model Ontology - a proposition in a design science approach  
 119 environments a lot easier.  
In short I have chosen XML for the following reasons. Because it is:  
• a language to describe structured and semi -structured information  
• an open standard (i.e. it is not proprietary and owned by a company) and recommendation 
of the World Wide Web Consortium ( W3C ). 
• platform independent  
• machine readable and can be used by different applications  
• reusable  
• transformable (e.g. to different formats such as HTML or PDF)  
• a metalanguage that facilitates exchange  
• a metalanguage that has open standards for visualization (Scalable V ector Graphics SVG)  
Similarly, Fensel (2001)  argues that XML represents an interesting solution of knowledg e 
management and electronic commerce. The main reasons are that XML helps defining a language 
for describing the structure and semantics of data, it is a language for processing data and it is a 
protocol for exchanging data.  
6.2 THE BUSINESS MODEL MODELING  LANGUAGE  BM2L 
BM2L is defined by an XML schema. It is composed of a nu mber of concepts (called elements) 
and attributes that represent the v ocabulary of the ontology  and the relationships between the 
elements. Together they stand for  the construction rules o f a business model. In other words, 
BM2L defines the semantics and the syntax of the elements. The elementary elements are found 
on the lowest hierarchical level and contain a textual description of the concepts they repr esent. 
The content of each element is delimitated by an opening tag in the form of <element> and a 
closing tag in the form of </element> and can have a set of attributes.  
To create  the BM 2L schema and to captur e business models  I have opted for a set of tools 
provided by the Austrian compa ny Altova. The privately held company was founded in 1992 and 
has been actively involved in the XML market from the early conception of XML. Altova's main 
tool, xmlspy, is one of the ma rket leaders in XML editing and offers an appropriate toolset for the 
goals I pursue.  
Concretely, BM2L translates the business model ontology's semantics and syntax into an XML 
based language defined by an XML schema. It can then be applied to a real world business 
model, as I have done to capture the business logic of the Mo ntreux Jazz Festival ( see annex at 
www.hec.unil.ch/aosterwa/PhD ).  
Figure 57 illustrates the syntax of a VALUE PROPOSITION's elements in BM2L (cf. section 
4.2.1  on VALUE PROPOSITION ). In the following lines I describe the XML schema of the 
VALUE PROPOSITION part in natural language, which might be a bit dull, but it will help to 
understand what I have exactly done in BM2L. As Figure 57 shows, a company can have one or 
more VALUE PROPOSITIONs. Thus, the BM2L schema defines that a BM2L document can 
contain 1 -n VALUE PROPOSITIONs expressed in an envelope of a <ValueProposition> opening 
tag and a </ValueProposition> closing tag. The con tent of the envelope is composed of a 
<ValuePropositionCharacteristics> and an optional <SetOfOfferings>. A <ValueProposition> has 
three attributes, from which one, ValuePropositionID, is its identifier. The other two attributes, 
AddressesCustomerIDREF and  BasedOnCapabilityIDREF, reference the TARGET 
Application Prototypes: BM 2L 
120 CUSTOMERS the VALUE PROPOSITION addresses, respectively the CAPABILITIES on 
which it relies.  
The <ValuePropositionCharacteristics> envelope contains a sequence of elements that describe 
the VALUE PROPOSITION. These are two textual elements, <Name> and <Description>, 
followed by the complex element <Reasoning> describing why the VALUE PROPOSITION is 
valuable to a customer. A complex element is an element that is composed of sub -elements. 
<Reasoning> is constitut ed by a sequence of 0 -n elements containing text, which are <Use>, 
<Risk> or <Effort>. The next element  after <Reasoning> is the <ValueLevel>  tag, which 
describes the value level of a VALUE PROPOSITION . It is composed of either <MeToo>, 
<InnovativeInnovati on>, <Excellence> or <Innovation>. <ValueLevel> is followed by 
<PriceLevel>, describing the price level of a VALUE PROPOSITION. It is composed of either 
<Free>, <Economy>, <Market> or <HighEnd>. <ValuePropositionCharacteristics> ends with an 
optional <Life Cycle>, which's attribute LifeCyclePhase defines in which phase the VALUE 
PROPOSITION creates value.  
If a VALUE PROPOSITION is decomposed into a set of OFFERINGS, the 
<ValuePropositionCharacteristics>  tag is followed by the  <setOfOfferings>  envelope . A 
<setOfOfferings> is a sequence of 1 -n <Offering> that have an identifying attribute OfferingID. 
An <Offering> is composed of <OfferingCharecteristics> and of an optional <SetOfOfferings> if 
it is decomposable. <OfferingCharecteristics> is the same type as 
<ValuePropositionCharacteristics> and contains the same sub -elements, except that <LifeCycle> 
becomes cumpolsery.  
In Figure 58 you can see how this structure is concretely applied when one describes a business 
model with BM 2L. It illu strates parts of the Montreux Jazz Festival 's VALUE PROPOSITION 
encode with BM 2L. 
 
The Business Model Ontology - a proposition in a design science approach  
 121 Figure 57: Diagram BM2L /XML schema VALUE PROPOSITION  Value
PropositionValue
Proposition
Characteristics
SetOf
OfferingsSetOf
OfferingsOffering
CharacteristicsDescriptionName
OfferingValue
LevelReasoning
Life
CyclePrice
LevelRiskUse
Effort
Innovative
InnovationMeToo
Excellence
Innovation
EconomyFree
Market
High
EndDescriptionName
Value
LevelReasoning
Life
CyclePrice
LevelInnovative
InnovationMeToo
Excellence
Innovation
EconomyFree
Market
High
EndRiskUse
Effort
elementelementelement obligatory element
optional element
choice betweensequence of1 - n elementsLegendValuePropositionID
AddressesCustomerIDREF
BasedOnCapabilityIDREF
LifeCyclePhase
{Creation, Purchase, Use,
Renewal, Transfer}
LifeCyclePhase
{Creation, Purchase, Use,
Renewal, Transfer}OfferingID
Application Prototypes: BM 2L 
122  
Figure 58: Excerpt of the product part of the BM 2L document of the MJF  <Product > 
<ValueProposition  ValuePropositionID ="vp1" BasedOnCapabilityIDREF ="cp4 cp3 cp1 " 
AddressesCustomerIDREF ="tc4"> 
<ValuePropositionCharacteristics > 
<Name >MJF Concerts </Name > 
<Description >The main attraction and VALUE PROPOSITION of the MJF are its prestigious 
concerts with stars from jazz, pop, rock, hip -hop and more. The MJF has made itself a name 
with the regular by unforgettable jazz musicians like Miles Davis, Keith Jarett, Charlie Mingus, 
Ella Fitzgerald and later from other fields like Bob  Dylan, Phil Collins or Guru's Jazzmatazz. 
The 2003 event featured artists across the musical range, such as George Benson, Joao Gilberto, 
Simply Red or Cypress Hill. </Description > 
<Reasoning > 
<Use>For the customer the value essentially lies in going to t he concert of the artist of 
his choice. </Use> 
</Reasoning > 
<ValueLevel > 
<MeToo >The MJF may be special because of its quality but it is not substantially 
different from other jazz festivals throughout the world. </MeToo > 
</ValueLevel > 
<PriceLevel > 
<Market >The MJF ticket prices are comparable to the market prices of what is paid for 
other concerts. </Market > 
</PriceLevel > 
</ValuePropositionCharacteristics > 
<SetOfOfferings > 
<Offering  OfferingID ="off10 "> 
<OfferingCharacteristics > 
<Name >MJF evening concerts </Name > 
<Description >The evening concerts comprise the major event of payable concerts 
on three different stages, the Stravinski Auditorium, the Miles Davis Hall and the 
Casino. </Description > 
<Reasoning > 
<Use>MJF concerts are of great quality. </Use> 
</Reasoning > 
<ValueLevel > 
<MeToo >This offer competes with other concerts and 
festivals. </MeToo > 
</ValueLevel > 
<PriceLevel > 
<Market >Ticket prices are between CHF 40. - to CHF 120. - and 
comparable to other concerts and festivals. </Market > 
</PriceLevel > 
<LifeCycle  LifeCyc lePhase ="Use"/> 
</OfferingCharacteristics > 
</Offering > 
<Offering  OfferingID ="off2"> 
<OfferingCharacteristics > 
... 
</OfferingCharacteristics > 
</Offering > 
 ... 
<SetOfOfferings > 
</ValueProposition > 
 
<ValueProposition > 
... 
</ValueProposition > 
 
The Business Model Ontology - a proposition in a design science approach  
 123 6.3 TRANSFORMING XML DOC UMENTS  
In section 6.2 I have demonstrated how the BM 2L schema (i.e. its structure) is conceived, how a 
BM2L document looks like and how it can capture a business model. In the  following, I 
demonstrate some of the potential usages  that become possible once one has seized a business 
model with BM 2L.  
For example , XML documents can easily be transformed into a variety of formats, such as HTML 
used to display web pages or PDF, the de facto standard for documents on the web.  In fact, XML 
documents and structures can be transformed to any other structure and formatting. The standard 
way to describe how to transform (i.e. change) the structure of an XML  document into an XML 
document wi th a different structure  and presentation  is called XSL Transformation (XSLT). Like 
XML, XSLT is an open standard and recommendation of the World Wide Web Consortium 
(W3C). XSLT can be thought of as an extension of the Extensible Stylesheet Language (XSL).  
XSL is a language for formatting an XML document, in order to display it, for instance  as a web 
page. XSLT shows how the XML document should be reorganized into another data structure. 
Concretely, XSLT is used to describe how to transform the source data structure of an XML 
document into a new XML document, which can have a completely different data structure.  
Figure 59 illustrates how a transformation works. An XML document is fed to an XSL processor 
that will parse the document s tructure. Then the processor transforms and formats the document 
according to an XSL stylesheet and emits a new document. This process is quite powerful as it 
allows to select specific information of the input document to put into the new document. In othe r 
words, XSLT allows not only to create different output formats such as HTML or PDF but also to 
select different contents of the input document for the various output documents.  
Applying this to the concept of the business model ontology this means that if one has seized a 
business model with BM2L one can easily generate different documents tailored to specific needs. 
A venture capitalist might want a two -pager to compare different business models while an 
executive in a company may need a 10 page report to understand a business model and make 
decisions. And the business process designer might want a really detailed 50 page report to be 
able to engineer processes and workflows.  
 
Figure 59: XSL Transform ation  
6.4 VISUALIZING A CHANNE L STRATEGY WITH SCAL ABLE VECTOR 
GRAPHICS SVG  
In this section I demonstrate how XSLT can be used to transform parts of a BM 2L document into 
a graphical representation. I aim at automatically generating a visual illustration of the channel XSL  
Processor  XML  
Document  XSL Stylesheet  
Document  HTML  
Document  
SVG  
Document  PDF  
Document  
Word  
Document  

Application Prototypes: BM 2L 
124 strategy of a company by extracting the information on channels in the BM 2L document and 
transforming them into a visual form. To achieve this I apply the transformation capabilities of 
XML addressed in section 6.3 to a BM 2L document by conceiving a XSL stylesheet  and feeding 
them to an XSL processor (as illustrated in Figure 60).  
 
Figure 60: Transformation from BM 2L to SVG  
The gener ated image of a company's channel strategy is saved as  a Scalable Vector Graphics 
(SVG)  document. SVG is  simply  the description of an image in XML. Any program such as a 
web browser  that recognizes XML can display the image using the information provided i n the 
SVG format.  
 
Figure 61: SVG screenshot of channel s trategy  
In a nutshell, I applied an XSL document (cf. excerpt Figure 62) to the MJF case seized in BM2L 
and got a SVG do cument (cf. excerpt Figure 63). This outcome can be read by a web browser and 
gives me a graphical representation of a company's distribution channels (see Figure 61). The 
goal of this is to achieve a rapid  understanding of a part of a business model, in this case 
channels, through visualization (cf. section 2.4.1  on visualization).   
XSL  
Processor  BM2L 
Document  SVG  
Document  
xmlspy  
XSL Stylesheet  
Document  BM2L 
Schema  

The Business Model Ontology - a proposition in a design science approach  
 125  
Figure 62: Excerpt of the XSL document  
 
Figure 63: Excerpt of the SVG document  
6.5 GENERATING A REPORT IN PDF  
Building on the  same transformation capabilities as demonstrated in the previous example with 
SVG one can also imagine the generation of a specific report from a business model seized with 
BM2L. Such a report could resemble the business model overview presented in sectio n 5 or could 
be more detailed according to particular needs.  <?xml version="1.0" encoding="UTF -8"?>  
<xsl:styleshee t version ="1.0" xmlns:xsl ="http://www.w3.org/1999/XSL/Transform " 
xmlns:fo ="http://www.w3.org/1999/XSL/Format "> 
 
<xsl:template  match ="/"> 
<xsl:apply -templates  select ="./BusinessModel/Customer "/> 
</xsl:template > 
 
<xsl:template  match ="Customer "> 
<svg xmlns:xl ink="http://www.w3.org/1999/xlink " height ="800px " width ="800px " onload ="init(evt) " 
viewBox ="0 0 800 800 "> 
  <line y2="35" x2="760" y1="35" x1="6" stroke -dasharray ="3" stroke ="black "/> 
 <text y="20" x="50">CHANNEL </text> 
 <line y2="472" x2="140" y1="6" x1="140" stroke -dasharray ="5" stroke ="black "/> 
 <text y="20" x="180">{Awarness} </text> 
 <line y2="472" x2="300" y1="6" x1="300" stroke -dasharray ="5" stroke ="black "/> 
 <text y="20" x="340">{Evaluation} </text> 
 <line y2="472" x2="460" y1="6" x1="460" stroke -dasharray ="5" stroke ="black "/> 
 <text y="20" x="500">{Purchase} </text> 
 <line y2="472" x2="620" y1="6" x1="620" stroke -dasharray ="5" stroke ="black "/> 
 <text y="20" x="660">{After Sales} </text> 
 
 <xsl:for -each select ="./DistributionChannel "> 
  <xsl:call -templat e name ="DistributionChannel "/> 
 </xsl:for -each> 
 </svg> 
</xsl:template > 
<?xml version="1.0" encoding="UTF -8"?>  
<svg xmlns:fo ="http://www.w3.org/1999/XSL/Format " xmlns:xlink ="http://www.w3.org/1999/xlink " 
height ="800px " width ="800px " onload ="init(evt) " viewBox ="0 0 800 800 "> 
 <line y2="35" x2="760" y1="35" x1="6" stroke -dasharray ="3" stroke ="black "/> 
 <text y="20" x="50">CHANNEL </text> 
 <line y2="472" x2="140" y1="6" x1="140" stroke -dasharray ="5" stroke ="black "/> 
 <text y="20" x="180">{Awarness} </text> 
 <line y2="472" x2="300" y1="6" x1="300" stroke -dasharray ="5" stroke ="black "/> 
 <text y="20" x="340">{Evaluation} </text> 
 <line y2="472" x2="460" y1="6" x1="460" stroke -dasharray ="5" stroke ="black "/> 
 <text y="20" x="500">{Purchase} </text> 
 <line y2="472" x2="620" y1="6" x1="620" stroke -dasharray ="5" stroke ="black "/> 
 <text y="20" x="660">{After Sales} </text> 
 <text y="60" x="10">www.montreuxjazz.com </text> 
 <line y2="105" x2="760" y1="105" x1="6" stroke -dasharray ="3" stroke ="black "/> 
 <line y2="420" x2="320" y1="70" x1="280" stroke ="black " stroke -dasharray ="solid "/> 
 <line y2="70" x2="320" y1="70" x1="280" stroke ="black " stroke -dasharray ="solid "/> 
 <rect height ="60" width ="120" y="40" x="160" fill="yellow "/> 
Application Prototypes: BM 2L 
126  
Figure 64: screenshot of the PDF report  
6.6 CONCLUDING: WHY USE BM2L 
For this dissertation BM2L has become more than just a simple prototype and  instantiation of the 
business model ontology. It was a truly practical tool that helped me asses the Montreux Jazz 
Festival case study. Having solely worked with the structure of the ontology and a word processor 
to capture the MJF's business logic at the  beginning I decided to design BM2L to simplify the 
task. To seize a business model formally and to take into account elements, attributes and 
relationships can be quite cumbersome and complicated without computer assistance. But on the 
other hand computer  assistance for capturing business models only becomes possible after 
formalizing the concepts and making them computable.  
BM2L in combination with the off -the-shelf XML tool xmlspy is comparable to a CASE tool 
(Computer Assisted Software Engineering) in software or process development. Among other 
things CASE tools particularly help to seize, manage and analyze complex projects. Though a 
simple prototype, BM2L already makes it possible to seize business models and makes first 
modest steps in the direction  of analysis (e.g. visualization of complexities).  
Pursuing this direction further would include the development of a real business model design 
tool with a graphical interface assisting the designer in capturing and designing elements, 
attributes and rel ationships. The next step would involve adding analyzing and management 
capacities. Some of these ideas that could be based on BM2L are outlined in section 1 on 
ontology applications and further research.  
Concluding, it can be said that introducing BM2L has made things easier in regards of capturing 
business models. In my opinion further researching the design and use of similar tools would be a 
genuine ste p forwards in business model research, as they could also be tested in management 
settings.  
Different communications ask for 
different document types with different 
information. These can easily be 
generated, for example as PDF 
documents, from the basic business 
model description captured in BM2L. 
These could target:  
• managers  
• employees  
• customers  
• investors  
