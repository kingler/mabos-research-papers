ScienceDirect
Available online at www.sciencedirect.com
Procedia Computer Science 159 (2019)  707–716
1877-0509 © 2019 The Authors. Published by Elsevier B.V .
This is an open access article under the CC BY-NC-ND license ( https://creativecommons.org/licenses/by-nc-nd/4.0/ )
Peer-review under responsibility of KES International.
10.1016/j.procs.2019.09.226
10.1016/j.procs.2019.09.226 1877-0509© 2019 The Authors. Published by Elsevier B.V .
This is an open access article under the CC BY-NC-ND license ( https://creativecommons.org/licenses/by-nc-nd/4.0/ )
Peer-review under responsibility of KES International.Available online at www.sciencedirect.com
Procedia Computer Science 00 (2019) 000–000Available online at www.sciencedirect.com
Procedia Computer Science 105 (2017) i
2016 IEEE International Symposium on Robotics and Intelli-
gent Sensors, IRIS 2016, 17–20 December 2016, Tokyo, Japan
Editorial Board:
Hanaﬁ  ah Yussof
Amsterdam - Boston - London - New York - Oxford - Paris - Philadelphia - San Diego - St LouisScienceDirect
www.elsevier.com/locate/procedia
23rd International Conference on Knowledge-Based and Intelligent Information & Engineering
Systems
Discovery of closed spatio-temporal sequential patterns from event
data
Piotr S. Maci˛ ag∗, Marzena Kryszkiewicz, Robert Bembenik
Institute of Computer Science, Warsaw University of Technology
Nowowiejska 15/19,
00-665, Warsaw, Poland
Abstract
In the paper, we ﬁrst thoroughly examine and prove properties of the participation index of spatio-temporal sequential patterns.
Then, we introduce notions of a closure of a spatio-temporal sequential pattern and a closed spatio-temporal sequential pattern, as
well as investigate and prove their properties. In particular, we prove that the set of all participation index strong closed spatio-
temporal sequential patterns constitues a lossless representation of all participation index strong spatio-temporal sequential patterns.
We also propose an algorithm, called CST-SPMiner, for discovering all participation index strong closed spatio-temporal sequential
patterns. CST-SPMiner is an adaptation of the STBFM algorithm, which was proposed recently for the discovery of spatio-temporal
sequential patterns with high participation index. While STBFM uses the CSP-tree structure for time-eﬃcient candidate patterns
generation and evaluation, CST-SPMiner uses it also for fast identiﬁcation of closed patterns. Eﬃciency and eﬀectiveness of our
algorithm were veriﬁed on real crime data for Boston.
c/circlecopyrt2019 The Author(s). Published by Elsevier B.V .
This is an open access article under the CC BY-NC-ND license (https://creativecommons.org/licenses/by-nc-nd/4.0/)
Peer-review under responsibility of KES International.
Keywords: closed spatio-temporal sequential patterns, event spatio-temporal data, participation index, crime data
1. Introduction
Event spatio-temporal data is collected by many modern sensing devices. This type of data is characterized by both
geographical (spatial) location and temporal aspects of data objects as well as a set of related event types [9, 10].
Crime related data, where each crime incident is characterized by a geographical location, occurrence time and crime
type, is an example of event spatio-temporal data. Another example is a set of disease related data: occurrences of
several types of diseases can be observed on some area over a certain time span. Discovering relations in the form of
∗Corresponding author
E-mail address: {P.Maciag, M.Kryszkiewicz, R.Bembenik}@ii.pw.edu.pl
1877-0509 c/circlecopyrt2019 The Author(s). Published by Elsevier B.V .
This is an open access article under the CC BY-NC-ND license (https://creativecommons.org/licenses/by-nc-nd/4.0/)
Peer-review under responsibility of KES International.Available online at www.sciencedirect.com
Procedia Computer Science 00 (2019) 000–000Available online at www.sciencedirect.com
Procedia Computer Science 105 (2017) i
2016 IEEE International Symposium on Robotics and Intelli-
gent Sensors, IRIS 2016, 17–20 December 2016, Tokyo, Japan
Editorial Board:
Hanaﬁ  ah Yussof
Amsterdam - Boston - London - New York - Oxford - Paris - Philadelphia - San Diego - St LouisScienceDirect
www.elsevier.com/locate/procedia
23rd International Conference on Knowledge-Based and Intelligent Information & Engineering
Systems
Discovery of closed spatio-temporal sequential patterns from event
data
Piotr S. Maci˛ ag∗, Marzena Kryszkiewicz, Robert Bembenik
Institute of Computer Science, Warsaw University of Technology
Nowowiejska 15/19,
00-665, Warsaw, Poland
Abstract
In the paper, we ﬁrst thoroughly examine and prove properties of the participation index of spatio-temporal sequential patterns.
Then, we introduce notions of a closure of a spatio-temporal sequential pattern and a closed spatio-temporal sequential pattern, as
well as investigate and prove their properties. In particular, we prove that the set of all participation index strong closed spatio-
temporal sequential patterns constitues a lossless representation of all participation index strong spatio-temporal sequential patterns.
We also propose an algorithm, called CST-SPMiner, for discovering all participation index strong closed spatio-temporal sequential
patterns. CST-SPMiner is an adaptation of the STBFM algorithm, which was proposed recently for the discovery of spatio-temporal
sequential patterns with high participation index. While STBFM uses the CSP-tree structure for time-eﬃcient candidate patterns
generation and evaluation, CST-SPMiner uses it also for fast identiﬁcation of closed patterns. Eﬃciency and eﬀectiveness of our
algorithm were veriﬁed on real crime data for Boston.
c/circlecopyrt2019 The Author(s). Published by Elsevier B.V .
This is an open access article under the CC BY-NC-ND license (https://creativecommons.org/licenses/by-nc-nd/4.0/)
Peer-review under responsibility of KES International.
Keywords: closed spatio-temporal sequential patterns, event spatio-temporal data, participation index, crime data
1. Introduction
Event spatio-temporal data is collected by many modern sensing devices. This type of data is characterized by both
geographical (spatial) location and temporal aspects of data objects as well as a set of related event types [9, 10].
Crime related data, where each crime incident is characterized by a geographical location, occurrence time and crime
type, is an example of event spatio-temporal data. Another example is a set of disease related data: occurrences of
several types of diseases can be observed on some area over a certain time span. Discovering relations in the form of
∗Corresponding author
E-mail address: {P.Maciag, M.Kryszkiewicz, R.Bembenik}@ii.pw.edu.pl
1877-0509 c/circlecopyrt2019 The Author(s). Published by Elsevier B.V .
This is an open access article under the CC BY-NC-ND license (https://creativecommons.org/licenses/by-nc-nd/4.0/)
Peer-review under responsibility of KES International.
708 Piotr S. Maciąg  et al. / Procedia Computer Science 159 (2019) 707–716
sequential patterns showing time dependencies between spatially close occurrences of diﬀerent types of diseases or
crimes provides a useful insight, potentially preventing future undesirable consequences.
In [11], we introduced the participation index in order to evaluate signiﬁcance of spatio-temporal sequential pat-
terns. We also proposed the STBFM algorithm and the SPTree structure to eﬃciently discover such patterns withhigh participation index. As follows from the performed experiments [11], the number of discovered patterns stronglydepends on the participation index threshold value. For lower threshold values, their number is huge and practically
impossible to analyse. In order to alleviate this problem, in this paper, we focus on eﬃcient discovery of a concise
representation of spatio-temporal sequential patterns in the form of closed spatio-temporal sequential patterns.
Problem statement. The problem considered in this paper is: (1) to derive properties of the participation index ofspatio-temporal sequential patterns and participation index closed spatio-temporal sequential patterns; (2) to applythe derived properties for eﬃcient discovery of closed spatio-temporal sequential patterns with the participation index
greater than a given threshold θvalue.
Related work. The problem of frequent sequential patterns discovery from temporal data without spatial dimension
was formulated in [1] and [12]. An overview of methods of discovering this kind of patterns is given e.g. in [14, 5].
In [16], frequent closed sequential patterns were proposed as a lossless and concise representation of all frequent
sequential patterns. The CloSpan algorithm was oﬀered there for discovering such patterns. Since then several eﬃcient
algorithms such as ClaSP [7] and CloFAST [6] for mining frequent closed sequential patterns were proposed.
Recently, there is an increased interest in discovery of sequential patterns from event spatio-temporal data. The
problem of discovering sequential patterns with high sequence index from event spatio-temporal data was introducedin [8]. In [13], discovery of cascade spatio-temporal patterns was proposed. [3] considered spatio-temporal sequential
patterns discovery from evolving region-based instances. A survey of types of sequential patterns and methods of theirdiscovery from event spatio-temporal data can be found in [9, 15]. Recently, discovery of spatio-temporal sequential
patterns with high participation index was proposed by us in [11]. Our study in [11] is similar to those in [8] and [13],
however signiﬁcance of sequential patterns is deﬁned diﬀerently in all these works.
While a number of approaches to mining sequential patterns from event spatio-temporal data is available in the lit-
erature, to the best of our knowledge no methods of discovering concise representations of spatio-temporal sequential
patterns from such data were oﬀered. This motivated us to investigate this topic and propose an eﬃcient method fordiscovering closed spatio-temporal sequential patterns.
Contributions. In this paper, we provide the following new contributions:
(i) In Section 3, we thoroughly examine and prove properties of the participation index (as deﬁned in [11]) of spatio-
temporal sequential patterns. In particular, we prove that the participation index preserves anti-monotonicity propertynot only when extending a sequence by inserting elements at its end, but also by inserting elements at its beginning (see
Theorem 1). We also provide an example showing that anti-monotonicity of the participation index is not guaranteed
when sequences are extended in another way.
(ii) In Section 4, we introduce notions of a closure of a spatio-temporal sequential pattern and a closed spatio-temporal
sequential pattern, as well as thoroughly examine and prove their properties. In particular, we prove that the set of
all closed spatio-temporal sequential patterns with the participation index greater than θis a lossless representation
of all spatio-temporal sequential patterns with participation index greater than θ(see Theorem 3). We also prove
that a spatio-temporal sequential pattern−→sis closed if and only if its participation index is diﬀerent both from the
participation index of its subsequence obtainable from−→sby removing its last element and from the participation
index of its subsequence obtainable from−→sby removing its ﬁrst element (see Theorem 4). This property provides an
eﬃcient method for distinguishing between closed and non-closed (in terms of the participation index) spatio-temporalsequential patterns.(iii) In Section 5, we propose a new algorithm called CST-SPMiner for discovering all closed spatio-temporal se-
quential patterns with the participation index greater than θ. CST-Miner is an extension of the STBFM algorithm in
that CST-SPMiner uses the STBFM method for ﬁnding spatio-temporal sequential patterns with participation index
greater than θ, but additionally uses Theorem 4to identify the closed ones among them. The CSP-tree structure is used
in CST-SPMiner not only for eﬃcient generation and evaluation of candidate patterns as in STBFM, but also for fast
identiﬁcation of closed patterns. (iv) In Section 6, we present the results of the experiments we performed to verify
eﬃciency and eﬀectiveness of our algorithm on real crime data for Boston.
 Piotr S. Maciąg  et al. / Procedia Computer Science 159 (2019) 707–716 709
2. Basic Notions
LetFdenote a set of nevent types and Ddenote a dataset of event instances such that for each event instance
e∈D, its spatial location, occurrence time (timestamp) and event type F∈Fare provided. Dwill be called an event
spatio-temporal dataset. The set of all event instances of type Fin dataset Dwill be denoted by D(F).
Fig. 1illustrates the case, where the set of event types F={A,B,C,D,E}, the dataset of event instances D=
{a1,a2,b1,..., b8,c1,..., c8,d1,..., d3,e1,..., e5}, event instances a1anda2are of type A(i.e., D(A)={a1,a2}),
event instances b1,..., b8are of type B(i.e., D(B)={b1,..., b8}), etc. A spatial location and occurrence time of each
instance e∈Dis provided in Fig. 1as values of the horizontal and vertical coordinates, respectively. We will refer to
the dataset from Fig. 1in all illustrating examples in the paper.
102030405060
0Time
10 20 30 40 50 60 70 80 90 100
Event
TypesA
B
C
D
E
110 1207080
Location
RT
R = 10
T  = 20a2a1b1b2
b3 b4 b5b6
b7b8d1
d2d3c1 c2
c3 c4e1e2e3e4e5c5
c6c7c8
Fig. 1. An example event spatio-temporal dataset Dshowing event instances of corresponding event types. For an event instance e∈D, dashed
lines represent spatio-temporal space constisting of event instances that are distant from eby at most Rand occurred later than eby at most T.
Deﬁnition 1 (Spatio-temporal sequential pattern, ST-sequential pattern). Aspatio-temporal sequential pattern
(in brief, ST-sequential pattern) is a sequence of elements each of which is an event type from F. The number of
elements of the sequence is called its length. i-th element of sequence−→sis denoted by−→s[i]. Sequence−→sconsisting
ofmelements is denoted equivalently as−→s[1]→−→s[2]→···→−→s[m] or−→s[1]→···→−→s[m].
Deﬁnition 2 ((Immediate) subsequence /supersequence of an ST-sequential pattern). Let−→s1and−→s2be ST-
sequential patterns.−→s1is asubsequence of−→s2and−→s2is asupersequence of−→s1if−→s1can be obtained from−→s2by removing
any number of elements from−→s1.−→s1is an immediate subsequence of−→s2and−→s2is an immediate supersequence of−→s1if−→s1is a subsequence of−→s2and−→s1contains exactly 1 element less than−→s2.
The notion of the participation index was introduced in [11] as a measure of signiﬁcance of an ST-sequential
pattern. In order to provide the deﬁnition of this measure, we will ﬁrst introduce a number of useful auxiliary notions.
Deﬁnition 3 (Neighborhood of event instance with respect to event type [8]). For an event instance e, the neigh-
borhood of e with respect to an event type F ∈Fis denoted by NF(e) and is deﬁned as follows: NF(e)={p|p∈
D(F)∧distance( p.location, e.location) ≤R∧(p.time −e.time) ∈(0,T]}, where RandTdenote user-given spatial
distance threshold and time window threshold, respectively.
Thus, the neighborhood NF(e) of event instance eis the set of event instances of type Fthat are distant from e
by at most Rand occurred later than eby at most T. Clearly, NF(e) is a subset of D(F) for any event instance e. For
example, NB(a1)={b1,b2}, while D(B)={b1,..., b8}). Hence, NB(a1)⊆D(B).
710 Piotr S. Maciąg  et al. / Procedia Computer Science 159 (2019) 707–716
Deﬁnition 4 (Set of event instances supporting an element of an ST-sequential pattern [11]). Set of event in-
stances supporting i-th element of ST-sequential pattern−→sis denoted by I(−→s,i) and is deﬁned as follows:
I(−→s,i)=D(−→s[1]) when i=1,/uniontext
e∈I(−→s,i−1)N−→s[i](e) when i>1. (1)
SetI(−→s,1) of instances supporting the ﬁrst event type of sequence−→sis deﬁned as the set of all instances of this
event type in D; that is, to D(−→s[1]). Set I(−→s,i) of instances supporting each next i−th event type of−→sis deﬁned as the
set-theoretical union of the neighborhoods of the instances supporting (i −1)−th event type of−→s. Let−→s=A→B→D.
Then, based on the dataset in Fig. 1,I(−→s[1])={a1,a2},I(−→s[2])={b1,b2,b3,b4},I(−−→s[3])={d1,d2}).
Deﬁnition 5 (Participation ratio [11]). Theparticipation ratio of an i-th element of ST-sequential pattern−→s, where
i≥1, is denoted by PR(−→s,i) and is deﬁned as the ratio of the cardinality of the set of event instances supporting i-th
element of−→sto the number of all instances of type−→s[i] in the dataset D; that is: PR(−→s,i)=/vextendsingle/vextendsingle/vextendsingleI(−→s,i)/vextendsingle/vextendsingle/vextendsingle
/vextendsingle/vextendsingle/vextendsingleD(−→s[i])/vextendsingle/vextendsingle/vextendsingle.
Clearly, the participation ratio takes values from the interval [0, 1]. Based on the dataset from Fig. 1, we conclude
for ST-sequential pattern−→s=A→B→DthatPR(−→s,1)=2
2=1,PR(−→s,2)=4
8=0.5 and PR(−→s,3)=2
3=0.66.
Deﬁnition 6 (Participation index [11]). The participation index of ST-sequential pattern−→s=−→s[1]→−→s[2]→
··· →−→s[m] is denoted by PI(−→s) and is deﬁned as the minimum from the participation ratios of all elements of−→s;
that is, PI(−→s)=min/parenleftbig{PR(−→s,i)|i=1,2,..., m}/parenrightbig.
Thus, the participation ratio of−→s=A→B→Dequals the minimum from PR(−→s,1),PR(−→s,2) and PR(−→s,3); that
is,PI(−→s)=min/parenleftbig{1,0.5,0.66}/parenrightbig=0.5.
Deﬁnition 7 (PI-strong ST-sequential pattern). An ST-sequential pattern is called PI-strong if its participation in-
dexPIis greater than a given participation index threshold θ.
3. Theoretical Foundations of Spatio-Temporal Sequential Patterns
Knowledge of properties of patterns can be used to devise e ﬃcient algorithms for their discovery. In particular, the
STBFM algorithm [11] uses the following properties to reduce the number of candidates for PI-strong ST-sequential
patterns: If−→sis an ST-sequential pattern,−→s1is its subsequence obtainable from−→sby removing a number of its last
elements and−→s2is its subsequence obtainable from−→sby removing a number of its ﬁrst elements, then PI(−→s)≤PI(−→s1)
andPI(−→s)≤PI(−→s2). The former property follows trivially from the deﬁnition of the participation index, however, the
second property does not. In fact, no proofs of these properties were provided in [11]. In this section, we thoroughly
examine and prove these two and a number of other properties of ST-sequential patterns.
Let us start with an example showing that neither monotonicity nor anti-monotonicity (w.r.t. sequences contain-
ment) of the participation index is guaranteed. Let us consider ST-sequential patterns−→s1=A→C,−→s2=A→B→C,−→s3=A→B→C→Eand−→s4=A→B→C→E→C. Clearly,−→s1is a subsequence of−→s2, which is a subsequence
of−→s3, which, in turn, is a subsequence of−→s4. Their participation indices calculated with respect to the dataset and
threshold values presented in Fig. 1are as follows: PI(−→s1)=0,PI(−→s2)=0.5,PI(−→s3)=0.5,PI(−→s4)=0.25.
Even though the participation index is not guaranteed to be non-increasing for supersequences, we will show that
it is non-increasing for a speciﬁc type of supersequences called contiguous.
Deﬁnition 8 ((Proper) contiguous subsequence /supersequence of an ST-sequential pattern). Let−→s1=−→s1[1]→−→s1[2]→· · ·→−→s1[m1] and−→s2=−→s2[1]→−→s2[2]→· · ·→−→s2[m2] be ST-sequential patterns.−→s1is acontiguous
 Piotr S. Maciąg  et al. / Procedia Computer Science 159 (2019) 707–716 711
subsequence of−→s2and−→s2is acontiguous supersequence of−→s1ifm1≤m2and there exits an integer k, where 0 ≤k≤
m2−m1, such that−→s1[1]=−→s2[1+k]∧−→s1[2]=−→s2[2+k]∧···∧−→s1[m1]=−→s2[m1+k]. Ifm1<m2, then−→s1is aproper
contiguous subsequence of−→s2and−→s2is aproper contiguous supersequence of−→s1.
Let−→s1and−→s2be ST-sequential patterns of lengths m1andm2, respectively, and−→s1be a contiguous subsequence of−→s2. This means that−→s1is obtainable from−→s2by removing its ﬁrst kelements and last (m 2−m1−k) elements, where
0≤k≤m2−m1.
Lemma 1 (Event instances supporting an element of a contiguous subsequence of an ST-sequential pattern).
Let−→s1and−→s2be ST-sequential patterns of length m 1and m 2, respectively, such that−→s1is a contiguous subsequence of−→s2. Let k, where 0≤k≤m2−m1, be an integer such that−→s1[1]=−→s2[1+k]. Then, I (−→s1,i)⊇I(−→s2,i+k)for i=1..m 1.
Proof .Since−→s1is a contiguous subsequence of−→s2and−→s1[1]=−→s2[1+k], then−→s1[i]=−→s2[i+k] for i=1..m 1(by
Deﬁnition 8). Let Fi=−→s1[i] for i=1..m 1, Then,−→s2[i+k]=Fifori=1..m 1.
Case k=0:ST-sequential pattern−→s1=−→s1[1]→−→s1[2]→···→−→s1[m1] is equal to subsequence−→s2[1+k]→−→s2[2+k]→
···→−→s2[m1+k] of ST-sequential pattern−→s2; that is, to subsequence−→s2[1]→−→s2[2]→···→−→s2[m1] of ST-sequential
pattern−→s2. In this case, I(−→s1,i)=I(−→s2,i)=I(−→s2,i+k) for i=1..m 1.
Case k>0:Here, we will apply Deﬁnition 4to determine sets of event instances supporting elements of ST-sequential
patterns−→s1and−→s2.
•I(−→s1,1)=D(F1), while I(−→s2,1+k)=/uniontext
e∈I(−→s2,k)NF1(e). Thus, I(−→s1,1)⊇I(−→s2,1+k).
•I(−→s1,2)=/uniontext
e∈I(−→s1,1)NF2(e), while I(−→s2,2+k)=/uniontext
e∈I(−→s2,1+k)NF2(e). Thus, I(−→s1,2)⊇I(−→s2,2+k).
•...
•I(−→s1,m1)=/uniontext
e∈I(−→s1,m1−1)NFm1(e), while I(−→s2,m1+k)=/uniontext
e∈I(−→s2,m1−1+k )NFm1(e). Thus, I(−→s1,m1)⊇I(−→s2,m1+k)./square
Lemma 2 (Property of the participation ratio). Let−→s1and−→s2be ST-sequential patterns of length m 1and m 2, re-
spectively, such that−→s1is a contiguous subsequence of−→s2. Let k, where 0≤k≤m2−m1, be an integer such that−→s1[1]=−→s2[1+k]. Then, PR(−→s1,i)≥PR(−→s2,i+k)for i=1..m 1.
Proof .Since−→s1is a contiguous subsequence of−→s2and−→s1[1]=−→s2[1+k], then each i-th element of sequence−→s1is
the same as (i+k )-th element of sequence−→s2(by Deﬁnition 8). Thus, |D(−→s1[i])|=|D(−→s2[i+k])|. On the other hand,
Lemma 1implies that |I(−→s1,i)|≥| I(−→s2,i+k)|. Therefore, PR(−→s1,i)≥PR(−→s2,i+k) for i=1..m 1. /square
Theorem 1 (Anti-monotonicity property of the participation index for contiguous supersequences). Let−→s1and−→s2be ST-sequential patterns. If−→s1is a contiguous subsequence of−→s2, then PI (−→s1)≥PI(−→s2).
Proof .Theorem 1follows from the deﬁnition of the participation index (Deﬁnition 6) and Lemma 2. /square
Let us consider again ST-sequential patterns−→s2=A→B→C,−→s3=A→B→C→Eand−→s4=A→B→
C→E→C. ST-sequential pattern−→s2is a contiguous subsequence of−→s3, which is a contiguous subsequence of−→s4.
PI(−→s2)=0.5≥PI(−→s3)=0.5 and PI(−→s3)=0.5≥PI(−→s4)=0.25.
Lemma 3. Let−→s1and−→s2be ST-sequential patterns such that PI (−→s1)=PI(−→s2). For each ST-sequential pattern−→s3such
that−→s1is a contiguous subsequence of−→s3and−→s3is a contiguous subsequence of−→s2, PI(−→s1)=PI(−→s3)=PI(−→s2).
Proof .By Theorem 1:PI(−→s1)≥PI(−→s3) and PI(−→s3)≥PI(−→s2). Since PI(−→s1)=PI(−→s2), then PI(−→s1)=PI(−→s3)=PI(−→s2)./square
Theorem 2 (Contiguous (supersequences) subsequences of (non-) PI-strong ST-sequential patterns). If−→s is a
PI-strong ST-sequential pattern, then all contiguous subsequences of−→s are PI-strong ST-sequential patterns. If−→s
is not a PI-strong ST-sequential pattern, then all contiguous supersequences of−→s are not PI-strong ST-sequential
patterns.
712 Piotr S. Maciąg  et al. / Procedia Computer Science 159 (2019) 707–716
Proof .Theorem 2follows from Theorem 1. /square
We will consider now properties of immediate contiguous subsequences of an ST-sequential pattern.
Lemma 4 (Immediate contiguous subsequences of an ST-sequential pattern). Let−→s=−→s[1]→ ··· →−→s[m],
where m ≥2. ST-sequential patterns−→s1=−→s[1]→ ··· →−→s[m−1]and−→s2=−→s[2]→· · ·→−→s[m]are all and only
immediate contiguous subsequences of−→s.
Deﬁnition 9 (First (second) parent of an ST-sequential pattern). Let−→s=−→s[1]→···→−→s[m], where m≥2. The
ﬁrst parent of−→sis denoted by f irstParent (−→s) and is deﬁned as the immediate contiguous subsequence−→s1=−→s[1]→
··· →−→s[m−1] of−→s. The second parent of−→sis denoted by secondParent (−→s) and is deﬁned as the immediate
contiguous subsequence−→s2=−→s[2]→···→−→s[m] of−→s.
Thus, the only immediate contiguous subsequences of an ST-sequential pattern are its ﬁrst parent and its second
parent.
Lemma 5 (Construction of an ST-sequential patterns from its ﬁrst parent and second parent). Let−→s be an ST-
sequential pattern of length m ≥3and−→s1be the ﬁrst parent of−→s . Then,−→s=−→s1→Fm, where F mis the last element
of secondParent (−→s), and secondParent (−→s)=secondParent (−→s1)→Fm.
Proof .Let−→s=−→s[1]→· · ·→−→s[m]. Then, f irstParent (−→s)=−→s1=−→s[1]→· · ·→−→s[m−1] and
secondParent (−→s)=−→s[2]→ ··· →−→s[m]. Hence, secondParent (−→s1)=−→s[2]→ ··· →−→s[m−1] and the last el-
ement Fmof the secondParent (−→s) equals−→s[m]. Therefore, secondParent (−→s)=secondParent (−→s1)→Fm,Fmis the
last element of secondParent (−→s) and−→s=−→s1→Fm. /square
4. PI-Strong Closed Spatio-Temporal Sequential Patterns
In the data mining literature, closed patterns are deﬁned for diﬀerent types of patterns and data, e.g. closed frequent
itemsets, closed sequential patterns in transaction data etc. They are typically deﬁned as patterns having value of a
respective anti-monotonous (or partly anti-monotonous) interestingness measure diﬀerent from values of their all
(some) proper super-patterns (supersets, supersequences, etc.). Following this way of deﬁning closed patterns, weintroduce a notion of a closed ST-sequential pattern with respect to the participation index, which, as we proved in the
previous section, preserves anti-monotonicity for contiguous supersequences.
Deﬁnition 10 ((PI-)closed ST-sequential pattern and (PI-)closure of an ST-sequential pattern). ST-sequential
pattern−→s
1isPI-closed (in brief, closed ) if there exists no proper contiguous supersequence−→s2of−→s1such that the
participation index PI(−→s2)=PI(−→s1). A PI-closure (in brief, closure) of ST-sequential pattern−→s1is a contiguous
supersequence−→s2of−→s1such that−→s2is a closed ST-sequential pattern and PI(−→s2)=PI(−→s1).
Please note that an ST-sequential pattern may have more than one closure. For example, ST-sequential pattern
B→Chas the following two closures: A→B→C→EandB→B→C→E. All the three ST-sequential patterns
have the same participation index, which is equal to 0.5 (please see Fig. 1and Fig. 2).
Deﬁnition 11 (The set of all PI-strong closed ST-sequential patterns, PI-SC). The set of all PI-strong closed ST-
sequential patterns is denoted by PI-SC and is deﬁned as the set of all closed ST-sequential patterns that are PI-strong.
Theorem 3 (PI-SC as a lossless representation of all PI-strong ST-sequential patterns).
a)The set PI-SC of all PI-strong closed ST-sequential patterns enables determining for each ST-sequential pat-
tern whether it is PI-strong or not; namely, an ST-sequential pattern is PI-strong if and only if there exists its
contiguous supersequence in PI-SC.
b)If−→s is a PI-strong ST-sequential pattern, then PI (−→s)=max{PI(−→si)|−→siis a contiguous supersequence of−→s
and−→si∈PI-SC}. /square
 Piotr S. Maciąg  et al. / Procedia Computer Science 159 (2019) 707–716 713
Proof .Ad Theorem 3a) Each ST-sequential pattern−→shas a closure being its proper or improper contiguous superse-
quence among closed ST-sequential patterns and the participation index of−→sis the same as that of its closure. If there
is no contiguous supersequence of−→sin PI-SC, then a closure of−→sis among closed ST-sequential patterns that are not
PI-strong. In such a case,−→sis not PI-strong as its closure is not. Otherwise, a closure of−→sis among its contiguous
supersequences in PI-SC, which means that−→sis PI-strong as its closure is.
Ad Theorem 3b) Let−→sbe a PI-strong ST-sequential pattern. Hence, its closures are also PI-strong. The question
is which contiguous superesequences of−→sin PI-SC are closures of−→s. By Theorem 1,PI(−→s) is not greater than the
participation index of any of its contiguous supersequences. This condition implies that the closures of PI(−→s) are
those contiguous supersequences of−→samong all contiguous supersequences of−→sin PI-SC that have the greatest
value of the participation index. /square
Lemma 6 (Immediate contiguous supersequence of an ST-sequential pattern). Let−→s1=−→s1[1]→−→s1[2]→···→−→s1[m1]and−→s2=−→s2[1]→−→s2[2]→ ··· →−→s2[m2]be ST-sequential patterns such that−→s1is a proper non-immediate
contiguous subsequence of−→s2and−→s1[1]=−→s2[1+k]for some integer 0≤k≤m2−m1. Then, there is at least
one immediate contiguous supersequence of−→s1; namely,−→s2[k]→−→s1[1]→· · ·→−→s1[m1], provided k >0, and/or−→s1[1]→···→−→s1[m1]→−→s2[m1+k+1], provided k <m2−m1.
Lemma 7. ST-sequential pattern−→s is not closed if and only if there exists an immediate contiguous supersequence−→siof−→s such that the participation index PI (−→si)=PI(−→s).
Proof .−→s1is not a closed ST-sequential pattern ⇐⇒ there is a contiguous supersequence−→sjof−→ssuch that PI(−→sj)=
PI(−→s)⇐⇒ (by Lemma 3and Lemma 6) there is an immediate contiguous supersequence−→siof−→ssuch that
PI(−→si)=PI(−→s). /square
Theorem 4. ST-sequential pattern−→s is not closed if and only if−→s is the ﬁrst parent or second parent of an ST-
sequential pattern−→sisuch that the participation index PI (−→si)=PI(−→s).
Proof .Let−→sbe a non-closed ST-sequential pattern. By Lemma 7, there is an immediate contiguous supersequence
of−→s, say−→si, such that PI(−→si)=PI(−→s). Hence,−→sis an immediate contiguous subsequence of−→si. Thus, by Lemma 4,−→sis the ﬁrst parent or second parent of−→sisuch that such PI(−→si)=PI(−→s). /square
5. Discovering PI-Strong Closed Spatio-Temporal Sequential Patterns
In this section, we propose the CST-SPMiner algorithm (Algorithm 1) for discovering all PI-strong closed ST-
sequential patterns (PI-SC). The algorithm bases on candidate generation and veriﬁcation schema of the STBFM algo-
rithm and the preﬁx SPTree, which were introduced in [11]. CST-SPMiner uses the methodology of the STBFM algo-
rithm for mining PI-strong ST-sequential patterns iteratively. In each k-th iteration, the set of PI-strong ST-sequential
patterns of length k(Lk) is mined. Initially, each pattern in Lkis marked as closed. However, in iteration k+1 its
state may be changed from closed tonon-closed according to Theorem 4. The resulting set of discovered PI-strong
ST-sequential patterns that remained marked as closed is returned as the sought PI-SC patterns.
The execution of CST-SPMiner proceeds as follows. First, ST-sequential patterns of length 1 are generated from all
event types in F. The participation indices of these patterns are set to 1 according to Deﬁnitions 4,5,6. Then, patterns
of length 2 are generated and veriﬁed in two nested loops as presented in lines 3-12 of Algorithm 1. PI-SC patterns
of length k≥3 are discovered by Algorithm 2as follows: (1) for each pattern−→si∈Lk−1, and each child−→sjof the
second parent of−→si, a new pattern−→sis generated by concatenating ST-sequential pattern−→siwith the last event type
of−→sj(see Lemma 5). Next,−→siand−→sjare set as being ﬁrst and second parent of−→s, respectively. (2) The participation
index (PI) of the newly created pattern is calculated. If PI is greater than the threshold θ, the pattern is added to the
list of children of its ﬁrst parent (−→si) and stored as PI-strong ST-sequential pattern in Lk. (3) If the participation index
of its ﬁrst parent or second parent is equal to the participation index of−→s, then such ﬁrst or second parent is marked
as non-closed in Lk−1according to Theorem 4and is not returned in the PI-SC patterns set.
To eﬃciently calculate the participation index of candidate patterns, neighborhoods of event instances are deter-
mined with the plane sweep algorithm proposed in [2].
The result of the execution of Algorithm 1with input parameters: R=10,T=20, and θ=0.2 for the example
synthetic dataset presented in Fig. 1is the CSP-tree shown in Fig. 2.
714 Piotr S. Maciąg  et al. / Procedia Computer Science 159 (2019) 707–716
Algorithm 1 CST-SPMiner: Closed Spatio-Temporal Sequential Patterns Miner Algorithm
Input: D - event spatio-temporal dataset, F- set of event types, R- spatial threshold value, T- time window
threshold value, θ- the participation index threshold value.
Assumption: Lk- a set of PI-strong ST-sequential patterns of length k, each of which initially is marked as closed.
Output: PI-SC =/uniontext
k/braceleftbig−→s∈Lk|−→sis marked as closed/bracerightbig.
1:L1:=generate PI-SC patterns of length 1 from all event types in F;
2:L2:=∅;
3:foreach−→si∈L1do
4: foreach−→sj∈L1do
5:−→s:=−→si[1]→−→sj[1];−→s[2].I:=/uniontext
e∈−→si[1].IN−→s[2](e);−→s.PI:=PR(−→s,2);
6: if−→s.PI>θthen
7:−→s.f irstParent :=−→si,−→s.secondParent :=−→sj; Add−→sto−→si.children; Add−→stoL2;
8: if−→s.PI=−→s.f irstParent .PIthen mark−→s.f irstParent as non-closed; end if
9: if−→s.PI=−→s.secondParent .PIthen mark−→s.secondParent as non-closed; end if
10: end if
11: end for
12:end for
13:k:=3;
14:while Lk−1/nequal∅do
15: Lk:=GenAndVerify( Lk−1);k:=k+1;
16:end while
17:return/uniontext
k/braceleftbig−→s∈Lk|−→sis marked as closed/bracerightbig;
Algorithm 2 GenAndVerify( Lk−1)
Input: Lk−1- a set of PI-strong ST-sequential patterns of length k−1.
Output: Lk- a set of PI-strong ST-sequential patterns of length k.
1:Lk:=∅;
2:foreach−→si∈Lk−1do
3:−→sl:=−→si.secondParent ;
4: foreach−→sj∈−→sl.children do
5:−→s:=−→si[1]→−→si[2]→···→−→si[k−1]→−→sj[k−1];
6:−→s[k].I:=/uniontext
e∈−→si[k−1].IN−→s[k](e);
7:−→s.f irstParent :=−→si,−→s.secondParent :=−→sj;
8:−→s.PI:=min(−→s.f irstParent .PI,PR(−→s,k));
9: if−→s.PI>θthen
10: Add−→sto−→si.children; Add−→stoLk;
11: if−→s.PI=−→s.f irstParent .PIthen mark−→s.f irstParent as non-closed; end if
12: if−→s.PI=−→s.secondParent .PIthen mark−→s.secondParent as non-closed; end if
13: end if
14: end for
15:end for
16:return Lk;
6. Experimental Evaluation
In the experiments, we compared execution times and the number of PI-SC patterns discovered by the oﬀered
CST-SPMiner algorithm with the execution times and the number of all PI-strong ST-sequential patterns discovered
by the STBFM algorithm [11]. The experiments were carried out on crime related Boston city data for year 2014 [4].First in our experiments, we used the complete dataset containing 40544 crime incidents of 26 crime types occurring
 Piotr S. Maciąg  et al. / Procedia Computer Science 159 (2019) 707–716 715
A (1)     B (1) C (1) D (1)
A B (0.5)E (1)
2LF
3L
4LB B (0.625) B C (0.5) B D (1) C E (0.8)
A B B (0.25) A B C (0.5) A B D (0.5) B B C (0.5)
A B B C (0.25) A B C E (0.5)
A B B C E(0.25) 5LE C (0.5)
B B D (0.33) C   E   C B C E (0.5) C   E   C (0.25)
6L A B B C E CB B C E (0.5) B C E C (0.25)
A B C E C(0.25) B B C E C(0.25)
(0.25)
Fig. 2. The CSP-tree created for the dataset presented in Fig. 1. PI-strong ST-sequential patterns of length k(Lk) are stored in nodes on level kof the
tree. Solid arrows indicate ﬁrst parents of patterns, dashed arrows indicate second parents of patterns. Grey boxes represent PI-SC patterns, white
boxes represent non-closed PI-strong patterns. Participation indices of patterns are provided in parentheses next to the patterns.
with various frequencies. The used dataset is publicly available at the Boston Police Department website. Then, we
used the reduced dataset created by selecting only event instances of 10 event types occurring least frequently in the
original dataset. These event types are: violation of liquor laws, operating under inﬂuence, manslaughter, homicide,
harassment, gambling oﬀense, embezzlement, crimes against children, bomb, arson . The reduced dataset contains 896
event instances overall.
Table 1presents a comparison of the results for CST-SPMiner and STBFM for the complete dataset, while Table 2
shows a similar comparison for the reduced dataset. For the results obtained for the complete dataset, the greatestreduction of the discovered patterns was achieved for small values of θand large values of time window Tthreshold.
For example, for the neighborhood speciﬁcation R=300 meters, T=5760 minutes (4 days) and the threshold
θ=0.015, the number of all PI-strong ST-sequential patterns discovered by STBFM was 2 819 490, while the number
of PI-SC patterns discovered by CST-SPMiner was 2 040 303, which means that PI-SC was 28% less numerous thanthe set of all PI-strong ST-sequential patterns. The diﬀerence between the number of discovered PI-SC patterns and all
PI-strong ST-sequential patterns was even greater for the reduced dataset. For example, for R=500 meters, T=57600
minutes (40 days) and θ=0.002, the number of PI-SC patterns (8 023 267) was by 84.3% less than the number of all
PI-strong ST-sequential patterns (49 213 713).
Table 1. Computation time (in seconds) and the number of discovered PI-SC patterns and PI-strong ST-sequential patterns for the complete dataset.
R=200 meters, T =14400 (10 days) R=300 meters, T =11520 (8 days) R=300 meters, T =5760 (4 days)
CST-SPMiner STBFM CST-SPMiner STBFM CST-SPMiner STBFM
θ time # patterns time # patterns θ time # patterns time # patterns θ time # patterns time # patterns
0.09 33 3848 33 4598 0.55 10 27 10 28 0.055 13 3346 13 3982
0.085 40 5161 36 6233 0.5 10 34 10 35 0.05 14 4484 14 5386
0.08 46 6887 47 8419 0.45 12 55 12 56 0.045 16 6248 15 7550
0.075 53 10 233 48 12 810 0.4 12 86 12 91 0.04 19 9899 17 12 014
0.07 65 15 817 57 20 196 0.35 19 182 17 195 0.035 22 17 732 22 22 191
0.065 83 27 388 77 35 483 0.3 21 336 20 385 0.03 33 33 954 32 43 327
0.06 119 51 663 112 67 672 0.25 28 760 27 881 0.025 47 79 701 49 102 731
0.055 212 133 962 192 182 501 0.2 53 2799 50 3388 0.02 93 282 156 96 367 400
0.05 488 430 763 443 593 785 0.15 269 39 224 265 51 881 0.015 357 2 040 303 346 2 819 490
Below we present example PI-strong closed ST-sequential patterns discovered from the reduced dataset for the
following threshold values: θ=0.02, R=600 meters and T=28800 minutes (20 days):
crime against child →violation of liquor law →operating under inﬂuence →harassment →embezzlement (PI=0.03);
violation of liquor law →operating under inﬂuence →bomb→homicide (PI=0.04);
violation of liquor law →operating under inﬂuence →homicide (PI=0.11);
716 Piotr S. Maciąg  et al. / Procedia Computer Science 159 (2019) 707–716
Table 2. Computation time (in seconds) and the number of discovered PI-SC patterns and PI-strong sequential patterns for the reduced dataset.
R=500 meters, T =43200 (30 days) R=500 meters, T =57600 (40 days) R=600 meters, T =28800 (20 days)
CST-SPMiner STBFM CST-SPMiner STBFM CST-SPMiner STBFM
θ time # patterns time # patterns θ time # patterns time # patterns θ time # patterns time # patterns
0.01 0.2 9987 0.2 34 102 0.01 3 156 310 2 631 282 0.01 0.04 1314 0.06 3996
0.009 0.2 9987 0.2 34 102 0.009 2 156 310 2 631 282 0.009 0.04 1314 0.05 3996
0.008 0.6 51 219 0.7 141 860 0.008 11 644 583 11 2 560 637 0.008 0.04 1867 0.07 6990
0.007 0.6 51 219 0.6 141 860 0.007 12 644 583 10 2 560 637 0.007 0.05 1867 0.05 6990
0.006 0.7 56 812 0.7 161 238 0.006 19 1 153 357 15 4 211 651 0.006 0.06 2416 0.07 9920
0.005 1 76 894 0.9 228 285 0.005 40 2 125 039 31 9 351 445 0.005 0.09 4338 0.09 20 449
0.004 9 714 557 9 2 399 217 0.004 213 8 023 267 173 49 213 713 0.004 0.41 24 183 0.44 120 576
0.003 9 714 557 9 2 399 217 0.003 212 8 023 267 180 49 213 713 0.003 0.42 24 183 0.44 120 576
0.002 9 714 557 10 2 399 217 0.002 238 8 023 267 196 49 213 713 0.002 0.43 24 183 0.41 120 576
7. Conclusions
In this paper, we formally deﬁned the problem of discovering closed spatio-temporal sequential patterns with the participation
index higher than θ(PI-SC). In particular, we thoroughly analyzed and proved properties of ST-sequential patterns, their closures
and closed ST-sequential patterns. We also proved that PI-SC constitutes a lossless representation of all spatio-temporal sequential
patterns with the participation index higher than θ(PI-strong ST-sequential patterns). Moreover, we proposed the CST-SPMiner
algorithm for ﬁnding PI-SC. In the course of experiments carried out on real crime data for Boston, we showed that PI-SC is upto 84% less numerous than the set of all PI-strong ST-sequential patterns. In the experiments, the runtime of CST-SPMiner wasalmost the same as the runtime of the STBFM algorithm, which mines PI-strong ST-sequential patterns.
References
[1]Agrawal, R., Srikant, R., 1995. Mining sequential patterns, in: Proceedings of the Eleventh International Conference on Data Engineering, pp.
3–14.
[2]Arge, L., Procopiuc, O., Ramaswamy, S., Suel, T., Vitter, J.S., 1998. Scalable sweeping-based spatial join, in: Proceedings of the 24rd
International Conference on Very Large Data Bases, Morgan Kaufmann Publishers Inc., San Francisco, CA, USA. pp. 570–581.
[3]Aydin, B., Angryk, R.A., 2016. Spatiotemporal event sequence mining from evolving regions, in: 2016 23rd International Conference on
Pattern Recognition (ICPR), pp. 4172–4177.
[4]Boston-Police-Department, 2014. Boston police department: Crime incident reports.
[5]Fournier-Viger, P., Lin, J.C.W., Kiran, R.U., Koh, Y.S., Thomas, R., 2017. A survey of sequential pattern mining. Data Science and Pattern
Recognition 1, 54–77.
[6]Fumarola, F., Lanotte, P.F., Ceci, M., Malerba, D., 2016. Clofast: closed sequential pattern mining using sparse and vertical id-lists. Knowledge
and Information Systems 48, 429–463.
[7]Gomariz, A., Campos, M., Marin, R., Goethals, B., 2013. Clasp: An eﬃcient algorithm for mining frequent closed sequences, in: Pei, J., Tseng,
V.S., Cao, L., Motoda, H., Xu, G. (Eds.), Advances in Knowledge Discovery and Data Mining, Springer Berlin Heidelberg, Berlin, Heidelberg.
pp. 50–61.
[8]Huang, Y., Zhang, L., Zhang, P., 2008. A framework for mining sequential patterns from spatio-temporal event data sets. IEEE Transactions
on Knowledge and Data Engineering 20, 433–448.
[9]Li, Z., 2014. Spatiotemporal Pattern Mining: Algorithms and Applications. Springer International Publishing, Cham. pp. 283–306.
[10] Maci˛ ag, P.S., 2017. A survey on data mining methods for clustering complex spatiotemporal data, in: Kozielski, S., Mrozek, D., Kasprowski,
P., Małysiak-Mrozek, B., Kostrzewa, D. (Eds.), Beyond Databases, Architectures and Structures. Towards Eﬃcient Solutions for Data Analysisand Knowledge Representation, Springer International Publishing, Cham. pp. 115–126.
[11] Maci˛ ag, P.S., Bembenik, R., 2019. A novel breadth-ﬁrst strategy algorithm for discovering sequential patterns from spatio-temporal data,
in: Proceedings of the 8th International Conference on Pattern Recognition Applications and Methods - Volume 1: ICPRAM„ INSTICC.
SciTePress. pp. 459–466.
[12] Mannila, H., Toivonen, H., Verkamo, A.I., 1995. Discovering frequent episodes in sequences, in: Proceedings of the First International
Conference on Knowledge Discovery and Data Mining (KDD-95), Montreal, Canada, August 20-21, 1995, pp. 210–215.
[13] Mohan, P., Shekhar, S., Shine, J.A., Rogers, J.P., 2012. Cascading spatio-temporal pattern discovery. IEEE Transactions on Knowledge and
Data Engineering 24, 1977–1992.
[14] Mooney, C.H., Roddick, J.F., 2013. Sequential pattern mining – approaches and algorithms. ACM Comput. Surv. 45, 19:1–19:39.
[15] Sunitha, G., Reddy, M., Rama, A., 2014. Mining frequent patterns from spatio-temporal data sets: A survey. Journal of Theoretical & Applied
Information Technology 68.
[16] Yan, X., Han, J., Afshar, R., 2003. Clospan: Mining closed sequential patterns in large datasets, in: Proceedings of the 2003 SIAM International
Conference on Data Mining, pp. 166–177.
