Using Ontologies to generate Learning Objects automatically
Andrés Soto1, Jesús Alejandro Flores Hernández1, María de los Ángeles Buenabad Arias1, Gisela Diez1
1 Universidad Autónoma del Carmen
Calle 56 #4 por Avenida Concordia CP 24180
Ciudad del Carmen, Campeche, México
asoto@pampano.unacar.mx , 
jflores@pampano.unacar.mx , 
mbuenabad@pampano.unacar.mx
gdiez@pampano.unacar.mx
Abstract. In this paper, the possibilities and challenges of using well known ontologies like WordNet and  
YAGO as knowledge bases in order to automatically compose learning objects for specific e-learning  
applications are explored. This approach takes advantage of those existing and free knowledge bases,  
combining them with concept level entities which give an outline of the course. A software system is  
presented which generates interactive  exercises in HTML format  for different  courses.  Based on an  
exercise previously generated by hand as a pattern and the already mentioned ontologies as knowledge  
bases, the system SIEG (System for Interactive Exercises Generation) allows creating new versions of the  
exercise changing its specific content. After creation, the exercises are transformed into learning objects 
by the AGORA learning object management platform.
Keywords: knowledge representation, automatic generation of exercises, ontology, learning object.
1   Introduction
Current World Wide Web (WWW) is a huge library of interlinked documents that are transferred by  
computers and presented to people.  The openness and simplicity of the Web have had as a result lots of  
resources  indexed by search engines. Also specialized collections of educational and other contents are  
available with catalogues and services to retrieve the information. 
Semantic web [1] is an effort to enhance current web so that computers can process the information  
presented on WWW, interpret and connect it, to help humans to find required knowledge. The focus of  
semantic web is to share data instead of documents. O ntology is one of the main layers of the Semantic Web  
Architecture [2] 
Knowledge bases are playing an increasingly important role in enhancing the intelligence of Web and  
enterprise search and in supporting information integration. Today, most knowledge bases cover only specific  
domains, are created by relatively small groups of knowledge engineers, and are very cost intensive to keep  
up-to-date as domains change.  
The use of technology in teaching is a very active field of research. In the last years there have appear a  
great number of proposals to introduce innovative tools in teaching, especially in connection with the World  
Wide Web. With the development of information technologies many researchers and instructors are interested  
in the educational resources on the Web. Resources are described as Learning Object (LO) which focuses on  
reusability and  automation.  LO  is  a  central  notion  of  the  majority of  current  researches  to  Web-based  
education, and many institutions are developing research projects about learning object standardization.
Most of current research concerning LO and ontologies is related with making possible the enhancement of  
services and capabilities of learning object repositories [3, 4, 5, 6, 7, and 6]. In order to deal with the need of  
sharing learning objects, recent work [8, 9, 10, and 11] argue for the use of ontologies as a means for  
providing a shared understanding of common domains. Two key issues are usually addressed: 1) to provide  
help to users describing  and searching  resources  by organizing the knowledge  covered  by the  learning  
resources and 2) to define educational systems interoperability mechanisms to create a virtual learning space. 
Learning objects composition (LOC) is one of the main challenges in e-learning management systems and  
it can be improved exploiting ontological reasoning, using semantic technologies based on "content metadata”  
[12, 13]  integrating explicitly instructional theories. In those examples, an ontology-based organizational  
1
memory able to act as a knowledge base for multiple training environments should be created to satisfy such  
an objective. Then, course development could be carried out in two phases; in the first one concept level  
entities are composed to obtain an outline of the course.  After that, the outline is filled up with actual  
resources  from  the  repository.  Both  phases  can  use  ontology-based  models  to  capture  specific  domain  
knowledge. 
The evolution towards the use of (intelligent) e-learning tools is particularly appropriate and useful for the  
automatic test generation for courses in Mathematics  [14, 15, and 16],  electric ac circuits analysis [17],  
computer databases [14] 
The teaching/learning of cognitive skills, such as problem-solving, is an important goal in most forms of  
education. In well-structured subject areas certain exercise problem types may be precisely described by  
means of machine-processable knowledge structures or ontologies [14, 18]. These ontologies can readily be  
used to generate individual problem examples for the student, where each problem consists of a question and  
its solution. 
In many courses the same type of question or exercise is applied many times, just changing some particular  
aspect of the question and, therefore, the expected answer.  There are several interactive suites (i.e. Hot  
Potatoes [19], TexToys [20], Clic [21]) for creating  web pages which contain language-learning exercises.  
Those suites allow the user to create several types of exercises but one by one, that is, the user has to type  
each exercise by him/her self, no matter if they have the same structure, the same pattern.
In this paper, we explore the possibilities and challenges of using well known ontologies like WordNet  
[23] and YAGO [24] as knowledge bases in order to automatically compose learning objects for specific e-
learning applications. The purpose is to take advantage of those existing and free knowledge bases, combining  
them with concept level entities which give an outline of the course. 
In section 2, it is described how to use WordNet dictionary via Antelope-Proxem software in order to  
develop exercises about English grammar concerning verb tenses, plural forms and so on. In section 3, it is  
described how to use Wikipedia encyclopedia through YAGO ontology to develop exercises for History like  
courses. Then, in section 3, it is also shown how to use YAGO relations as a frame to introduce new facts  
about a Spanish grammar course. Finally, in section 4,  a software system for automatically generation of  
interactive exercises,  System  for Interactive Exercises Generation  (SIEG), is introduced. Those exercises  
should match a certain pattern which could be represented by some ontology. Exercises are then stored in a  
Learning Object Database (LOD) grouped by courses. Exercises are generated in HTML format so they can  
easily be incorporated to e-learning  platforms or Learning Management Systems (LMS). Those exercises in  
HTML could be easily transformed into Learning Objects (LO) by means of AGORA system  [22]
2   Using WordNet lexicon by means of Antelope-Proxem 
WordNet is a semantic lexicon for the English language. It groups English words into sets of synonyms  
called synsets, provides short, general definitions, and records the various semantic relations between these  
synonym sets.
In linguistics a lemma has two distinct interpretations:
1.morphology, lexicography: the canonical form or citation form of a set of forms (headword); e.g., in  
English, run, runs, ran and running are forms of the same lexeme, with run as the lemma.
2.psycholinguistics: abstract conceptual form that has been mentally selected for utterance in the early  
stages of speech production, but before any sounds are attached to it.
A lemma in morphology is the canonical form of a lexeme. Lexeme, in this context, refers to the set of all  
the forms that have the same meaning, and lemma refers to the particular form that is chosen by convention to  
represent the lexeme. In lexicography, this unit is usually also the citation form or headword by which it is  
indexed. Therefore, a lemma is the canonical form of each word describing a WordNet synset.
WordNet version 3.0 contains about 155327 words or terms organized in over 117597 synsets for a total of  
207016 word-sense pairs.  The Morphosemantic Database  uses 14 semantic relations, including:  hypernym, 
hyponym, meronym, troponym, etc. Semantic relations connect most synsets to other synsets. While semantic  
relations apply to all members of a synset because they share a meaning and are all mutually synonyms,  
lexical relations can also connect words to other words: for instance, antonyms and derivationally related  
words.
2
François-Régis Chaumartin  at Proxem has developed Antelope [25], Advanced Natural Language Object-
oriented Processing Environment, a .NET linguistic framework, which uses and extends WordNet. It includes  
several  taggers  and  parsers,  and  implements  many  algorithms:  similarity  measures,  Word  Sense  
Disambiguation, Semantic Role Labeling and anaphora resolution to  facilitate the development of Natural  
Language Processing software. The Antelope lexicon also includes data coming from eXtended WordNet  
[26], and a small subset of SUMO [27].
The assembly Proxem.Antelope.Lexicon provides methods to find the possible base forms of an inflected  
word for a given part-of-speech. Thus, given the word "glasses", the optical instrument, always in plural form,  
it returns back the singular noun "glass"
IInflectedWord[] words;
words = lexicon. GetBaseForms("glasses", PartOfSpeech.Noun);
Assert.AreEqual(2, words.Length);
// The optical instrument, always in plural form
Assert.AreEqual("glasses", words[0].BaseWord);
Assert.AreEqual(EnglishWordForm.BaseForm, words[0].Form);
// The plural form of a singular noun
Assert.AreEqual("glass", words[1].BaseWord);
Assert.AreEqual(EnglishWordForm.Plural, words[1].Form);
Proxem Antelope can also generate all inflected forms of a base word of a given part-of-speech. Therefore, 
it is possible to find the plural form of a word, given its singular form and vice versa. For example, given the 
noun “cat” it returns the plural form, "cats".
// The plural of the noun "cat" is "cats"
words = lexicon. GetInflectedForms ("cat", EnglishWordForm.Plural);
Assert.AreEqual(1, words.Length);
Assert.AreEqual("cats", words[0]);
Other possibility is, given a verb i.e. "to abide", it is possible to verify its past tenses i.e. "abided" or  
"abode". 
// The past tense of the verb "to abide" is "abided" or "abode"
words = lexicon. GetInflectedForms ("abide", EnglishWordForm.PastTense);
Assert.AreEqual(2, words.Length);
Assert.IsTrue(Array.IndexOf<string>(words,  "abided") >= 0);
Assert.IsTrue(Array.IndexOf<string>(words,  "abode") >= 0);
Therefore,  based  on  WordNet  lexicon  and  Proxem  Antelope  tools,  it  is  easy  to  develop  interactive  
exercises about singular and plural forms of words, present and past tenses, etc for an English course.
3   Using Wikipedia encyclopedia by means of YAGO NAGA ontology
Wikipedia [28]  is a free web-based and collaborative multilingual encyclopedia. Launched in 2001 this  
encyclopedia is currently the largest  (13 million articles, 2.9 million in  English) and most popular general 
reference  work on  the  Internet.  It  has  grown  into  one  of  the  central  knowledge  sources  of  mankind,  
maintained by thousands of contributors, having defeated even MSN Encarta [29].
Wikipedia articles consist mostly of free text, but also contain different types of structured information,  
such as "infobox" tables,  categorization information, images, geo-coordinates and links to external Web  
3
pages. This structured information can be extracted from Wikipedia and can serve as a basis for enabling  
sophisticated queries against its content. Several research projects like DBpedia [30], YAGO-NAGA [31] and 
others are oriented to extract information from Wikipedia and to make it available for computer programs on  
the Web.
DBpedia is an open community project  that allows users to ask expressive queries against Wikipedia and to  
interlink other datasets on the Web with DBpedia data. The DBpedia project uses RDF (Resource Description 
Framework ) as a flexible data model for representing extracted information and for publishing it on the Web.  
The DBpedia  dataset is interlinked on RDF level with various other  Open Data datasets (i.e.  Freebase, 
OpenCyc, GeoNames, etc.) on the Web. This enables applications to enrich DBpedia data with data from  
these datasets. 
As of November 2008, the DBpedia dataset describes more than 2.6 million things. The dataset features  
labels and short abstracts for these things in 30 different languages; 609,000 links to images and 3,150,000  
links to external web pages; 4,878,100 external links into other RDF datasets, 415,000 Wikipedia categories,  
and 75,000 YAGO categories.
The YAGO-NAGA project started in 2006 with the goal of building a conveniently searchable, large-scale,  
highly  accurate  knowledge  base  of  common  facts  in a  machine-processible  representation.  This  project 
approaches to build a comprehensive repository of human knowledge from a confluence of Semantic Web  
(Ontologies), Social Web (Web 2.0), and Statistical Web (Information Extraction) assets towards. Their  
methodologies combine concepts, models, and algorithms from several fields, including database systems,  
information retrieval,  statistical learning,  and logical  reasoning.  This project  has the goal  of building a  
conveniently searchable, large-scale, highly accurate knowledge base of common facts using a representation  
able to be processed by a computer. 
The semantic search system named NAGA  [32] operates on a knowledge graph, which contains millions of  
entities and relationships derived from various encyclopedic Web sources, such as Wikipedia, the Internet  
Movie Database (IMDB), World Factbook, etc. NAGA  allows users to pose questions to YAGO. NAGA [33]  
provides a simple, yet expressive query language to query this knowledge base. The results are then ranked  
with an intuitive scoring mechanism.
YAGO  (Yet Another Great Ontology) is a huge semantic knowledge base which contains information  
automatically extracted from Wikipedia and uses WordNet to structure information using a carefully designed  
combination of rule-based and heuristic methods [24] . YAGO harvests info boxes and category names of  
Wikipedia for facts about individual entities. It reconciles these entities with the taxonomic backbone of  
WordNet in order to ensure that all of them have proper classes and the class system is consistent.  This 
includes the Is-A hierarchy as well as non-taxonomic relations between entities (such as hasWonPrize).  
YAGO is based on a data model of entities and binary relations. YAGO is designed to be extendable by other  
sources – be it by other high quality sources (such as gazetteers of geographic places and their relations), by  
domain-specific extensions, or by data gathered through information extraction from Web pages.
Currently, YAGO contains more than 2 million entities such as persons, organizations, cities, etc., and 20  
million facts about these entities. The facts are represented as RDF triples, with a manually confirmed  
accuracy of 95% [34]. 
As in OWL and RDFS, all objects (e.g. cities, people, even URLs) are represented as entities in the YAGO  
model. Two entities can stand in a relation. For example, to state that Albert Einstein won the Nobel Prize, the  
entity Albert Einstein stands in the hasWonPrize relation with the entity Nobel Prize. 
AlbertEinstein hasWonPrize NobelPrize
Numbers, dates, strings and other literals are represented as entities as well. 
AlbertEinstein bornInYear 1879
In YAGO, entities are abstract ontological objects. This makes it possible to express that a certain word  
refers to a certain entity, like in the following example:
”Einstein” means AlbertEinstein
Classes are also entities. Thus, each class is itself an instance of a class, the class class. Classes are  
arranged in a taxonomic hierarchy, expressed by the subClassOf relation:
physicist subClassOf scientist
In  the YAGO model, relations are entities as well. This makes it possible to represent properties of  
relations (like transitivity or subsumption) within the model. For example: 
subclassOf type transitiveRelation 
states that the subClassOf relation is transitive by making it an instance of the class transitive-Relation
4
The triple of an entity, a relation and an entity is called a fact. The two entities are called the arguments of  
the fact.
Therefore,  based  on  Wikipedia  encyclopedia  and  YAGO  ontology ,  it  is  easy  to  develop  interactive  
exercises about when and where somebody was born or died, where is situated some mountain or some river,  
etc.
Based on the relations defined into the YAGO-NAGA project [34], it is possible to develop a new ontology  
for a Spanish course: 
1.to define that subject and predicate are parts of a sentence:
Sujeto isPartOf Oración.
Predicado isPartOf Oración.
2.to define elements of type Oración
“Los estudiantes trabajan en una tarea para entregar“ isA  
Oración.
oración1 means “Los estudiantes trabajan en una tarea para  
entregar“.
3.to define types of subject and predicate
Expreso isA TipoOración.
Tácito isA TipoOración.
Nominal isA TipoPredicado.
Verbal isA TipoPredicado.
4.to define relations between the sentence and its parts: 
tienePredicado domain Oración.
tienePredicado range Predicado. 
tieneSujeto domain Oración.
tieneSujeto range Sujeto.
5.to define the subject type and the predicate type of some specific sentence:
oración1 tieneSujeto $s, $s type expreso,
oración1 tienePredicado $p, $p type verbal.
Using  this  ontology  it  is  easy  to  develop  interactive  exercises  about  classifying  Spanish  sentences  
according to their subject, predicate or complements. 
4   System for Interactive Exercises Generation (SIEG)
Following the main characteristics of the  System  for Interactive Exercises Generation  (SIEG) will be 
explained as well as the steps in the process (see Fig. 1)
The system is based on several general ontology databases like WordNet and YAGO, and another ontology  
which describes the exercise patterns. The Antelope framework is used in order to generate English grammar  
exercises, based on the WordNet database. YAGO database is used to generate exercises about History and  
Geography. At the same time, YAGO relations are used as patterns in order to incorporate new knowledge  
about Spanish grammar into the ontology database. Those ontologies are managed using SQL Server. The  
system is being developed using Visual Basic .Net over Visual Studio 2008 and Java Script.
Using those ontologies, the system generate exercises in HTML format and store them in an exercise  
database. After that, exercises are transformed into learning objects using AGORA system [35], and stored  
them in a learning object repository.
The first step of the process is to recognize a type of exercise that could be applied in several situations,  
just changing some simple aspect of the exercise. For example, the exercise could be to ask for the date when  
somebody was born, i.e. ‘When was born Albert Einstein?’ The same pattern could be used for any other  
person. A similar type of exercise would be to ask for the past tense of some particular verb, i.e. ‘Which is the  
past tense of the verb abided?’, or the plural form of some specific word, i.e. ‘Which is the plural form of  
glass?’ This step should be done by manually by humans.
Having identified an exercise type, an HTML implementation of it is generated by hand using Hot Potatoes  
or another suite. Based on the HTML code, a description of its main characteristics (i.e. title, question,  
possible answers, right answer, help information, etc) is created by SIEG Graphic User Interface (GUI). This  
description model specifies the exercise pattern and is stored in pattern database. One part of the model  
5
describes the presentation attributes: fonts, colours, position of the different fields in the screen, etc. Another  
part describes what to do with the answers of the students if they are right or not, how to calculate the marks,  
how to keep them, etc. 
Based  on an object oriented approach, a hierarchy of classes is being developed to characterize  and  
predefine the main characteristics of the description model. In this hierarchy, the upper classes describe the  
generic information about the exercises (presentation attributes, answering management, etc.) while their  
subclasses describe the specific ones like question pattern, possible answers, the knowledge base relations  
involved to generate the specific question and its specific right answer, and the particular method to generate  
the specific question and to obtain its specific right answer. An interactive interface is being developed in  
order to easily create the pattern exercise and to define its attributes. 
Other classes are oriented to describe and define a collection of related exercises to be used in a particular  
class session or in a particular evaluation. Those classes, most of all, describe how to determine and process  
the global evaluation that should be given to the student as a result of his/her particular answers to the  
different exercises that conform the session or evaluation. 
Once the description model is created, including some constraining relations about the set of ‘interesting’  
persons (respectively, verbs, words), several new exercises could be generated easily one for each one person  
(i.e. verb, word) without human intervention. For each exercise pattern, a method is defined which specifies  
how to get the specific question and its specific right answer from the knowledge bases. For example, in order  
to get from the Wikipedia (from YAGO) the name of a person born in Mexico in the 19th century, the 
following method could be used:
history(Person, Year):- 
bornOnDate(Person, Year),
bornIn(Person, Place),
locatedIn(Place, Mexico),
after(Year, 1800),
before(Year, 1900).
5   Conclusions
In this paper, the possibilities and challenges of using well known ontologies like WordNet and YAGO as  
knowledge bases in order to automatically compose learning objects for specific e-learning applications has  
been explored. Those knowledge bases contain important amounts of information that could be freely and  
easily used to develop exercises oriented to different subjects like History, Geography, English Grammar, etc.  
Those knowledge bases are being extended by our selves incorporating new relations and new facts in  
existing relations for Spanish Grammar. Those ontologies are managed using SQL Server. 
6SIEG ExercisesDatabaseOntologyDatabase
Hot Potatoes AGORA
LOB
Fig. 1 General structure of the System for Interactive Exercises Generation (SIEG)ExercisePatterns
Based on an object-oriented approach, a hierarchy of classes is being developed to model the general  
characteristics and attributes of exercises that allow generating automatically several specific instances of an  
exercise pattern, i.e. several particular and specific exercises. The already mentioned classes and objects allow  
to extract the right information from the knowledge bases and to integrate it into a particular exercise  
instance. The classes also specify how to integrate the different student answers in order to produce his/her  
mark. 
A software system has been presented which generates interactive exercises in HTML format for different  
courses. Based on an exercise previously generated by hand as a pattern and the already mentioned ontologies 
as knowledge bases, the system SIEG (System for Interactive Exercises Generation) allows creating new  
versions of the exercise changing its specific content. After creation, the exercises are transformed into  
learning objects by the AGORA learning object management platform. The system is being developed using  
Visual Basic .Net over Visual Studio 2008 and Java Script. The system is being tuned in order to apply it for  
different courses about English and Spanish Grammar, Sustainable Development, etc.
References
1.W3C Semantic Web Activity, http://www.w3.org/2001/sw/
2.Gerber, A.J., Barnard, A., van der Merwe, A.J.: Towards a semantic web layered architecture , Proceedings of the 
25th conference on IASTED International Multi-Conference: Software Engineering , Innsbruck, Austria, ACTA  
Press, Anaheim, CA, USA pp. 353-362, (2007)
3.López Guzmán, C., García Peñalvo, F.J.: Ontologies applied to Learning Objects Repositories for educational  
environments in the Semantic Web, in Recent Research Developments in Learning Technologies, Edited by  A. 
Méndez-Vilas, B. González-Pereira, J. Mesa González, J.A. Mesa González, FORMATEX, Badajoz, Spain (2005)
4.Knight, C., Gaševic, D., and Richards, G.: Ontologies to integrate learning design and learning content . Journal of 
Interactive Media in Education (Advances in Learning Design. Special Issue, eds. Colin Tattersall, Rob Koper),  
2005/07. (2005).
5.Yen Ye, D.: Java Learning Object Ontology , Proceedings of the Fifth IEEE International Conference on Advanced  
Learning Technologies ICALT, IEEE Computer Society, Washington, DC, USA, pp. 538 – 542, (2005)
6.Wang, X., Fang , F. and Fan, L.: Ontology-Based Description of Learning Object, in Proceedings 7th International  
Conference on Advances in Web Based Learning - ICWL 2008, Jinhua, China, August 20-22, 2008. Frederick W. B.  
Li, Jianmin Zhao, Timothy K. Shih, Rynson W. H. Lau, Qing Li, Dennis McLeod (Eds.) Lecture Notes in Computer  
Science, Springer Berlin / Heidelberg, Vol. 5145, pp. 468-476, (2008)
7.Trandafir, I., Balog, A., Borozan, A.M.: Using Learning Objects And Content Selection For E-Learning  
Personalization, Ceex 2008 Conference, Excellence Research - A Way To Innovation, Bra ov,ş Romania, (2008)
8.Bouzeghoub, A., Elbyed, A.:  Ontology Mapping for Learning Objects Repositories Interoperability, in Intelligent  
Tutoring Systems, Lecture Notes in Computer Science, Springer Berlin / Heidelberg, Volume 4053/2006, (2006)
9.Qin, J., Hernández, N.:  Ontological representation of learning objects: building interoperable vocabulary and  
structures, Proceedings of the 13th international World Wide Web conference, ACM, New York, NY, USA, pp. 348  
– 349, (2004)
10.Jovanovic, J., Knight, C., Gasevic, D., Richards, G.:  Learning Object Context on the Semantic Web,  Sixth 
International Conference on Advanced Learning Technologies, ICALT 2006, Kerkrade, The Netherlands, 5-7 July  
2006 pp. 669 – 673, (2006)
11.Xuesong, W., Mingquan, Z., Yachun , F.: Building VR Learning Environment: An Ontology Based Approach,  2009 
First International Workshop on Education Technology and Computer Science , March 2009, pp. 160-165, (2009)
12.Neri, M.A:, Colombetti, M.: Ontology-Based Learning Objects Search And Courses Generation, Applied Artificial  
Intelligence, Taylor and Francis Ltd, Vol. 23, Number 3, March 2009 , pp. 233-260(28), (2009)
13.Zouaq, A., Nkambou, R.: Enhancing Learning Objects with an Ontology-Based Memory,  IEEE Transactions on 
Knowledge and Data Engineering , :June 2009, pp. 881-893, (2009)
14.Alvarez, T., Escribano, C., Fernandez, D.,  Giraldo, A., Sastre, M.A.: An Intelligent Engine for the Generation of  
Adaptive Tutorials, Eighth IEEE International Conference on Advanced Learning Technologies, ICALT. 1-5 July  
2008, pp. 1017 – 1018, (2008)
15.Colton, S., McCasland, R., Bundy, A., Walsh, T.: Automated Theory Formation for Tutoring Tasks in Pure  
Mathematics In CADE-18, Workshop on the Role of Automated Deduction in Mathematics (2002)
16.Grün, B., Zeileis, A.: Automatic Generation of Exams in R,  Journal of Statistical Software, Vol. 29, Issue 10, (2009)
17.Cristea, P., and Tuduce, R.:  Automatic Generation of Exercises for Self-testing in Adaptive E-learning Systems:  
Exercises on AC Circuits, 3 rd Workshop on Adaptive and Adaptable Educational Hypermedia at the AIED'05  
conference, (A3EH) (2005)
18.Holohan, E., Melia, M., McMullen, D.,  Pahl, C.: The Generation of E-Learning Exercise Problems from Subject  
Ontologies, 6th International Conference on Advanced Learning Technologies, 5-7 July 2006 pp. 967 – 969, (2006)
7
19.Hot Potatoes Home Page http://hotpot.uvic.ca/
20.TexToys Home Page http://www.cict.co.uk/software/textoys/index.htm
21.Clic Home Page http://clic.xtec.cat/en/index.htm
22.Prieto, M.E., Menéndez, V.H., Segura, A.A. and Vidal C.L.: A Recommender System Architecture for Instructional  
Engineering, in M.D. Lytras et al. (Eds.): WSKS 2008, LNAI 5288, Springer-Verlag Berlin Heidelberg, pp. 314–321,  
(2008).
23.WordNet dictionary, Princenton University http://wordnet.princeton.edu/
24.Suchanek,  F.M., Kasneci, G., Weikum, G.: Yago: A Core of Semantic Knowledge - Unifying WordNet and  
Wikipedia, Proceedings of the 16th International World Wide Web Conference (WWW2007) , Banff National Park, 
Alberta, Canada, pp. 697 – 706, (2007)
25.Antelope Proxem http://www.proxem.com/Antelope/WhatisAntelope/tabid/67/Default.aspx
26.eXtended WordNet http://xwn.hlt.utdallas.edu/
27.Suggested Upper Merged Ontology (SUMO) http://www.ontologyportal.org/
28.Wikipedia, the free encyclopedia http://en.wikipedia.org/wiki/Main_Page
29.El Clarin 31-march-2009 http://www.clarin.com/diario/2009/03/31/um/m-01888517.htm
30.The DBpedia project Home Page http://wiki.dbpedia.org/About
31.The YAGO-NAGA project Home Page http://www.mpi-inf.mpg.de/yago-naga/
32.Kasneci, G., Suchanek, F.M.,  Ifrim, G., Ramanath, M., Weikum, G.: NAGA: Searching and Ranking Knowledge,  
IEEE 24th International Conference on Data Engineering ICDE 2008., 7-12 April 2008 pp. 953 – 962  (2008)
33.Kasneci, G., Suchanek, F.M., Ramanath, M., Weikum, G.: How NAGA uncoils: searching with entities and relations,  
International World Wide Web Conference , Proceedings of the 16th international conference on World Wide Web , 
Banff, Alberta, Canada, pp. 1167 – 1168, (2007)
34.Kasneci, G., Ramanath, M., Suchanek, F.M., Weikum, G.: The YAGO-NAGA approach to knowledge discovery , 
ACM SIGMOD Record, Volume 37, Issue 4, pp. 41-47, (2009)
35.Menéndez,  V.,  Prieto,  M.E. ;  Herramientas  de Gestión  para Objetos  de  Aprendizaje: Plataforma  AGORA.  En:  
Recursos Digitales para el Aprendizaje. Prieto, M.E., Sanchez-Alonso, S., Pech, S., Ochoa, X. S. Editorial UADY,  
México, (2009).
8
