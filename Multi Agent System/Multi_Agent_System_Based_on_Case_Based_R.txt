*Corresponding author:  Address: Faculty of Computer Science, Software  Engineering  Department,  Future  
University, 10553 , Khartoum  SUDAN . E-mail address: ganawa53@yahoo.com , Phone: +249 -183411818 Fax: + 249-
155182880  Multi Agent System -Based on Case Based Reasoning  for Cloud Computing 
System  
 
 
Amir Mohamed Talib  and Nour Eldin Mohamed Elshaiekh  
Faculty of Computer Science , Software Engineering Department, Future University, Sudan  
 
 
Abstract  
 
Cloud Computing is a new t echnology which use the Internet and central remote servers in order to 
maintain data and applications. The aim of this paper is to describe about Case Based Reasoning 
(CBR) which is based on Multi Agent System (MAS) and the implementation in Cloud Computi ng 
Environment to assist the Cloud Service Provider (CSP) to deliver a number of services to the cloud 
users according to their needs. The Introduction Section gives a n introduction about Cloud Computing, 
MAS and CBR Integration, and defines the characteri stics and process cycle of CBR. The Second 
Section describes about the MAS -Based Cloud Computing. The Third Section describes about the 
CBR in Cloud Computing. The Fourth Section describes the CBR (MAS -Based) for Cloud Computing 
and Interaction between CBR  Agents and components of Cloud Computing. The Final section gives a 
conclusion about the paper.  
 
Key words:  Cloud Computing, Cloud Data Storage, Cloud Service Provider, CBR and Multi Agent 
System . 
 
 
 
1. Introduction  
 
 
1.1. Cloud Computing   
 
Cloud computi ng is a new technology which use the Internet and central remote servers in order to 
maintain data and applications. The name of “cloud computing” was inspired by the cloud symbol 
that is often used to represent the Internet in diagrams and flow charts [1] . Cloud computing allows 
users and businesses to use cloud application without installing any software. They will be able to 
access their personal files, data and application at any computer as long as there is Internet access 
[2]. A simple example of clou d computing is Gmail and Yahoo Email. The cloud user does not 
need to have the software or a server to use them. They only need Internet connection and can start 
sending email [3].  
 
Cloud computing integrates and provides different types of services such a s Data -as-a-Service 
(DaaS) , which allows cloud users to store their data at remote disks and access them anytime from 
any place. Software -as-a-Service (SaaS), the software and its applications are delivered as services 
over the Internet. Communication -as-a-Service (CaaS), communication becomes a vital component 
of the cloud infrastructure due to the needs for a guaranteed Quality of Service (QoS) for network 
communication grows for cloud systems. Platform -as-a-Service (PaaS), systems software made 
availabl e over the Internet and Infrastructure -as-a-Service (IaaS), when the hardware made 

957 
 
 available for cloud users [4, 5, 6]. The foundations of cloud infrastructure provide more flexibility 
and dynamism in the computing infrastructure than previous forms of dis tributed systems. The 
requirements and demands from users for cloud services vary, resulting in complex design and 
deployment of resources.  
 
 
1.2. Case Based Reasoning  
 
Case -Based Reasoning (CBR) is a method for solving problems by comparing a problem situ ation 
to previously experienced ones. The aim is to store information about earlier situations, and when 
new ones arrive, find the situation that is most similar, and reuse it to match the new problem if the 
most similar problem does not match sufficiently  [7]. This may involve using background 
knowledge or asking a user. Information about the problem solving experience is learned by the 
CBR system and the aim is to be able to handle an increased number of situations and also reason 
more on each situation t o certify that it is handled correctly. Each case is a set of features, or 
attribute -value pairs, that encode the context in which the ambiguity was encountered [8]. The case 
retrieval algorithm is mostly a simple k -nearest neighbor’s algorithm. The basic case-based 
learning algorithm performs poorly when cases contain many irrelevant attributes. Unfortunately, 
deciding which features are important for a particular learning task is difficult.  
 
At the highest level of generality, a general CBR cycle may be d escribed by the following four 
processes  as shown in Figure 1: 
 
 
 
Figure 1.  Processes of CBR  
 
CBR methods can be divided into four steps, retrieve - find the best matching of a previous case, 
reuse – find what can be reused from old cases, revise - check if the proposed solution is correct, 
and retain - learn from the problem solving experience [7].  
 
1) Retrieve  
Retrieving a case means to start with a (partial) new case, and retrieve the best matching previous 
958 
 
 case. It involves the following subtasks:  
Identify features - this may simply be to notice the feature values for a case. This can be filtering 
out noisy problem descriptors, infer other relevant problem features, check whether the feature 
values make sense in the given context, or generate expectatio ns of other feature values.  
Initially match - usually done in two parts, first an initial matching process which gives a list of 
possible candidates, which are then further examined to select the best. There are three ways of 
retrieving a case or a set of cases: By following direct index pointers from the problem features, by 
searching an index structure, or by searching in a model of domain knowledge.  
Select - select a best match from the cases returned by the initially match. The reasoner tries to 
explain  away non -identical features. If the match is not good enough, a better one is sought by 
using links to closely related cases.  
The selection process can generate consequences and expectations from each retrieved case, by 
using an internal model or by askin g the user.  
 
2) Reuse  
The focus of reuse is to find the difference between the new and the old case, and find what part of 
the old case that can be used in the new case. It either involves copying the old solution or adapting 
it: 
Copy - in simple classific ation, the differences between the old and new case are abstracted away, 
and the solution is simply copied from the old case.  
Adapt - either the solution itself can be (transformed and) reused, or the past method that produced 
the solution can be used.  
 
3) Revise  
If the solution generated by the last phase is not correct, the system can learn from its failures. This 
involves:  
Evaluate - try the solution proposed by the reuse -phase in the real environment, and evaluate it.  
Repair fault - If the solution eval uated badly, find the errors or flaws of the solution, and generate 
explanations for them.  
 
4) Retain  
Incorporate what is useful to learn from the problem solving experience into the existing 
knowledge.  
Sub processes are:  
Extract - if the problem was solve d using an old case, the system can build a new case, or 
generalize an old case to include the new case as well. If the user was asked, a new case should be 
constructed. Explanations may be included in the case.  
Index - decide what types of indexes to use for future retrieval.  
Integrate - modify the indexing of existing cases after the experience, strengthen the weight of 
features that were relevant, and decrease the weight of features that lead to retrieval of irrelevant 
cases [7].  
 
 
 
 
959 
 
 1.3. Multi Agent Sys tem and Case Based Reasoning Integration  
Both methods are used for to assist the CSP to deliver a number of services to the cloud users 
according to their needs and organize and process knowledge to make it available for improving 
the quality of cloud comp uting system.  
 
CBR relies heavily on the quality of the data collected, the amount of data, the amount of 
background knowledge and a way of comparing cases to decide which is most similar. The method 
is best suited for domains that change, and where we hav e little knowledge of underlying processes 
that govern the domain [8].  
 
MASs are ways of extracting information from cloud data storage and can thus be used for 
extracting information which is relevant for a problem situation. It could also be used to find  
“unexperienced ” problem situations from cloud  data storage and represent it as a case, possibly by 
interacting with a cloud user . 
 
 
2. Multi Agent System  
 
The term “agent” is very broad and has different meanings to different researchers [9, 10]. One 
author [9] says that software agents are application programs that communicate with each other in 
an expressive Agent Communication Language (ACL). Though at first this definition may seem a 
little simplistic, it allows researchers to clearly identify what con stitutes MAS, i.e. agents are just 
pieces of autonomous code, able to communicate with each other using an ACL. Thus, the 
assumed view is exactly the same as that presented in [9], but in addition, the agents have unique 
names as a means of identification.  
 
Agents are considered to be autonomous entities, such as software programs or robots. Their 
interactions can be either cooperative or selfish. That is, the agents can share a common goal, or 
they can pursue their own interests. Security plays an importan t role in the development of MASs 
and is considered as one of the main issues to be dealt for agent technology to be widely used 
outside the research community [10].  
 
 
3. Multi Agent System -Based Cloud Computing  
In cloud computing, agents offer the flexibi lity to integrate many different categories of processing 
within a single cloud computing system. Agent definitions range from descriptions based on a 
functional analysis of how agents are used in technology to far more ranging expositions based on 
differe nt interpretations of the role and objectives of artificial intelligence and cognitive science. 
Artificial intelligence is a very diverse field and agents are used as metaphors for work in many 
areas.  
 
MAS consist of a number of agents interacting with eac h other through the Agent Communication 
Agent (ACL). Agents must be able to interact to achieve goals [11]. Agents may exhibit different 
960 
 
 types of behaviors when interact with each others such as selfish or benevolent behavior. In CDS 
scenarios, selfish age nts ask for help from other agents if they are overloaded and never offer help 
such as the agent that serving VIP cloud users for Cloud Service Provider (CSP) service never help 
other agents for the same service. Benevolent agents always provide help to ot her agents because 
they consider system benefit is the priority such as the agent that serving normal cloud users for 
CSP service are always ready to help other agents to complete their tasks [12, 13].  
 
 
4. CBR based Cloud Computing System  
CBR is concerned  with the solution of problems by identifying and adapting similar problems 
stored in a library of past experience/solutions. In our approach, CBR techniques are encapsulated 
into a MAS, which dynamically helping CSPs to deliver a number of services to the  cloud users 
according to their needs. In cloud computing, the CBR agent helps in gaining alternative 
perspectives on the problem at hand by intervening autonomously during a decision been made by 
CSP  and exposing them interactively to how problems are di fferent, but relevant contexts have 
been approached and solved.  
 
Provide alternative view
Suggest and criticize Dynamic 
knowledge 
acquisition
CBR Agents
 
Software as a 
Service 
(SaaS)  
Platform as a      
Service 
(PaaS)  
Communication
s as a Service  
(CaaS)  
Hardware  
as a Service  
(HaaS)  Infrastructure  
as a Service  
(IaaS)  
Data Storage  
as a Service  
(DaaS)  
 Case 
LibraryCase Based 
Reasoning
 
 
Figure 1.  Impact of CBR Agent s in Cloud Computing Environment  
 
 
5. MAS based CBR and Cloud Computing Components Integration  
The CDS is the main part of cloud co mputing in which all the services will be delivered to the 
cloud users through it and has as role to manage all the services. The environment includes the 
CSP, cloud user and the service. Cloud storage is composed of thousands of storage devices 
clustered by network, distributed file systems and other storage middleware to provide cloud 
storage service for users. The typical structure of cloud storage includes storage resource pool, 
961 
 
 distributed file system, service level agreements (SLA), and service interf aces, etc. Globally, they 
can be divided by physical and logical functions, boundaries and relationships to provide more 
compatibilities and interactions. Cloud storage is tending to combine with cloud security, which 
will provide a more robust security [1 4]. 
 
 
Conclusions  
 
The marriage between Clouds and MAS -Based CBR can be convenient for both parties. We 
discussed in the paper how this can be done and which scientific areas such as cloud computing 
and issues must be involved to carry out research work th at will produce intelligent Cloud services 
that could be assist the CSPs in delivering the cloud services to the requested cloud users and high -
performance MASs on Clouds. The convergence of interests between MASs that need reliable 
distributed infrastruct ures and Cloud computing systems that need intelligent software with 
dynamic, flexible, and autonomous behavior will result in new systems and applications. Both 
research communities must be aware of this opportunity and should put in place the joint resea rch 
activities needed to reach that goal.  
 
 
References  
 
[1] Talib, A.M. Atan, R. Abdullah, R., and Azrifah, M. “Towards a Comprehensive Security 
Framework of Cloud Data Storage Based on Multi Agent System Architecture,” Journal of 
Information Security, Vol. 3,  No. 4, 2012, pp. 295 -306. 
[2] Talib, A.M. Atan, R. Abdullah, R., and Azrifah, M. “CloudZone: Towards an Integrity Layer 
of Cloud Data Storage Based on Multi Agent System Architecture,” Proceeding of the 
International Conference on Open Systems (ICOS), IEEE, 2 011, pp. 127 -132. 
[3] Neto, P. “Demystifying Cloud Computing,” Proceeding of Doctoral Symposium on 
Informatics Engineering, 2011.  
[4] Yang , J.,  and Chen,  Z. “Cloud Computing Research and Security Issues,” IEEE, 
Computational Intelligence and Software Engineering ( CiSE), 2010.  
[5] Talib, A.M. Atan, R. Abdullah, R., and Azrifah, M.  “Security Framework of Cloud Data 
Storage Based on Multi Agent System Architecture -A Pilot Study,” Proceeding of the International 
Conference on Information Retrieval & Knowledge Management ( CAMP), IEEE, 2012, pp. 54 -59. 
[6] Abdullah, R. Eri, Z.D., and Talib,  A.M.  “A Model of Knowledge Management System for 
Facilitating Knowledge as a Service (KaaS) in Cloud Computing Environment,” Proceeding of the 
International Conference on Research and Innovat ion in Information Systems (ICRIIS), IEEE, 
2011, pp. 1 -4. 
[7] Nagaiah,  M.D.  “Agent -Based CBR for Decision Support System,” 2011.  
[8] Althoff, K.-D. “Case -Based Reasoning,” Handbook on Software Engineering and 
Knowledge Engineering, Vol. 1, 2001, pp. 549 -587. 
[9] Genes ereth , M.R., and Ketchpel,  S.P. “Software Agents,” Commun. ACM, Vol. 37, No. 7, 
1994, pp. 48 -53, 147.  
[10] Mouratidis, H. Giorgini,  P., and Manson,  G. “Modelling Secure Multiagent Systems,” 
Proceeding of the Second International Joint Conference on Autonomous A gents and Multiagent 
962 
 
 Systems, ACM, 2003, pp. 859 -866. 
[11] Chen, B. Cheng, H.H., and Palen,  J. “Integrating Mobile Agent Technology with Multi -
Agent Systems for Distributed Traffic Detection and Management Systems,” Transportation 
Research Part C: Emerging Tech nologies, Vol. 17, No. 1, 2009, pp. 1 -10. 
[12] Talib, A.M. Atan, R. Abdullah, R., and Azrifah, M.  “Towards New Data Access Control 
Technique Based on Multi Agent System Architecture for Cloud Computing,” Digital Information 
Processing and Communications, Sprin ger, 2011, pp. 268 -279. 
[13] Talib, A.M. Atan, R. Abdullah, R., and Azrifah, M.  “Ensuring Security and Availability of 
Cloud Data Storage Using Multi Agent System Architecture,” Knowledge Technology, 2012, pp. 
343-347. 
[14] Zeng, W. Zhao, Y. Ou, K., and Song, W. “Research on Cloud storage Architecture and Key 
Technologies,” Proceedings of the 2nd International Conference on Interaction Sciences: 
Information Technology, Culture and Human, ACM, 2009, pp. 1044 -1048.  
